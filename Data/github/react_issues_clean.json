[{"title": "settimeout onclick nt work ssr", "body": "", "num": "13792", "d": "10/2018"}, {"title": "error line number error boundary", "body": "hi maybe question feature req found nothing want request feature report bug feature current behavior error boundary shows error message stack trace expected behavior error boundary show error line number browser console using source map", "num": "13790", "d": "10/2018"}, {"title": "okay", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13788", "d": "10/2018"}, {"title": "getderivedstatefromprops makes state unchangable", "body": "hello update info form loading values initially textfields using value props state name also using getderivedstatefromprops function sets states props problem currently textfields uneditable state doesnt change onchange function js handleinputchange event gt const target eventtarget const value targettype checkbox targetchecked targetvalue const fieldname targetname example textfields component js", "num": "13784", "d": "10/2018"}, {"title": "add boilerplate compose refs", "body": "want request feature report bug feature current behavior currently way compose ie situation hook ref multiple components via context one components need calculate layout ref passed consumer little snapshot js export const megacomponent reactforwardref function megacomponent props ref return context gt expected behavior expect react would provide way compose consumer would nt dive runtime implementation details reimplement react already", "num": "13782", "d": "10/2018"}, {"title": "tag nt preserve line breaks", "body": "nt seem work intended preserves spaces line breaks example code", "num": "13781", "d": "10/2018"}, {"title": "reactdomserverrendertostring double call", "body": "want request feature report bug bug current behavior double calling components reactdomserverrendertostring current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior call component reactdomserverrendertostring versions react browser os affected issue work previous versions react example error included github link install instructions normal operation bug seems call consolelog twice client server calls twice could issue express server", "num": "13780", "d": "10/2018"}, {"title": "gray overlay tap react root container", "body": "want request feature report bug bug current behavior since react seems element event handler noop function ios safarichrome browsers html element gray overlay tap current behavior whole blinking tap simple example reproduce issue reproducing fullscreen mode root container steel blue suppose changes came issue related versions react browser os affected issue work previous versions react react ios safarichrome", "num": "13777", "d": "10/2018"}, {"title": "limitations reactcreatecontext", "body": "want request feature report bug feature current behavior current behavior requires end users use module scope understanding currently possible use default value derived state component stateful provider case stackoverflow post hits issue right imo feel like classic use case replacing redux nt work box static types think quite telling something similar pr move react context would expect default value provider component instead knowledge react internals naive nt see anyone else bringing issue current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example desired behavior maybe jsx api context creation imagine quite simple versions react browser os affected issue work previous versions react", "num": "13773", "d": "10/2018"}, {"title": "mutationobserver reactdom without polling", "body": "want request feature report bug feature description developers want watch mutation dom nodes need use mutationobserver api polyfill checks observed element times second performant ideally reactdom would api allows execute callback time dom element created updated removed dom list mutations like mutationobserver observe callback observing elements would lightweight polling changes observed element feature request mutationobserver api reactcontrolled dom nt use polling api could mutationobserver", "num": "13772", "d": "10/2018"}, {"title": "error find module binaryextensions", "body": "trying use reactjs local system followed official documentation reactjs trying tutorial tic tac toe local development environment followed steps try run npm start getting error throw err error find module binaryextensions functionmoduleresolvefilename functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload using node npm fyi installed binaryextensions using npm binaryextensions still getting error", "num": "13771", "d": "10/2018"}, {"title": "dom selector vs react ref performance", "body": "hello heavy react user question developing react develop sometimes need access elements exist dom performance difference using using example using ref virtualdom optimize physical speed difference dom selector ref official document doest explan react ref performance like hear ideas gaearon thank", "num": "13770", "d": "10/2018"}, {"title": "event handlers fire added via reactcloneelement", "body": "want request feature report bug probably bug nt sure current behavior onkeydown onkeydowncapture events handlers fire added via reactcloneelement current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example pseudoexample demonstration case appviewtsx file export class appview extends containerview containerview extends reactcomponent public render let view superrender appviewtsx file export class appview extends containerview public render let view superrender expected behavior handler fires versions react browser os affected issue work previous versions react know work previous versions react", "num": "13769", "d": "10/2018"}, {"title": "bug double clicking span contenteditable followed normal span", "body": "want request feature report bug bug current behavior double click contenteditable span single word followed another span editable text entire contenteditable selected since single word instead part text left cursor selected current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior selects full word versions react browser os affected issue work previous versions react react", "num": "13764", "d": "10/2018"}, {"title": "conditional components", "body": "feature current behavior often use expressions like desired behavior would like expressive components many cases generic syntax preferred explicit child component pure function knows supposed render issue evaluate children even ultimately returned since passed children component desired syntax able behave exactly like conditional expression contained children actually processed unless condition met reality component could something else entirely process render children current user super user process render items similar key thing want props passed children children produced unless condition satisfied versions react browser os affected issue work previous versions react presumably version react", "num": "13763", "d": "10/2018"}, {"title": "handle possible null return value", "body": "want request feature report bug bug specific reactdom current behavior null check returns null specified possible return value mdn docs browsers documentdefaultview returns window object associated document null none available current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example root cause seems pretty apparent handling possible null value submit fix shortly expected behavior error thrown returns null versions react browser os affected issue work previous versions react present version", "num": "13757", "d": "10/2018"}, {"title": "npm createreactclass way implement getderivedstatefromprops", "body": "seems way implement class methods others overlooking something mention either", "num": "13754", "d": "9/2018"}, {"title": "provide umd build simplecacheprovider", "body": "expect planned wanted make sure file make sure missed want request feature report bug feature current behavior cjs build simplecacheprovider expected behavior react reactdom umd build makes easy test things teach people react simple file without tooling complicate things umd build simplecacheprovider would help teaching suspense versions react browser os affected issue work previous versions react na", "num": "13753", "d": "9/2018"}, {"title": "input typenumber eventtargetvalue changes empty string pressed onchange emitted used", "body": "want request feature report bug bug current behavior onchange event changes value input empty string pressed additionally seems like nt fire onchange dot comma example current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior value stays integer seen user fire onchange versions react browser os affected issue work previous versions react react chrome", "num": "13752", "d": "9/2018"}, {"title": "ok login button", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13750", "d": "9/2018"}, {"title": "error expected subtree parent mounted class component", "body": "idea error occured version prod develop whats wrong official react page says expected subtree parent mounted class component error likely caused bug react please file issue many thanks", "num": "13743", "d": "9/2018"}, {"title": "expected subtree parent mounted class component", "body": "want request feature report bug bug current behavior demo use use render add worked change generate error invariant violation expected subtree parent mounted class component error likely caused bug react please file issue expected behavior correct render", "num": "13742", "d": "9/2018"}, {"title": "click mobile working", "body": "research link github page showing", "num": "13741", "d": "9/2018"}, {"title": "react context value propagation performance", "body": "hi observed performance issue context providers value updates spoken gaearon twitter bit context let say provider update value provider good far let say want pass value tree performance reasons want render tree components want render consumer components case naive way would something like js class blocker extends reactcomponent shouldcomponentupdate return false render return thispropschildren render return thispropschildren even though components tree rendered except consumers update expensive suspect tree walking algorithm takes run standalone example example render time simple counter update production app list nodes components components looking update times similar rendering tree bit context trying replace root would create subscription store pass latest state context consumers would pick update run selector rerender result value changed working found updates context slow usage see relevant files", "num": "13739", "d": "9/2018"}, {"title": "schedulecjsschedulejs thinks browser run server", "body": "want request feature report bug bug current behavior code meant run browser running server error seeing current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example using one components server render broken due dependencyfile pulled expected behavior error guess root problem seems faulty check environment somewhere versions react browser os affected issue work previous versions react narrowed nothing downgrading using fixes issue", "num": "13735", "d": "9/2018"}, {"title": "controlled component receiving state rendered variable", "body": "want request feature report bug bug current behavior create controlled input element store variable render update input value according state value expected behavior update demo sure bug lack understanding", "num": "13730", "d": "9/2018"}, {"title": "setstate working component remounte", "body": "setstate bug triggered child component callback component mounts first time unmounts mounts button onclick gt closetab gt method setstate mutating state share fullcode becouse work since im using serverside component generator injecting eval function code setstate component mounted second time tested tested toggle ui pasing button tesed state setstate bu debuugging tested using state clallback setsate gt never runs second mount consolelog thisstate tried", "num": "13724", "d": "9/2018"}, {"title": "context context", "body": "hello list items edit item panel opens list also edit item new tab ssr use redux isomorphic code panel item editing difficult composition several controls task edit several items simultaneously one window react legacy context itemeditpanel receives data redux puts context edit two items simultaneously context deprecated done without using context props proxy", "num": "13723", "d": "9/2018"}, {"title": "official tutorial mistake", "body": "url \u5730\u5740 official tutorial mistake completing game lifting state code snippet class square extends reactcomponent render return thispropsvalue cause error maximum update depth exceeded onclick brace", "num": "13722", "d": "9/2018"}, {"title": "element type invalid expected string builtin components classfunction composite components got undefined", "body": "dealing json response react native coming wordpress rest api containing pages profile page id title featured image using flatlist created screen featured images titles artist page want add functionality navigate individual page clicking item flatlist passing title featured image later content regarding page next screen display information probably based id linksscreenjs import react component react import proptypes proptypes import artist artist import createstacknavigator reactnavigation import scrollview stylesheet view text image flatlist activityindicator touchablehighlight reactnative export default class linksscreen extends reactcomponent constructor props super props thisonalerttypepressed thisonalerttypepressedbind thisstate data onalerttypepressed typeid typename imageurl static navigationoptions title links state data isloading true iserror false static proptypes navigation proptypesshape navigate proptypesfuncisrequired isrequired componentwillmount fetch response gt responsejson responsejson gt responsejsonsort b gt atitlerendered lt btitlerendered thissetstate data responsejson isloading false iserror false catch error gt thissetstate isloading false iserror true consoleerror error renderrow item gt getkey item gt string itemid rendercomponent thisstateisloading return else thisstateiserror return error loading data else return render return thisrendercomponent const styles stylesheetcreate container flex backgroundcolor elementscontainer backgroundcolor grid margintop marginbottom marginleft height width borderbottomwidth borderbottomcolor title color ffffff textalign left fontsize thumb height width resizemode cover artistjs import react component react import createstacknavigator reactnavigation import scrollview stylesheet view text touchableopacity image reactnative export class artist extends reactpurecomponent constructor props super props onpress gt thispropsonpressitem string thispropsitemid string thispropsitemname string thispropsitemimageurl static navigationoptions title artist render const artist thispropsnavigationstateparamsartist return const styles stylesheetcreate container backgroundcolor title color ffffff textalign left fontsize image height width resizemode cover getting error moment saying string expected undefined type found used different way unable pass id identifier pass data next screen open specific generated screen artist error edible code used like working grid version navigation functionality sure gives good indication supposed work notes please nt mind titles moment still small unsolved issue regarding unicodes think wo nt matter passing titles another screen", "num": "13719", "d": "9/2018"}, {"title": "feature request purecomponent children comparison compare component instance instead element instance always returns false", "body": "want request feature report bug feature current behavior consider root component export default class root extends reactpurecomponent constructor render return purecomponent color component gets new element instance although pointing old component instance wrapper shouldcomponentupdate provided purecomponent functionality compares element instance always false expected behavior wrapper shouldcomponentupdate provided purecomponent functionality compares component instance true false purecomponent behavior nt necessarily changed instead solution even helper function argument use within custom would really great feature example shouldcomponentupdate nextprops nextstate const childrenprops reactchildrengetprops thispropschildren new react helper const nextchildrenprops reactchildrengetprops nextpropschildren const childrencomp reactchildrengetcomponent thispropschildren new react helper const nextchildrencomp reactchildrengetcomponent nextpropschildren compare variables realise could nt work children array etc would require bunch stuff considered think need kind solution problem ultimately purecomponent could components elements comparison hood somehow currently way achieving sort performance optimization either cache price losing reactivity accept fact unnecessary rendering involved tree aware discussion subject solution provided like know way feature could implemented react future thanks", "num": "13717", "d": "9/2018"}, {"title": "schedule package problem npm yarn", "body": "want request feature report bug bug current behavior gives error build installing react packages npm problem nt give error yarn error raises mac linux could nt test windows installed packages fixing nt help ps working smoothly new experimental schedule started give error using experimental feature error steps build webpack give error build webpack build success also share webpack setup think related expected behavior work npm yarn versions react browser os affected issue work previous versions react react reactdom nodejs npm yarn working version react reactdom nodejs npm yarn", "num": "13716", "d": "9/2018"}, {"title": "improved stack trace", "body": "want request feature report bug feature current behavior usability current stack trace components native dom elements improved example tells divs followed select tag sure select display name showing components name option tag structure exists lot places component expected behavior stack trace line numbersome way pinpoint location like idclass provided desired versions react browser os affected issue work previous versions react os ubuntu react", "num": "13715", "d": "9/2018"}, {"title": "reactdomtestutilsproductionminjs working npm", "body": "want request feature report bug bug current behavior reactdomtestutilsproductionminjs published npm package differs one release current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example trying use reactdomtestutils npm package production mode throws error typeerror read property undefined related line col expected behavior error thrown versions react browser os affected issue work previous versions react", "num": "13714", "d": "9/2018"}, {"title": "dom event mount target considerations", "body": "given considering rewrite event system thinking attaching events react root thought would fitting explore options mount event listeners little combine knowledge scattered across repo general three candidates attaching event listeners document listeners react root listeners element listeners every option comes shortcomings want summarize learned years document listeners historically react always listened document level implemented synthetic event system simulate capture bubble phases inside react tree event listeners listening bubble phase means users still add capturelevel document listeners see fire react process event additionally events bubble dom support bubbling events react sometimes eagerly adds event listeners media events example listens capture phase instead usually works leave react event system attach native listeners needed certain caveats come one example calling capture documentlevel listener effect another implication interoperability react roots thirdparty frameworks behave unexpectedly browsers certain optimizations place make handling document listeners complicated safari properly bubbling document listeners used chrome respect preventdefault touch start document level also never cleaning documentlevel listeners certain benefits solution well current event system use event bus implement polyfills require document based listeners implementation portalbubbling easier need ensure already listening document portal target later react root listeners one solution issues outlined use react roots mount target events would still rely event delegation would require synthetic event system root level listeners would certainly help make bubbling robust using multiple react instances since longer add listeners level however work bubbling events use capturing would fire inverse bubble order capture handlers multiple roots also always fire wrong order portal bubbling also become complicated since find portal root inside reactroot see need attach listeners portal root well consider following example need add listeners well compare example need compiled list previous implementation attempts issues pointed well date pr issues oct enterleave shims using instance react events like focus firefox fire reverse order tap highlight shims jun firefox mousemove events aug enterleave shims probably possible work around someall issues invalid capturing order worked around adding bubble capture listener regular events trigger appropriate phase shims probably rewritten need document additional listeners could added ios tap highlight could disabled via css get rid edge cases around events bubble browser consider deprecating support together new features since taking time rethink event system also want us think passive event listeners web components think albeit additional implementation effort support passive event systems keep using event delegation add two different listeners one capturing one bubbling handle completely different events support shadow roots bit complex event delegation really make sense easily consider shadow root react root portal root since rely adding listeners parent shadow root consider following case html handy comparison custom elements support different javascript framework react definitely better planned changes event system work element listeners sort radical approach changing event system get rid event delegation altogether happens preact reactdomlite vuejs probably frameworks well research ember angular point case trivial add support passive event listeners bubblecapture behave expected also allows us completely remove need synthetic event system could rely browser also know browsers better optimize certain events attached directly element think least two major roadblocks though performance event delegation avoids need every element event handler figure significant overhead really especially considering possible bundle size improvement make initialrender faster needs compared realworld application rough benchmarking microbenchmark outcomes representative real apps eventsystem less react noticed another feature event delegation often overlooked setstate batching right react knows event listeners called batch setstate calls case looked bit potential callback mechanism would fire events processed next frame drawn think possible browsers evaluate performance implications realworld application see bad often setstate batching occurring could still batch inside event listener portal bubbling big issue see portal bubbling still need use event delegation portal roots catch events listened parents writeup react fire gaearon mentioned could use redispatching native events would still require us set listeners first considerations whole synthetic event system currently accounts react dom bundle size back july worked example removed everything event related added tiny preactlike system find much save look edge cases much already got tests pass general might also consider adding api installing global dom event handlers since upcoming concurrent mode make complicated listen arbitrary non reactcontrolled events possibly fired render time slices discussion scope writeup though maybe good keep mind especially curious ways could implement portal bubbling using element listeners say biggest uncertainty right", "num": "13713", "d": "9/2018"}, {"title": "pass refs", "body": "wondering good idea pass refs understand passing instance welcomed edge cases next state calculated based refs take look example javascript const getflyoutposition idealdirection margin parseint statictooltipmargin relativeoffset triggerrect gt const windowsize height windowinnerheight width windowinnerwidth scrollx scrolly needed get element dimensions use calculate next state moment way access refs const flyoutsize height thisflyoutref thisflyoutrefclientheight width thisflyoutref thisflyoutrefclientwidth const maindir getmaindir flyoutsize idealdirection triggerrect windowsize margin const base baseoffsets relativeoffset flyoutsize maindir triggerrect windowsize margin const flyoutoffset top basetop left baseleft return flyoutoffset maindir export default class extends component state flyoutoffset top undefined right undefined bottom undefined left undefined maindir null static getderivedstatefromprops getflyoutposition setflyoutref c gt thisflyoutref c flyoutref render const flyoutoffset thisstate const children thisprops think consider passing refs sometimes state may based values dom please let know create pr", "num": "13707", "d": "9/2018"}, {"title": "context consumer rendering correctly inside tag", "body": "want request feature report bug bug current behavior context consumer rendering correctly placed inside html tag reproduction fresh generated project js import react react const examplecontext reactcreatecontext const examplevalues number zero zero class app extends reactcomponent render return value gt examplevalues value zero value gt examplevalues value zero export default app first renders expected second one renders expected behavior second render versions react browser os affected issue work previous versions react react version browser chrome os ubuntu mate work previous versions react nt know", "num": "13706", "d": "9/2018"}, {"title": "accessing reactdebugcurrentframe without using secretinternalsdonotuseoryouwillbefired", "body": "want request feature report bug request feature current behavior working writing custom react renderer right use order access stack information current frame order display warnings developer expected behavior would like able access stack information current frame without worrying safety employment better way versions react browser os affected issue work previous versions react react", "num": "13704", "d": "9/2018"}, {"title": "displayname supported combination forwardref react developer tools", "body": "display names components based reactforwardref currently ignored react developer tools gt name always forwardref think bug example edit preview", "num": "13703", "d": "9/2018"}, {"title": "component previous route staying memory navigation different route", "body": "want request feature report bug bug current behavior using reactrouter making single page application multiple routes navigating routes noticed component previous route still present memory eg navigate see component corresponding still memory moreover change route component cleared component still memory adding heap snapshot unexpected behaviour codesandbox demo reproducing demo expected behavior ideally component corresponding previous route must completely removed memory navigate new route must rule keeping optimizations versions react browser os affected issue work previous versions react react react reactrouterdom", "num": "13702", "d": "9/2018"}, {"title": "upgrade rollup", "body": "working upgrading rollup test builds show decreasing size bundles also problems option deprecated critical building react checked issue tells totally fine couples circular dependency warnings also default exported warnings also check branch maybe help think make sense", "num": "13701", "d": "9/2018"}, {"title": "component inside handled string", "body": "current behavior use reactintl translations project since release reactdom use anymore use snapshot tests nt fail use reacttestrenderer u look rendered html string rendered option tag expected behavior tests failing react component tag expected object object rendered inside option versions react browser os affected issue work previous versions react use createreactapp occurs test env react reactdom reacttestrenderer reactint", "num": "13699", "d": "9/2018"}, {"title": "jsx whitespace consistent line starts expression", "body": "want request feature report bug bug current behavior jsx content text line starts expression whitespace rules followed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior whitespace jsx rules respected always versions react browser os affected issue work previous versions react", "num": "13696", "d": "9/2018"}, {"title": "schedule ssr windowaddeventlistener function", "body": "want request feature report bug bug current behavior windowaddeventlistener function current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example build serverbundlejs ssr node usual try run node serverbundlejs see windowaddeventlistener function consolelog window line returns navigator server true expected behavior working usual versions react browser os affected issue work previous versions react react well worked fine yarn upgrade first since march guess", "num": "13694", "d": "9/2018"}, {"title": "react error looking schedule", "body": "want request feature report bug bug current behavior installing seems throw error looking schedule nt exist current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example npm err code etarget npm err notarget matching version found schedule npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err notarget npm err notarget specified dependency react expected behavior react get installed versions react browser os affected issue work previous versions react react", "num": "13693", "d": "9/2018"}, {"title": "implement filereaderreadasarraybuffer", "body": "want request feature report bug feature current behavior currently unimplemented expected behavior implemented versions react browser os affected issue work previous versions react versions react affected approved plan work towards implementing may need guidance along way first time using native code react using native ios code", "num": "13691", "d": "9/2018"}, {"title": "unmountcomponentatnode works async", "body": "want request feature report bug bug current behavior tried use manage multi roots found use sync code get error like change route pages use browserhistory change route code written componentdidmount method root react component use wrap result success expected behavior versions react browser os affected issue work previous versions react react reactdom", "num": "13690", "d": "9/2018"}, {"title": "global overwritten react development mode", "body": "want request feature report bug report bug current behavior global overwritten react development mode minimal repro steps react dev mode click button see event type expected behavior current behavior contradicts specified behavior window property event returns event currently handled site code outside context event handler value always undefined moreover works properly production mode react prod mode returns expected event type versions react browser os affected issue work previous versions react works properly react prod mode react dev mode issue reproduced chrome works properly ff nt support however reproduced ff recently added see details seems issue introduced conradirwin", "num": "13688", "d": "9/2018"}, {"title": "error duplicate identifier librarymanagedattributes", "body": "suddenly could nt build react project error seems appear many people failed compile c devprojectfrontendnodemodules typesproptypesnodemodules typesreactindexdts duplicate identifier librarymanagedattributes error command failed exit code looks like defined following files expected behavior error versions react browser os affected issue work previous versions react", "num": "13686", "d": "9/2018"}, {"title": "input render createprotal blur input", "body": "want request feature report bug bug current behavior input render portal blur input current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example see types diff input expected behavior change value blur versions react browser os affected issue work previous versions react latest version", "num": "13685", "d": "9/2018"}, {"title": "prevent reactdomrender errors bubbling otherwise explicitly handled", "body": "want request feature report bug bug ordinarily would probably considered feature request however stated purpose feature referenced violated certain environments current behavior react surfaces uncaught error render even using designed using trycatch around render described comment related code convenience provided developers using devtools debugging purposes however convenience provided development debugging changing behavior specs causing failures otherwise protected code paths goes statement comment description code error happens different event loop context interrupt normal program flow error occurs spec runner mocha fail test uncaught error continue next test advancing second render component complete call reactdomrender callback continues code alreadyfailed test subsequent test progress pollutes spec suite leads issues produced using production version react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example relevant code content included codesandbox due use karmamocha tests must run locally inline comments add detail behavior expectations see tests pass switch test production file expected behavior typically devtools used different context running vs investigation lack precise terms option rather default using react nonproduction environment least environment spec runners conditionally sensitive global errors developers must option disable disallow behavior implemented time second perhaps intuitive option refer portion mentioned comment talking pause caught exceptions untintuitive though even though react caught error developer perspective error uncaught exception render captured using trycatch mentioned exception considered caught developer explicitly created error boundary around render case expected behavior would error surfaced globally developer debug exceptions within error boundary defined versions react browser os affected issue work previous versions react present nonproduction version react environments react feature behavior react issue prior react explicit trycatch handlers solely responsible error boundary render", "num": "13681", "d": "9/2018"}, {"title": "possible return dom elements ref callback", "body": "hi guys wondering possible return dom elements ref callbacks codebase working currently need use refs parts find wrap components id divs get dom element ref required another library using openlayers would convenient dom elements returned callback unless ofcourse reason custom component object proxies callback case ca nt dom element attached proxy trivial change would willing given guidance course work", "num": "13680", "d": "9/2018"}, {"title": "eventtargettext returns undefined react", "body": "hello using react reactbootstrap select dropdown unable get selected text value eventtargettext says read text undefined code dropdown function testmefunction event gt let setvar eventtargettext thanks", "num": "13678", "d": "9/2018"}, {"title": "childrenmap amp co traverse keyed fragments", "body": "want request feature report bug report bug current behavior documentation reactchildrenmap tells us children keyed fragment array traversed function never passed container objects demo shows arrays indeed traversed keyed fragments traversed open developer console click run see output expected behavior childrenmap foreach toarray count traverse keyed fragments per documentation versions react browser os affected issue work previous versions react example runs also seen fail locally never tried know ever worked see fail latest firefox chrome ubuntu linux", "num": "13677", "d": "9/2018"}, {"title": "ios safari react dom attempting configurable attribute unconfigurable property", "body": "want request feature report bug report bug current behavior page crashes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example ca nt load fiddle pages ios basic react app demonstrate issue expected behavior app load versions react browser os affected issue work previous versions react", "num": "13676", "d": "9/2018"}, {"title": "possible use profiler server side", "body": "trying use profiler server side rendering onrender callbacks getting called way using nodeenv development code looks like works fine client side javascript import react unstableprofiler react const profilercallback id phase actualtime basetime starttime committime gt consolelog consolelog consolelog consolelog consolelog const mycomponent gt", "num": "13673", "d": "9/2018"}, {"title": "jsx attributes must assigned nonempty expression", "body": "want request feature report bug honestly nt know current behavior jsx attributes must assigned nonempty expression", "num": "13670", "d": "9/2018"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13667", "d": "9/2018"}, {"title": "possible react skip dom nodes hydrate different server render", "body": "server component example server render props available client frontend rehydrate app updates dom node thispropsserverdata empty make react touch dom nodes created server hydrate parts tree kind behaviour possible example something like", "num": "13664", "d": "9/2018"}, {"title": "edit oauth configuration inside quip", "body": "help helpful us would like ask one question working integration quip doc app inside authorization url also want add question mark please tell way helps add inside configuration quip example authorization url wwwquipcomauthorization want hit authorization url wwwquipcomauthorization typeuseragent send error please tell add typeuseragent using coding helpful us regards vaishali", "num": "13661", "d": "9/2018"}, {"title": "update existing state transition exception caught componentdidcatch", "body": "want request feature report bug bug current behavior working right mistake code could rerender inner query time outer query integration test see react error console perfectly makes sense problem expect caught toplevel boundary component componentdidcatch nt get executed case result hangs bitbucket pipelines stop build pr hours inactivity expected behavior guess componentdidcatch could caught exception versions react browser os affected issue work previous versions react using react", "num": "13655", "d": "9/2018"}, {"title": "root element noop blocking gsap draggable", "body": "want request feature report bug honestly nt know current behavior moderator greensock forums recent update causing issues draggable tool default draggable tool ignores clicks specific elements default draggable elements unless specify element draggable starting version function passed event root element react app preventing simple tag used draggable tool current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react blue square draggabl rotate either uncomment line change react reactdom versions expected behavior nt necessary add indication make element draggable work default regular application web page versions react browser os affected issue work previous versions react react chrome firefox edge windows also users tested chrome firefox osx nt know specific versions", "num": "13654", "d": "9/2018"}, {"title": "react causes jest unit tests fail", "body": "using jest enzyme unit tests project working recently upgrading caused errors appear almost unit tests error occurs use enzyme unit test mount component given example code however since upgrading always fails following error since downgraded react since causing issues think looked thanks", "num": "13653", "d": "9/2018"}, {"title": "finddomnode nt work argument", "body": "getting error component strange behaviour attached component already mounted issue reason wo nt work desired behaviour missing something running everything storybook styledcomponents reactreactdom versions import react component children react import proptypes proptypes import finddomnode reactdom export default class extends component static proptypes children proptypesnode onclick proptypesfunc componentdidmount documentaddeventlistener click thishandleclickevent capture true componentwillunmount documentremoveeventlistener click thishandleclickevent capture true handleclickevent event gt const el finddomnode render return thispropschildren", "num": "13652", "d": "9/2018"}, {"title": "input typenumber value nt updated", "body": "want request feature report bug bug current behavior enter input typenumber set value nt work still show current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior enter show versions react browser os affected issue work previous versions react think update updatewrapper", "num": "13651", "d": "9/2018"}, {"title": "image onerror event getting triggered even image loading", "body": "current behavior image onerror event getting triggered every time loads data piped image amazon sample code piping image code js execute promise data gt reswritehead contenttype imagepng createreadstream pipe res catch err gt let filepath pathjoin dirname images missingfilepng let src fscreatereadstream filepath expected behavior image trigger onerror event image loads", "num": "13649", "d": "9/2018"}, {"title": "better support iframe side effects", "body": "want request feature report bug bug current behavior transitioning state iframe inside component state without said iframe error current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example working expected behavior break versions react browser os affected issue work previous versions react affected since coming pr exactly check fallbacks reason", "num": "13648", "d": "9/2018"}, {"title": "feature request add dom life cycle hooks", "body": "currently straight forward get hands components full dom particular returns multiple elements case wo nt work left refs never get whole dom instead get one element time course something along lines feels bit awkward hence question adding dom nodes rendered given component end argument list relevant life cycle events mistaken would well perhaps although sure would good time access dom nt dug deep react internals naive guess would information available life cycle hooks called philosophical note seems storing references dom component nt clean event handlers use event reach dom seems life cycle hooks practically destined allow thanks consideration", "num": "13646", "d": "9/2018"}, {"title": "element attributes removed silently frameset tag", "body": "want request feature report bug bug current behavior historical reason still using obsolete tag project render component includes tag react attributes ignored like could anyone tell solve hacking way thx input javascript export default class obsoleteelment extends reactcomponent render return old page output expect versions react browser os affected issue work previous versions react react version node environment os", "num": "13645", "d": "9/2018"}, {"title": "react breaks hmr svg state", "body": "please remove issue due react hot loader", "num": "13644", "d": "9/2018"}, {"title": "state lifecicle", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react bug \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0432 \u043a\u043b\u0430\u0441\u0441 thispropsdate \u043d\u0430 thisstatedate \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 render \u0438 \u0434\u0430\u043b\u0435\u0435 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443 \u0432\u043e \u0432\u0441\u0435\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u0445 \u0444\u0438\u0433\u0443\u0440\u0438\u0440\u0443\u0435\u0442 thispropsdate", "num": "13637", "d": "9/2018"}, {"title": "event delegation react", "body": "given react attach event handlers nodes react team recommend app developers event delegation working large lists saving memory something like jsx import react react import reactdom reactdom class app extends reactcomponent render return id etargetdatasetid clicked gt item item item reactdomrender documentgetelementbyid root", "num": "13635", "d": "9/2018"}, {"title": "missing umd variant reactprofilingminjs", "body": "package released unpkg currently productionprofiling variant present cjs builds equivalent umd builds ie file would great future release profiling variant packaged umd well also thanks awesome framework", "num": "13634", "d": "9/2018"}, {"title": "react ontransitionend event gets called frequently", "body": "want request feature report bug bug current behavior callback getting called repeatedly even transition nt end reproduce demo click first button noticed ontransitionend callback called times clicking button calls another times randomly app extreme callback called lot frequently current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior gets called end css transition versions react browser os affected issue work previous versions react react browsers", "num": "13633", "d": "9/2018"}, {"title": "placeholder input attribute text displaying", "body": "want request feature report bug bug current behavior loads input placeholder blank however click outside input placeholder appears momentarily described current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example problems running virtualbox expected behavior input display placeholder attribute text input versions react browser os affected issue work previous versions react currently affecting", "num": "13632", "d": "9/2018"}, {"title": "add primereact community ui components page", "body": "sorry post could find another communication channel appreciate could add primereact ui suite primereact open source ui suite react thank", "num": "13631", "d": "9/2018"}, {"title": "warning reactforwardref render function nt take exactly two arguments confusing arguments", "body": "want request feature report bug feature improvement current behavior defining two parameters reactforwardref render function warning message stating forwardref render functions accept two parameters props ref forget use ref parameter gets logged current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior option overall message could explicit accepting exactly two parameters also arity greater second part message may omitted instance forwardref render functions accept exactly two parameters props ref option defining arguments function ok may case since real goal warning make sure people use ref parameter think message could shown arity gt therefore chaging condition versions react browser os affected issue work previous versions react one includes new warning", "num": "13627", "d": "9/2018"}, {"title": "component mounted twice", "body": "bug current behavior component called multiple times without calling using use link reproduce expected behavior called calling versions react browser os affected issue work previous versions react", "num": "13626", "d": "9/2018"}, {"title": "event delegation works react", "body": "reading statements like one multiple articles event delegation react nt actually attach event handlers nodes react starts starts listening events top level using single event listener component mounted unmounted event handlers simply added removed internal mapping jsx import react react import reactdom reactdom class app extends reactcomponent render return reactdomrender documentgetelementbyid root get event listeners one one bug", "num": "13625", "d": "9/2018"}, {"title": "passing reactcreatecontext mistakenly element causes confusing error", "body": "want request feature report bug bug current behavior really tired forget use instead use provider react understandably freaks error message confusing ie js import react react import reactdom reactdom const context reactcreatecontext import stylescss function app return hello codesandbox duh const rootelement documentgetelementbyid root reactdomrender rootelement results console looking something like pasted codesandbox current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior error roughly paraphrased says something along lines versions react browser os affected issue work previous versions react", "num": "13624", "d": "9/2018"}, {"title": "ie window display blank page", "body": "hello working react project working properly chrome qa uat environment working ie window ie window fine uat environment problem qa displays blank page following information console display error message except warning code page disabled back forward caching information see network tab display transaction first one second one debugger tab display message failed open click refresh tab url return url click back button expected page displayed debug found click login page backup route called react version read post website said react ie inconsistency sure error cause inconsistency advice need information please let know thank tom", "num": "13623", "d": "9/2018"}, {"title": "react notfounderror failed execute removechild node node removed child node", "body": "bug using wijmo react appears react attempting redraw control changed treeview control selected changes state property reveals controls screen logic render treeview content exists together single render call appears even though treeview changed react rerendering click treeview checkbox whole control blinks resets checkboxes default state found related posts indicated wrapping control div worked included screenshot basically happens checkeditemschanged called updates state course triggers render however treeview control rerender every time reason think least part reason error included chrome browser js checkeditemschanged e gt const self const currentitem thisreportstreeviewselecteditem render thispropsuserid return null", "num": "13617", "d": "9/2018"}, {"title": "unable call apply consoleerror encountering unknown tag", "body": "introduced react encounters unknown html element development react crashes attempts call consoleerrorapply reproduceable following codepen code demo", "num": "13610", "d": "9/2018"}, {"title": "use blacklist offensive", "body": "change blocklist let bright future please read software development still lot terminology racist patriarchal background let change blacklist denylist whitelist allowlist killer app beloved app masterslave primaryreplica related code", "num": "13604", "d": "9/2018"}, {"title": "passing data child components aspnet core react", "body": "nt know supposed ask somewhere else aspnet core application react want fetch data let say boottsx file layouttsx file referring files come default create aspnet core react app vs pass data child components would", "num": "13603", "d": "9/2018"}, {"title": "reactdomprofiling typeerror read property current null", "body": "ca nt quite figure use profiling build aliased get error nt want interactions want profiling wrong repro use cra eject add alias webpack prod config build", "num": "13601", "d": "9/2018"}, {"title": "schedule low priority updates block high priority updates", "body": "timeslicing great feature thank great works enjoying problem scheduling know scheduler unstable issue tell prblem problem high priority updates many low priority updates low priority updates interrupt block high priority updates reproduce open page set repeat count check enable timeslicing typing long text fast possible imagine app like spreadsheet app recognize low priority updates block high priority updates guess become huge problem ime composition events try type \u3053\u3093\u306b\u3061\u306f konnnitiha following timeline measured source code previous version used requestidlecallback nt problem requestidlecallback runs registered callback ui thread idle following version uses requestidlecallback implement another way avoid block high priorities low priorities", "num": "13597", "d": "9/2018"}, {"title": "componentdidcatch support ssr server side rendering", "body": "want request feature report bug feature docs outline supported serverside rendering react universal implementations become increasingly common small projects large corporate websites feature seems especially important", "num": "13592", "d": "9/2018"}, {"title": "bug broke react native web", "body": "want request feature report bug bug current behavior react native web broken describe due change expected behavior release version react exports eventpluginhub versions react browser os affected issue work previous versions react worked", "num": "13589", "d": "9/2018"}, {"title": "bug option returns object object instead string", "body": "current behavior returns object object instead string demo expected behavior expected string versions react browser os affected issue work previous versions react", "num": "13586", "d": "9/2018"}, {"title": "toggle button group calling onchange event react", "body": "trying make use toggle button group select option event getting called working ran simple sample codepen dependencies works non working reproduces issue create example using dependencies nt work nt get much help stackoverflow post able figure causing different behaviour operating system macos nodejs version", "num": "13585", "d": "9/2018"}, {"title": "reactapp makes chrome consume cpu", "body": "dont know reap app hosted making chrome consume cpu happens specially signing facebook account use first login following account user github myappcom password github login facebook account see cpu starting raise maybe app requires facebook page initiate live streaming event fb page order monitor app use phone make stream private live stream live press start button press start cpu goes stays start button initiates connection serversentevent app created using createreactapp command uploaded production using npm run build firefox hand stays within cpu chrome turns fans laptop gets hot idea could wrong", "num": "13584", "d": "9/2018"}, {"title": "bug shouldconstruct check", "body": "want request feature report bug reporting bug current behavior recent change logic checking prototype property become strict turns using dependencies defining method called update caused components treated type internally current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior would nice react could recognize case maybe log error development happy try implementing want go route people definitely nt defining components happens quick check error message would make quick fix versions react browser os affected issue work previous versions react impacts nt issue due less exhaustive check earlier versions", "num": "13580", "d": "9/2018"}, {"title": "external javascript working reactjs", "body": "hi creating react app using createreactapp external javascript libraries template design main indexhtml js files working first page application gets started libraries working redirect page first page understand files rendering functions variables methods accessible route changed using reactrouterdom routing googled found solution render js libraries componentdidmount method even solution working please help solve issue thanks", "num": "13578", "d": "9/2018"}, {"title": "interaction reference count decremented aggressively", "body": "certain conditions decrement attribute often result called prematurely andor given interaction x track interactions scheduled sync render phase x doubledecrement suspense loads within sync render x decrement sync commits waiting suspense past expiration x properly decrement pending interaction count suspense resource loads placeholder shown x add test high priority render suspended resolved suspense states sync async rendering", "num": "13574", "d": "9/2018"}, {"title": "need isbatchingupdates isunbatchingupdates", "body": "want request feature report bug question current behavior imo naming always equals wonder need add variable comment says weird case initial mount synchronous add test follow pr delete comment nt remove nt know remove comment seems weird case comment said nt solved pr expected behavior try remove use instead like encounter many tests fails thought tests would fails try could give clarifications still need thanks versions react browser os affected issue work previous versions react master branch", "num": "13569", "d": "9/2018"}, {"title": "consider stopping autoadding number style values except small whitelist", "body": "want request feature report bug removal feature sense current behavior react automatically adds suffix numerical values passed prop css properties accept unitless values react maintains blacklist properties nt get autoappended problem solution nt scale requires us add amp properties list css specs expand recently list grows faster flexbox amp grid added quite confusing props would work amp without suffix changes meaning suffering although react newbie quite familiar issue due member jquery core team jquery logic react keep add list actually exposed list jquerycssnumber people nt always wait us add support property release decided jquery drop autoprefixing blacklist turn whitelist lists common properties want autoappend mostly extremely common nt want break world much plan expand list unless missed something really common see current plan pr particular see proposed whitelist visualized regexp current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior propose react could thing jquery planning switch everexpanding blacklist css props nt suffix applied small whitelist suffix applied topic initially described versions react browser os affected issue work previous versions react browses amp oss nt know old logic react", "num": "13567", "d": "9/2018"}, {"title": "thispropschildren", "body": "want request feature report bug feature current behavior ambiguous current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react everything hi maybe nt feature request api choice would like put open maybe try understand decision led implementation apologies advance nt get either render child array children ca nt array children time take example parent class something like problems cause prop inside array however decide want pass child like get error prop inside direct reference instead array children nt make sense always return array sanitation time rendering children bit silly might totally missing point nt name clue children array children n opinions", "num": "13564", "d": "9/2018"}, {"title": "document fragments respond events", "body": "want request feature report bug bug current behavior due event listeners added access modify current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsx import react react import reactdom reactdom import stylescss function dosomething alert something happens function app return hello codesandbox const rootelement documentgetelementbyid root var frag documentcreatedocumentfragment reactdomrender frag rootelementappendchild frag expected behavior could manually call element document components could still respond events versions react browser os affected issue work previous versions react", "num": "13563", "d": "9/2018"}, {"title": "unable install reacttestrenderer using yarn", "body": "want request feature report bug report bug current behavior fails error expected behavior reacttestrenderer install correctly versions react browser os affected issue work previous versions react react installed using createreactapp", "num": "13562", "d": "9/2018"}, {"title": "remove factory components", "body": "support unusual kind components look like functional components return instance note functional components pretty exotic nt offer practical benefits classes time added think thought type systems might want compile format like instead es classeslike output nt happen complexity associated continuing support since confusing useful think deprecate remove", "num": "13560", "d": "9/2018"}, {"title": "scheduler package umbrella", "body": "short term x replace getinteractionsref getsubscriberref methods direct mutable exports update scheduletracking umd fork x remove umd dev prod bundles since part public api x fix interactiontracking reference count bug split subscriptions entry point apart tracking eg break long term move git repo maybe even org prior release enable used without build step replacing devprod check single export add es module entry point well cjs umd entry points", "num": "13559", "d": "9/2018"}, {"title": "cjsreactdomserverbrowserdevelopmentjs calls", "body": "bug including script source pointing result error complaining function according react documents rendertostring work browser following methods used server browser environments rendertostring rendertostaticmarkup react version", "num": "13558", "d": "9/2018"}, {"title": "fbjs dependency includes uaparserjs redos vulnerability", "body": "end uaparserjs installed depend react uaparserjs redos vulnerability fixed uaparserjs could addressed requiring fbjs instead fbjs plans address", "num": "13557", "d": "9/2018"}, {"title": "possible avoid calling jestresetmodules much", "body": "test suites call every test reactdominputtest reactdomserverintegrationforms reactdomeventlistenertest probably test suites mind observed calling consumes significant amount test time almost always used reset warning cache react holds state determine warning fire instead react warnings keyed tracker could quickly reset example reactdomunknownpropertyhook object tracks properties already raised warnings could look like state whether warning triggered could live another package could easily reset testing javascript import reactwarnings reactwarnings beforeeach gt reactwarningsclear wonder possible without breaking convention testing public interface mind lot working test suites reset module registry frequently", "num": "13555", "d": "9/2018"}, {"title": "react fire feature flag", "body": "needs feature flag react thought make issue track entails need help make list roughly going react fiber add feature flag reactfeatureflags execute test suite react fire flagged probably needs config setting jest sure yet might nice build reactdom fire enabled testing dom test fixtures", "num": "13554", "d": "9/2018"}, {"title": "uncaught typeerror read property removechild null", "body": "getting error saying uncaught typeerror read property removechild null using chrome issue happening inside domchildrenoperationsjs function removedelimitedtext parentnode startnode closingcomment true var node startnodenextsibling node closingcomment closing comment removed reactmultichild break else parentnoderemovechild node parentnode null causing issue method called form code function replacedelimitedtext openingcomment closingcomment stringtext var parentnode openingcommentparentnode var nodeaftercomment openingcommentnextsibling nodeaftercomment closingcomment text nodes opening closing comments insert new one stringtext nt empty stringtext insertchildat parentnode documentcreatetextnode stringtext nodeaftercomment else stringtext set text content first node opening comment remove following nodes closing comment settextcontent nodeaftercomment stringtext removedelimitedtext parentnode nodeaftercomment closingcomment else removedelimitedtext parentnode openingcomment closingcomment code called code receivecomponent function nexttext transaction nexttext thiscurrentelement thiscurrentelement nexttext var nextstringtext nexttext nextstringtext thisstringtext todo save pending props use performupdateifnecessary andor updatecomponent actual update consistency component types thisstringtext nextstringtext var commentnodes thisgethostnode domchildrenoperationsreplacedelimitedtext commentnodes commentnodes nextstringtext", "num": "13552", "d": "9/2018"}, {"title": "debug", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13551", "d": "9/2018"}, {"title": "old new context used simultaneously unexpected render occur component", "body": "bug current behavior old new context used simultaneously unexpected render occur component demo click ok button see log expected behavior ok button clicked component must called parent pure component called visible reason call versions react browser os affected issue work previous versions react react source expand see source javascript import react react import reactdom reactdom import proptypes proptypes const provider consumer reactcreatecontext class oldcontext extends reactcomponent static childcontexttypes proptypesnumber getchildcontext return render return reactchildrenonly thispropschildren class stateprovider extends reactcomponent state value onchange value gt thissetstate value render const props children state value onchange const blabla gt consolelog must called button click return value onchange gt value class pure extends reactpurecomponent render consolelog pure render return const rootelement documentgetelementbyid root reactdomrender v gt rootelement", "num": "13548", "d": "9/2018"}, {"title": "make possible get component stack least hash", "body": "want request feature report bug feature current behavior good way get list component parents way wrap rendered component error boundary throw dummy error pass rendered component without throwing error unfortunately idea hiding thrown errors refused see experimental hack nt useful expected behavior like deterministically identify components dom tree use data assign persistent data without using custom identifiers example store visibility state specific component windowlocalstorage related", "num": "13542", "d": "9/2018"}, {"title": "use asyncawait getderivedstatefromprops", "body": "hi need aysncawait getderivedstatefromprops working expected expected results ca nt use asyncawait getderivedstatefromprops thanks", "num": "13541", "d": "9/2018"}, {"title": "uncaught syntaxerror unexpected token lt", "body": "want request feature report bug bug current behavior app nt render current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example link broken app expected behavior app render versions react browser os affected issue work previous versions react react chrome notes using firebase public directory scenarios worked wrote frustrated please help", "num": "13527", "d": "9/2018"}, {"title": "react fire modernizing react dom", "body": "year react team mostly focused fundamental improvements react work getting closer completion starting think next major releases react dom look like quite known problems hard impossible fix without bigger internal changes want undo past mistakes caused countless followup fixes created much technical debt also want remove abstraction event system virtually untouched since first days react source much complexity bundle size calling effort react fire react fire react fire effort modernize react dom goal make react better aligned dom works revisit controversial past decisions led problems make react smaller faster want ship set changes future react major release unfortunately breaking nevertheless think worth thousands components facebook keep us honest migration strategy ca nt afford rewrite product code except targeted fixes automated codemods strategy different things make current plan might add remove something thinking far stop reflecting input values attribute originally added react via commonly requested people conceptual model dom see dom inspector match jsx attribute dom works type field browser nt update attribute react nt either turned change probably helpful code relying css selectors caused cascade bugs still unfixed day fallout change includes point clearly worth keep fighting browser revert positive part journey thanks tireless work dom contributors nhunzaker aweary jquense philippspiess detailed dom test fixtures help us avoid regressions attach events react root rather document attaching event handlers document becomes issue embedding react apps larger systems atom editor one first cases bumped big website also eventually develops complex edge cases related interacting nonreact code across react roots also want attach events eagerly every root less runtime checks updates migrate polyfill uncontrolled components see linked issue detailed plan confusing react uses different event name known event dom generally avoid making big changes like without significant benefit case also want change behavior remove complexity necessary edge cases like mutating controlled inputs makes sense two changes together use opportunity make work exactly dom events uncontrolled components drastically simplify event system current event system barely changed since initial implementation reused across react dom react native unnecessarily abstract many polyfills provides unnecessary modern browsers create issues solve also accounts significant portion react dom bundle size nt specific plan probably fork event system completely see minimal make stick closer dom gives us plausible get rid synthetic events altogether stop bubbling events like media events bubble dom good reason bubble want retain reactspecific capabilities like bubbling portals attempt via simpler means eg redispatching event passive events likely part see also proposed countless times already allowing passing dom node react confusion creating worth syntax limitations trying protect would nt change combined everything else makes sense note allow without warnings makes difficult component ecosystem handle component would need learn handle correctly risk conflicting since many components process example appending errorprone tradeoffs ca nt make changes aim keep exposing current private react event system apis projects like react native web however react native web need different strategy regardless react fabric likely move responder system native side may need drop compatibility older browsers andor require standalone polyfills still care supporting possible attempt smooth existing browser differences stance taken many modern ui libraries rollout plan stage project exploratory nt know sure things pan changes significant need dogfood facebook try gradual fashion means introduce feature flag fork code keep enabled facebook small group people open source releases keep old behavior master able run feature flag plan work project part would much appreciate discussion contributions nhunzaker aweary jquense philippspiess stellar collaborators largely steered react dom working fiber area particularly interested please let know work likely things missed plan open feedback hope writeup helpful", "num": "13525", "d": "8/2018"}, {"title": "app nt render mobile", "body": "want request feature report bug bug current behavior app renders nothing mobile browsers current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example app link render desktop mobile expected behavior app render normally versions react browser os affected issue work previous versions react mobile chrone browser samsung internet", "num": "13524", "d": "8/2018"}, {"title": "provide way throw error maybe asynchronous handled componentdidcatch", "body": "want request feature report bug feature request current behavior handle synchronous error expected behavior capability error boundaries handle asynchronous error error boundaries example docs similar asynchronous error handled react javascript class withasyncdata extends reactcomponent constructor props super props thisstate error null value null using componentdidmount instead componentdidcatch componentdidmount doasynchronousthing value gt thissetstate value catch error gt thissetstate error render thisstateerror return error occured return thispropschildren unfortunately new lifecycle aware synchronous error think good provide way throw error asynchronously like javascript class withasyncdata extends reactcomponent constructor props super props thisstate error null value null componentdidmount doasynchronousthing value gt thissetstate value catch error gt thisthrowerror error throwing error asynchronously render thisstateerror return error occured return thispropschildren network error handled single place networkerrorboundary component example", "num": "13523", "d": "8/2018"}, {"title": "running cpu async rendering demo fail", "body": "finished steps successfully according readmemd reactfixturesunstableasynctimeslicing run yarn start reported error like enviroment npm node forget dependences could give tips thanks lot", "num": "13522", "d": "8/2018"}, {"title": "access react component underlying dom tree", "body": "want request feature report bug feature current behavior form component form field children input checkbox etc validated custom rules form submitted validation works fine expected behavior form invalid would like scroll page first invalid element form submitted unfortunately components expose underlying dom three except via fiber object get ref component makes scrolling possible since nt dom reference trying avoid ref forwarding form field components would like form handle validation related code encapsulation purposes case want publish library instance versions react browser os affected issue work previous versions react react way achieve", "num": "13520", "d": "8/2018"}, {"title": "add dom fixtures", "body": "maybe missed nt see case dom fixtures seems important easy accidentally gloss stop syncing attributes edit bunch jsdom tests", "num": "13518", "d": "8/2018"}, {"title": "import component twice ensure life cycle functions different", "body": "current behavior import component twice father component change visible popover component componentwillreceiveprops execution twice want keep independent expected behavior import component life cylce functions independent functions belong", "num": "13514", "d": "8/2018"}, {"title": "nodeumd bundles broken master", "body": "see need remember fix one way cutting release", "num": "13512", "d": "8/2018"}, {"title": "updating component makes resource request triggers update warning", "body": "want request feature report bug bug minor annoyance current behavior tl dr updating component makes resource request trigger state updates causes warning displayed description based modified version example given component makes resource call triggers react updates js const someresource createresource fetchuserdata function userdetails props another component plugged resource calling read trigger setstate calls component const data someresourceread propsid return data resource requesting component mounting indeterminate component updates known functional component instances component called get return value difference known functional component renderer phase set calling function js mountindeterminatecomponent const value userdetails updatefunctionalcomponent setcurrentphase render const value userdetails setcurrentphase null phase set functional component get warning react current behavior bug please provide steps reproduce possible minimal demo problem demo modified add button navigate user details user page click user besides warning triggered data cached click button console warning updating existing state transition expected behavior warning versions react browser os affected issue work previous versions react master build", "num": "13510", "d": "8/2018"}, {"title": "relax tostring consistency guarantees", "body": "recently chatted related work eg sebmarkbage raised good point seems like overall treating consistently adding significant overhead implementation readability undoubtedly runtime overhead two separate issues warning invalid values ensuring output invalid values consistent eg functions always skipped conclusion came keep warning bad values long warn consistency necessary fine sometimes stringify function sometimes skip long always warn cases guiding principle invalid inputs handle least amount overhead runtime terms code size always handled way one exception probably symbols throw stringified seems like skipping actually desirable unless okay errors", "num": "13508", "d": "8/2018"}, {"title": "key warning", "body": "want request feature report bug bug current behavior react throws warning render arrays fragments component like jsx import component react class formcontent extends component render return thispropschildren export default formcontent use like jsx import proptypes proptypes import children component react import content formcontent import actions formactions class form extends component static proptypes title proptypesstring classname proptypesstring inline proptypesbool withoutwell proptypesbool disabled proptypesbool onsubmit proptypesfunc static defaultprops title classname inline false withoutwell false disabled false onsubmit gt render const children childrentoarray thispropschildren handlesubmit e void epreventdefault estoppropagation thispropsonsubmit e export default form warning tells unique key inside simply wrapped children class split future form component fix current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior show warning versions react browser os affected issue work previous versions react chrome version official build ubuntu lts", "num": "13506", "d": "8/2018"}, {"title": "getderivedstatefromprops responding change props", "body": "documentation states method exists rare use cases state depends changes props time however read appears way achieve checking props prevprops respond change copying props state appears directly contradict article derived state anti patterns say least bit confused documentation changed used responding changes props go ahead antipattern approach copying props state pls something missing tia", "num": "13505", "d": "8/2018"}, {"title": "reactdom amp amp panresponder bug", "body": "steps reproduce defaults copy appjs jsx import react react import animated panresponder reactnative export default class app extends reactcomponent constructor super thisstate pan new animatedvaluexy thispanresponder render return open srcappjs start working app changes make automatically reload shake phone open developer menu componentdidmount thispanresponder panrespondercreate onstartshouldsetpanresponder gt true onpanrespondermove animatedevent null dx thisstatepanx dy thisstatepany thisforceupdate draggable albeit slightly buggy textbox nt move still nt move behold moves", "num": "13504", "d": "8/2018"}, {"title": "previous render cleared state change", "body": "want request feature report bug bug current behavior state change occurs previously rendered page fully cleared leaving artifacts previous render current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior previous render fully cleared versions react browser os affected issue work previous versions react react safari version macos high sierra checked works previous versions react however issue specific safari issues chrome firefox", "num": "13501", "d": "8/2018"}, {"title": "angular react", "body": "way migrate existing angual app completely react", "num": "13500", "d": "8/2018"}, {"title": "number input breaks letter e entered", "body": "want request feature report bug bug current behavior input typenumber allows entering numbers letter e input native input input event called numbers letter e react event called numbers way catch e e even filled input controlled way think work around bug right use e e pressed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior pass anything filled input onchange handler break controlled component versions react browser os affected issue work previous versions react react chrome windows", "num": "13499", "d": "8/2018"}, {"title": "unknown component", "body": "react classname setting classname", "num": "13498", "d": "8/2018"}, {"title": "find module reactscriptspackagejson", "body": "happens use npm start npm run eject", "num": "13497", "d": "8/2018"}, {"title": "react code base coverage results appear incorrect", "body": "want request feature report bug bug current behavior order contribute react going coverage results find code needs additional testing noticed coverage results appear incorrect example file notice coveralls says branches covered actually function call ran jest workspace gave ifelse path missing line shown screenshot appears bug", "num": "13496", "d": "8/2018"}, {"title": "prevent encoding href attribute", "body": "want request feature report bug featurequestion current behavior react escapes everything inside href attribute belive cases undesirable using render emails sent sengrid sendgrid provides functionality inject links autogenerated preferences unsubscribe pages replacing placeholders within emails actual urls placeholders looks like problem react encodes placeholder becomes wondering solution doomed hack current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior way different avoid escaping versions react browser os affected issue work previous versions react", "num": "13494", "d": "8/2018"}, {"title": "efficent way using dangerouslysetinnerhtml set svg string", "body": "parsing markdown text string whose content svg file far seems way render svg string use wan na ask way inefficent efficent way react thanks reading issue looking forward awesome answers", "num": "13493", "d": "8/2018"}, {"title": "touch events nonbutton elements nt trigger react mouse event handlers mobile safari", "body": "touch events trigger simulated mouse events described tested using native event handlers worked described also works described react event handlers except nonbutton elements safari mobile want request feature report bug report bug current behavior touch events nonbutton elements trigger react mouse event handlers mobile safari trigger react mouse event handlers mobile chrome trigger dom event listeners mobile safari expected behavior touch events nonbutton elements trigger react mouse event handlers mobile safari versions react browser os affected issue work previous versions react ios safari android chrome reactdom", "num": "13492", "d": "8/2018"}, {"title": "consider keeping legacy context api nonstate usages", "body": "want request feature report bug feature request question according react docs ways avoid passing props many levels new context api composition inversion control using new context api consumer component must know explicitly import context raises quite big disadvantage comparing legacy context api component ca nt reusable different contexts unless making prop version component wrapping another one uses context directly fact means component ca nt contextual reusable different contexts time using composition many cases feels wrong solving quoting docs however right choice every case moving complexity higher tree makes higherlevel components complicated forces lowerlevel components flexible may want example component struggle understand import context javascript import react react import propstypes proptypes export class link extends reactpurecomponent static contexttypes navto propstypesany handleclick e gt epreventdefault const path thisprops thiscontextnavto path render const path props thisprops return already discussed answered apologize could nt find related issues", "num": "13490", "d": "8/2018"}, {"title": "question reconciliation", "body": "think understood reconciliation react however one thing would like clarify let say first render render duke key villanova key next render connecticut key duke key villanova key understood reconciliation correctly second render react check types eg keys first two items first second render match hence add new item key new output hence generate following result duke key villanova key villanova key however think react generate seems issue understanding especially bold part previous paragraph someone explain missed understanding", "num": "13489", "d": "8/2018"}, {"title": "reacttestrenderer possible test lifecycle functions", "body": "want request feature report bug question current behavior trying use notice lifecycles methods ex need fired manually solves problem reveals want use shallow render test component test api minimal rendering expected behavior expecting would support testing component reaction different lifecycles capable use rendering way use scenario better move another library like", "num": "13487", "d": "8/2018"}, {"title": "uiwebview access react", "body": "production environment browser access uiwebview access react react route follows deployed nodejs express issue accessing browser display normally access ca nt access passed test request enter appjs nt know issue express problem react nt know asking questions hope friends answer thank much", "num": "13485", "d": "8/2018"}, {"title": "getderivedstatefromprops called calling setstate", "body": "using version till hours ago things expected read made much sense far upgraded things stopped working mainly cause getderivedstatefromprops called calling setstate desired behaviour doubt cause props nt changed entire goal method unify props preprocessing logic new updated component unify way developers apply props state checked version setstate trigger getderivedstatefromprops", "num": "13480", "d": "8/2018"}, {"title": "input checkbox updating rerender", "body": "react version checkbox dom checked state change constructor props super props componentdidmount thissetstate checked thispropschecked render let checked console logging checked first render returns reactelement type input following props second render state change however app checkbox checked explicit set defaultchecked property true checked default statechecked true checked tried removing onchange listener suspecting may culprit current workaround constructor props super props feels messy", "num": "13477", "d": "8/2018"}, {"title": "us", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13471", "d": "8/2018"}, {"title": "nd", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13470", "d": "8/2018"}, {"title": "get keys reactreconciler", "body": "struggling implement reusable views mobile platforms make need get key values explicitly set generated reactreconciler match two different view trees somewhere outside react way achieve thanks", "num": "13469", "d": "8/2018"}, {"title": "purecomponent shallowequal", "body": "simple demo shows click event triggers render every time demo however according source code reactpurecomponent shouldcomponentupdate shallowly compares objects like following click event nt trigger render performs equality iterating keys object returning false key values strictly equal arguments returns true values keys strictly equal", "num": "13468", "d": "8/2018"}, {"title": "ability intercept syntheticevent", "body": "want request feature report bug think feature would like intercept event trigger order record events", "num": "13467", "d": "8/2018"}, {"title": "problem render smart tv", "body": "created app using createreactapp installed dependencies yarn install started yarn start tried open page smart tv samsung nothing rendered downgraded version react reactdom install start page rendered normally happens lg tv", "num": "13466", "d": "8/2018"}, {"title": "react onchange events bubbling unmount", "body": "want request feature report bug reporting bug current behavior attaching handler jsx element calling handler leads element unmounted event never bubbles dom means ca nt listen basically anything else element current behavior bug please provide steps reproduce possible minimal demo problem example code try open console click around bit notice single checkbox never changes position triggers listeners whereas checkboxes get moved lists trigger events expected behavior would expect event handled way event versions react browser os affected issue work previous versions react tested conditions react macos opera firefox dev edition chrome canary behaviour changed versions", "num": "13459", "d": "8/2018"}, {"title": "npm install error", "body": "hello", "num": "13458", "d": "8/2018"}, {"title": "potential performance issues using forwardref", "body": "want request feature report bug bug assuming potential drop perf counts bug current behavior setting rudimentary perf benchmark harness reactredux compare performance builds reactredux work version harness runs one benchmark apps headless puppeteer running capture fps values second time capture chrome trace reports automatically currently one benchmark app stock ticker type stress test measures fps using package relies rough show meaningful differences fps values swap different reactredux builds change number connected components benchmark two wip candidate prs reactredux initial testing showed pr almost fast existing version pr slower runs however initial push branch include use branch already added spent saturday adding couple pieces functionality branch reran benchmarks per ourcomments issue saw branch suddenly gotten slower removing branch sped things fps admittedly artificial stress test scenario also likely reactredux apps hundreds thousands connected components potential slowdown seems concerning current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example current perf benchmark repo uses umd builds reactredux easily switch build used several umd builds already committed root repo branch branch reproduced building respective branches prs handcopying umd build artifact reactredux clone benchmark folder renaming whatever seems appropriate clone repo install build run benchmark number connected components modified requires rebuilding harness determines umd build versions run based array around line expected behavior would minimal impact perf used wrap component hoc hoc used widely application versions react browser os affected issue work previous versions react testing puppeteer windows looks like locally installed version chromium current version react umd build reactredux umd expects react redux also global variables tested prior version react specifically targeting next version reactredux", "num": "13456", "d": "8/2018"}, {"title": "forwardref precludes use composite component test utils methods", "body": "want request feature report bug bug file new issue per current behavior using reacttestutils navigate trees composite components unable find instances components wrapped current behavior bug please provide steps reproduce possible minimal demo problem jsfiddle link hoc returns forwardref pretty much exactly like one written docs except using react context jsx const mycontext reactcreatecontext somedefault const withmycontext component gt class mycontextconsumer extends reactcomponent render const forwardedref rest thisprops return reactforwardref props ref gt withmycontext class myhocforwardedcomponent extends reactcomponent render return hello expected behavior would hope could still navigate tree able find rendered instance versions react browser os affected issue work previous versions react react everywhere believe thank time", "num": "13455", "d": "8/2018"}, {"title": "componentprototypesetstate callback receiving arguments", "body": "want request feature report bug bug current behavior callback receiving parameters though line states current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example please check console clicking button display empty array indicating nt get called parameters expected behavior comment mentions get updated state props context arguments versions react browser os affected issue work previous versions react checking behaviour react using chrome mac os high sierra also nt seem work previous versions though nt go back version history", "num": "13452", "d": "8/2018"}, {"title": "ancestor stoppropagation prevents controlled working", "body": "want request feature report bug bug current behavior react component mounted descendent dom element stops propagation event event react component occur current behavior bug please provide steps reproduce possible minimal demo problem html structure html react component reproduction codepen expected behavior works well like versions react browser os affected issue work previous versions react issue occurred react tested older react newest chrome firefox edge windows", "num": "13451", "d": "8/2018"}, {"title": "umd builds enabled unpkg", "body": "visiting displays cjs build umd build displayed instead also noticed issue reactdom assume packages need fixed please refer usage instructions bottom", "num": "13450", "d": "8/2018"}, {"title": "map render array elements", "body": "current behavior support return array components example render return export default arraydemo want map reactchildrenmap example import arraydemo xxxxxx reactchildrenmap arraydemo item index gt return span item arraydemo become single element reactchildrentoarray got expected behavior expected since react return array map sometimes want wrap element array versions react browser os affected issue work previous versions react missing something important thx lot", "num": "13449", "d": "8/2018"}, {"title": "tools endtoend testing", "body": "may question moreso feature request ca nt seem find answer around web seems people working small apps ignoring issue working large react application seeing issues endtoend testing webdriverioselenium setup seems rather common understand use tools click buttons type text etc find affected dom elements assertions however problem react synchronously perform operations read dom use various methods schedule work done asynchronously later time found tests assertions random see real dom still previous state rather new state results clicked button whatnot every large test run seen many posts internet even acknowledge issue one found suggests adding timeouts throughout tests however obvious reasons slow nondeterministic suggested way know react application finished performing scheduled work discussion happening somewhere", "num": "13447", "d": "8/2018"}, {"title": "element type invalid expected string builtin components classfunction composite components got object", "body": "want request feature report bug bug current behavior ed stateless functional components usual way actually component use causes error ed objects returned components properties like etc app breaks gives error message element type invalid expected string builtin components classfunction composite components got object check render method closer inspection initial error message console warning reactcreateelement type invalid expected string builtin components classfunction composite components got object check code line uses replace contents get error however error disappears comment object source problems looks like looks like immediately original definition inside component uses simplified component use get error import react react const companyiconinheader debugger export default companyiconinheader module uses react says check render method import react react import connect reactredux import createstructuredselector reselect import getcompanyname companyinfostateglobalcompanyselectors import companyiconinheader companyiconinheader const companyheaderpartwithoutstructure companyname gt companyname export default connect createstructuredselector companyname getcompanyname companyheaderpartwithoutstructure fruitless attempts get rid error undefined point get error take also remove use related imports also import still errors component turn uses connected even reduce point importing react returning without connecting error still thinking maybe go way tree disconnect everything maybe error disappear would nt solve problem wo nt go also get error point react ends error message check render method current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior error versions react browser os affected issue work previous versions react react redux reactredux get behavior react redux reactredux also reactredux react redux also redux react reactredux also old reactredux redux newest react app made createreactapp ejected", "num": "13445", "d": "8/2018"}, {"title": "link click fire click event witch bind window componentdidmount", "body": "page b bind event window page click change router b event triggered feels strange bind event b triggered event", "num": "13440", "d": "8/2018"}, {"title": "cache provider add hooks read preload dev mode", "body": "topic originally came discussion want request feature report bug feature current behavior package presently provide hooks understand pulled resource first time hit cache dropped something cache due due tools provide interface around cached resources makes debugging inspection harder expected behavior would great way expose callbacks events cache resource resolved idea would fire callbacks events existing switch statement mode information could reduxdevtools esque interface better understand data coming hitting cache dev mode tools like would also useful people new suspend api visually see resources transition various record states", "num": "13439", "d": "8/2018"}, {"title": "doubt behaviour using purecomponent", "body": "current behavior met strange behaviour using purecomponent normal unincrease number click add button follow shallowequal return true js class b extends reactpurecomponent constructor props super props thisstate count thisclick thisclickbind click thissetstate count thisstatecount render return thisstatecount doubt normal increase number using like follow link js click const state objectassign thisstate thissetstate count statecount option effect count thisstatecount count statecount nt know second way thanks replying", "num": "13438", "d": "8/2018"}, {"title": "suspense fixturedemo page scrolls top unnecessarily", "body": "open demo lives repo fixtures folder small screen tapping one rows bottom ex name causes page scroll top immediately means see inline loading indicator scroll top data loads", "num": "13436", "d": "8/2018"}, {"title": "react page returns ios wkwebview", "body": "react app following routes xyzcom xyzcompolicy try access ios app wkwebview rendering proper homepage try access nginx returns error wkwebview pages seems work normally mobiledesktop browsers accesslog accessing normal browsers accessing route ios app wkwebview accesslog like know issue react router prevents rendering content although sure problem content", "num": "13433", "d": "8/2018"}, {"title": "rendertostring supports html minify", "body": "think optionally minify html string returned believe possible current react think method placed document possible thanks", "num": "13432", "d": "8/2018"}, {"title": "feature request react element", "body": "angular element develop custom elements render external application like bellow js feature react", "num": "13429", "d": "8/2018"}, {"title": "host components outside setstate path sometimes unnecessarily diffed updated", "body": "extracted currently diff host node complete phase even bailed begin phase means little bit work necessary also observable effects particular would rare probably worth fixing made worse end committing update inputs another component fix filing posterity", "num": "13425", "d": "8/2018"}, {"title": "onchange nt fire input rerenders due setstate nonreact capture phase listener", "body": "extracting issue always react reproduce react however probably extremely rare practice nt worth fixing filing posterity minimal example js class app extends reactcomponent state value handlechange e gt thissetstate value etargetvalue componentdidmount documentaddeventlistener input gt comment line fix thissetstate true render return reactdomrender documentgetelementbyid container typing nt work unless comment call capture phase listener say input empty typing happens capture phase nonreact listener runs first rerendering due first empty input props still contain old value dom node value new equal set dom node value according props remember current value tries decide whether emit change event asks tracker whether value changed tracker compares presumably new set earlier stored also also updated changes update lost never get change event never actually get chance set correct state", "num": "13424", "d": "8/2018"}, {"title": "eslint ca nt find module error", "body": "want request feature report bug maybe bug current behavior clone react run eslint inspection fail due seems use wrong value npm support file sure change comments expected behavior error versions react browser os affected issue work previous versions react react repo master branch macos yes previous works", "num": "13418", "d": "8/2018"}, {"title": "small issue test ensure componentdidmount called", "body": "glancing tests get better handle update batching like noticed possible logic omission test case file moves looks like js call render component deleted gt var rendercount var componentb null truly intended check whether component mounted additional end test otherwise seems superfluous since never checked otherwise used test", "num": "13417", "d": "8/2018"}, {"title": "replace content", "body": "want request feature report bug feature current behavior use render replace body content got warning message warning render rendering components directly documentbody discouraged since children often manipulated thirdparty scripts browser extensions may lead subtle reconciliation issues try rendering container element created app creating whole website according better elements elements said better directly body example says content unique page use per page put directly inside ideally nt nested within elements think common case replace whole content current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior maybe remove warning versions react browser os affected issue work previous versions react reactdom", "num": "13415", "d": "8/2018"}, {"title": "fragments rendered strange elements", "body": "react reactdom trouble reproducing raising hope someone give clues cause large application using places like everything internet explorer renders expect html child child child child jsx child child child child reactcreateelement reactfragment think correct way symbol polyfill works react recognize something html tag even weirder happens sometimes two components app using fragments first one render may issue second may affected component rerenders rendered dom corrected nt found solid pattern yet fairly typical webpack babel setup using babelpolyfill symbol support really sure parts setup relevant please let know need extra info trying create reproduction outside application anyone offer clues meantime incredibly grateful", "num": "13414", "d": "8/2018"}, {"title": "umbrella chopping block", "body": "wanted create list things whose existence makes react bigger complicated necessary makes likely need deprecated actually removed future version clue happen recommended upgrade path nt take issue advice move away clear upgrade advice might make worse overlap seem longer term unsafe life cycles without unsafe prefix keep ones prefixed unsafe indefinitely original ones likely deprecated removed legacy context old context full edge cases accidentally supposed work way designed requires react code become slower support feature string refs requires current owner exposed runtime likely form owner remain particular semantics likely want rather two owners remove feature also requires extra field every reactelement otherwise needed module pattern components little used feature lets return class instance regular function without extending useful practice ecosystem moved around es class like usage language compiling js tries comply model well existence feature means nt know something functional component testing function extending instead extra feature testing every functional component also prevents us passing ref second argument default functional components without using since would nt valid class components uncontrolled oninput described support uncontrolled polyfilling event pretty invasive operations dom like attaching setters support imperative usage dom outofscope react setstate componentdidcatch currently support error recovery support might want consider deprecating old mechanism automatically first commits null semantics bit weird requires complicated code likely get wrong sometimes context object consumer right possible use context object consumer render prop artifact reusing object allocation documented want deprecate make provider instead gc unmounted roots likely wo nt come warning breaking behavior memory usage call component wo nt cleaned almost always cleaned anyway since least one subscription still holds onto arguably even breaking change unstablerendersubtreeintocontainer replaced portals already problematic since ca nt used lifecycles also add lots special case code transfer context since legacy context likely deprecated serves purposes x reactdomrender hydration already deprecated requires extra code requires us generate extra attribute html autoselect hydration people using reactdomhydrate instead need remove old behavior attribute reactdomserver", "num": "13413", "d": "8/2018"}, {"title": "keyboardeventrepeat normalized", "body": "want request feature report bug bug current behavior documentation syntheticevent claims react normalizes events consistent properties across different browsers documentation keyboard events lists supported field natively support react normalize event set keydown event repeats ie key held edge open bug course abandonware current behavior bug please provide steps reproduce possible minimal demo problem tab div repro hold key bug repeat alert appear expected behavior alert dialog showing repeat appear browser react supports versions react browser os affected issue work previous versions react current version react browser natively support ieedge particular chrome always supported ff since safari since unknown worked previous versions react", "num": "13411", "d": "8/2018"}, {"title": "investigate selectwrapperstateinitialvalue necessary", "body": "uncovered raunofreiberg select work ever assigned never referenced removed example would great someone could investigate figure removed", "num": "13410", "d": "8/2018"}, {"title": "createsubscription call getvalue constructor early", "body": "want request feature report bug bug current behavior made example show execution order lifecycle functions remounting component calls save result state called changes ignored remount component wrapped component something modify source value get wrong value new component expected behavior versions react browser os affected issue work previous versions react latest", "num": "13405", "d": "8/2018"}, {"title": "callback function setstate faster real dom render", "body": "hello dear problem project want get dom documentgetelementbyid password dom unrendered untill modal opened like bellow visible control modal display works well react using react tell addeventlistener function deal bellow works well like em nt know reason update react version thy reactdom find dom refs receive answer browser wish get answer u", "num": "13402", "d": "8/2018"}, {"title": "boolean dom properties coerce empty string false contrary html standard", "body": "kind space offshoot attempt better model react dom props flow tl dr react warn value passed known boolean dom prop want request feature report bug depends interpretation possibly bug definitely inconsistency worth mitigating imho current behavior react normalises values supplied known dom boolean props eg passing empty string falsy javascript results corresponding attribute omitted html output however html empty string truthy value context one values standard specifically allows boolean attributes potential source confusion react handling unknown attributes gives rise following hypothetical scenario new dom boolean attribute introduced people write jsx code uses passed html truthy later react adds internal whitelist minorpatch version starts processing boolean js falsy omitted html would technically breaking change people current behavior bug please provide steps reproduce possible minimal demo problem expected behavior definitely clash expectations interface js html coming js falsy treating boolean prop fine perspective current behaviour justifiable coming html might obvious react extra processing deviating clearly stated html spec perspective current behaviour surprising probably nt justification changing react actual handling least fear breaking code relies longstanding behaviour see version information perhaps warning ambiguity warranted la note warning wo nt fully mitigate worstcase scenario mentioned since ca nt warn prop nt know dom boolean least would give signal react version update code might expected thing anymore versions react browser os affected issue work previous versions react versions react far back probably way older process whitelisted boolean dom props way", "num": "13400", "d": "8/2018"}, {"title": "reacttestrenderer find render function reactnative component", "body": "want request feature report bug bug current behavior run tests render component using shallow function enzyme fails ca nt find render function typeerror thisinstancerender function current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example developing reactnative application running default jest command run tests happens ca nt reproduce small project expected behavior run tests versions react browser os affected issue work previous versions react using babelcore proptypes react reactdom reactnative babelcore babelcore babeljest babelpresetreactnative babelruntime enzyme jest jestfetchmock jsdom reacttestrenderer jest configuration jestconfigjs babel config babelconfigjs", "num": "13399", "d": "8/2018"}, {"title": "avoid reconciliation alternative component interface", "body": "hello want ask question way avoid reconciliation process today see following process component wants rerender component render method provides new virtual dom react diff library tries find nonoptimal way morph old virtual dom new one please fix wrong familiar react codebase see information docs worry exactly changes every update solution complexity n even worse user care changes sometimes user knows changed able provide log n even solution example working huge data list receiving information websocket morph list appendprepend remove swap items etc nt want render huge component list run reconciliation process mutation tell virtual dom morph efficiently way user provide morph method imagine api like render defined morph component componentappend else prependto componentfind key plans implement thank please feel free ask questions", "num": "13396", "d": "8/2018"}, {"title": "reactdom support solve problem", "body": "error message set undefined error line var labelsincurrentcommit new set anyone encountered problem solved", "num": "13390", "d": "8/2018"}, {"title": "createanewapphtml", "body": "createanewapphtml error word npx createreactapp myapp cd myapp npm start", "num": "13383", "d": "8/2018"}, {"title": "provide property facilitate context testing", "body": "want request feature report bug feature request current behavior provides property provide property allowing context tests expected behavior return object containing instance current context versions react browser os affected issue work previous versions react least", "num": "13382", "d": "8/2018"}, {"title": "reactcloneelement remove existing props", "body": "want request feature report bug feature current behavior element cloned reactcloneelement possible add new props modify existing ones remove existing props relevant code example works right desired behavior would great add way remove props passing value guess could use directly afaik also worry special attributes like rather mess internals versions react browser os affected issue work previous versions react think worked way react versions use case applying map transformation elements recursively need remove virtual props passing elements react render contrived example console shows want avoid", "num": "13381", "d": "8/2018"}, {"title": "reactchildrenmap incompatible reactchildrenonly function", "body": "return value reactchildrenmap incompatible reactchildrenonly function return error message invariant violation invariant violation reactchildrenonly expected receive single react element child", "num": "13380", "d": "8/2018"}, {"title": "npm install react nt run", "body": "hello everyone want install reactjs project created run command npm react causes error package json name reactlab version description lab sur reactjs main indexjs scripts test echo error test specified amp amp exit author orion wambert license isc dependencies bootstrap createreactapp expressjs jquery latestversion mobx reactredux reactrouter redux webpack", "num": "13371", "d": "8/2018"}, {"title": "try listening mouse keyboard event reactjs", "body": "anyway detect mouse keyboard event browser minimize need suggestion thank", "num": "13370", "d": "8/2018"}, {"title": "epreventdefault work safari later", "body": "want request feature report bug bug current behavior epreventdefault work safari later current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reproduction link steps reproduce page safari page safari beyond expected behavior page scrolled versions react browser os affected issue work previous versions react react browser safari os", "num": "13369", "d": "8/2018"}, {"title": "onchange triggered option changes even human", "body": "want request feature report bug bug current behavior consider options external data say b users could choose option say b since data outside possible later option b longer option automatically adjust display left option case yet triggered means unless users click choose option already displayed nt make sense internal state would nt able change correct perceived value current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example simulate external data input text commaseparated choices try following sequences events select option b element edit text box value changed displayed value current choice internal state still b expected behavior triggered internal state adjusted versions react browser os affected issue work previous versions react chromefirefox", "num": "13366", "d": "8/2018"}, {"title": "want use crypto module nodejs work", "body": "want use cryptocreatediffiehellman dh encryption react code followed error reactjs work fine nodejs followed code reactjs import react component react import logo logosvg import appcss import crypto crypto class app extends component constructor props super props thisstate text componentdidmount render return welcome react get started edit save reload export default app exception like", "num": "13365", "d": "8/2018"}, {"title": "reacteventlistener listen onclick events", "body": "listen onclick events need listen onclick events app get access reacteventlistener", "num": "13363", "d": "8/2018"}, {"title": "might time update package readmes", "body": "npm package get immediate access react without also requiring jsx transformer especially useful cases want browserify module using react", "num": "13359", "d": "8/2018"}, {"title": "ability use return value reactchildrenmap reactchildrenonly", "body": "stated docs shown return value incompatible function return error message invariant violation invariant violation reactchildrenonly expected receive single react element child used incompatibility causes fairly annoying restrictions however understand means ca nt edit properties component children runtime contain component requires single child eg ca nt dynamically set disabled prop child component parent believe due type differences parameter return value former valid element latter see like make request return type type fix quirks much intuitive separate static function converts return type type would also solve issue feels like sort fix order since broad strange restriction components use", "num": "13355", "d": "8/2018"}, {"title": "setstate unexpectedly update nonstate properties", "body": "nt know known issue intended feature found interesting problem know want render reactive value react put value state use setstate js constructor super thisstate counter thisincrementbuttonlistener e gt epreventdefault thissetstate prevstate gt counter prevstatecounter render return thisstatecounter clicked counter increments rerenders make field property render catch snapshot component created even incremented result displayed reactively render js constructor super thiscounter thisincrementbuttonlistener e gt epreventdefault thiscounter render return thiscounter clicked counter increments difference rendered right basic stuff however interesting occurence try fiddle around code keeps counter field property everything else intact difference going add js constructor super thiscounter thisincrementbuttonlistener e gt epreventdefault thiscounter add thissetstate pass object even empty thissetstate wo nt work render return thiscounter surprise surprise thiscounter update state time updates state assumption every time setstate called even empty object parameter render runs get recalculated thus incremented course wo nt reactive state property use case time would change click button put setstate listener would work state sure accepted behavior unexpected hack whether make use could anybody help elaborate fiddle want see behavior action comment bit line see difference", "num": "13354", "d": "8/2018"}, {"title": "persistent state storing parent", "body": "hi use reactvirtualize render list sub component row carries state state obviously gets reinitialized every remount store state parent object pass object tree props set object every time state update javascript constructor props super props thisstate propsstatecachechildstate thissetstate property gt thispropsstatecachechildstate thisstate", "num": "13352", "d": "8/2018"}, {"title": "bug lastest version getting images", "body": "hi page loaded lot errors getting images reactdom message like path file error react please fix tell please wrong", "num": "13350", "d": "8/2018"}, {"title": "reactcreatecontext singleton enforcement", "body": "want request feature report bug bit current behavior old context api involved components provided consumed context using shared string key words requirement communication components providing consuming context string key used side effect allowing easy communication via react context across packages ie separate nodemodules using shared context might one two forms entirely different components using context key perhaps spread around source code even nodemodules one packages importing context providingconsuming components another usage pattern line abstraction new api works much differently instead communication work correctly consumer provider must always come exact function call unlike old api means provider consumer imported another package implicit singleton otherwise separate instances think intuitive reasonable form work new api less form best way handling far best approach thought using peer dependencies enforce package calling never duplicated nodemodules potential drawback brought original reactcreatecontext rfc ca nt seem find reference limitation docs anywhere recommended way handling listed documentation caveat using way make less errorprone nt seem issue regarding already figured create one kick discussion expected behavior context communication work across package boundaries see note old context api versions react browser os affected issue work previous versions react concerns versions react api", "num": "13346", "d": "8/2018"}, {"title": "ca nt call findbytype instance reacttestrenderer", "body": "bug current behavior ca nt call findbytype instance typeerror instancefindbytype function expected behavior want get fieldmapper componen child fieldmapping peace code test testrenderer create versions react browser os affected issue work previous versions react react reacttestrenderer typescript typesreacttestrenderer", "num": "13345", "d": "8/2018"}, {"title": "rfc omit end tags possible reactdomserverrenderer", "body": "background lot instances defined html spec end tags omitted still maintaining valid markup examples li element end tag may omitted li element immediately followed another li element content parent element p element end tag may omitted p element immediately followed address article aside blockquote details div dl fieldset figcaption figure footer form header hr main nav ol p pre section table ul element content parent element parent element html element audio del ins map noscript video element autonomous custom element see utilizing rules think may possible reduce amount html needed initially downloaded user serverside rendering depending rendered could significant decrease html size example pulled table element utilizing rules difference bytes compared decrease size html tee electric powered rail car train functions abbreviated function control unit central station headlights interior lights electric locomotive operating sounds engineer cab lighting station announcements swiss caveats even though rules spec still feel like quirks probably browsertobrowser differences handled even handled react could see babel plugin something like good fit optimization like possible roadmap research end tags would stable omit roll optimization subset tags gauge realworld load time improvements continue adding omission cases everything looking good", "num": "13342", "d": "8/2018"}, {"title": "feature request unmount component", "body": "want request feature report bug request feature want able unmount component think life cycle could good maybe returning special value provided react render also good jsx class mycomponent extends reactcomponent rest render thisstateshouldunmount return reactshouldunmount", "num": "13338", "d": "8/2018"}, {"title": "imperative wrappers ca nt access current context value commit phase", "body": "sometimes imperative wrapper like js componentdidmount rendersomethingimperatively thisprops componentdidupdate rendersomethingimperatively thisprops render return null portals eliminated need regular dom jumps still need embedding renderers eg use cases like vue inside react crossrenderer embedding maybe could extend portals still imperative use cases crosslibrary rendering though one thing becomes annoying new context wo nt propagate imperative boundary nt maintain stack commit phase traversing flat linked list effects nt actually know context value current time fires friends means context host app accessible quite annoying could hack around something like neither obvious convenient anticipate contexts get used seems even less convenient imperative cases like vue inside react js componentdidmount rendersomethingimperatively thisprops componentdidupdate rendersomethingimperatively thisprops render value gt return seems like could use would put state use lifecycles maybe sufficient still means need explicit contexts want remember though wonder find better solution use cases", "num": "13336", "d": "8/2018"}, {"title": "excessive iteration multiple roots scheduled lifecycle", "body": "looking seemed suspicious consider case js class app extends reactcomponent componentdidmount let lt reactdomrender documentcreateelement div render return null reactdomrender documentgetelementbyid root profiling tells spend lot time searching root adding logging shows eg roots run loop iteration times first root times second root times third root etc oops surely bug", "num": "13334", "d": "8/2018"}, {"title": "bug onpointerup nt fire tablet pen input", "body": "example component current behavior onpointerup event fails fire using wacom tablets tested chrome mac windows past used reactpointable wrapped functions also longer works", "num": "13333", "d": "8/2018"}, {"title": "support crossrenderer portals", "body": "currently works within current renderer means want embed one renderer another eg option imperative render committime hook like outer renderer component fact exactly works today approach nested renderers like ca nt read context outer renderers similarly ca nt timeslice updates inner renderers update inner container host renderer commit time time originally discussed portals wanted make work across renderers could something like js super clear work renderers bundle incompatible fiber implementations whose implementation takes charge want figure something eventually filing future reference", "num": "13332", "d": "8/2018"}, {"title": "question rendering arrays components implementations behave", "body": "want request feature report bug possible bug though likely expected behavior misinterpreting current behavior say array components like render also want weave tags item example jsx const delimited props gt propsitemsreduce b gt b works however components array state forget state parent refreshes seems bad rewrite delimited component produces result inserting array items keep internal state jsx render items state retained parent refreshes const delimited props gt const results propsitems let resultslength gt resultssplice return results adding prop nt change outcome current behavior bug please provide steps reproduce possible minimal demo problem first click one toggle buttons click add toggled buttons retain state click use reduce renders buttons using repeat steps time toggle buttons forget state click add expected behavior seems like component getting remounted using updates existing component use loop nt implementations update existing component versions react browser os affected issue work previous versions react react chrome osx high sierra", "num": "13331", "d": "8/2018"}, {"title": "including css cdn react project", "body": "hi trying use react slick project unable import css provides documentation says something like cant dont know people get use kinda importing exactly wrote include styles cdn indexhtml like question including like cdn good bad react project effects react performance even effect react side project build css help webpack", "num": "13330", "d": "8/2018"}, {"title": "shouldcomponentupdate called thissetstate callback", "body": "want request feature report bug bug probably current behavior seems unintuitive fired callback way around callback feels like called immediately state updated actually method called callback fiddle open devtools see console trying say fiddle expected behavior believe callback called shouldcomponentupdate versions react browser os affected issue work previous versions react", "num": "13329", "d": "8/2018"}, {"title": "propschildren slot feature", "body": "feature request thinking need sort slot feature introduced inside propschildren existing feature proposal would allow use specific directive inside children markup let say jsx side would able write instead uniq syntaxe intent open discussion feedback eventual feature thx", "num": "13328", "d": "8/2018"}, {"title": "prop rendering element iif children render", "body": "want request feature report bug feature current behavior every react project worked always sort code looks like looks ugly scalable imagine mycomponent children instead knowledge way achieve intended behavior expected behavior prop nullifempty naming sugestions welcome defaults false specified true render element children looks better scales better keeps probably ocd ease", "num": "13327", "d": "8/2018"}, {"title": "using prototypes classes component src", "body": "browsing curiosity source code component saw actually use prototypes classes accurate missing something make decision", "num": "13326", "d": "8/2018"}, {"title": "event handler support get second param current instance", "body": "event handler support get second param current instance usually write component link follow write link follow babel transform js var component function react component inherits component react component reactcomponent event handler support get current instance second param nt worry write handler strict method compatibility old version", "num": "13324", "d": "8/2018"}, {"title": "error handling", "body": "difficult handle kind error difficult find bug whenever mistake use curly braces instead parenthesis console showing error able find file got error rather shows main building block file", "num": "13322", "d": "8/2018"}, {"title": "feature react behaves bad performance updating huge array", "body": "want request feature report bug feature current behavior bad performance want update small part array method causes method triggered every time update array entire array traversed array gets larger larger react takes resource computer especially cpu cases calling dom method feature react makes lot better performance react way however calling dom method lot react graceful solution come across scenario times example written pseudocode jsx class datalist extends reactcomponent constructor props super props thisstate datasourcelist getdata gt data fetched server piece data assigned variable say thissetstate datasourcelist deepclone thisstatedatasourcelist push newdata render return thisstatedatasourcelistmap v gt return getdatarendermapgetdata method however scenario costs lot cpu resource wrote streaming log component line log printed screen every time websocket receive message server one piece message renders counterpart component sometimes server sends hundreds thousands messages within one second causes method method triggered thousands times accordingly behavior even makes current web page occupy cpu computer got frozen updating process finished order solve issue use web api method mount dom node carrying messages directly dom node steaming log component wrapper solution avoids part complexity n n length array snippet pseudocode jsx class datalist extends reactcomponent getdata gt data fetched server piece data assigned variable say dataitem documentcreateelement div dataiteminnerhtml newdatavalue thiscontainernodeappend dataitem render return append improves behavior greatly always elegant solution possible react way update small part array pushing element array rendered current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example bug probably flaw react architecture expected behavior expected behavior may update array scenario original react api rather directly calling dom node method versions react browser os affected issue work previous versions react present version browser os work previous versions either", "num": "13316", "d": "8/2018"}, {"title": "test", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13315", "d": "8/2018"}, {"title": "profiler durations sometimes incorrect", "body": "working devtools profiler noticed durations sometimes incorrect seems vaguely related highlow priority state updates need track filing issue", "num": "13309", "d": "8/2018"}, {"title": "create form using json data reactjs", "body": "need create form using json data done creating run time textbox showing times need one times textbox select also print times need times anyone help renderform gt return mdmap", "num": "13308", "d": "8/2018"}, {"title": "someone else think hoc poor name", "body": "thought boggles mind like share see anyone feels higher order function function takes another function argument returns third function call hoc takes component returns component component function takes props returns nodeselements props nodes definition hoc take props return nodeselements higherorderwhatever component even define starting lowercase letter nt name pascalcase like actual components nt try use tag names jsx pretty sure hoc component call maybe component factory instead hoc would better name course term hoc widely used name confusing word component misused think", "num": "13307", "d": "8/2018"}, {"title": "umbrella releasing time slicing", "body": "let use track missing time slicing usable internally open source list probably incomplete feel free add initial release mvp core x decide recommended lowhigh pri split pattern x fix respected interactive event handlers reproducible fixture x fix provide workaround issue chain synchronous commits expiration reproducible fixture resuming offscreen api scheduler decide naming flarnie react core team adding support priority flarnie may involve bikeshedding iteration require changes react fiber scheduler add fixture showing using js scheduler react also external js better handle tab backgrounded flarnie improvements polyfill raf integrate dogfood internal fb products see internal task flarnie create final api rendererdependent make depend publish open source flarnie others internally related suspense umbrella", "num": "13306", "d": "8/2018"}, {"title": "warning tag unrecognized browser", "body": "want request feature report bug bug electron users current behavior running jest components containing webview element rendered warning rendered console many tests run output littered warnings current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior warning logged console versions react browser os affected issue work previous versions react react electron unknown worked prior versions react", "num": "13299", "d": "8/2018"}, {"title": "set static variable reactcomponent manage state global variable set context", "body": "import react react export class assigncomponent extends reactcomponent syncsetstate state gt const return new promise function reslove mesetstate state gt reslove mestate assigncomponentreducer import react react import assigncomponent src const actions function dispatch return async function actions dispatch actions export default class testa extends assigncomponent constructor props super props thisstate name xh age height thiscreatestore assger actions function assger action assign switch actiontype case return assign name cxh case b return assign age", "num": "13297", "d": "8/2018"}, {"title": "onclick function fired element used string inside dangerouslysetinnerhtml", "body": "nt know bug report something wrong code onclick anchor happen fire similarly update onclick function immediately invoked function follows code fire even click anchor", "num": "13294", "d": "7/2018"}, {"title": "change config rollupbuildjs set sourcemap ture build error", "body": "sourcemap likely incorrect plugin used transform files nt generate sourcemap transformation consult plugin documentation help", "num": "13292", "d": "7/2018"}, {"title": "object nt support property method remove", "body": "facing following issue react web application debugged code found function dispose settimeout function wrapper settimeout function return wrapperremove unmountdelay throwing error line return wrapperremove unable change code react library hint resolve following problem", "num": "13291", "d": "7/2018"}, {"title": "bug flexbasis style property converts numericvalue pixelsvalue default", "body": "current behaviour output conversion happening even provide output expected behaviour output since valid cssvalue prop", "num": "13290", "d": "7/2018"}, {"title": "phpdesktop autofill onchange event working", "body": "", "num": "13289", "d": "7/2018"}, {"title": "setting rendering mode component reactart", "body": "want request feature report bug feature current behavior canvas mode svg mode used document time expected behavior two components modes used document time currently developers set one rending mode globally reactart using module way use canvas mode svg mode document together hand internally used provides way use modes together directly importing corresponding modules eg svgjs svg mode canvasjs canvas mode lib would like suggest way set rendering mode per instance component new property feature makes canvas mode svg mode used together document like following javascript const surface group shape require reactart class testcomponent extends reactcomponent render return property set works canvas mode compatibility made pr feature show work use check feature fixture pr feel free discuss feature", "num": "13288", "d": "7/2018"}, {"title": "using server side js classes react app", "body": "sensible way include use classes run nodejs server react app tried adding symlink source directory server code attempt directly reference node js files containing classes nodejs server side code uses instead get errors like domainmodel contain export named util guess caused mixing two syntaxes sensible way achieve two code bases single repo nt care difference happy use either tried converting server code files react nt seem recognise honest staggered difficult found share code written language ca nt possibly hard last resort tried yet try using mjs files server symlink individually appear react code base change file extension js crazy", "num": "13287", "d": "7/2018"}, {"title": "discussion synchronous state management async react", "body": "react team put fair amount info upcoming async react concepts including time sliced rendering suspense also contact various state management library teams redux mobx apollo give us early headsup libraries might need change work correctly async react point personally feel like still partial understanding types changes needed quoting discussion dan best understanding problems reactredux faces trying work async react react timeslicing means possible browser events occur slices update work react might half component tree diff calculation done pause let browser handle events something else might happen time like redux action dispatched could cause different parts component tree read different values store known tearing rather components rendering based store contents diff calculation timeslicing react also ability set aside partiallycompleted tree diffs higher priority update occurs middle would fully calculate apply changes higherpriority change like textbox keystroke go back partiallycalculated lowpri diff modify based completed highpri update finish calculating applying lowpri diff words react ability reorder queued updates based priority also start calculating lowpri updates soon queued redux works box dispatch dataloaded action textupdated action data load causes new store state right away ui eventually look right sequence calculating applying updates optimal redux pushed state updates react order came also relevant discussion twitter swyx anything async react absorbs platform tricky parts state mgmt accurately creates priority queue ui interactions pushes async deps whatever cache lib people end using haha guess im eagerly taking granted danabramov yeah best desired experience needs control apply updates version state render lib wants missing although could work getting deoptimized sync mode mweststrate inspiration abstract write complete overview conceptual operations need supported fully support async fork replay changes made forks suffices hints conflicts resolution danabramov paging acdlite currently working make relay work danabramov think main idea either thing meant ui state changes interactions need way route needs provide reducer like data cache case storage fine immutable danabramov third option mutable data cache relay end means deopts sync mode cases sebmarkbage downstream recommendations first principles first principles need able read consistent old versions parent passes data child needs able read version parent passed even changed later sebmarkbage another first principle need able make edits old versions also make edit latest version rebase danabramov would without letting react manage state nt explicitly tell libs time rebase mweststrate would need kind hooks react tells want fork rebase prop phrase deopts sync mode explained brian state updates scheduled componentdidmount componentdidupdate processed synchronously flushed user sees ui update important certain use cases eg positioning tooltip measuring rendered dom element case describing means users application never even see temporary stale value react process new value synchronously yielding might sound like good thing rerender includes lot components slow reason might impact frame rate cause application feel unresponsive referring say createsubscription deopts synchronous rendering mode cases also andrew commented learned work making relay interop async react share soon finally related discussion point would particularly appreciate info exactly constraints normallysynchronous state management lib like redux mobx needs comply order work correctly async react behavior suggestions possible implementations would also extremely beneficial could come demo apps specifically demonstrate problematic interactions async react synchronous state management logic use points reference ensuring new versions libraries work correctly going forward paging gaearon acdlite bvaughn timdorr jimbolla cellog mweststrate peggyrayzis jbaxleyiii thoughts participation", "num": "13286", "d": "7/2018"}, {"title": "question rendering react internal attributes possible browser environment", "body": "option pass reactdomrender order extra dom attributes react uses internally datareactroot serializing dom gives result calling reactdomserverrendertostring thanks", "num": "13283", "d": "7/2018"}, {"title": "failed execute insertbefore node", "body": "want request feature report bug bug shure bug code anything else got next error message client logs nt use library manipulate dom unfortunatly ca nt figure part code throw failed execute insertbefore node node new node inserted child node appreciate advices possible sollution versions react reactdom", "num": "13278", "d": "7/2018"}, {"title": "macbook pro ios simulators nt connect bundler", "body": "want request feature report bug bug current behavior macbook pro installed requirements react native latest xcode node watchman reactnativecli upon running even brand new app get bundle url present error running physical ipad works android emulators current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example complete process expected behavior ios simulators connect metro bundler versions react browser os affected issue work previous versions react react native macos process works macbook pro without issue", "num": "13277", "d": "7/2018"}, {"title": "reactdomserverrendertostaticmarkup fatals nodeenv set production", "body": "want request feature report bug reporting bug current behavior main issue exception get thrown try call reactdomserverrendertostaticmarkup nodeenv set production reactdebugcurrentframegetcurrentstack getstackaddendum typeerror set property getcurrentstack undefined setcurrentdebugstack reactdomserverrendererread objectrendertostaticmarkup objectimportsserverstaticwriterjs webpackrequire rendeconfigfeenvironmenttargetsjsonmoduleexportslocalapi object modulecompile objectmoduleextensionsjs moduleload error command failed node usersalpjordocumentscoderenderendeclientbuildstaticwriterjs checkexecsyncerror objectexecfilesync asyncserieshookeval callasync eval create asyncserieshooklazycompilehook callasync emitrecordserr compileremitrecords emitassetserr hooksafteremitcallasyncerr asyncserieshookeval callasync eval create asyncserieshooklazycompilehook callasync asynclibforeacherr done fsreqwraponcomplete long change nodeenv anything production things work fine prod happens use repo provided reproduce error issue seems stem reactdebugcurrentframe defined production yet reactdomserver tries access nodeenv prod error happens right break reactdomserver renders script run nodeenv prod hack reactdomserverrenderstaticmarkup nt thrown called nodeenv production const newenv objectcreate processenv isproduction newenvnodeenv dev triggering lines staticwriterjs fswritefilesync pathjoin dist indexhtml n reactdomserverrendertostaticmarkup reactcreateelement rendeindex javascript js css css fswritefilesync pathjoin dist manifesthtml n reactdomserverrendertostaticmarkup reactcreateelement rendemanifest see issue chinese seems new react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior would expect able call reactdomserverrendertostaticmarkup nodeenv production work turn react classes html string document versions react browser os affected issue work previous versions react think new", "num": "13276", "d": "7/2018"}, {"title": "conditionally rendered inputs pass values eachother", "body": "want request feature report bug report bug current behavior inputs conditionally swap another input value first field passed newly rendered input seemingly overridden custom prop nt seem though changing affect nothing seems change behavior besides wrapping secondarily rendered input aditional div tag current behavior bug please provide steps reproduce possible minimal demo problem see fix expected behavior newly rendered input completely independent rendered value first input versions react browser os affected issue work previous versions react react version tested previous versions", "num": "13275", "d": "7/2018"}, {"title": "question bind work update state setstate", "body": "tell beforehand know lot questions setstate work stackoverflow read however solve problem believe update state setstate want update cardmodalopen state close modal add bind still work modal opened click card component however setstate cardmodalopen false closemodal function still true even render method called someone please explain wrong code indexjs import react component react import button card image header modal form input semanticuireact class app extends reactcomponent state modaldetailjs import react component react import button card image header modal form input semanticuireact class detailmodal extends component render export default detailmodal", "num": "13273", "d": "7/2018"}, {"title": "add esm build reactis", "body": "want request feature report bug feature current behavior unable import individual modules package expected behavior context issue arose trying make work see pr evidently nt allow importexport esm enable tree shaking capabilities understanding issue following comment tried solving totally failed realised anything esm head creating issue see follows", "num": "13272", "d": "7/2018"}, {"title": "versions reactaddonstestutils appear deleted npm registry", "body": "would like test reactredux react nt possible atm older versions reactaddonstestutils needed enzyme missing npm npm err code npm err found reactaddontestutils versions list among others", "num": "13268", "d": "7/2018"}, {"title": "extend reacttestrenderer inline external css", "body": "currently looking testing jest reacttestrenderer wondering reacttestrenderer could extended make inline external css creating snapshots snapshottestiong components great optionally inlining css snapshottesting would even better", "num": "13266", "d": "7/2018"}, {"title": "constructor call fired try dispatch action navbar component", "body": "want request feature report bug yes current behavior current behavior try dispatch action navbar component route components abc xyz entry constructor call firing results resetting components initial state expected behavior expected behavior dispatch action form navbar component versions react browser os affected issue work previous versions react behavior react versions using google chrome mac os", "num": "13263", "d": "7/2018"}, {"title": "uncaught referenceerror reactdomserver defined", "body": "hello everyone work java web project using react jquery render dynamic web pages wanted use function reactdomserverrendertostaticmarkup element retrieve html nodes related html element receive error uncaught referenceerror reactdomserver defined also searched net find cdn reactdomserver correct error errors occur sample code", "num": "13262", "d": "7/2018"}, {"title": "react classname reconciliation problem classnames updated render despite changing", "body": "want request feature report bug report bug current behavior hi come across looks like bug react reconciliation rendering browser existing version component rendered server appears happen react reactdom tried display behaviour whereas react amp reactdom seem work expected take simple rather contrived component example headerjs javascript import react react export default props gt const classes return propsname server side render like javascript import rendertostring react import header header rendertostring get something like html leonardo later browser javascript import reactdom reactdom import header header const mount documentgetelementbyid themount reactdomrender mount component updates html donatello note class value changed despite driven prop content updated incorrect expected behavior would expect see following render call browser html donatello versions react browser os affected issue work previous versions react replicate multiple versions react reactdom however see expected behaviour", "num": "13260", "d": "7/2018"}, {"title": "void elements contain empty fragments", "body": "want request feature report bug sure possibly either possibly neither think ok current behavior intended current behavior reactdom throws error rendering contains empty fragment child current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior might expected code created fragments instead would return fragment empty work around fixed removed special case returned empty fragments instead worked many cases one think code better distinguish void regular elements requesting change react posting case desired versions react browser os affected issue work previous versions react seems happen well using arrays instead fragments", "num": "13259", "d": "7/2018"}, {"title": "second argument getderivedstatefromprops lifecycle", "body": "earlier find problem react demo second argument gdsfp behaves like nextstate previous issue get answer checked react documentation gdsfp two arguments props state source code makes wonder like prevstate", "num": "13258", "d": "7/2018"}, {"title": "render single react component instead complete application server", "body": "went many articles server side rendering react following common server route renders complete html page div wraps root react component like traditional react code also includes reference bundlejs called browser skeleton loaded view rerenders javascript functionality approach always leads download whole frontend app one go way selectively render react components divs mean say example graph gives graph component table gives table component etc embed react components preexisting webapp response routes smaller components instead whole outer root component know react embedded web apps case client side rendering wondering thing achieved server side rendering thanks", "num": "13257", "d": "7/2018"}, {"title": "bug style undefined setvalueforstyles edge", "body": "current behavior minimal repro viewed issue reproduced react using edge windows tested previous framework browser versions react component rendering generates following errors unable set property width undefined null reference error occurred one react components created app div created app svg created app app edge expected behavior maybe nothing needs change html elements nt valid user error right issue could enough document others bug certainly obvious error message unrelated fact elements using different namespaces fact invalid currently place", "num": "13256", "d": "7/2018"}, {"title": "getderivedstatefromprops lifecycle abnormality", "body": "recently found problem react demo setstate second argument lifecycle prevstate actually like nextstate reactdom version", "num": "13255", "d": "7/2018"}, {"title": "onpaste preventing eventpreventdefault", "body": "hello guys trying prevent user paste value input preventdefault actually working value still pasted field someone help code", "num": "13252", "d": "7/2018"}, {"title": "getting ssr work react context api", "body": "basically module reads client data server side render supposed provide data rendertostring data found client renders would want use global express route server service looks like last least provider problem seems set data function fine use component seems contain nothing contain data passed provider context api worked beautifully need client side seems failing server side reactreactdom originally posted", "num": "13251", "d": "7/2018"}, {"title": "build production without using serviceworker", "body": "due ongoing problems react applications built using createreactapp working packaged versions electron see electronelectron trying find build production versions react application without using service worker possible", "num": "13246", "d": "7/2018"}, {"title": "grid display handle flexible lengths", "body": "looks like react ignores fr grid flexible length attribute middle row fill page top bottom row", "num": "13245", "d": "7/2018"}, {"title": "react script rendering ie", "body": "bfr undefined syntax error", "num": "13243", "d": "7/2018"}, {"title": "react state change try change immuable way calling setstate", "body": "hi got issu code state mutate changing copy immuable way object state could happen changing state immuable way setstate take effect either thak helping", "num": "13239", "d": "7/2018"}, {"title": "using keyboard events impedes media recordings", "body": "want request feature report bug bug current behavior attaching event handler window document body anything else seems fire keyboard events startstop recording recordings trimmed beginning current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codesandbox use web audio api seems hosted app github pages access source code repository steps click start recording say word click play audio file problem using arrow keys use left arrow key start recording say word use right arrow key stop recording play audio file beginning speech trimmed note nt happen every time seems may depend word pronounced french following fake words induce problem nt know word causes problem english expected behavior recordings whether use arrow keys buttons start recording versions react browser os affected issue work previous versions react sample provided version originally face issue project using version working windows chrome", "num": "13238", "d": "7/2018"}, {"title": "single node hydration", "body": "far could see way force hydration node somewhere tree right hydrate react instance chances hydrate specific dom node insert existing react instance much easier case portal", "num": "13229", "d": "7/2018"}, {"title": "rerender child component", "body": "load child send data parent component set state passed backbutton child backbutton child return props back parent clicked parent set state based return data pass back load child component problem couple clicks works fine stops rerendering load child component parent logs shows receiving data backbutton child somehow show logs load parent class app extends component constructor props super props thisstate loaddirs backdirs getload info gt thissetstate loaddirs info goback instruct gt thissetstate backdirs instruct gt consolelog thisstatebackdirs render return backbutton child class backbutton extends component constructor props dirs super props dirs export default backbutton load child", "num": "13228", "d": "7/2018"}, {"title": "using context control user logged true false", "body": "want request feature report bug using context implement user login log feature getting following error current behavior warning context consumer rendered multiple children child nt function context consumer expects single child function pass function make sure trailing leading whitespace around current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior want change slide menu either log log link another page menu also tried using ternary work either menu get word change link versions react browser os affected issue work previous versions react using react react context api noticing though context robust enough control state passing render could straightforward esp documentation see code import react component fragment react import menucss import link reactrouterdom import searchdata searchdatacontext searchdata class menu extends component constructor props super props thisuserauthentication thisuserauthenticationbind export default menu", "num": "13226", "d": "7/2018"}, {"title": "seal prevent extensions pooled events", "body": "going revert reverted confusing see proxies console warning worth debugging impediment future consider sealing preventing extensions pooled events getting rid pooling altogether would breaking change", "num": "13224", "d": "7/2018"}, {"title": "identify different instances react component performance measures", "body": "want request feature report bug feature fiberdebugid also part performance measure label along component namedisplayname distinguishtrack multiple instances react component performance measures please let know way already available achieve", "num": "13223", "d": "7/2018"}, {"title": "select multiple scroll selected item items", "body": "bug react could set value defaultvalue selected element scrolled view react work", "num": "13222", "d": "7/2018"}, {"title": "discuss ssr put render server", "body": "code address hi found react render differently browser server side rendered server side insert code snippet could anybody please tell benefit", "num": "13221", "d": "7/2018"}, {"title": "inline style border bordercolor diff error", "body": "want request feature report bug report bug current behavior alternating inline styles merge white border painted first render black border painted property removed stackblitz example expected behavior going back white border like first render versions react browser os affected issue work previous versions react react macos google chrome safari", "num": "13217", "d": "7/2018"}, {"title": "array checkboxes keys reordered", "body": "want request feature report bug bug current behavior render array checkboxes unique keys reverse button via reverse array rerender using dom nodes reordered test checking checkboxes codesandbox clicking reverse checkboxes uncontrolled keys given react emits usual keys warning expected behavior dom nodes reordered reordered array rendered get expected behavior wrapping array div see codesandbox versions react browser os affected issue work previous versions react tested chrome mac os versions issue", "num": "13214", "d": "7/2018"}, {"title": "errorboundary fails catch error passing props component", "body": "want request feature report bug possibly current behavior currently error boundaries catch error passing props component tl dr paste link jsfiddle codesandbox example created small public repository show current behavior find expected behavior wish catch kind error wrong code anywhere component rendering cycle even passing props wish able control error current repository invalid code obviously wrong could fixed developer dynamic code versions react browser os affected issue work previous versions react react reactdom reactscripts", "num": "13213", "d": "7/2018"}, {"title": "investigate ieedge select rendering bug", "body": "follow issue related change events selects ieedge looks like longer issue visual regression ieedge might avoidable reproduction observation jasonwilliams change mouseup fire microsoft edge nhunzaker although rendering select box weird nt appear expand click need capture gif behavior documentation purposes live thread reproduce test case outside react isolate mechanics involved fix", "num": "13212", "d": "7/2018"}, {"title": "list items unique get rerendered order items changes", "body": "want request feature report bug bug current behavior rendering list items set unique property item element order items changes previous render item elements whose indexes changed rerendered new instance created instead reusing existing instance mapped via key eg rendering list box amp props every update values elements inside array updating order elements nt change every box animates new position however uncomment line shuffles boxes elements retain position previous render animate new positions observe behaviour sandbox sometimes boxes jump new positions always animate current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior regardless order box elements animate new positions since unique property set versions react browser os affected issue work previous versions react react amp chrome macos", "num": "13209", "d": "7/2018"}, {"title": "shouldcomponentupdate difficult override good shouldcomponentupdate method", "body": "want request feature report bug feature current behavior want prevent component rerendering special props changed performance bad android find difficult make prefect iv read official document looks like hard negative comparison iv tried lodash failed method lodash compare dom node propschildren dom node change special props component instance method anyone help", "num": "13207", "d": "7/2018"}, {"title": "umbrella releasing suspense", "body": "let use issue track remaining tasks releasing suspense open source initial release mvp core x api read context within render phase function acdlite hide timedout content instead deleting acdlite automatic injection context providers per react root acdlite remove prefix maybe support synchronous thenables promises resolve render phase complete confirm synchronous thenable throws error handled correctly confirm works clicking several detail links fixture one one eventually causes big placeholder even wait less placeholder delay clicking next one see tweet simple cache provider cache invalidation acdlite subscriptions acdlite decide actual name code splitting x support promise component type x maybe open source test renderer finalize public apis etc tentative plan publish custom matchers major testing frameworks la docs blog post simplecacheprovider unnamed codesplitting library follow ups soft expiration implement api inplace loading indicators nt ancestors make sure way avoid flashing inline spinner fast enough streaming server renderer implement streaming server renderer like one acdlite zeit talk partial hydration related time slicing umbrella", "num": "13206", "d": "7/2018"}, {"title": "longterm support internet explorer", "body": "feature like know current roadmap support internet explorer namely time frame react guarantees ie support yes long best regards thanks answer", "num": "13204", "d": "7/2018"}, {"title": "deep react state context api", "body": "considering total rewrite decentsized application got idea brewing wondering scale changes make planning stage specifically different contexts offer advantage case like provided root consumed far different frequencies words consolidate even though nt interested state terms rendering also though less context concern keeping app state top level cause unnecessary renders guess comes back ageold question redux connectors vs efficiency purecomponents nt think app scale really needs sort optimization redux think use purecomponents key areas speed gains really comes would nice hard data available somewhere consider alternative even rough", "num": "13203", "d": "7/2018"}, {"title": "warning logged error", "body": "warning child array iterator unique key prop expected consolewarn fallback consoleerror", "num": "13202", "d": "7/2018"}, {"title": "use reactdomcreateportal reactdomunmountcomponentatnode memory leak", "body": "want request feature report bug bug current behavior click destroy button page expected become blank check chrome memory see detached element think memory leak expected behavior detached element versions react browser os affected issue work previous versions react react reactdom code like js import react react import reactdom reactdom const app documentgetelementbyid app element class portaltest extends reactcomponent render return reactdomcreateportal test documentbody class portalapp extends reactcomponent render return hello reactdomrender app", "num": "13191", "d": "7/2018"}, {"title": "consoleerror throws reporting error react enter invalid internal state", "body": "want request feature report bug bug current behavior exceeds update count throws invariant update leaving dirty state fixed pr yet released interest concern began explore concerns around whether reactdom fiber really maintaining state fact left dirty least error cases indeed concern considered community might fixed ca nt imagine state value could issues current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example created repo demonstrates concern observe test failures componentone indeed poorly written componenttwo quite simple ok skipping componentone componenttwo passing expected behavior fail example versions react browser os affected issue work previous versions react unclear", "num": "13188", "d": "7/2018"}, {"title": "meant within readme async limitations clarified", "body": "meant within readmemd createsubscription async limitations full compatibility asynchronous rendering including timeslicing react suspense suggested longer term solution move one patterns described previous section patterns described reduxflux stores use context api instead io subscriptions eg notifications update infrequently use simplecacheprovider instead complex libraries like relayapollo manage subscriptions manually techniques library uses hood referenced way optimized library usage nt think suit use case high performance websocket stream produces price quotes rendered directly components application domain realtime trading application investment bank consulting ideally want price quotes passed straight component little ceremony possible state transient nt see need use kind state management solution store somewhere nt think need use pass data tree since import service wherever want code pass callbacks begin receiving data latter seems simpler less ceremony make easier differentiate different streams price updates seems exactly need however comment async limitations worries something missing could clarified readme priority think ideally wish price updates treated high priority would prefer decrease likelihood clients interacting stale data", "num": "13186", "d": "7/2018"}, {"title": "h", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13185", "d": "7/2018"}, {"title": "test", "body": "test closed", "num": "13184", "d": "7/2018"}, {"title": "hydrate injects content wrong node", "body": "want request feature report bug bug current behavior calling hydrate component injects content wrong dom node current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior expect hydrate correctly hydrate component inject incorrect html versions react browser os affected issue work previous versions react react reactdom chrome browser", "num": "13183", "d": "7/2018"}, {"title": "test fails render method arrow function", "body": "versions getting running test component nt using arrow function render method fails import react component react import text reactnative import shallowrenderer reacttestrenderershallow class testcomponent extends component render return hello describe consultmessages gt let props let renderer const render gt renderer renderer new shallowrenderer rendererrender return renderer passes import react component react import text reactnative import shallowrenderer reacttestrenderershallow class testcomponent extends component render gt hello describe consultmessages gt let props let renderer const render gt renderer renderer new shallowrenderer rendererrender return renderer reproducible repo link", "num": "13182", "d": "7/2018"}, {"title": "safari yell using createref createelement consolelog refcurrent", "body": "want request feature report bug safari strange behavior current behavior please see minimum example using safari javascript import render reactdom import react component react class app extends component constructor props super props thisref reactcreateref componentdidmount consolelog thisrefcurrent render return render documentgetelementbyid root safari yell react reactdom reactscripts", "num": "13179", "d": "7/2018"}, {"title": "reactdomrender context api warning detected multiple renderers concurrently rendering context provider", "body": "want request feature report bug bug assume current behavior steps reproduce behavior see readme get rid error expected behavior warning guess versions react browser os affected issue work previous versions react node npm yarn react reactdom reacttestrenderer", "num": "13177", "d": "7/2018"}, {"title": "needless checkbox warning using onclick instead onchange", "body": "want request feature report bug minor bug current behavior using checkbox get following warning failed prop type provided prop form field without handler render readonly field field mutable use otherwise set either checkbox works well actually better solution according expected behavior warning set versions react browser os affected issue work previous versions react react thanks good software", "num": "13171", "d": "7/2018"}, {"title": "svg tag leads uncaught typeerror", "body": "coderpad replicates issue take peek console runs outputs errors replicate versions tried also popped tag ancient version found coderpad template threw error well", "num": "13170", "d": "7/2018"}, {"title": "defaultchecked checked", "body": "sorry english soso code js import react react const const b const arr class checky extends reactcomponent render return class home extends reactcomponent state arr render return arrmap item index gt return export default home online demo use attr change home state ca nt change input checked input element readonly use attr change input checked ca nt change home state rerender working want working", "num": "13167", "d": "7/2018"}, {"title": "microdata html attributes camelcase server render", "body": "want request feature report bug bug current behavior reactdom render methods rendertostaticmarkup rendertostring etc generate camelcase microdata attributes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior microdata attributes rendered lowercase etc versions react browser os affected issue work previous versions react related google structured data testing tool recognizes camelcase props index structured data disappeared switching lowercase camelcase appease linter definitely google problem react one easily solved calling react renderers switched back lowercase attributes today see resolves issue google", "num": "13162", "d": "7/2018"}, {"title": "dom elements divs incorrect properties componentdidmount", "body": "need render list items inside flexbox column every item div arbitrary height list items huge tactics render initially one item check available space save refs parent div item div access clientheight offsetheight properties free space add one item rerender whole thing process repeated whole column filled problem try immediately calculate available space componendidmount got incorrect value child div offsettop ie following method work add small pause works method componentdidupdate works excellently without delays seems like rendering parallel going componentdidmount invoked refs could incompleteincorrect process finished reference typescript private calcvisiblecount const nlpdialog thisprops const showfrom showto recalc thisstate public render const nlpdialog thisprops thisshownitems return iwho itext gt thissetstate text etargetvalue", "num": "13154", "d": "7/2018"}, {"title": "enzyme context api warning detected multiple renderers concurrently rendering context provider", "body": "want request feature report bug bug guess current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example steps reproduce behavior expected behavior warning versions react browser os affected issue work previous versions react react browser affected error nodejs open issue happens enzyme code unreleased copypasted master looking advice clue fix would able create pr enzyme repo react repo case thank", "num": "13150", "d": "7/2018"}, {"title": "changes warning infrastructure", "body": "posting keep forgetting order wanted x fix pr figure always stack warning x yes checked kind x start passing x start enforcing tests x separate usage code outside interpreter isomorphic events setstateforceupdate x nt detect lack printable stack complete lack stack x figure edge case means thanks pastme adding comment x append stack automatically remove append hand x clean tree hook current frame current fiber setup confusing associate strict mode warnings strictmode fibers specifically pass component stack strictness richer format", "num": "13149", "d": "7/2018"}, {"title": "better feature detection devtools profiler plugin", "body": "regarding experimental api pr changed behavior react profiling builds opt host roots react devtools extension detected necessary order accurate tree base time measurements visual flame graphs profiler plugin devtools feature detection determine enabled looking root seeing fibers contain attribute problem attribute present fibers predate pr result profiler ui may enable versions react work correctly perhaps easy solution would rename one fiber attributes prior next minor release eg change devtools profiler feature check using new name instead", "num": "13148", "d": "7/2018"}, {"title": "npm run build failed", "body": "hi react application running fine npm start try create build prod deployment taking long prepare build finally error thrown tried options install node modules cleared cache new install also tried updating npm latest version running application form fresh folder new npm installations nothing seems helpful resolve issue kind stuck kind help suggestions really helpful appreciated error reported fatal error callandretrylast allocation failed javascript heap memory complete error details lightbootstrapdashboardproreact build e santoshremitrixwebuiremitrixdatta npm run buildcss amp amp reactscripts build lightbootstrapdashboardproreact buildcss e santoshremitrixwebuiremitrixdatta nodesasschokidar includepath src includepath nodemodules src src wrote css files e santoshremitrixwebuiremitrixdattasrc creating optimized production build lt last gcs ms marksweep mb ms last resort gc old space requested lt js stacktrace js stack trace security context anonymous aka anonymous optimize compres fatal error callandretrylast allocation failed javascript heap memory nodemoduleregister internal fatalprocessoutofmemory internal fatalprocessoutofmemory internal factory newcoderaw internal factory newcode internal modulo internal compiler controlflowoptimizer trybuildswitch internal zonevector zonevector internal compiler pipeline allocateregistersfortesting internal compiler valuenumberingreducer operator internal compilationjob finalizejob internal compiler instructionselector isolate internal compiler finalizecompilationjob internal optimizingcompiledispatcher installoptimizedfunctions internal stackguard handleinterrupts internal wasm wasmopcodes trapreasonmessage npm err code elifecycle npm err errno npm err lightbootstrapdashboardproreact build npm err exit status npm err npm err failed lightbootstrapdashboardproreact build script npm err probably problem npm likely additional logging output npm err complete log run found npm err absolute", "num": "13147", "d": "7/2018"}, {"title": "add debug info conflicted component keys", "body": "want request feature report bug feature current behavior iteration components conflicted console report useless knodwing conflicted components remove iteration components expression one one locate problem expected behavior warning message contains extract components keys versions react browser os affected issue work previous versions react react", "num": "13146", "d": "7/2018"}, {"title": "global event handlers documentbody", "body": "related need implement global keyboard handler currently onkeydown handler maincomponent fills whole page however default tag focus therefore handler maincomponent see keyevents thinking adding onkeydown handler document case would add handler native events would however like use handler react synthetic events searching web shows many people issue find real solutions far see currently solutions add handler maincomponent make sure maincomponent gets focus instead tag problem need make sure time maincomponent gets focused add hander document handles native events however seem problems stoppropagation preventdefault called native events relation react already good solution anything planned", "num": "13142", "d": "7/2018"}, {"title": "reacttestrenderer shallow sfcs get", "body": "want request feature report bug bug current behavior addresses bug line invokes sfc value believe needed createreactclass components needs separate branch sfcs expected behavior inside strictmode sfc element versions react browser os affected issue work previous versions react react bug exists bug ideally fixed understand highly unlikely would backported lines wrap around reliable way versions distinguish sfcs createreactclass components", "num": "13141", "d": "7/2018"}, {"title": "make use new react context api ssr", "body": "hello everyone running small project gatsbyjs using redux manage shared state values multiple components across react dom tree release new context api thinking replacing redux bit overkill project made tests working really fine runtime however build project via serverside rendering context seems made lot searches web issue much informations probably young age issue think related nextjs static website generator aswell nt solution neither gt new context api compatible ssr resources examples", "num": "13138", "d": "7/2018"}, {"title": "update state child component parent component", "body": "hey issue library nt worry facing issue cant seem solve life trying get assistance problem community form submit uses fetch api post works woo however add additional contacts want update state contactjs child component tired everything know far learning react struggling get simple task done adding contacts current build addcontact event gt know need thissetstate nt know set child states method used add contacts appjs project link sorry posted wrong place cant seem post stack overflow due formatting issues cheers advance", "num": "13137", "d": "7/2018"}, {"title": "server side rendering parameter state string containing rendered page broken", "body": "server side rendering state parameter string inside got broken page page piace state object string", "num": "13136", "d": "7/2018"}, {"title": "select html element event target type selectone", "body": "current behavior event target type selectone intended naming convention expected behavior html type convention whenever possible html good follow convention like xaml gtk others really familiar gui ecosystem history good constructive opinion one library work better convention better every library perfect convention specification versions react browser os affected issue work previous versions react demo code codesandbox", "num": "13135", "d": "7/2018"}, {"title": "history props push work", "body": "actually using reactrouterdom try use thispropshistorypush error read property push undefined currently reactrouterdom nt support method kind regards", "num": "13134", "d": "7/2018"}, {"title": "add helpful message passing element createelement type", "body": "nt currently give distinguishable message easily detect checking case suggest something concrete eg accidentally export jsx instead component", "num": "13130", "d": "6/2018"}, {"title": "update reactprovider without rerendering entire tree", "body": "possible update react provider without rerendering entire tree consumer", "num": "13128", "d": "6/2018"}, {"title": "static variable declaration node module", "body": "made custom component declare static variable working fine publish publish package given error error nodemodulesreactjsvalidatorsrcinputsletterinputjs module parse failed unexpected token may need appropriate loader handle file type valid data import valid letter alphanumeric email customrx numeric required dummy function import react component react export class numberinput extends component constructor props super props thisstate input errorstatus errormsg false static return false numeric e isnan etargetvalue numberinputreturn false thissetstate errorstatus true errormsg please enter number react version react", "num": "13122", "d": "6/2018"}, {"title": "tic tac toe sample code bug", "body": "want request feature report bug bug current behavior following tutorial final result code pen start game click example times first field first row continue without creating winning row finish game two fields remaining unfilled game end without winner expected behavior either say max moves false moves count give warning like left moves one able complete game versions react browser os affected issue work previous versions react react reactdom reactscripts", "num": "13119", "d": "6/2018"}, {"title": "react npm aws codebuild", "body": "want request feature report bug bug npm deployment current behavior build started failing today since think react starting moving npm packages think maybe fine something causing install builds stable months current behavior bug please provide steps reproduce possible minimal demo problem add packagejson react reproduce using node boron docker container ca nt even get react install locally ubuntu anymore expected behavior intstall aws codebuild tried forcing npm cache clean versions react browser os affected issue work previous versions react seems broken", "num": "13118", "d": "6/2018"}, {"title": "component constructor called multiple times using cloneelement", "body": "want request feature report bug bug current behavior component constructor called multiple times using reactcloneelement clicking button changes components rendered withconstructor element displayed shows many times constructor called clicking button repeatedly causes constructor called every time component displayed however change line click button component constructor called expected behavior component constructor called component created versions react browser os affected issue work previous versions react happening browsers react unsure worked previous versions", "num": "13116", "d": "6/2018"}, {"title": "onmouseleave false triggering using svg", "body": "want request feature report bug bug current behavior see example onmouseleave parent element get triggered every time hover svg get element render probably lower works expected browsers regular inside svg also native event work expected see expample identify bug react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior trigger onmouseleave mouse nt leave parent element versions react browser os affected issue work previous versions react tested react", "num": "13115", "d": "6/2018"}, {"title": "moving react portal touchstart swallows future touch events", "body": "want request feature report bug bug current behavior move component react portal response events swallowed rest interaction current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example either need touch device enable touch sensors browser see steps add listener component response move component portal touchmove events touchend events blocked rest touch interaction component already component touchstart event events emitted correctly also created vanilla js example portal implementation moves element portal touch start correctly allowing touch touchmove touchend events expected behavior touchmove touchend events published versions react browser os affected issue work previous versions react reproduced bug firefox chrome react version tested", "num": "13113", "d": "6/2018"}, {"title": "warn setstate function nt return", "body": "want request feature report bug proposing adding warning development current behavior valid javascript meaningless react eslint nolabel helps catch probably one better building warning devmode react sandbox demo expected behavior warn function applied setstate returns undefined user wants indicate nothing changed return null", "num": "13111", "d": "6/2018"}, {"title": "get size widthheight element using ref", "body": "want request feature report bug current behavior trying get element height using ref always getting current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior getting element height versions react browser os affected issue work previous versions react react mac os yandex browser code element reactcreateref componentdidmount consolelog thiselementcurrentclientheight render const children thisprops", "num": "13108", "d": "6/2018"}, {"title": "missing property packagejson file", "body": "want request feature report bug neither feature bug report maybe invalid behaviour current behavior current packagejson file property according npm docs required expected behavior unless global configuration chance missing added versions react browser os affected issue work previous versions react latest version", "num": "13107", "d": "6/2018"}, {"title": "react nested input wrong index errors update", "body": "create nested attribute nested form react backend rails json test rails work fine create action work fine problem update edit product found errors frontend rails used react problem data params json index right update product getting double nested attribute find id existing nested item product productspecificationsattributes id product productspecificationsattributes destroy product productspecificationsattributes title product productspecificationsattributes title specificationtitle action action second use code work fine action attributesparams update getting double problem update product empty value nested attriubtes render json error index index right input field start index product productspecificationsattributes id product productspecificationsattributes destroy product productspecificationsattributes id product productspecificationsattributes title product productspecificationsattributes title specificationtitle u change value parent field without json action frontend action getting right error index must change parent field value first get right index errors anybody help issue problem use react redux handle form", "num": "13106", "d": "6/2018"}, {"title": "add support synthetickeyboardevent iscomposing", "body": "want request feature report bug bug current behavior synthetic keyboard events contain value true per spec expected behavior synthetickeyboardevent iscomposing true keydown even fired compositionstart compositionend versions react browser os affected issue work previous versions react versions least", "num": "13104", "d": "6/2018"}, {"title": "react fiber released yet use create demo", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13103", "d": "6/2018"}, {"title": "replacement onchange fire event choose selected option select", "body": "event instead onchange use listening option selected need change state every time select changes even selected option selected use onchange select fires unselected option selected understand logical behavior looking another event unfortunately onclick option nt work pure demo playing around demo try select selected option nothing changed pieces code better understanding jsx handleselectchange e side gt const state thisstate", "num": "13101", "d": "6/2018"}, {"title": "navigating legacy php page outside react inside domain react app", "body": "components route using react router dom deploying application existing php application created links inside application point domain path external php application lives link clicked navigation takes user page obviously still inside react application would assume able navigate outside react application even though domain assume react removing ability bug version react reactrouterdom test case deploying react application part existing website cases need navigate users outside react application keep inside domain example using react router dom app try login steps reproduce create react project create link navigates component react application make link navigates php page outside react application domain expected behavior link navigate correct page inside react application actual behavior app navigates blank react page showing header footer words leave react application", "num": "13099", "d": "6/2018"}, {"title": "add support hydrating portals", "body": "want request feature report bug probably bug arguably feature request suppose current behavior attempted best effort fiddle shows particular issue obviously server side rendering impossible via jsfiddle markup equivalent rendered div id server side render seen fiddle attempt reactdomhydrate portal results additionally failing hydrate react renders component appends resulting duplicated section dom expected behavior ideal world calling hydrate component portals would allow dom containers hydrate components rendered versions react browser os affected issue work previous versions react tested confirmed behavior chrome firefox given really looking edge case doubt worked previously edgecasey nonsense currently using multiple react roots pages portions pages rendered react yet serverside rendered like able hydrate single react root page share contexts without difficulty without repeating context components memory cases good number roots perhaps searching found potentially related bugs seemed like really nt line hopefully valid use case thanks", "num": "13097", "d": "6/2018"}, {"title": "reactdomcreateportal issue portal used new window ie errors calling windowgetcomputedstyle", "body": "want request feature report bug bug current behavior used container new window calling called dom node found container thrown ie seems work fine chrome firefox ie running version throws error issue seen following codesandbox expected behavior calling element portal located new window work ie like browsers versions react browser os affected issue work previous versions react see issue reactreactdom ie running virtualbox mac", "num": "13096", "d": "6/2018"}, {"title": "uninstall lodash project", "body": "hi guys use createreactapp create project run eject noticed install lodash uninstall npm start failed following message note use lodash import lodash codes error find module lodash functionmoduleresolvefilename functionmoduleload modulerequire require object c home path testwebnodemodules modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload react version lodash", "num": "13095", "d": "6/2018"}, {"title": "specify key portal element", "body": "want request feature report bug either reporting oversight documentation feature already implemented documented would bug request supported way adding keys portal elements would feature current behavior ca nt see existing way add key portal element least using officially documented means means reconciler somewhat crippled rerendering component emits multiple portals bad things eg render portals b c remove b rerender emits c react ends tearing original c component instance trees creating new ones way hint reconciler new c sufficiently unfamiliar implementation logic nt understand knows unchanged suspect missing something able specify hints portals would enable react avoid recreating c instances example current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codesandbox demonstrates without keys portals suffer expected reconciliation issues disappear interestingly see currently undocumented third parameter allow key specified using fixes problem also demonstrated codesandbox mentioned portal documentation omission documentation deliberately hidden unsupported feature right assume latter expected behavior would supported way adding keys portal elements versions react browser os affected issue work previous versions react react", "num": "13094", "d": "6/2018"}, {"title": "flowtype definition style property", "body": "possible add flowtype support property example type would warn use found party definition would great official support", "num": "13093", "d": "6/2018"}, {"title": "reacttimeout inside hidden element", "body": "want request feature report bug bug current behavior using inside element react keeps rendering children every tick promise resolved minimal demo look console repo expected behavior render called times change works expected versions react browser os affected issue work previous versions react tested chrome version official build react built commit june flag jsx let done false let promise null const waitfor text gt consolelog waitfor done return text promise promise new promise resolve gt settimeout gt done true resolve throw promise const asynctext text gt waitfor text const app gt loading reactdomrender documentgetelementbyid root", "num": "13089", "d": "6/2018"}, {"title": "node rerenders due new context api update siblings rerender", "body": "want request feature report bug bug current behavior nodes use new context api force siblings nodes rerender expected behavior siblings rererender node updates due context updates versions react browser os affected issue work previous versions react background use reactnative reactnavigation uses new contextapi hoc wraps component context consumer example get unexpected rerenders const somethingthathasnavigation withnavigationfocus class extends reactcomponent render rerender whenever navigation changes fine value context return null const shouldnotrerender class extends reactcomponent render consolelog rerender sibiling updates return null const test class extends reactpurecomponent render consolelog test renders return wrong design", "num": "13086", "d": "6/2018"}, {"title": "means determining component order hierarchy", "body": "apologise raising issue intending annoying disrespectful previous issue closed suggestion believe mitigate feature request simply aware take hint go away bit backlog hang missed assuming latter beg forgiveness case want go away thanks trying build container component child component whereby children sit anywhere hierarchy beneath container know relative orderindex within hierarchy usecase build helper wrapper css grids allowing subcomponents render row component knows must next index may may progress row counter next row component found order looked two possible avenues recursing using reactchildren component stops hits component without propschildren eg reduxconnect ed one passing means counting via context fails seems render methods child components nt always called dom order background would great feature react might allow aweary previously suggested context could nesting however raised thought would give indication recursion depth relative position", "num": "13084", "d": "6/2018"}, {"title": "vuejs stars wake boiis let move vue", "body": "", "num": "13083", "d": "6/2018"}, {"title": "context api prop name", "body": "want request feature report bug bug current behavior happen use value name pass prop child components value example snippet example component context provider import react react import examplecomponenttwo examplecomponenttwo import examplecontext examplecontext class examplecomponentone extends reactcomponent constructor props super props export default examplecomponentone import react react import examplecontext examplecontext class examplecomponenttwo extends reactcomponent constructor props super props export default examplecomponenttwo import react react const examplecontext reactcreatecontext export default examplecontext expected behavior unless keyword behave prop name example defined react docs context api example details chrome version official build os mac os high sierra react", "num": "13081", "d": "6/2018"}, {"title": "sompongkarnsanga gmailcom", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "13079", "d": "6/2018"}, {"title": "new warning encountered two children key adding state item", "body": "want request feature report bug bug current behavior add item state file app crashes error message keeps showing web browser google chrome crashes remove state related components app behaves normally know people experienced error described think might new bug code explain code minimal way remove notice component app nt crash see key different since data mongodb unique code attached files listtxt listitemtxt maintxt matchitemtxt progresstxt since pause error messages took screen shot expected behavior app crash versions react browser os affected issue work previous versions react react google chrome version official build osx previous version react unknown", "num": "13074", "d": "6/2018"}, {"title": "error possiblepluginextractevents function", "body": "want request feature report bug want report bug current behavior arrayprototypepush get error trigger element event current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior element event trigger normally versions react browser os affected issue work previous versions react nt known reason file use suggest add parameter check", "num": "13073", "d": "6/2018"}, {"title": "map render working", "body": "hi hava ideia map render consolelog working return thisstateofficehoursmap value index gt consolelog value valuedescription return", "num": "13070", "d": "6/2018"}, {"title": "react busy idle", "body": "using react ui layer webgl projects see example concern reactreactdom might stuff unexpectedly due new improvement take advantage idle time react anything called", "num": "13068", "d": "6/2018"}, {"title": "ca nt edit wiki page", "body": "want request feature report bug bug wiki page current behavior edit wiki page permission given go click link expected behavior gives way edit wiki make pull request", "num": "13067", "d": "6/2018"}, {"title": "text input doubled new character japanese language", "body": "want request feature report bug bug current behavior happens safari macos hiragana katakana keyboard layout text entered textarea new character whole current text plus new character appended text example enter value textarea example", "num": "13066", "d": "6/2018"}, {"title": "caret goes end controlled input calling checkvalidity method", "body": "want request feature report bug bug current behavior case form uses controlled inputs checkvalidity method called every change user tries fix text position inside input form invalid caret goes end immediately typing one symbol caret behaves similarly checkvalidity method called invalid input fine form valid current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example expected behavior caret saves position user input forminput state valid versions react browser os affected issue work previous versions react tested react chrome firefox ubuntu react nt bug behaves expected bug easily reproduced", "num": "13065", "d": "6/2018"}, {"title": "error creating new application", "body": "trying get started react run run get error", "num": "13064", "d": "6/2018"}, {"title": "minor constructor name syntheticevent subclasses", "body": "risibly minor issue wanted bring case super easy fix older versions react synthetic events would report constructor class name right reports generic due way syntheticevent extended process bringing small tool date upgraded react react get lots logs workaround assume class subclass syntheticevent would nice precise name", "num": "13063", "d": "6/2018"}, {"title": "textarea rerendering get new value", "body": "want request feature report bug bug current behavior textarea nt update getting new value eg state updates input update span update ca nt see changes textarea js fiddle expected behavior textarea render updated value versions react browser os affected issue work previous versions react react firefox chrome bits mac os high sierra", "num": "13062", "d": "6/2018"}, {"title": "input", "body": "", "num": "13061", "d": "6/2018"}, {"title": "functional components behave like reactcomponent reactpurecomponent", "body": "want request feature report bug sure current behavior docs say functional component behavior reactcomponent nt behavior reactpurecomponent expected behavior impression functional component already behavior reactpurecomponent case docs updated case one two things happen functional components behavior reactpurecomponent docs recommend using reactpurecomponent instead functional components since performance would better suppose understand functional component could pure unless sort antipattern versions react browser os affected issue work previous versions react", "num": "13060", "d": "6/2018"}, {"title": "really like vue solution css similar one like react", "body": "want request feature report bug feature expected behavior really like vue solution css similar one like react js appjs import scoped scopedcss import style appcss const app gt welcome react get started appcss app header intro css apply elements current component parent component styles leak child components", "num": "13059", "d": "6/2018"}, {"title": "prop circular reference set state mutates prop", "body": "want request feature report bug bug maybe current behavior pass prop circular references set state changing state mutate prop current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reproduce pass tree circular references prop component set state variable manipulate state variable turn manipulate prop expected behavior believe props supposed immutable versions react browser os affected issue work previous versions react", "num": "13057", "d": "6/2018"}, {"title": "react property createcontext exist type typeof react", "body": "hello kinda new react trying delve bit contexts however aforementioned method refuses exist import react react export const urleditcontext reactcreatecontext new urlviewitem really code got happens react react libraries reactdom reacthotloader came project created visual studio reactrouterdom typescript version anyone idea would receive aforementioned error google literally yes literally nothing topic thanks huggy", "num": "13053", "d": "6/2018"}, {"title": "children updating expected", "body": "want request feature report bug really sure whether really bug maybe react team could examine whether following demo behaves intended current behavior please check following demo outputs current time two times first time output updated second second nt note please aware short abstract demo show issue line code possible implementing clocks proper state handling proper side effect handling setstate vs forceupdate react design patterns general etc nobody wants implement components extremely ugly way demo show issue without stuff expected behavior would expect second time output also updated second second line jsfiddle demo easily switch ui library react preact inferno dio nerv see behave way would expected versions react browser os affected issue work previous versions react react windows react behaves like current react version", "num": "13052", "d": "6/2018"}, {"title": "use getderivedstatefromprops cause thisprops update render componentdidupdate", "body": "bug use getderivedstatefromprops cause thisprops update render componentdidupdate current behavior use static getderivedstatefromprops thisprops wo nt update render componentdidupdate use componentwillreceiveprops thisprops update render componentdidupdate expected behavior use static getderivedstatefromprops thisprops also update render componentdidupdate versions react browser os affected issue work previous versions react react react chrome", "num": "13051", "d": "6/2018"}, {"title": "getderivedstatefromprops shoud renamed getstatefromprops", "body": "thanks clarification reading truely thought called component rerendered parent easy misunderstand also executed name named addition exist getstatefromprops called every time component rendered regardless cause update getderivedstatefromprops called component rerendered parent", "num": "13050", "d": "6/2018"}, {"title": "native fibers", "body": "native fibers code react dramaticaly simplified suspense api less limitations performance could support promote fibers proposal need champion", "num": "13049", "d": "6/2018"}, {"title": "expose createportal reactreconciler", "body": "want request feature report bug feature current behavior available shared private package symbol also shared package means renderer wishing allow portals needs react codebase current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example na expected behavior possibility creating portals custom renderers exposed renderer developers making available versions react browser os affected issue work previous versions react chrome windows nonpublic reconciler never worked react version write corresponding patch maintainers ok change", "num": "13048", "d": "6/2018"}, {"title": "error entering proptypes documentation", "body": "want request feature report bug report bug current behavior whenever enter link get redirected page expected behavior route works expected suffix versions react browser os affected issue work previous versions react joining actual webpage computer firefox macos high sierra", "num": "13047", "d": "6/2018"}, {"title": "react unmount entire tree uncaught errors", "body": "want request feature report bug feature request current behavior whole app unmounts uncaught errors expected behavior good unmount affected tree versions react browser os affected issue work previous versions react react hi guys feel like new error handling approach react harsh app plenty plugin entrypoints external react components consider error prone errorboundary solution prefer affected component tree unmounted case components even internal components spits error way achieve new error handling system would behavior could optin defined component tree something like class variable flag component threw error rerender whole tree render flagged components effect would like default wrapping every component tree boundary spits instead crashing whole app think", "num": "13045", "d": "6/2018"}, {"title": "allow portals used reparenting", "body": "want request feature report bug feature current behavior reparenting unsolved issues react dom far possible hack around missing support relying unstable api render update subtree inside different container important note api using react diffing algorithm similar possible keep components mounted js reactdomrender container wo nt get unmounted mounted reactdomrender container reactdomunstablerendersubtreeintocontainer parentcomponent container also wo nt get unmounted mounted matter change parentcomponent thus call different parent reactdomunstablerendersubtreeintocontainer parentcomponent container however unstable api going deprecated soon recent features like introduction new context api introduced additional issues alternative unstable api introduced however api unsuitable reparenting issue since always create new mount point inside instead applying diffing called different parent check codesandbox calling portal different portal cause new uuid reason want multiple portals able render inside makes perfect sense common use cases like popovers etc going remove suggest find way portal specific node instead appending diff contents instead implement solution although seems complicated similar", "num": "13044", "d": "6/2018"}, {"title": "element property reset reconciled", "body": "want request feature report bug inclined believe bug may rationale behind expected behaviour current behavior component sets value underlying element via ref component child another component given stable key value reset reconciled example table horizontally scrollable rows custom scrollbars scroll offset maintained via ref using scrollleft property table also sortable sort table rows properly reconciled render methods called row yet scrollleft value reset row remove key row works expected simple case reproducing behaviour expected behavior would expected properties set ref would maintained reconciliation process versions react browser os affected issue work previous versions react version react also behaviour", "num": "13042", "d": "6/2018"}, {"title": "key event sent ipad bluetooth keyboard", "body": "demo using fiddle focusing sending key events correctly logs ekey device aside ipad however connecting ipad bluetooth keyboard debugging key events seem make correctly arrow keys everything else comes dead note using fiddle key events appear correct ipad version react ipad browser safari", "num": "13040", "d": "6/2018"}, {"title": "child component constructor called multiple time", "body": "child component constructor called multiple times changing state rerendering force updating forceupdating anywhere upgrade react happening", "num": "13039", "d": "6/2018"}, {"title": "source includes require reactdom reactdom included packagejson", "body": "reactdomcjsreactdomtestutilsdevelopmentjs line require reactdom reactdom dependency list packagejson line reactdomcjsreactdomtestutilsdevelopmentjs var reactdom require reactdom normally would probably result problems build environment crash problem problem reactdom", "num": "13038", "d": "6/2018"}, {"title": "calling static methods inside getderivedstatefromprops", "body": "playing new way sync props amp state found strange behaviour want call another static method need use component name rather undefined according mdn calling static methods another static method fine maybe expected flow guess note docs fine playground reproduce case", "num": "13037", "d": "6/2018"}, {"title": "add way compare relative positions deep children", "body": "hey seems like currently way take two mounted component instances tell one coming earlier application structure could mounted asynchronously tracking instantiationrendermount time enough ideologically traverse application tree understandable though relative positions needed sometimes use case track focusable elements application using context focusable element reports existence focus manager provided context needed able limit focusablilityaccessibility elements outside currently shown modal dialogpopup focus trapped inside sake better accessibility need automatically focus first focusable modal dialog keyboard navigation mode references focusable elements inside dialog tell one comes first using public react api web workaround finddomnode comparedocumentposition nt work react native something similar comparedocumentposition react component instances thanks", "num": "13036", "d": "6/2018"}, {"title": "styling affect react way rerendering", "body": "dynamic data changes browser rerenders spans dynamic data changes browser rerenders second span spans displayed flex read react diff algorithm supposed recurse chilren making changes changed dom elements first image spans rerender", "num": "13035", "d": "6/2018"}, {"title": "means determining component order hierarchy", "body": "trying build container component child component whereby children sit anywhere hierarchy beneath container know relative orderindex within hierarchy usecase build helper wrapper css grids allowing subcomponents render row component knows must next index may may progress row counter next row component found order looked two possible avenues recursing using component stops hits component without eg redux ed one passing means counting via context fails seems methods child components nt always called dom order background would great feature react might allow", "num": "13034", "d": "6/2018"}, {"title": "fabric", "body": "found issue mentioned fabric difference fabric fiber", "num": "13032", "d": "6/2018"}, {"title": "share ref multiple ref handlers", "body": "react able proxy element ref multiple listeners example grab hold element internal purposes also expose publicly like jsx class mycomponent extends component attachref el gt thisbuttonel el thispropsbuttonref el something render return react complicated ref prop function object jsx class mycomponent extends component buttonref reactcreateref attachref el gt thisbuttonrefcurrent el something render return first right approach typescript types say prevents us assigning nt readonly", "num": "13029", "d": "6/2018"}, {"title": "shallow renderer handling getderivedstatefromprops properly", "body": "want request feature report bug bug current behavior using enzyme called older version state current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsx import shallow enzyme class demo extends component static getderivedstatefromprops props state return value statevalue state value old render return const wrapper shallow wrappersetstate value new assert wrapperstate value new throws nt standalone demo tracked problem method inside called called might related change called expected behavior versions react browser os affected issue work previous versions react reacttestrenderer enzyme", "num": "13027", "d": "6/2018"}, {"title": "suggest return", "body": "building function return disposal function common usage lot api example suggest return javascript export class xx extends reactcomponent componentdidmount let timeoutid settimeout otherwise must augment scope instance member code javascript export class xx extends reactcomponent componentdidmount thistimeoutid settimeout", "num": "13026", "d": "6/2018"}, {"title": "react props unable access key object array index passed props", "body": "working react project trying access key object element array using index getting undefined issue seems getting array objects props index props well try access id publicid objects array using index props get error simplified version getting happening resolve consolelog thispropsimages id publicid id publicid consolelog thispropsimageindex consolelog thispropsimages publicid consolelog thispropsimages thispropsimageindex id publicid consolelog thispropsimages thispropsimageindex publicid read property publicid undefined", "num": "13025", "d": "6/2018"}, {"title": "react depends older version corejs breaking usage new babel", "body": "want request feature report bug bug current behavior react relying older version corejs goes conflict newer beta version babel older version gets installed instead newer results errors like versions react browser os affected issue work previous versions react react", "num": "13018", "d": "6/2018"}, {"title": "popping ssr providers n n number providers stack", "body": "see details sure matters practice people often many dozens providers deep inside tree remove loop would nice", "num": "13016", "d": "6/2018"}, {"title": "getderivedstatefromprops executed setstate", "body": "want request feature report bug bug current behavior whenever state update via setstate method getderivedstatefromprops also executed even props changed sure bug kind unexpected clear post published see jsfiddle sure version react used reproducible expected behavior update state via setstate getderivedstatefromprops executed unless prop changed versions react browser os affected issue work previous versions react react node v npm v operating system windows browser version chrome official build", "num": "13015", "d": "6/2018"}, {"title": "map function error", "body": "hello team json follows products id product name tomato qty uom map function used iterate values productsqty uom giving error space qty uom tried products qty uom still error option access values pointers would great thanks", "num": "13014", "d": "6/2018"}, {"title": "react", "body": "compatible recommended use react framework", "num": "13013", "d": "6/2018"}, {"title": "support code property synthetic events", "body": "mdn site mozilla saying eventcode new way distinguish button user pressing pull native event pain since new standard nice react synthetic events", "num": "13011", "d": "6/2018"}, {"title": "refs listener ca nt scroll scrollview reactnative android", "body": "got proximity sensor listener added like componentdidmount proximityaddlistener thisproximitylistener scrollview trying scroll list proximity ca nt get refs listener undefined trying something like", "num": "13010", "d": "6/2018"}, {"title": "exposing prevprops getderivedstatefromprops persistent view animations", "body": "want request feature report bug request feature current behavior expose expected behavior expose cleaner implementation use case mentioned versions react browser os affected issue work previous versions react react know similar discussion issues regarding exposing previous props believe came across use case useful specific yet required replicate lot previous props state component use reactnative add animation screens crossfade nt unmount instantly also checks next route overlay preserves screen behind see create work think terrible yet results lot repetition perhaps implementation missing something remove repetition maybe understanding exposing prevprops js flow import react component react import animated reactnative import durationnormal easeinquad easeoutquad servicesanimation import type node react type props pathname string data overlay boolean children node authenticated boolean type state prevpathname string prevchildren node prevdata overlay boolean animation animatedvalue activechildren node pointerevents boolean authanimation boolean class routefadeanimation extends component state prevpathname null prevchildren null prevdata null animation new animatedvalue activechildren null pointerevents true authanimation true static getderivedstatefromprops nextprops props prevstate state const pathname data children nextprops const prevpathname prevdata prevchildren prevstate returned always store previous props state compare future getderivedstatefromprops like use prevprops const prevpropsstate prevchildren children prevpathname pathname prevdata data check pathname changed ie going another view pathname prevpathname check current visible view modal go default return prevdata prevdataoverlay check future view modal data dataoverlay preserve current view animationg even though pathname changed return activechildren prevchildren pointerevents false prevpropsstate future view modal preserve current view visible behind else dataoverlay return activechildren prevchildren prevpropsstate previous view modal normal view follow modal reset view persistance use children opposed activechildren return activechildren null prevpropsstate persist prevprops state return prevpropsstate handles animation based cases componentdidupdate prevprops props const pathname data authenticated thisprops const authanimation thisstate authenticated amp amp authanimation thisanimate else pathname prevpropspathname prevpropsdata prevpropsdataoverlay data dataoverlay thisanimate animate value gt let delay value const authanimation thisstate authanimation delay animatedtiming thisstateanimation tovalue value duration durationnormal delay easing value easeinquad easeoutquad usenativedriver true start gt thisanimationlogic value animationlogic value gt value thissetstate activechildren null gt thisanimate else thissetstate pointerevents true authanimation false render const animation pointerevents activechildren thisstate const children thisprops return export default routefadeanimation usage example explanation component used wrap several routes pathname change preserve previous view animate replace new view animate idea comes reactrouter documentation use basic implementation look like js outside similar component called overlays component similarly animates views routerpropsdata set see original component checks preserves view appears behind modal would otherwise dissapear due route change", "num": "13008", "d": "6/2018"}, {"title": "html value attribute input type number element updated blur", "body": "want request feature report bug bug current behavior element attribute attribute html updated blur however nt case input element type check open developer tools look dom elements changing values need react side everything seems correct first look onchange handler getting fired value changed updating via attribute changed stepping browser input arrows keyboard arrow keys always stepping correct step value dom element nt correct value value attribute example step arrow key expected behavior attribute dom element also update change input type versions react browser os affected issue work previous versions react latest react version tested chrome firefox macos windows", "num": "13007", "d": "6/2018"}, {"title": "reactreconciler questions", "body": "want request feature report bug trying build custom renderer react using documentation examples able find support rendering target rerendering able discover looking info allows generate diff old props new props examples found say return array sure items array look like returning true method run old new props call instance tell update based props examples found rely props rather rely come methods appears run none various methods called leading reflect children tracked inside class case curious perhaps missing method implementation necessary nt know exists also noticed order called must also pass correct property get working examples see projects also object host config includes essentially copies methods host config try renderer methods never seem called also curious correct paradigm attaching underlying instances one another currently elements render method call render method children add children sub views instance cases children might change called render would end duplicate children parent seen examples elements attach parents rather rendering children attaching children seems like would resolve issue brings another question custom element correct time addremove children underlying instance examples seen use methods keep track children internally method renders children adds sub views question mind whether methods adding children subviews instance example instance method called add subview child element called remove subview instance rather simply using methods keep track children render time rather", "num": "13006", "d": "6/2018"}, {"title": "error missing key", "body": "using gatsby new gatsby react seeing following warning would like remove read key trying apply nt work warning child array iterator unique key prop check toplevel render call using see information unknown unknown created componentrenderer componentrenderer created route route created defaultlayout div created defaultlayout div created sidebarpusher sidebarpusher created defaultlayout mypagetsx main page passes value slug obtained graphql mycardtsx key specified card", "num": "13005", "d": "6/2018"}, {"title": "maintain data component state redux complex enterprise applications", "body": "suppose four components one screen container component component b component c component four developers working four components first approach follow maintaining data within state component approach redux created reducer component maintaing data component reduxand need send combine data components simply combine reducers send server api approach follow", "num": "13004", "d": "6/2018"}, {"title": "reactdom throws referenceerror requestanimationframe defined ssr environment since", "body": "want request feature report bug bug current behavior change seems broken serverside rendering attempting test getting following error serverside load page points line expected behavior referenceerror serverside environment versions react browser os affected issue work previous versions react published time writing node environment serverside rendering response browser request", "num": "13000", "d": "6/2018"}, {"title": "ca nt yield children generator render", "body": "want request feature report bug bug current behavior via thread passing result generator child nt work renders children without error warning current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example repro expected behavior example hundred numbered versions react browser os affected issue work previous versions react browsers appears validation logic drains iterator finally try get children returns nothing", "num": "12995", "d": "6/2018"}, {"title": "onblur onfocus nt bubble firefox macos using mouse events", "body": "tested react firefox macos nt bubble parent component focusing blurring button clicking outside almerosteyn writes bubble correctly firefoxwindows", "num": "12993", "d": "6/2018"}, {"title": "access ssr rendered markup component", "body": "want request feature report bug like request feature access ssr rendered markup component working custom pagination rendered server side dynamically connected client example ssr sends markup want grab order hydrate pagination component websocket got hash perform quick query server connect component websocket pushes however calling see component renders first without pagination information lazy loads solved issue creating list hashes server sending client blob seems little unwieldy could far simplified one able access ssr rendered markup like propose calling return ssr rendered markup", "num": "12992", "d": "6/2018"}, {"title": "explanation react behaving weird combining setstate animation scrollleft container", "body": "want request feature report bug bug current behavior application currently developing multiple cards carousel scrolled card card cards overflowing content scrollbars case unfortunately though depending number cards content issue wherein scrolling mousewheel scroll card content scrolling carousel one manifestation bug shown gif scroll card content move forward back sudden second card content scrolled anymore moving mouse outside carousel back without actually clicking works times felt reactthe browser thinks card still old place thus nt perform default behavior trying scroll relaying default scroll behaviour card current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example mwe repo found please use open build folder check issue chrome electron behaviour seen gif occuring corresponding block source file issue first iteration code clicking button calling animation react apparently expects old coords elements surprise work either expected animation called right react updates rerenders everything conversely adding callback animation like seems work prevent internal mismatch positions like know whether explain second variant nt working expected react issue scrolled elements", "num": "12991", "d": "6/2018"}, {"title": "trigger parent function nested child", "body": "hello team getting speed react following query parent component child child another child component structure parent component gt leve child component gt level child component parent component call back function handler gt thissetstate messageshown true passing handler function prop child wiithin child component within component button way trigger parent function handler component anypointers would great", "num": "12990", "d": "6/2018"}, {"title": "consider removing mobile safari empty onclick hack", "body": "see historical context still relevant code even relevant feature test hack browsers seems like waste memory event handlers even though function every time", "num": "12989", "d": "6/2018"}, {"title": "reactdom internet explorer exception thrown caught notfounderror", "body": "want request feature report bug bug current behavior reason ie raising exception pointing reactbatchprototypeoncomplete function thisdidcomplete return thisdidcomplete true const callbacks thiscallbacks callbacks null return todo error handling let lt callbackslength const callback callbacks callback expected behavior guess would nt throw exception callback call handled versions react browser os affected issue work previous versions react sure started seeing last month half thing exception pops randomly see happens project lot lately logs ill make fork seems easy handle posting visibility insight code actually would break ie welcome thanks", "num": "12988", "d": "6/2018"}, {"title": "componentwillupdate discussion", "body": "want request feature report bug feature componentwillupdate discussion current behavior current behavior calls function rerendering render target however indication rerender method called current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior expected behavior call function rerendering render target returned conditional statement true trigger rerender false versions react browser os affected issue work previous versions react questions try solve problem gets rejected assuming team decided move direction removing willupdates react together labeled unsafe seen lot issues functionalities well curious providing conditional statement inside functions would satisfy unexpected renders shouldcomponentupdate trigger call functions however functions run render always controlled conditional statement getting comfortable code base however curious team removing functionality together using static function getderivedstatefromprops instead react lover little confusing may break lot legacy code updating versions believe may solve problem unexpected renders change lifecycle event curious case removing lifecycles next steps react lifecycles work instead love react curious future react whole love tackle bugs feature requests time writing clean code create tests new features bugs well", "num": "12986", "d": "6/2018"}, {"title": "nested contexts nt unwind correctly server side rendering", "body": "want request feature report bug bug current behavior different contexts nested different types unwind correctly rendering via snippet demonstrates issue import react react import rendertostring reactdomserver const valuea letter const valueb letter b const lettercontext reactcreatecontext valuea const numbercontext reactcreatecontext undefined const html rendertostring lettervalue gt lettervalueletter innervalue gt innervalueletter value gt valueletter consolelog html results valueletter typeerror read property letter undefined objectchildren reactdomserverrendererrender reactdomserverrendererread rendertostring object modulecompile loader objectrequireextensions anonymous function js moduleload trymoduleload expected behavior context providers nested correctly unwind contexts return correct value level exception generated output versions react browser os affected issue work previous versions react uncovered using version osx using node shows using works expected browser note wonder might due following snippet previous provider added stack assumed type provider popped investigating hope provide pull request soon", "num": "12984", "d": "6/2018"}, {"title": "improve error message got unexpected object createelement", "body": "feature current behavior running edge case view reason gets object createelement triggering error unfortunately finding really hard debug set break errors reason breaking perhaps bug setup using chrome remote debugger componentdidcatch think area could improved lot outputting object got unfortunate good way log object error without hacky stringify things would certainly saved lot time years using react run type error times ideal would log warning dev mode error throws something like", "num": "12983", "d": "6/2018"}, {"title": "getderivedstatefromprops invoked update phase", "body": "want request feature report bug question lifecycle current behavior docs says invoked right calling render method initial mount subsequent updates diagram shows expected behavior exactly question versions react browser os affected issue work previous versions react react hot loader version react node v npm v operating system browser version", "num": "12982", "d": "6/2018"}, {"title": "get state error message using getderivedstatefromprops lifecycle even initializing state constructor", "body": "want request feature report bug bug current behavior component using life cycle import connect reactredux import component react class myapp extends component constructor props super props thisstate currenttab unsafecomponentwillreceiveprops nextprops thisstatecurrenttab nextpropstabnumber thissetstate currenttab nextpropstabnumber connect state gt tabnumber statecommoneditmyapptabstabnumber myapp import connect reactredux import component react class myapp extends component constructor props super props thisstate currenttab static getderivedstatefromprops props state statecurrenttab propstabnumber return currenttab propstabnumber return null connect state gt tabnumber statecommoneditmyapptabstabnumber myapp properly initialize state construction expected state object undefined error occurred state nullconnect function versions react browser os affected issue work previous versions react react os ubtunu", "num": "12981", "d": "6/2018"}, {"title": "render delayed execution based props working v working", "body": "want request feature report bug bug current behavior render runs immediately provided unique props initial mainparent rendering component v current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example render executed immediately called followed code path shouldcomponentupdate delayed execution nonunique props followed code path componentwillmount worked shouldcomponentupdate immediately ran calling reactdomrender childcomponent parentcomponent nt work componentwillmount ran current function parentcomponent finished executing please let know insufficient info expected behavior reactjs render always runs runs immediately whether props unique versions react browser os affected issue work previous versions react last working working", "num": "12979", "d": "6/2018"}, {"title": "mouseevent nt recognize react synthetic onmouseleave", "body": "want request feature report bug bug current behavior javascript mouseevent nt recognize react synthetic event code example current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example nt work whereas class app extends reactcomponent handlemouseleave gt consolelog left handleclose gt const evt new mouseevent onmouseleave view window bubbles true cancelable true render return reactdomrender documentgetelementbyid container click button nt trigger onmouseleave event expected behavior mouseevent sees synthetic event handles onmouseleave correctly versions react browser os affected issue work previous versions react react version browsers know", "num": "12978", "d": "6/2018"}, {"title": "modify state directly works", "body": "want report bug maybe current behavior expected behavior modify state directly modify state directly works setstate strange", "num": "12977", "d": "6/2018"}, {"title": "events nt work creating portal element shadow dom", "body": "want request feature report bug bug current behavior events emitted synthetic event system portal created element within shadow dom reproduction see expected behavior createportal detect element inside shadow dom versions react browser os affected issue work previous versions react probably major bug source confusion react however either support add warning development", "num": "12973", "d": "6/2018"}, {"title": "plan designing scopes chaining context api like old context", "body": "want request feature report bug feature current behavior although react new context api solved many pain points old unsafe context api still wish appropriate communication mechanism access scope context descendant component always reads context value closest ancestor context value expected behavior another new context api support context scopes chainingcascading components read context bottom contexts could shadowed components api also prevent old context api react issues eg update blocking reasonable situation like context api components libarary setted scoped theme context theme effects children also use control scope size scope privilege scope locale scope behaviours", "num": "12972", "d": "6/2018"}, {"title": "question lines reactfiberschedulerjs", "body": "want request feature report bug neither wanted ask question code specifically function comment says within max mirroring similar comments directly function code seems indicate otherwise comment needs updating something missing", "num": "12971", "d": "6/2018"}, {"title": "please help deleting issue", "body": "please help deleting issue", "num": "12969", "d": "6/2018"}, {"title": "react context issue", "body": "want request feature report bug bug current behavior one context consumer value another contexts provider current behavior bug please provide steps reproduce possible minimal demo problem example js const react require react const rendertostring require reactdomserver const provider locationcontextprovider consumer locationcontextconsumer reactcreatecontext location const provider basecontextprovider consumer basecontextconsumer reactcreatecontext base const e reactcreateelement const html gt rendertostring e locationcontextprovider value location e basecontextconsumer null basecontextvalue gt e locationcontextconsumer null locationcontextvalue gt e basecontextprovider value base e span null consolelog attempt html consolelog attempt html output expected behavior attempt attempt produce result versions react browser os affected issue work previous versions react react os issue appear version prior react using createreactcontext polyfill notes issue found trying use ryan new reachrouter ssr something like example communicating ryan opened following issue repository", "num": "12968", "d": "6/2018"}, {"title": "allow second parameter reactdomrender css selector", "body": "want request feature report bug request feature would lovely allow second parameter string like try implement wanted feature estimate bare basics done loc plus testing documentation current behavior need specify html element second parameter great api would allow lot flexibility cleaner code try pass string error thrown expected expected behavior second parameter accept string would used internally versions react browser os affected issue work previous versions react far", "num": "12967", "d": "6/2018"}, {"title": "returning empty fragment throws confusing error", "body": "rendering component like throws error foo nothing returned render usually means return statement missing render nothing return null error confusing clearly returning value nt know want support rendering empty fragments case error confusing nt allowed explicitly call component return fragment children cc gaearon", "num": "12964", "d": "6/2018"}, {"title": "signaling reusable instances", "body": "want request feature report bug feature common case list items keyed id items addedremoved time example say list users button refresh list new data server simple function component say produces following user elements later get new user list resulting elements operations remove destroy instance dom nodes move update create instance dom nodes would option tell react reuse instances dom nodes make sense list diff react information understand remove key type user index create key type user index signaled react reuse elements since type could reduce operations updating identity underlying instance key key update instance normally could also require move nt used reduces combined createdestroy operations instances dom nodes course optin behavior components wo nt clear internal state dom nodes hold uncontrolled state also cases could slower wager rare syntax secondary mostly want hear thought idea explicitly permitting react reuse instances simplest idea core ca nt think reasonable way user space less reasonable ways require duplicating effort diffing list allowing react simplify operations intends perform provides another performance hook react code people attempt apply optimizing react reactnative apps makes sense situation", "num": "12963", "d": "6/2018"}, {"title": "fetch never executed componentwillmount getderivedstatefromprops present", "body": "want request feature report bug bug current behavior found suspicious behavior happen component method never invoked request sent never called method gets called invoked wo called works ok called warning unsafe legacy lifecycles called components using new component apis called works ok called send request called expected behavior alone versions react browser os affected issue work previous versions react react hot loader version react node v npm v operating system ubuntu lts xenial browser version chrome version official build component", "num": "12962", "d": "6/2018"}, {"title": "reactstrictmode setstate function getting called twice", "body": "want request feature report bug bug current behavior calling setstate function gets called twice components wrapped reactstrictmode codesandbox set state calls thispropsname render return thispropsname const app gt output expected behavior setstate function called strictmode versions react browser os affected issue work previous versions react react browsers chrome firefox safari", "num": "12961", "d": "6/2018"}, {"title": "reactdomhydrate removing ssr dom error", "body": "want request feature report bug feature current behavior fails hydrate currently removes dom inside mount point jsx class app extends reactcomponent render throw new error return hydration successful reactdomhydrate documentqueryselector root eg expected behavior defaults replacing server side rendered dom error hydrating optional parameter versions react browser os affected issue work previous versions react react oss browsers", "num": "12960", "d": "6/2018"}, {"title": "multiple custom renderers time", "body": "want request feature report bug bugquestion current behavior get warning unexpected pop running two reconcilers time two custom renderers one main app ui one devonly debug ui react trees separate host component different works fine long dont stress seems get error work performed reconcilers time current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example sorry nt minimal repro yet indeed bug running two reconcilers time supported might spend time minimal repro expected behavior would expect two reconcilers work independently running time versions react browser os affected issue work previous versions react reactreconciler", "num": "12959", "d": "6/2018"}, {"title": "chinese translation bug", "body": "bug think situation make beginners doubting indentation code right check page", "num": "12958", "d": "6/2018"}, {"title": "fire change events changes made inputs hydration", "body": "currently hydrating serverrendered markup ignore changes user makes hydration also nt reset changes hydration finishes motivation likely avoid losing user input see test problem assumes value continue changed hydration completes eg user keeps typing nt dom react sync try detect changes made input hydrating dispatch change event component notified new value see discussion", "num": "12955", "d": "5/2018"}, {"title": "c", "body": "", "num": "12953", "d": "5/2018"}, {"title": "flowconfig editing vscode", "body": "want request feature report bug neither think ask question relating codebase floweditor config current behavior git pull react yarn install navigate project root directory upon flow type checking work vscode even though flowforvscode extension installed enabled typescript disabled per docs flowusenpmpackagedflow setting set true reason seems lack file project root adding empty reloading vscode makes work albeit loads linting errors mainly errors saw several different along scripts appear get run understand functions fine want flow work ineditor open project root directory correct way generating necessary file tried copypasting one still resulted bunch errors current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior ineditor flow type checking code referencing etc work opening fresh pull code zero linting errors versions react browser os affected issue work previous versions react na", "num": "12952", "d": "5/2018"}, {"title": "allow attribute custom elements", "body": "want request feature report bug feature current behavior creating custom element attribute currently possible interprete attribute special sense expected behavior like would great alias allows creating attribute custom element versions react browser os affected issue work previous versions react", "num": "12951", "d": "5/2018"}, {"title": "get warning adding strictmode redux application", "body": "upgrading added component root component const app props gt reactdomrender documentgetelementbyid app unsafe lifecycle methods found within strictmode tree router created browserrouter browserrouter created app provider created app created app muithemeprovider created app app componentwillmount please update following components use componentdidmount instead route switch componentwillreceiveprops please update following components use static getderivedstatefromprops instead connect withstyles translate maindrawer connect withstyles translate snackbar route switch componentwillupdate please update following components use componentdidupdate instead connect withstyles translate maindrawer connect withstyles translate snackbar learn warning strictmoderedux os ubuntu browser chromium react reactdom redux", "num": "12949", "d": "5/2018"}, {"title": "wrong eventtargetvalue", "body": "want request feature report bug bug current behavior given input field typeemail type valid email address type \u0441yrillic letter mailcom type \u0434 test copy paste result mailxn compdd cursor start input field expected behavior mailcom\u0434 input field change versions react browser os affected issue work previous versions react react browser chrome simple example", "num": "12948", "d": "5/2018"}, {"title": "event listener leak", "body": "want request feature report bug bug current behavior accumulating listeners interacting input elements unmounting elements interacted listener garbage collected correctly screenshot accumulation production build current behaviour bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example use either following repros follow reproduction instructions commentsreadme convenience reproduced better illustrated pulling repro less going expected behavior accumulation event listeners versions react browser os affected issue work previous versions react macos chrome react reactdom", "num": "12947", "d": "5/2018"}, {"title": "react class strict mode reserved word", "body": "webpack uglify tools compression appeared class reserved word code android strict mode reserved word", "num": "12945", "d": "5/2018"}, {"title": "fix recursive flow types", "body": "landed change flow types making types various types recursive properties pr may running older version flow luck finding record flow ran pr sure case pr merged even though recursive flow type definitions plus one flow errors unrelated detected problem recursive type definitions recent versions flow go infinite loop try infer types recursive solution may add detail types unblock things temporarily made looser type definitions", "num": "12941", "d": "5/2018"}, {"title": "reactrouter matching regex params minified react build", "body": "want request feature report bug bug current behavior using webpack bundle react application routing works perfectly react dev package stops working production build route file class rootclass extends component componentdidmount render return react dev build url matches path whereas production build matches glob matching redirect home component prod webpack const path require path const webpack require webpack const htmlwebpackplugin require htmlwebpackplugin const extracttextplugin require extracttextwebpackplugin const autoprefixer require autoprefixer const staticsourcepath pathjoin dirname static const sourcepath pathjoin dirname client const buildpath pathjoin dirname public moduleexports devtool cheapmodulesourcemap entry app clientappjsx output path buildpath filename name hash js resolve extensions webpackloaderjs webloaderjs loaderjs js jsx modules sourcepath pathresolve dirname nodemodules plugins new webpackdefineplugin processenvnodeenv jsonstringify production new webpackoptimizeuglifyjsplugin new webpackloaderoptionsplugin options postcss autoprefixer browsers last version ie gt context staticsourcepath new webpackhashedmoduleidsplugin new htmlwebpackplugin template pathjoin dirname indexhtml path buildpath filename indexhtml minify collapsewhitespace true collapseinlinetagwhitespace true removecomments true removeredundantattributes true new extracttextplugin filename name contenthash css allchunks true module rules test json loaders jsonloader exclude nodemodulesserver test jsx loaders babelloader plugins transformdecoratorslegacy plugins reacthotloaderbabel plugins emotion exclude nodemodulesserver test scss exclude nodemodules use extracttextpluginextract fallback styleloader use loader cssloader options minimize true postcssloader resolveurlloader sassloader test eot svg ttf otf woff use fileloader nameassets name hash ext test pnggifjpgsvg use urlloader amp nameassets name hash ext include staticsourcepath dev webpack const extracttextplugin require extracttextwebpackplugin const htmlwebpackplugin require htmlwebpackplugin const webpack require webpack const path require path const buildpath pathjoin dirname public function getentrysources sources processenvnodeenv production sourcespush webpackdevserverclient sourcespush webpackhotonlydevserver return sources moduleexports entry app getentrysources clientappjsx devserver historyapifallback true hot true inline true host disablehostcheck true port output filename public name js resolve extensions js jsx module rules test json loaders jsonloader exclude nodemodulesserver test jsx loaders babelloader plugins transformdecoratorslegacy plugins reacthotloaderbabel plugins emotion exclude nodemodulesserver test scss loaders styleloader cssloader resolveurlloader sassloader exclude nodemodulesserver test eot svg ttf otf woff exclude nodemodulesserver loader fileloader options name path name ext devtool sourcemap plugins new webpackloaderoptionsplugin debug true new htmlwebpackplugin template pathjoin dirname indexhtml path buildpath filename indexhtml minify collapsewhitespace true collapseinlinetagwhitespace true removecomments true removeredundantattributes true new extracttextplugin publicstylecss allchunks true current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior route match way prod react build dev versions react browser os affected issue work previous versions react react reactrouter chrome version official build", "num": "12940", "d": "5/2018"}, {"title": "client server rendering desynchronized documentation", "body": "server renders page properly client overwrites message", "num": "12938", "d": "5/2018"}, {"title": "classname converted", "body": "want request feature report bug bug current behavior html tags include dash convert rendertostring current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react react", "num": "12935", "d": "5/2018"}, {"title": "using electron ipc react", "body": "use electron renderer ipc react component js file wrote const electron require electron import electron electron nt work error reports module found ca nt resolve electron config webpack something stuck really days thank", "num": "12934", "d": "5/2018"}, {"title": "broken fixtures", "body": "want request feature report bug bug current behavior two fixtures broken due reference bundle reference introduced pr landed fixing see current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open either fixture firefox note error console page nt update expected behavior react andor schedule module running js page versions react browser os affected issue work previous versions react master", "num": "12930", "d": "5/2018"}, {"title": "webpack react running production mode dead code elimination applied", "body": "want request feature report bug report bug current behavior compiled production error thrown current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example related compilingbundling would substantial number dependencies react expected behavior nt throw error compiling webpack following guide given link development code included used set configured run files note license comments bundle suggest well included along could webpack configuration issue however entire bundle seems uglified packages seem exhibit anything production behavior want peck around bundle please enjoy versions react browser os affected issue work previous versions react nt issue webpack configuration", "num": "12929", "d": "5/2018"}, {"title": "possibly include field packagejson indicate dist file", "body": "want request feature report bug feature current behavior per react reactdom nt include field npm packages include directories production development umd builds prior discussion concluded development production builds different clear whether unpkg default dev production react nt include field leaves consumers bias working observable uses include modules people type resolves redirects webcompatible distribution people type hard figure one look unpkg hunt around umds considering hardcoding workarounds react amp reactdom popular modules people figuring require creating react wrapper sets field repoints react submitting another pr react reproposing default export expected behavior react reactdom would provide default indication files meanings versions react browser os affected issue work previous versions react thanks yall work react excellent", "num": "12928", "d": "5/2018"}, {"title": "preserve property getters state updates", "body": "want request feature report bug bug current behavior state updates property getters transformed literals eg code example expected behavior getters still available state updates versions react browser os affected issue work previous versions react", "num": "12927", "d": "5/2018"}, {"title": "event nt trigger direclty clicking maximum value", "body": "want request feature report bug bug current behavior directly loading choose maximum value input type range event nt fire onchange event fire maximum value input sandbox click maximum right input type range message console displayed value nt change expected click value input message displayed console value change click last value displayed expected behavior event trigger directly click maximum value input type range versions react browser os affected issue work previous versions react testing macos high sierra firefox safari chrome react get around behaviour change onchange oninput add blanck onchange still get drag behaviour safari iphone see codesandbox", "num": "12926", "d": "5/2018"}, {"title": "keep using legacy context api achieve new api", "body": "want request feature report bug like feature current behavior currently using legacy context api heavily typical component tree app might look bit like heavily nested component tree use context time pass functions booleans objects whatever without use props time trying avoid prop drilling much possible additionally context vars might set lifecycle methods first render maybe hoc provided data basically place expected behavior question ca nt see proper solution achieve next context api huge pain achieve make code completely unreadable way keep using legacy context api maybe react team could provide extra package maybe someone better idea achieve without pretty bad prop drilling place looking forward answers best patrick", "num": "12924", "d": "5/2018"}, {"title": "getderivedstatefromprops broken", "body": "want request feature report bug believe bug react regarding current behavior trying set state based props kind overrides state forever makes impossible edit later current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example follows add item click try edit expected behavior work like react versions react browser os affected issue work previous versions react think happens react seems work fine code different react version", "num": "12922", "d": "5/2018"}, {"title": "error element ref specified string owner set using npm linked library", "body": "want request feature report bug bugerror current behavior element ref specified string error using npm link current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior nt error versions react browser os affected issue work previous versions react react osx chrome doesnt matter hello really sorry reporting issue got nowhere else turn help identify problem webpack lib due reactbootstrapuncontrollable help understand wrong googled two days people seem issue one received answer solution npm ls react shows one line im sure takes account npm linked package believe issue related least similar", "num": "12921", "d": "5/2018"}, {"title": "node removed child node createportal", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12918", "d": "5/2018"}, {"title": "think used setstate", "body": "invented new design pattern work async code react look example thissetstate async updatemember gameid thisplayerid data closedd im need beginning performed updatemembers run closedd think pattern", "num": "12917", "d": "5/2018"}, {"title": "bug getderivedstatefromprops invoked change state component", "body": "bug getderivedstatefromprops invoked change state component codesandbox example see elementone clear state change state component static function getderivedstatefromprops invoked guide static getderivedstatefromprops lifecycle invoked component instantiated well receives new props elementone received new state elementtwo component willreceiveprops behavior ok react reactdom", "num": "12916", "d": "5/2018"}, {"title": "suspense timeout expiration siblings rendering issues", "body": "want request feature report bug bug current behavior code reproducing also deployed example zeit basic example using react suspense simple cache provider postponing text rendering showing loading spinners necessary see use nt really care passing always become expired right render open page loading bar appears immediately despite delay content placed next async component one going suspended looking react suspense tests assumed sibling elements rendered way expected behavior component shows placehold expired sibling content shown even async component suspended built sources current master updating flag also used nt seem make difference overall really satisfied feature hope code correctly shows real bug", "num": "12915", "d": "5/2018"}, {"title": "questions regarding propschildren", "body": "want request feature report bug questions questions regarding propschildren official react documentation reactchildren read opaque data structure mean exactly think general three possibilities transparency data structure case every aspect data structure open well defined right term opaque data structure would completely wrong therefore case obviously case case aspect data structure open clear would mean whenever use always use combination one mmmh really one knows actual data structure would imply neither allowed use examples common seems case obviously also case case aspects data structure open well defined would open possibility one even examples case valid would mean exact specification aspects well openly defined aspects really opaque maybe missed something react documentation think really exactly specified last least question exactly nt case children one ore always array done preact example would make things much easier would nt many thanks advance clarifications", "num": "12913", "d": "5/2018"}, {"title": "broke", "body": "recent blog post announced bugfix getderivedstatefromprops called every time component rendered regardless cause update reality broke realworld library gets called every rerender suppose component watches property change recommended approach store property value like user changes input value property must updated js onchange event gt thissetstate value thispropsonchange static getderivedstatefromprops props state propsvalue statevalue return value propsvalue return null timeline first handler triggers calls state got updated called new react nt updated yet condition triggers hence gets reset condition becomes already bug single source truth per official react recommendations next line executes updates turn calls condition triggers becomes case actually breaks phone number input component design requirement let user set externally turn must update country flag icon worked react react though gets called internal state update resulting country flag reset every time user types character incomplete phone number ca nt source country flag eg usa canada start mention whole nanpa region", "num": "12912", "d": "5/2018"}, {"title": "get render function html multi page traditional website", "body": "want request feature report bug think feature like question current behavior hello possible somehow get render function script tag html multi page site would useful asking want edit pages admin panel method could insert html would nt rebuild whole project get new javascript chunks pages rebuilds code splitting buildjs file would contain components vuejs create build get content html like javascript mainjs import app appjs new vue el app render h gt h app appjs export default vuecomponent app template pagetemplate data return world world mounted components html hello world", "num": "12907", "d": "5/2018"}, {"title": "reactdom calls component constructor render function twice strict mode", "body": "either bug intentional behavior sure render component wrapped tag component constructor render functions get called twice nt cause noticeable problems send wild goose chase debugging session codepen reproduces issue using reactreactdom", "num": "12906", "d": "5/2018"}, {"title": "htmlfor attribute labels working voiceover safari", "body": "want request feature report bug bug current behavior attribute behaving consistently across browsers voiceover enabled chrome label value announced voiceover input receives focus expected safari however label value announced voiceover able get voiceover announce expected label safari adding attribute inputs expected behavior using suffice get voiceover read expected label value across browsers versions react browser os affected issue work previous versions react react chrome safari macos high sierra voiceover enabled", "num": "12905", "d": "5/2018"}, {"title": "extract react prop ref", "body": "hello following problem wondering documentation issue react nt support behavior let say following html library allows specify child node namely passing following function library would render following use following click event nt happening tried many variations tried using instead behavior nt change sure two attributes different anymore problem inability refer react prop using ref thanks anything explanation confusingunderclarified please let know", "num": "12903", "d": "5/2018"}, {"title": "synthetic keyboard events nt implement code property", "body": "want request feature report bug feature current behavior undefined expected behavior useful part keyboardevent spec versions react browser os affected issue work previous versions react react saw mention today changelog", "num": "12902", "d": "5/2018"}, {"title": "pointer event nt registering touch ios using safari chrome", "body": "want request feature report bug believe bug current behavior nt registering using chrome safari mobile viewing mobile within chrome dev tools works fine log mobile unresponsive codesandbox logs pointertype expected behavior register contact events still covering mouse events quick gif showing correct behavior screen amp console url nt running versions react browser os affected issue work previous versions react browsersos working ios either safari mobile prior versions pointer events new feature introduced react blog post", "num": "12901", "d": "5/2018"}, {"title": "elements inside fragment get added one time", "body": "want request feature report bug believe bug current behavior adding multiple elements inside fragment get added one time current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example setup demo app steps repro click edit button first card watch happens visually dom break subtree modifications helpful see cancel button briefly hover state background red also see dom using break subtree modifications parent div cancel button gets added save button gets added second render behavior depends browser cancel button briefly hover state appears red cancel button gains hover state keeps red move mouse firefox visually behaves expected using firefox browser would detected issue expected behavior clicking edit button save cancel buttons get added dom time hover state buttons always properly applied see clicking edit second card uses span instead fragment versions react browser os affected issue work previous versions react react unsure worked previous version", "num": "12899", "d": "5/2018"}, {"title": "minor release causes breaking changes getderivedstatefromprops", "body": "according semver nonbreaking changes supposed go minor patch version releases release made breaking changes entire codebase running perfectly dumpster fire soon raise dependency thing changelog breaking change properly call getderivedstatefromprops regardless reason rerendering acdlite please revert change save provide proper documentation change actually entails use adjusted already implemented", "num": "12898", "d": "5/2018"}, {"title": "error boundary treat thrown js error", "body": "want request feature report bug question current behavior error boundary successfully intercepts javascript errors displays fallback ui seems javascript errors still gets thrown appear red browser console caught cypress tests making fail expected behavior nt know asking error boundary throw original js error lets js throw would normally error boundary catches original thrown error prints using designed behaviour error boundary regarding original javascript thrown error versions react browser os affected issue work previous versions react use google chrome react", "num": "12897", "d": "5/2018"}, {"title": "poc resolve minified react errors devtools using svg images", "body": "want request feature report bug feature current behavior currently react production mode errors thrown display link view unminified error utilizing chrome custom formatter attribute possible load image custom url using svg nodes possible recreate full error message proof concept would require server parse error messages output svg would provide concise error messages without leave devtools would nt affect existing bundle size sideeffects ie svg load devtools open retains behaviour browsers firefox devtools nt support displaying images", "num": "12896", "d": "5/2018"}, {"title": "react context providers cause consumers rerender even value nt changed", "body": "want request feature report bug bug current behavior documentation react context states consumers descendants provider rerender whenever provider value prop changes changes determined comparing new old values using algorithm objectis example shows case provider rerendered identical value indicated counter consumer rerenders every time provider rendered regardless whether value changed misunderstanding docs intended behavior context used efficiently expected behavior would indicate one initial render subsequent renders would cause consumers rerender value nt changed case types values scalar object function etc versions react browser os affected issue work previous versions react observed", "num": "12888", "d": "5/2018"}, {"title": "bug eventnativeeventcurrenttarget null", "body": "hello issue onclick evt evttarget evtnativeeventtarget evtcurrenttarget evtnativeeventcurrenttarget fact eventnativeeventcurrenttarget shows null completely different object nt expected equal someone clarify happening", "num": "12885", "d": "5/2018"}, {"title": "reactistypeof nonelements", "body": "current behavior currently works element types allow pass raw know type use case need special cases forwardrefs need know type source target components currently would need turn elements first functions also issue since use function internally js const forwardcomponent reactforwardref gt reactistypeof forwardcomponent undefined reactistypeof reactcreateelement forwardcomponent symbol reactforwardref expected behavior ideally could pass component get type versions react browser os affected issue work previous versions react reactis", "num": "12882", "d": "5/2018"}, {"title": "support pointer events", "body": "pointer events currently unknown event handler properties react current behavior js fiddle shows attaching event div produces warning console expected behavior although pointer events supported apple still useful developers targeting platforms perhaps good middle ground would allow print console warning saying may work happy put together pr someone points right direction", "num": "12881", "d": "5/2018"}, {"title": "efficiently ignore irrelevant updates context", "body": "using context represent user focus large app app many hundreds focus routes listen focus location app much like routes react router focus transitions irrelevant routes routes lose focus gain unaffected today context consumer route component computes derived state eg etc provides derived state props wrapped component wrapped component optimized problem hitting react appears meaningful amount work every time context consumer rerendered even though wrapped component nt rerender adds quickly across focus routes next step better profiling production mode dev appears per route problematic need way efficiently prevent subscribers rerendering new value focus location case nt relevant feature almost right us limitation unsuitable scenario unbounded list booleans example could use update invalidated components alternatively took hook could use consider plug restricted alternative nothing like forthcoming likely revert using emittersubscriber model batched update nonideal us however state need propagate new components single render pass context particularly good", "num": "12876", "d": "5/2018"}, {"title": "index ca nt key react element arrays", "body": "index ca nt key react element arrays thanks", "num": "12873", "d": "5/2018"}, {"title": "submitreset inputs lose text valueundefined", "body": "want request feature report bug bug current behavior creating results button text behaviour seen pr open proposed fix expected behavior input use browser default value input submit en etc versions react browser os affected issue work previous versions react react chrome macos works react unsure earlier versions", "num": "12872", "d": "5/2018"}, {"title": "broken link reactreconcilerreadmemd practical examples react native", "body": "readmemd link react native practical example broken", "num": "12870", "d": "5/2018"}, {"title": "dynamic components rendering object object", "body": "want request feature report bug report bug current behavior description done small util lazy load components approach store lazycomponent state import componentdidmount callback triggering rerender simplified example seen problem lazycomponent loaded component updated new children set text instead children resulting object object remarks behaviour different depending react version build tool works works nodeenv production works nodeenv development fails therefore assume something different handle environment variables replacement thing works totally fine using think bug steps reproduce download sample repository install dependencies run build app start http server go file choose wich version app load fails works go file render method component choose render rendering result uncaught domexception failed execute removechild node node removed child node navigate page click expected behavior render lazyloaded component independently tool used building app environment variable value moreover keep working since previous versions react versions react browser os affected issue work previous versions react issue affectes version react nt affect previous versions browser google chrome official build os linux mint thanks", "num": "12866", "d": "5/2018"}, {"title": "app unmounts caught error", "body": "want request feature report bug bug current behavior basically levels components shelltsx catches tsx class shell extends reactcomponent state shellstate alerts someviewtsx always throws render tsx class someview extends reactcomponent fires thing new errors thrown app still unmounts anyway understand happening someview render always throws error componentdidcatch handles error shell rerenders someview throws apparently react shuts probably easy way avoid endless loop expected behavior app unmount abortblacklistignore miscreant component could nlevels deep app expect work like codepen example versions react browser os affected issue work previous versions react react explode use less colourful language deserves react componentdidcatch neat horrendous neat mostly standard way catch handle errors horrendous unmounts entire app creating unrecoverable state seen spotify lately anything unmounting developmentonly bugpretendingtobeafeature disabled hella annoying cursory google search clearly shows countless hours wasted", "num": "12865", "d": "5/2018"}, {"title": "update readmemd", "body": "replace since component logic written javascript instead templates easily pass rich data app keep state dom since component logic written javascript instead templates easily pass rich data app keep state dom", "num": "12864", "d": "5/2018"}, {"title": "feature request allow fragments accept classname prop", "body": "use case set elements wrapped class depending certain scenarios example test component jsx import react react class test extends reactcomponent render const wrapper thispropswrap div reactfragment export default test scenario html child child scenario jsx html child child even though examples actually output way intended error still thrown solution allow prop fragments simply ignore nt anything course many way achieved without using fragments think approach really clean", "num": "12860", "d": "5/2018"}, {"title": "provide hoc new context api", "body": "find needing higherorder component every using render props get stuff context lifecycle methods pretty easy create hoc render prop wondering open yall would adding hoc new context api already userland little helper js function withcontext context component return props gt return context gt const appwithcontext withcontext mycontext app would useful builtin new context api something like js const mycontext reactcreatecontext const appwithcontext mycontextprovide app optionalnameoftheprop second argument prop name could default anyway thought open discussion making actual pr adds thanks consideration edit removed example using", "num": "12859", "d": "5/2018"}, {"title": "reactstrictmode causes setstate fire twice", "body": "want request feature report bug bug current behavior wrapping fired twice current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsfiddle clicking title checking console see called twice callback however called expected behavior sure might related behaviour might intended using previous state set new one component breaks fired twice instance toggle components nt work versions react browser os affected issue work previous versions react react", "num": "12856", "d": "5/2018"}, {"title": "const id options error installing reactjs", "body": "want request feature report bug bug current behavior ca nt run reactjs current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react latest version node version npm version codes found followed tutorial", "num": "12855", "d": "5/2018"}, {"title": "feature need error message state modified misuse spread operator", "body": "want request feature report bug feature current behavior see fiddle click cities check console nt modified directly state without knowing misuse spread operator side thus error came telling modifying state directly expected behavior error like even maybe lesson spread operator time versions react browser os affected issue work previous versions react use last version react expect previous versions react", "num": "12854", "d": "5/2018"}, {"title": "getderivedstatefromprops called instantiation used ssr", "body": "want request feature report bug probably bug current behavior standard cra app getderivedstatefromprops called render time new props passed component expected code run trough reactdomserverrendertostaticmarkup ssr render method called getderivedstatefromprops documentation getderivedstatefromprops invoked component instantiated well receives new props thank versions react browser os affected issue work previous versions react react", "num": "12848", "d": "5/2018"}, {"title": "setstate async", "body": "heard method async confused demo log console anyone know", "num": "12840", "d": "5/2018"}, {"title": "cursor jumps backspacing input typeemail space character", "body": "want request feature report bug bug current behavior hit backspace value space character removing cursor jumps beginning input simple demo repro expected behavior cursor remains end input versions react browser os affected issue work previous versions react tested react possible related issue", "num": "12832", "d": "5/2018"}, {"title": "unsafe lifecycle functions longer defined via mixins", "body": "want request feature report bug bug current behavior unsafe lifecycle function aliases merged defined mixins triggering error uncaught error reactclassinterface attempting define component conflict may due mixin reproduce rename cwm cwrp cwu functions unsafe versions project mixins cause functions duplicated expected behavior lifecyle function continue work expected called via unsafe aliases supposed regard redefiningmerging migration path documentation updated indicate", "num": "12830", "d": "5/2018"}, {"title": "callback reacttestrenderer component changes", "body": "want request feature report bug feature current behavior many react components render multiple times automatically take graphql component first render loading spinner data fetched reacttestrenderer difficult get snapshot consistently render types components currently set interval timer check component tree see data loaded thus rendered approach results bunch unnecessary checks slows tests interval timer run component rendered expected behavior would expect reacttestrender allow callback invoked time component component tree changes basically component ran would expect api like would useful reactdom reactnative versions react browser os affected issue work previous versions react proposal new feature nt affect existing react versions", "num": "12827", "d": "5/2018"}, {"title": "custom element size attribute nt rendered", "body": "want request feature report bug report possible bug current behavior custom element attributes render attribute appears stripped react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example testing web component integration react given collection possible attributes values test map create multiple buttons attributes rendered value expected however attribute missing expected behavior attribute value rendered versions react browser os affected issue work previous versions react react google chrome custom element attributes function expected integrated angular vanilla setup react", "num": "12825", "d": "5/2018"}, {"title": "despite followed react components creation standards style class gives deprecation warning", "body": "using react ver created react js components using style class patterns using reactcreateclass anywhere app still client side node server getting deprecation warning like shown screenshot react component code per class style need worry warning created react component per standard guideline mentioned link import react component react class app extends component static contexttypes static proptypes render return componentdidmount const params location actions thisprops export default app please guide remove warnings nt want use createreactclass dropinreplacement want stick pattern class existing react ver without upgrading react please enlight approaches follow", "num": "12819", "d": "5/2018"}, {"title": "map defined", "body": "using react device galaxy note using native browser error uncaught referenceerror map defined working browsers device load page within application wrong use default browser", "num": "12816", "d": "5/2018"}, {"title": "rendertostaticmarkup output inconsistent attributes case", "body": "hey seems minor issue web since browsers normalises attribute cases end eg major issue emailtargeted markup results buggy behaviour across clients want request feature report bug potential bug current behavior attribute names converted lowercase js import react react import rendertostaticmarkup reactdomserver sample usecase actual code notice first props lowercased result next consolelog rendertostaticmarkup code outputs next result html current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior attribute names lowercased eg html based supported html attributes docs section could nt find pattern whenever react decides lowercase name listed first one outputted expected versions react browser os affected issue work previous versions react nt tried older react reactdom versions updated found related issue argument would compat issues mails definitely edge case thought", "num": "12815", "d": "5/2018"}, {"title": "reactforwardref element type invalid react native", "body": "want request feature report bug help reactforwardref api bug possible may issue react native wanted check first incase use forwardref api incorrect docs explain intent api well implementation little confusing current behavior following code results error executed import react react import textinput reactnative const custominput reactforwardref props ref gt return export default class app extends reactcomponent render return error reported invariant violation element type invalid expected string builtin components classfunction composite components got object check render method app versions react browser os affected issue work previous versions react", "num": "12814", "d": "5/2018"}, {"title": "purecomponent almost component nt shouldcomponentupdate method", "body": "version purecomponent almost component nt shouldcomponentupdate method", "num": "12812", "d": "5/2018"}, {"title": "provide ways postmortem analysis maximum update depth exceeded error production", "body": "want request feature report bug feature current behavior error logging systems reporting error production maximum update depth exceeded happen component repeatedly calls setstate inside componentwillupdate componentdidupdate react limits number nested updates prevent infinite loops however reliably reproduce error affects small percentage users moreover inhouse components several thirdparty components impractical audit every single component find caused expected behavior would much easier us debug nested update count exceeds current nestedupdatelimit could see components involved nested update chain versions react browser os affected issue work previous versions react using react", "num": "12811", "d": "5/2018"}, {"title": "causes classname translate classname class", "body": "want request feature report bug bug current behavior add attribute button element jsx along classname attribute classname translated classname instead class causes cssinjs engines fail style button well keeping css styling using within chromecast sender app breaks behavior chrome looking replication case courtesy materialui team found ca nt fix nt something triggered expected behavior classname becomes class behaviors added button chromecast framework apply correctly react involved versions react browser os affected issue work previous versions react yes app worked fine", "num": "12810", "d": "5/2018"}, {"title": "componentdidcatch method called via reacttestrenderer", "body": "want request feature report bug may request feature current behavior componentdidcatch handled reacttestrenderer current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior like test componentdidcatch handler inside jest enzyme way could make behaviour componentdidcatch handler configurable versions react browser os affected issue work previous versions react latest version react enzyme framework", "num": "12803", "d": "5/2018"}, {"title": "try remove deprecation warning react getting error typeerror serializing native function bound oncewrapper", "body": "try remove warning accessing createclass via main react package deprecated app version react per steps included createreactclass npm package react app made according changes react component giving mentioned serialize typeerror error typeerror serializing native function bound oncewrapper stringreplace serialize please help missing code going wrong component code per new createreactclass guidelines changed code main rendering component react ssr application ie htmljs import react proptypes react import component createreactclass import reactdom reactdomserver import serialize serializejavascript import helmet reacthelmet var html component proptypes render const bundle thisprops const content component reactdomrendertostring component const head helmetrewind export default html want remove deprecation warnings app react without upgrading react please help removing errors", "num": "12799", "d": "5/2018"}, {"title": "reactart react context api working correctly", "body": "want request feature report bug bug current behavior use rendrer picking default value defined initial creation context rather values provided provider actual behabiour initial value javascript import react react import render reactdom var reactart require reactart var group reactartgroup var shape reactartshape var surface reactartsurface var reddotpath z const consumer provider reactcreatecontext x const app gt x gt return render documentgetelementbyid root demo expected behavior provided value", "num": "12796", "d": "5/2018"}, {"title": "deepextend sequrity", "body": "want request feature report bug bug current behavior see problem turns mass moment problem said projects world fact packages kernel level think need fix check packages publishing turns core converts packets one single entity called react develop study react like react expected behavior fearfully versions react browser os affected issue work previous versions react react latest windows", "num": "12794", "d": "5/2018"}, {"title": "rename", "body": "want request feature report bug bug current behavior method used enqueue state change labelled semantically meaning set state implicitly usually wrongly understood expected behavior perhaps taking hard stance semantics probably get controversy well believe current method actually treated bug api naming think renamed something lines perhaps someone else come nicer name seen even people quite experienced react make rookie mistake like synchronous function go bughunting guilty well deeply nested contexts always obvious react fiber think important stay relevant let bite bullet breaking change please lifecycle method deprecations quite magnitude done one would think done hard people find amp replace fact sure beginners would even end fixing undiscovered errors breaking change pros good things cons make people hold grudge function called whatever application logic painstakingly change cursing rearranging logic extremely large organisations like facebook going spend time unmaintained projects still sure con would make code expresses clearly newcomers would less prone mistakes type extra characters strike sane use autocomplete versions react browser os affected issue work previous versions react lt far", "num": "12790", "d": "5/2018"}, {"title": "synthetic events violate nonbubbling event specification", "body": "want request feature report bug bug current behavior native blur focus events bubble synthetic events violates nonbubbling event specification currently implemented react behaves like native focusout event behaves like native focusin event demos react demo react demo expected behavior synthetic events bubble tested os mac os affect bug browsers chrome firefox affect bug react versions bug present versions", "num": "12786", "d": "5/2018"}, {"title": "guys particularly like react", "body": "want safe yes current behavior flight excellent given use good ide phpstorm webstorm difficult future support project use full power react redux doubly difficult github recognize jet inserts html distinguishes red personally fought insertions lot meat comes uncontrollability project central page react initially structure project unknown understand react needed exactly gives except view described gives angular employee angular want show beautiful relatively simple angular expected behavior convince follow path react versions react browser os affected issue work previous versions react react latest windows debian regards", "num": "12783", "d": "5/2018"}, {"title": "react setstate parent onmouseenter child incredibly sluggish", "body": "issue type bug current behavior refactoring code graph components built using composition create instance looks somewhat like defined method vizzy lets set current index data shown graph passing function child components like class vizzy extends component state currentactivedata value setactivedata dataindex gt thissetstate currentactivedata dataindex render const currentactivedata thisstate const setactivedata thissetactivedata gets passed child vizzysvg need method run onmouseenter little bit prop drilling make look like data vizzy state gets passed vizzylegend ultimately need data available class vizzysvg extends component state vizzywidth vizzyheight componentdidmount gt thissetstate vizzywidth thisrefsvizzyrefoffsetwidth vizzyheight thisrefsvizzyrefoffsetheight render const vizzywidth vizzyheight thisstate const setactivedata currentactivedata thisprops barsjsx call method onmouseenter major issue extremely sluggish slow even causing issues css transition put method onclick problem gone however eliminates intended behavior going constructing similar graph using old component built handle interaction updating dom problem nt arise code less scalable maintainable need get refactor work also use inside barsjsx console updates expected animation fluent issues css whatsoever would expect data get updated fluently using onmouseenter setstate like updating dom using even jquery would figured drilling props levels would issue albeit ideal running react ubuntu nt know behavior older versions react started refactor updating edit may issue version firefox reason behavior chrome much smoother check updating firefox helps edit seems updating firefox helped longer considered bug performing pretty much par chrome yet still slower using directly manipulate dom using much expect using prop drilling setting state nested components using react", "num": "12782", "d": "5/2018"}, {"title": "strange lifecycle forwardref children", "body": "want request feature report bug bug demo code jsx import react component forwardref react class inp extends component state value static getderivedstatefromprops nextprops prevstate consolelog receive props return value nextpropsvalue onchange e gt consolelog onchange thissetstate value etargetvalue gt consolelog setstate render const value onchange others thisprops const inpwithref forwardref props ref gt class test extends component render return current behavior type something trigger gt gt gt see console current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example demo expected behavior expected behavior gt gt gt versions react browser os affected issue work previous versions react", "num": "12781", "d": "5/2018"}, {"title": "clarifying key warning fragments", "body": "apologies discussed searched nt find anything currently create array elements without keys get key warning message create fragment elements without keys today assumed meant ah react introduced clever new tech obviated need keys learned today case right believe make dynamic list elements throw fragment get key warning message bad performance nonstable updates best tell reason difference behavior fragments expected understood different semantic meaning arrays used static content relying expectation avoid major gotcha would assume would explicitly mentioned docs fragments prominently featured warningstyle yellow box instead nt believe mentioned dual behaviors make lot sense react ca nt figure whether siblings need keys great us way explicitly tell nt seems important subtle nuance would call lot documentation instead none find please let know misunderstood figure likely", "num": "12776", "d": "5/2018"}, {"title": "getting error using component another component separate files", "body": "uncaught typeerror read property schema undefined current behavior jsfiddle", "num": "12775", "d": "5/2018"}, {"title": "thisstate nt get current state properly", "body": "related issue found work around checking state onchange ca nt figure behaves like first place example", "num": "12774", "d": "5/2018"}, {"title": "video tag issues playing video continuously", "body": "want request feature report bug current behavior running drag drop control setup property particular control structure looks something like left side controls center draggable area right side properties control controls one video tag dragging draggable area everything works fine till video control inside draggable area one checkbox properties area named check video plays automatically code return current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior rerender whole video change property property changed rerenders whole video starts use third party html parser video nt restart playing versions react browser os affected issue work previous versions react chrome latest version", "num": "12773", "d": "5/2018"}, {"title": "reacttestutilssimulate regression react", "body": "want request feature report bug bug current behavior testutils module react nt immediately flush updates dom like used version previous current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example made gist readytogo html files open either one browser expected behavior behavior triggered via module state flushed dom immediately assertions may made next line versions react browser os affected issue work previous versions react react affected issue yes used work version previous could immediately assert next line changes flushed dom searched react tests test actually making style assertion updates actually flushed dom could nt find anything", "num": "12772", "d": "5/2018"}, {"title": "multiple refs nt work stateless component", "body": "hello want request feature report bug report bug stateless component like const demo props gt let input span current behavior second span always first one input okay expected behavior multiple refs work p versions react browser os affected issue work previous versions react nt know thanks", "num": "12771", "d": "5/2018"}, {"title": "es release aside cjs umd", "body": "rollup rollupplugincommonjs struggling even working import reactdom also support esmodules could es release well one minute making repo demo ah thanks dan actually works sure issue project", "num": "12769", "d": "5/2018"}, {"title": "defaultchecked prop sets checked attribute", "body": "type common use cases projects relying correct dom emissions description unclear following known issue take consideration snippet current behavior setting prop inputs types sets attribute dom element setting prop inputs type attribute correctly set leaving attribute unchanged expected behaviour like mentioned expected behavior would prop set attributes corresponding dom node like case prop", "num": "12765", "d": "5/2018"}, {"title": "throws", "body": "want request feature report bug bug current behavior handler svg element handler sets state property causes element hidden via css makes throw line seems removed trycatch protection working around problem stubbing focus like versions react browser os affected issue work previous versions react worked", "num": "12763", "d": "5/2018"}, {"title": "cursor jumps end input onchange nt call setstate", "body": "current behaviour input function returns value equalling prior value causes cursor jump end input comment formally raised feature request repro sandbox code javascript import react react import render reactdom class input extends reactcomponent state value typeanumber onchange e gt let nextvalue etargetvalue render return render documentgetelementbyid root expected behavior like cursor jump special case returned changed value rejected change ie noop change understand fully react predict cursor position value changed however currently find npm module allows freelength regex filters vs fixed length mask way implement filter without cursor jumping case regarding nonclarity deal general case nonjumping cursors think modernized best practice example would ideal discussion still lives totally fine issue closed assisting instead education handling general case though would still nice api possible", "num": "12762", "d": "5/2018"}, {"title": "add twitter card meta tag using reacthelmet render data dynamically react app", "body": "", "num": "12761", "d": "5/2018"}, {"title": "typos reactpurecomponent hard debug", "body": "want request feature report bug feature current behavior typo get unhelpful error message nt give idea error occurring eg generate error normally would notice right away reason typo occurs nt see immediate render result good luck finding took hours current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior would expect error message identifies location syntax error versions react browser os affected issue work previous versions react react chrome mac os", "num": "12759", "d": "5/2018"}, {"title": "open react application phone show error", "body": "current open react application phone show warning failed prop type invalid prop supplied expected reactnode switch warning failed prop type invalid prop supplied expected reactnode hashrouter warning failed prop type invalid prop type supplied expected single reactelement provider react reactdom reactredux reactrouterdom redux", "num": "12758", "d": "5/2018"}, {"title": "best practice meaningful componentstack production", "body": "using sentry bug reporting production build often encounter like course help locate problem wondering best practice get usable information errorboundaries componentstack following options seem available set uglify increases bundle size works set manually components usually feasible use babel plugin somehow misses majority components write tool resolves names using sourcemaps curious hear people using first option works well feel like elegant solution", "num": "12757", "d": "5/2018"}, {"title": "give attribute developer ask react patch rendered content identical server client", "body": "want request feature report bug feature current behavior react expects rendered content identical server client intentionally need render something different server client twopass rendering like attribute derived screen size since nt know real screen size server side might pass rendering like following constructor props super props thisstate hasmounted false thisstyles objectdefineproperties container get gt typeof window undefined return height let height thispropsviewsizeheight return thisstatehasmounted height height height componentdidmount thissetstate hasmounted true render let thisstyles return code demonstrate intentionally render wrong height initially browser update second run dom keep inconsistent vdom pass renderings keep unchanged react wo nt update dom expected behavior give attribute developer ask react patch single element attribute text content unavoidably different server client hydrating lucky rendered content identical server client nothing", "num": "12754", "d": "5/2018"}, {"title": "expose way creating reacttestinstance react dom nodes", "body": "want request feature report bug would like request new feature current behavior moment way create instance would love able something like libraries enzyme used test react components full dom rendering providing api find components get information far know way querying component tree created without relying internals react nodes means enzyme order support full dom rendering querying api interact react nodes directly reliance causes problems enzyme whenever react adds new node type forwardref contextproviderconsumer example started rfc proposes enzyme uses layer top react node objects allows library decoupled internals react solution proposed rfc relies able create component tree please let know something would consider", "num": "12753", "d": "5/2018"}, {"title": "requestanimationframe supported error unit testing transition react component", "body": "use transition react component similar example transition happens button click unit test const graphdata data const transactiondetail displayfrom displayto const component shallow describe timelinegraph function test render svg function expect componentfind svg tohavelength test handle click anchor tag gt const handleclick componentfind first expect handleclickproplength toequal test suite failed run test component get exception issue thrown even try use timer way overcoming thrown exception removing thrown exception code mentioned issue info react enzyme os windows", "num": "12752", "d": "5/2018"}, {"title": "development log console object triggering errorwarning", "body": "feature request often time consuming determine deeply nested component triggered warningerror logging issue objectfunction console well way least look name id whatever props help identify development mode much info possible wanted", "num": "12750", "d": "5/2018"}, {"title": "ie prompt remember password regression bug since", "body": "note issue seems solved edge ie see issue already raised since closed opening new one get traction still issue ie edge works nt work nt work nt work order test effectively follow steps using edge go settings gt gt view advanced settings privacy services make sure offer save passwords enabled make sure nt passwords saved codesandboxio domain steps reproduce works go sandbox type username password hit submit see confirmation panel saving passwords refresh page type another username password hit submit see another confirmation panel saving passwords refresh page click first input see list previously used usernames steps reproduce nt work remove previously saved passwords codesandboxio domain go nonworking sandboxes type username password hit submit password confirmation panel refresh page click first input list previously used usernames", "num": "12749", "d": "5/2018"}, {"title": "warning message recommends using soon deprecated lifecycle methods", "body": "versions react browser os affected issue work previous versions react react current behavior warning message recommends using soon tobe deprecated lifecycle method warning content rendercomponentwillmount expected behavior warning messages inline deprecation plans", "num": "12748", "d": "5/2018"}, {"title": "render children use singletons", "body": "proposed feature returns unique react component could used anywhere children would get rendered single time every location returned singleton used useful declaring svg filters combined anything else including portals fragments use case ripple component similar materialui could get applied anything including ripple effect makes use svg filter gooey effect easy us bake svg ripple component need svg rendered anywhere dom make use singleton component handle rendering svg component rendering svg gets destroyed responsibility falls upon next component list example jsx const filtersingleton reactcreatesingleton const fancyeffect gt return used throughout application svg rendered dom implementation jsx reactcreatesingleton function const instances", "num": "12744", "d": "5/2018"}, {"title": "warning received nonboolean attribute", "body": "want request feature report bug report current behavior pass boolean prop say get warning prop nt happening react need use prop true prop true current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior getting warning versions react browser os affected issue work previous versions react react google chrome", "num": "12741", "d": "5/2018"}, {"title": "componentdidcatch working properly react", "body": "using componentdidcatch method catch errors child component show error msg instead broken ui sample code ca nt share client code base created sample code see error ui second second ui breaking giving error error crashed childrender c render thisstatecounter simulate js error throw new error crashed return thisstatecounter packagejson file dependencies react reactdom reactrouter reactrouterdom reactscripts import react component react import errorboundary errorboundary import child child class app extends component constructor props super props thisstate child components go inside errorboundary render return counter inside error boundary crashes error boundary replace export default app import react component react class child extends component constructor props super props thisstate counter thishandleclick thishandleclickbind handleclick thissetstate counter gt counter counter render thisstatecounter simulate js error throw new error crashed return thisstatecounter export default child import react component react class errorboundary extends component constructor props super props thisstate error null errorinfo null componentdidcatch error errorinfo catch errors components rerender error message thissetstate error error errorinfo errorinfo also log error messages error reporting service render thisstateerrorinfo error path return something went wrong thisstateerrorinfocomponentstack normally render children return thispropschildren export default errorboundary", "num": "12740", "d": "5/2018"}, {"title": "react js version going deprecated one please enlight steps migration version", "body": "react js version going deprecated one please enlight steps migration version", "num": "12739", "d": "5/2018"}, {"title": "createreactclass missing interface constructor class", "body": "want request feature report bug feature current behavior react deprecated liftcycle method released used define compoent properties like method could define properties like use createreactclass expected behavior add interface named constructor createreactclass", "num": "12737", "d": "5/2018"}, {"title": "forwardref causes componentwillreceiveprops setstate", "body": "want request feature report bug bug current behavior inside calling causes called completed see demo expected behavior docs nt seem forbid behavior calling thissetstate generally trigger unsafecomponentwillreceiveprops sure technically bug however cause older code nt yet use reducer syntax stop working wrapped caused headscratchers refactoring old code reporting case versions react browser os affected issue work previous versions react appears given specific forwardref nt apply older versions", "num": "12736", "d": "5/2018"}, {"title": "use set component state within setinterval function", "body": "question apologize nt best place ask trying work component internal state within setinterval function know asynchronous problems need aware also know pass setstate function would help protect async problems ca nt need use changed state within setinterval function safe working different way around problem seen following nearly answers question trouble visualizing adapting maybe behavior fine stackoverflow answer sectiontimerhandler gt const elapsedsectiontimems thisstateelapsedsectiontimems stuff elapsedsectiontimems thissetstate elapsedsectiontimems restartsectiontimer gt thissectiontimeintervalid windowclearinterval thissectiontimeintervalid thissectiontimeintervalid windowsetinterval thissectiontimerhandler thissetstate elapsedsectiontimems would something like following bettersafer even though using earlier function", "num": "12735", "d": "5/2018"}, {"title": "child component correctly deletes parent state object entry wrong child unmounted upon rerender", "body": "component keeps javascript object renders components child also receives callbacks operate parent state getting behavior javascript object updated correctly delete wrong node unmounted video relevant code export default class order extends component constructor props super props commit gt consolelog thisdata thisdatatrim length gt socketemit article client insert name thisdata addneworderitem async gt let thisstatenewitems thisstatenewitems deleteneworderitem async id gt let thisstatenewitems updateneworderitem async id value gt let thisstatenewitems id value rendernewitems thisstatenewitems return null render const data export default class orderitem extends reactcomponent state null constructor props super props thissetdata props componentwillunmount consolelog unmount thispropsid setdata props thisdata props delete thisdataondelete delete thisdataonupdate handleimageinsert event gt let objectfile eventtargetfiles objectfile return handleunitarypricechange e gt let newprice parsefloat etargetvalue newprice nan thisdataarticledataunitaryprice newprice thisupdatedata handlebriefchange e gt thisdataarticledatabrief etargetvalue thisupdatedata handletablechange update gt thisdata thisdata update thisupdatedata updatedata gt thispropsonupdate thispropsid thisdata confirmdelete gt thispropsondelete thispropsid render const data articledata", "num": "12734", "d": "5/2018"}, {"title": "consumer provider properties consumer", "body": "higher meaning properties type reactconsumer type convenient usually use provider jsx import mycontext mycontext jsx import mycontext mycontext would interested knowing documented preferred way whether use full legit simplify", "num": "12733", "d": "5/2018"}, {"title": "context api bitmask related questions", "body": "playing context api bitmask feature bail unwanted rerender dynamic model json object context value dynamic meant number keys structure json object unknown json object changed know key changed seems difficult turn unknown keys static predefined bitmasks thought use case common bailout feature handle easily matching key also notice default changedbits observedbits mean limitation type context change", "num": "12732", "d": "5/2018"}, {"title": "hovering specific element affects elements", "body": "constructor props super props thisstate ishovered false thishandlemenuhover thishandlemenuhoverbind handlemenuhover thissetstate ishovered thisstateishovered render const menuactive thisstateishovered active return like add class specific div hover affects elements nt know happening", "num": "12731", "d": "5/2018"}, {"title": "react context consumer hoc", "body": "want request feature report bug feature versions react browser os affected issue work previous versions react react wanted put idea feedback see would something useful using new context api bit noticed repeating pattern lot components look something like javascript const mycontext reactcreatecontext foo const mycomponent ownprop gt myprop gt myprop ownprop export default mycomponent got wondering consumer could exposed hoc javascript const mycontext reactcreatecontext foo const mycomponent myprop ownprop gt myprop ownprop export default mycontextisconsumedby mycomponent similar redux reactrouter context value injected hoc write hoc using existing consumer component context api thought put possible inclusion api thoughts", "num": "12724", "d": "5/2018"}, {"title": "findbytype method reacttestrenderer nt find refforwarding components", "body": "want request feature report bug bug current behavior tests component passed created using ca nt found use loop nodes log see refforwardingcomponent skipped entirely current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expect second test work like first however second test failing expected behavior may way works reason expected work using make wrapped controls like example documentation writing tests want able find test besing passed correct props check dom rendered correct already tested versions react browser os affected issue work previous versions react using react failing chrome node tried versions codesandbox failed", "num": "12723", "d": "5/2018"}, {"title": "reactjs event listeners leak increase", "body": "want request feature report bug bug current behavior create classic counter component use setinterval requestanimationframe js class loading extends reactcomponent constructor super thistimer null thisstate counter componentdidmount thistimer setinterval thistickbind componentwillunmount thisclearinterval thistimer tick thissetstate prevstate gt prevstatecounter prevstatecounter return prevstate render return counter thisstatecounter open ctrl shift p check info see increasing also fiddled different possibilities setting state got result return state remain stable started implementing timer canvas see leave example reference trying achieve expected behavior nt increase versions react browser os affected issue work previous versions react chrome windows latest react latest tested react well", "num": "12721", "d": "4/2018"}, {"title": "consuming context hoc root component provider rendered multiple times identify correct context consume child component level", "body": "planning use react context api library exposes root component rcontextjs getrcontextjs hoc import rcontext rcontext export function getrcontext comp gt class render contextvalue gt rjs import rcontext rcontext export default class r render cjs problem single app multiple root components rendered since single context used consume value appjs create multiple contexts like requires passing identifier root component children corresponding identifier used consume correct context rcontextjs getrcontextjs import context rcontext export function getrcontext comp gt class render const rcontext context thispropsid contextvalue gt questions way pass certain props assume props wo nt effect life cycle case id example children immediate create idcontext hoc wrap components consume id consume rcontext based id please suggest better approaches possible thanks advance", "num": "12720", "d": "4/2018"}, {"title": "syntaxerror expected svgname prop string", "body": "assign string svgname ok assign variable svgname bad", "num": "12719", "d": "4/2018"}, {"title": "onclick android mobile working", "body": "hello using reactjs version mobile samsung galaxy mobile browser chrome firefox small app sign button works perfectly windows desktop using chrome browser however working mobile device button simply fire click", "num": "12718", "d": "4/2018"}, {"title": "onmousedown causes splash real ios browsers", "body": "want request feature report bug bug current behavior unexpected grey splash caused real ios device browsers safari chrome please checkout grey splash issue first trial later find vanilla html nt cause grey splash react jsx noticeable grey splash expected behavior wants splash versions react browser os affected issue work previous versions react react", "num": "12717", "d": "4/2018"}, {"title": "reconciliation behaves differently childrenasfunction consumer function", "body": "react developer tools highlight updates expected behavior two divs reconcile way childrenasfunction variant update dom setstate would ideal behavior since return value change consumer variant changes dom every setstate note difference occur empty first child provider case childrenasfunction consumer variants refresh setstate function returns single text node case none two versions refreshes setstate unless text changes", "num": "12715", "d": "4/2018"}, {"title": "update breaks web application", "body": "current behavior none indexjs rendered use reactscripts build web application get rproptypes undefined error visit localhost address presume proptypes deprecated onwards removed ca nt life figure calling weird part main js createreactapp builds tried updating dependencies dice update react application works fine using npm packagejson name nodewf version private true dependencies createreactapp halogen proptypes react reactbootstrap reactbootstraptoggle reactcontenteditable reactdom reactsplitpane reacttextareaautosize devdependencies reactscripts scripts start reactscripts start build reactscripts build test reactscripts test envjsdom eject reactscripts eject proxy also using cdn scripts jquery bootstrap bootstrap toggle plotly sure compatibility issue", "num": "12714", "d": "4/2018"}, {"title": "reconciliation bug occured client starts hydration", "body": "want request feature report bug bug current behavior jsx staticjs import react react function static return export default static jsx dynamicjs import react react function dynamic return export default dynamic jsx appjs import react react import static static import dynamic dynamic class app extends reactcomponent constructor props super props componentdidmount thismounted true render return thisstateloaded null export default app first server sends react app without asynchronous component loading second client starts hydration loading component asynchronously real production used code splitting webpack loaded example controlled state making app simple loaded app renders instead finally let see result component changed blue took dinner afaik react nt touch result client rendering different server html moved another page clientside routes find situation guess occurs client hydrates result serverside rendering current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example check easily clone run open expected behavior versions react browser os affected issue work previous versions react react browser chrome safari os macos windows linux react works well without bug check branch", "num": "12713", "d": "4/2018"}, {"title": "encoded character table td tags showing string incorrectly", "body": "encoded characters example show adding characters fine put tag example long outside table", "num": "12712", "d": "4/2018"}, {"title": "setstate callback fired wrong state context using reactdomunstabledeferredupdate", "body": "want request feature report bug bug current behavior callback functioning expected using directly wrapped time current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open console click button sometimes may see state callback smaller called definitely expect would bigger expected behavior said versions react browser os affected issue work previous versions react", "num": "12711", "d": "4/2018"}, {"title": "input dx improvement opportunity", "body": "want request feature report bug feature current behavior warning raised following snipped jsx import react react export default class textfields extends reactcomponent state name timeout componentdidmount emulate loading data ajax settimeout gt consolelog updating name timeout thissetstate name timeout render return expected behavior believe opportunity raise warning development would inform users ca nt update property problem raised attention versions react browser os affected issue work previous versions react react", "num": "12710", "d": "4/2018"}, {"title": "point wrong dom node", "body": "eg statea set false access thismyrefcurrent point div classname b", "num": "12709", "d": "4/2018"}, {"title": "initial css breaking react app", "body": "hey guys one problem working even simple app react link jsfield anywhere use output error", "num": "12706", "d": "4/2018"}, {"title": "coverage support jsxcontrolstatements", "body": "conditional rendering components jsxcontrolstatement produces incorrect coverage else branches using project want official facebook opinion whether updated babel ast future support please warn developers get incorrect branch coverage see reported issue facebook support approach similar jsxcontrolstatements future facebook support approach like facebook warn developers using library due incorrect coverages issue consistent jest nyc since use babel ast want request feature report bug feature current behavior incorrect coverage expected behavior correct coverage report custom conditional rendered components", "num": "12705", "d": "4/2018"}, {"title": "onclick event firing enabling button via ref", "body": "want request feature report bug possible bug needs investigation current behavior button initially rendered disabled event connected enable button via ref event get fired click current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codesandbox component ref implementation hello component based state working used behalf question hashnode regarding behavior expected behavior onclick event fires enabling button versions react browser os affected issue work previous versions react react version sandbox know version questioner share issue also work refs created callback string", "num": "12704", "d": "4/2018"}, {"title": "type invalid likely forgot export component file defined", "body": "posted question created issue voyager project thought also document using components voyager uses react following error warning reactcreateelement type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined check render method dataselectorbase uncaught error element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined check render method dataselectorbase know cases error implies problems nt think anything wrong loaddata dataselector exported voyager also believe imported right weird thing version voyager locally nt get error use released version error shows", "num": "12703", "d": "4/2018"}, {"title": "feature request get ref memory dom element mount", "body": "want request feature report bug feature current behavior currently nt great way react build ui components due needing refs check props dom element wait component mount repaint want make changes ui based information received ref current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior create dom nodes memory appending dom expect react create elements necessary memory appending mount point reactdomrender versions react browser os affected issue work previous versions react", "num": "12701", "d": "4/2018"}, {"title": "calling reactdomrender many many times slow", "body": "want request feature report bug bug current behavior calling many many times seems meaningfully worse performance rendering many elements within single react root current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example edited add devproduction builds react development react production react development examples obviously pretty contrived expected behavior perfect world would nt large performance discrepancy two approaches context working frontend plugin framework trying expose react ideally implementation detail part plugin interface interface like requires host plugin implemented react share instance react fast convenient interface like treats react implementation detail less convenient importantly incurs performance problem imagine use case nt high priority reactreactdom love understand bit better really causes performance difference whether likely ever change versions react browser os affected issue work previous versions react seems impact react amp similarly nt think browser dependent", "num": "12700", "d": "4/2018"}, {"title": "styles via classname reflected print", "body": "want request feature report bug sure might bug something right everything seems indicate work thinking potential bug possibly trying get assistance stack overflow getting anywhere current behavior trying print content modal external styles via passed print dialog preview however done line eg styles reflected current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example repo use case directions work migrating jsfiddle codesandbox better expected behavior still see styles applied using external css via going print versions react browser os affected issue work previous versions react react using chrome windows wsl sure worked previous versions started feature web app", "num": "12699", "d": "4/2018"}, {"title": "conditional rendering jsxcontrolstatements", "body": "want request feature report bug neither conditional rendering components like jsxcontrolstatement recently ran coverage report issues documented want hear official recommendation facebook reactjs team conditional rendering like according documentation approach recommended want confirm thanks", "num": "12698", "d": "4/2018"}, {"title": "ref callback called componentdidmount", "body": "want request feature report bug bug current behavior ref callback executed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example react react expected behavior ref callback executed versions react browser os affected issue work previous versions react react chrome macos high sierra", "num": "12697", "d": "4/2018"}, {"title": "allow specify displayname createcontext providers consumers", "body": "want request feature report bug bug current behavior react tree name context must like name code current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example let look react tree chrome extention page context mycontext expected behavior expexted see mycontext versions react browser os affected issue work previous versions react", "num": "12695", "d": "4/2018"}, {"title": "size prop attached dom", "body": "want request feature report bug bug current behavior size prop number think true inputs selects necessarily true rest html tags web components current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example sorry codepen example uses framework called onsenui internally uses web components onsenui framework icon web component transforms every size prop value string attached dom know example dependencies react also simple div simple also affected issue expected behavior size prop added dom number html tags nt inputs selects versions react browser os affected issue work previous versions react affected versions gt works ok versions lt browsers", "num": "12694", "d": "4/2018"}, {"title": "reacttestrenderercreate work properly forwardref components", "body": "want request feature report bug bug current behavior try access component tree component created get error current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example minimal example simply component created js import react react export default reactforwardref gt hello try use access get unexpected object passed reacttestinstance constructor tag probably bug react js import react react import create reacttestrenderer import hello hello test forwardref component gt const tree create expect treeroot expected behavior able create components created forwardref test renderer versions react browser os affected issue work previous versions react using jest forwardref exist previously", "num": "12693", "d": "4/2018"}, {"title": "seems leak dom nodes", "body": "want request feature report bug report bug current behavior react components seem leak dom nodes unmounted retaining entire dom tree current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example js fiddle test open chrome performance monitor check uncheck show stuff check box number dom nodes climb clicking garbage collect seem reclaim click run jsfiddle release old nodes uncheck enable autofocus box repeat experiment click show stuff lot time dom nodes seem get reclaimed heap snapshot shows detached dom trees referenced react dom internals expected behavior dom nodes nt retained unmounted versions react browser os affected issue work previous versions react react google chrome windows nt know issue new application may always affected", "num": "12692", "d": "4/2018"}, {"title": "possible unlimited recursive rendering hoc", "body": "want request feature report bug would consider feature current behavior react put limits recursive rendering using higherorder components however calling reproduces pretty easy pair container hoc would nt try codesandbox jsfiddle code javascript import react react import reactdom reactdom accepts component prop renders passing props real life scenario usually something const container props gt const component component props return hocversion container const withcontainer wrappedcomponent gt props gt though looks bit artificially pretty common use something like thing looks innocent const bomb withcontainer withcontainer gt null class detonator extends reactcomponent state wentoff false gooff gt thissetstate wentoff true render gt thisstatewentoff oooppps text probably wont rendered reactdomrender documentgetelementbyid root expected behavior would expect limit kind recursion blazing fast like react supposed eating lots ram short time bit difficult annoying stop versions react browser os affected issue work previous versions react reproduces chrome done react", "num": "12691", "d": "4/2018"}, {"title": "cloning child context consumer produces confusing warning error", "body": "want request feature report bug bug least request precise warnings error messages current behavior cloning children add properties overlooked context consumer subtree cloned import react react import render reactdom const provider consumer reactcreatecontext const comp children gt clonekids children const clonekids children gt reactchildrenmap children child gt reactcloneelement child childprops childpropschildren amp amp clonekids childpropschildren render consolelog documentgetelementbyid root code produces warning error introduced warning context consumer rendered multiple children child nt function context consumer expects single child function pass function make sure trailing leading whitespace around even confusing typeerror render function expected behavior maybe reactcloneelement attempt clone functions whatever result function warning part child nt function separated warnings ca nt multiple children one child function time precise warning issued versions react browser os affected issue work previous versions react tested react stackblitzchrome react chrome firefox", "num": "12689", "d": "4/2018"}, {"title": "unexpected behavior use reactforwardref reactcreatecontext", "body": "want request feature report bug bug current behavior example child used children updating even wrapped component never updates still triggered callback updates expected behavior nt update root component updated whether used children versions react browser os affected issue work previous versions react used react", "num": "12688", "d": "4/2018"}, {"title": "show culprit", "body": "want request feature report bug feature current behavior probably familiar following message warning update existing state transition within another component constructor render methods pure function props state constructor sideeffects antipattern moved never came across message created simply mounting following component js class updateduringrender extends component constructor props super props thisstate text initial updatestate text thissetstate text render thisupdatestate updated expected behavior specific component triggers warning think could even treated optional error suddenly appears app sometimes tough find culprit stack trace least offending component would helpful warning message sure solved internally yeah would nice hint help remove antipatterns versions react browser os affected issue work previous versions react", "num": "12687", "d": "4/2018"}, {"title": "strange beahvior react new context api", "body": "think bug git example npm npm start go dependencies react chrome components context orderdetailscontext root component ordersview simple component ordersviewrow subscribed component orderdetailsview problem application one dynamic context orderdetailscontext components one root component ordersview children components ordersviewrow orderdetailsview one component orderdetailsview subscribed dynamic context refreshed context data changed problem context changed subscribed component refreshed old version context data actual orderdetailsview update context updated expected orderdetailsview update context updated first solution go ordersview move orderdetailsview top render function subscribed component updated context changed second strange solution go separeted component ordersviewrow remove subscribed component updated context changed video reproduce clone npm npm start open chrome open dev tools chrome click view button expected loading text visibled hidden text updated new number displayed console log actual loading text visibled text changed console log", "num": "12686", "d": "4/2018"}, {"title": "documentation request", "body": "please document use forwardref preferred way retrieve list array items example javascript const foo reactforwardref props ref gt propssuperherosmap hero index gt", "num": "12685", "d": "4/2018"}, {"title": "unmounting fragment node children removed dom one time instead", "body": "want request feature report bug bug maybe perhaps limitation fragments let know current behavior unmounting fragment children removed dom one time top bottom means unmounting step quickly calculating dom position change save data also imagine less performant look console outputs using fragment element found using fragment element ca nt found using div element found expected behaviour fragment using div element ca nt found switching parent children parent children expected behavior fragments children would removed dom time instead one children div would removed dom time essentially removing children look like part problem versions react browser os affected issue work previous versions react unsure worked previous versions let know help anything cheers", "num": "12683", "d": "4/2018"}, {"title": "build failing error find module reactsrcreactcurrentowner", "body": "want request feature report bug report bug current behavior cloned repo onto desktop run produces following output error find module reactsrcreactcurrentowner functionmoduleresolvefilename functionresolve objectkeysforeachsrcmodule arrayforeach useforks getplugins createbundle buildeverything definitely issue environment builds fine laptop running system current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example na expected behavior code build successfully versions react browser os affected issue work previous versions react version react os ubuntu works laptop also runs", "num": "12681", "d": "4/2018"}, {"title": "undefined variable performance reactdom opera mini browsers", "body": "want request feature report bug bug current behavior loading site breaks following error proxy mobile browser opera mini extreme turbo mode catch loaded page loads browsers js switched expected behaviour browser problem issue access error logs production via beacon nt able view console logs running browser directly nt able replicate web editors since sites completely nt work opera mini believe error referencing code sorry posted wrong place sure report since relating proxy browser nt run js client expected behavior loading site render would browser js switched versions react browser os affected issue work previous versions react seeing behaviour opera mini android ios extreme turbo mode", "num": "12679", "d": "4/2018"}, {"title": "passing props parent children looks screwed", "body": "want request feature report bug guess bug current behavior want wrap children pass props children inside import react react div passes props direct children const div props gt return reactchildrenmap propschildren child gt reactcloneelement child props const app gt export default app codesandbox expected behavior output actual output reason every child contains three extra children versions react browser os affected issue work previous versions react react macos", "num": "12678", "d": "4/2018"}, {"title": "could hydrate stop modify content component binding events", "body": "since web application run php server backend use reactdomserver lots restrictions conventions translate jsx template language javascript class ssrcom extends reactcomponent constructor props super props reactdomhydrate documentqueryselector mount html hello ssr count change state sounds crazy server render template expected however react hydrate modify component content could hydrate stop modify content component binding events ways like modify react render method quit check mechanism", "num": "12677", "d": "4/2018"}, {"title": "amp amp", "body": "amp amp report bug current behavior safari browser ca nt run app chrome browser amp firefox browser ok expected behavior running main modern browsers", "num": "12675", "d": "4/2018"}, {"title": "validatedomnesting incorrectly validates table children", "body": "want request feature report bug bug current behavior shows warning element element direct child current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example please find example copied mdn first html example open browser console run console see warning expected behavior according mdn could child examples pages expect warning appear versions react browser os affected issue work previous versions react issue found chrome ff may affect browsers prior versions", "num": "12674", "d": "4/2018"}, {"title": "duplicated key list strange behavior", "body": "list duplicated items document key must unique sure react concatenates string example expected key duplicated cheers", "num": "12673", "d": "4/2018"}, {"title": "improve warning message failure initialize using", "body": "want request feature report bug bug current behavior warning failure initialize state using clear could component produces warning mycomponent properly initialize state construction expected state object undefined warning resolved adding either class definition constructor using see detail warning message counterintuitive since warning specific use triggered state lifecycle methods state initialization nt required state methods like would make sense mention explicitly warning proposal new warning message mycomponent component state must initialized using getderivedstatefromprops expected state object undefined versions react browser os affected issue work previous versions react react gt", "num": "12670", "d": "4/2018"}, {"title": "detect clicks elements inside google map infowindow react", "body": "created div element inside google map infowindow using reactdomserverrendertostring trying register click div however seem register click elements inside infowindow tried divinnerhtml infowindowcontent f content wrapped backticks tag works seem use custom component tag carousel inside wrong divs clickable created reactdomserverrendertostring issue simplified code const map new googlemapsmap thisrefsmap zoom initialzoom center lat thispropsinitialpositionlat lng thispropsinitialpositionlng const marker new googlemapsmarker key fid label position lat flat lng flng map function infowindowcontent flat const content function infowindowclickhandler flat consolelog google map infowindow clicked f f", "num": "12668", "d": "4/2018"}, {"title": "get state parent child without passing state props", "body": "true get state methods parent component child using keyword class app extends component constructor props super props thisstate value render child component class child extends component constructor props super props render alert thispropsthatstatevalue return null", "num": "12667", "d": "4/2018"}, {"title": "react background image overlay opacity", "body": "find way set background image overlay opacity reactjs trying something like style url background jsx portfolio", "num": "12666", "d": "4/2018"}, {"title": "embed update rerender src property changes", "body": "want request feature report bug bug current behavior component renders child property retrieved endpoint depends props passed component property changes existing contents embed change fix component entirely replace something else instance loading state put new updated reproduced jsfiddle two trivia jsfiddles referred embed transitioning clicking button update embed despite property visibly updated devtools expected behavior changes content change versions react browser os affected issue work previous versions react reproduced unclear version jsfiddle using version macos beta", "num": "12665", "d": "4/2018"}, {"title": "question deal renderprops components callback hell", "body": "issue somewhat long eager goto deal renderprops components callback hell yes package awesome problems let show jsx import value reactpowerplug import adopt reactadopt aandb adopt mapper b b gt b want dynamic jsx import adopt reactadopt aandb adopt mapper b b gt b gt b fact bug least nt cache component returned react always treat like different component rebuild dom well bug example really dynamic want really dynamic assume fixed bug dom rebuild even fixed expand influence vdom structure vdom structure changed dom rebuild way deal renderprops components callback hell thought came jsx import react purecomponent component react class result extends component render return thispropschildren export class compose extends component constructor props super props thisskipforce true componentwillupdate thisskipforce true render const mapper children thisprops const mapperisarray objectprototypetostringcall mapper object array const arg mapperisarray return objectkeys mapper map key gt const value mapper key const withkey mapperisarray null key return typeof value function reactcreateelement reactcloneelement value withkey args gt arg key args maybe use args rather args thisskipforce thisforceupdate return null gt thisskipforce false return children arg works relies fact last child render last fact defined react spec relies deprecated better methods", "num": "12664", "d": "4/2018"}, {"title": "skip second argument reactcreateelement", "body": "want request feature report bug feature current behavior nt needed still pass second argument proposal allowed omit second argument allowing import react react import foo foo import bar bar const reactcreateelement const app gt div hello foo ok p foo bar key hi span heya demo code currently naively use", "num": "12663", "d": "4/2018"}, {"title": "bug keyed fragments traversed reactchildrenmap function", "body": "want request feature report bug bug current behavior keyed fragments traversed reactchildrenmap current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open console provided example see array traversed keyed fragment expected behavior per documentation keyed fragments traversed reactchildrenmap function array versions react browser os affected issue work previous versions react react tested latest chrome browser codesandbox example universal react project node", "num": "12662", "d": "4/2018"}, {"title": "returning fragment undefined children render causes invariant violation", "body": "want request feature report bug reporting bug current behavior react reports invariant violation method class component returns children current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example codesandbox jsx import react react import render reactdom class app extends reactcomponent render return undefined render documentgetelementbyid root expected behavior would expect program render nothing contexts children react allowed renders fine children returned method class component versions react browser os affected issue work previous versions react tested version", "num": "12661", "d": "4/2018"}, {"title": "question integrate react library react", "body": "requirement integrate one app created using react existing app still react need help understanding points risk integration probable solution issue due incompatibility used rollup create cjs library react app thanks", "num": "12660", "d": "4/2018"}, {"title": "bug clicked button error", "body": "want request feature report bug bug current behavior button click current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example clicked button occur error remove components onclick event js closetutorial e gt estoppropagation epreventdefault expected behavior versions react browser os affected issue work previous versions react react react browser chrome os", "num": "12659", "d": "4/2018"}, {"title": "question best way get element dom reference", "body": "preface writing popup component whose task positioned content next call b relative target next call b arrow optional next call arrow popup component like core positioning used create dropdown list tooltip something else resolve task need get dom reference b dom reference dom reference arrow go use realisation example sandbox source take props b arrow popup calculated put b dom note positioning use popperjs library problem flexibility want transfer popup component render function like useful smooth transitions one next animating parent component store custom inner structure nt know right way get reference b arrow maybe get b popup arrow thanks thanks", "num": "12657", "d": "4/2018"}, {"title": "createportal fails silently used outside render method", "body": "updated package work react used replaced nothing happened errors displayed wasted several hours understand could used anywhere example case used would great warning used outside render let people know wrong maybe consider adding note docs thanks", "num": "12653", "d": "4/2018"}, {"title": "mute componentdidcatch allow developers log", "body": "want request feature report bug feature current behavior child throws error inside error boundary hits error still logged console regardless handling inside expected behavior would nt make sense give fine grated control errors get logged bubble way error boundary motivation using error logging service rollbar sentry etc normally nt really needwant error bubble console production testing error boundary component feels bit funky right test runners like jest mock jsdom virtual console suppress error showing test results severity error caught specific error boundary might warning thus would throw consolewarn along already thrown error trycatch outside react would also handle logging catch rethrowing specific exception wonder opinion", "num": "12652", "d": "4/2018"}, {"title": "context provider root element causes omit output", "body": "want request feature report bug bug current behavior missing generated string causing existing valid dom cleared current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior markup root element missing versions react browser os affected issue work previous versions react sure", "num": "12651", "d": "4/2018"}, {"title": "question marking html elements testing", "body": "hi part component renders like jsx return yesterday tomorrow today iv using prop find elements testing enzyme like nt like much option comes mind clickable div make custom class name search class name search text function name div position makes tests fragile would like avoid mark html elements easy searching", "num": "12650", "d": "4/2018"}, {"title": "", "body": "want request feature report bug neither question current behavior currently seems unknown dom attributes boolean values passed exception data attributes aria attributes based docs looking code nt clear whether intentional bug came across currently server rendering pages attributes react using make work expected deleting would work however since lot attributes nt actual value set unknown passed happy open pr either update docs fix actually bug wanted verify first repro versions react browser os affected issue work previous versions react react", "num": "12649", "d": "4/2018"}, {"title": "render props amp getderivedstatefromprops issue", "body": "hi guys want request feature report bug possibly bug current behavior issue hoc update props pass child components example hoc component query data server data fetched passes use updated new props contrary happens called first time example code class extends reactcomponent render return class b extends reactcomponent static getderivedstatefromprops nextprops prevstate consolelog nextprops return null data obj empty filled response versions react browser os affected issue work previous versions react react thank", "num": "12646", "d": "4/2018"}, {"title": "read property changedbits undefined", "body": "want request feature report bug bug current behavior using new context api react native app ends exception unfortunately unable provide viable reproduction environment tried codesandbox snack expo working fine happening react native app running android phone thing got screenshot debugger strangely enough code line would read would working correctly chance typo tsx export const rootcontext reactcreatecontext export const rootprovider rootcontextprovider export const app gt ok versions react browser os affected issue work previous versions react react reactnative windows", "num": "12645", "d": "4/2018"}, {"title": "onchange nt fire capturephase document listener underlying native event calls setstate", "body": "want request feature report bug bug current behavior checkbox fires onchange controlled component somehow related global event listeners setstate see sandbox example expected behavior checkbox fire onchange handler broken example react working example react version", "num": "12643", "d": "4/2018"}, {"title": "render errors overwrite previous html", "body": "want request feature report bug bug current behavior react render errors killed execution app would leave existing html page react existing html gets wiped white screen death expected behavior would much better user experience could configure existing html remained render failed app functionality would fail page would still users could use standard html links etc continue navigating cases may even notice app broke aware error boundaries proposed solution react however seem like great solution us two reasons need pepper lot across entire codebase get reasonable granularity restrict impact errors example whatever major code change app might hundreds components even get segment app may significant replaced error message unexpected error entire purpose page replaced error message far better us stop js execution leave user static html obviously bugs app fault fix always predictable example today tracked bug throwing exception safari private browsing mode tough issue anticipate difficult ensure app bugfree miss something outcome react catastrophic instead merely reduction user experience demo react code react", "num": "12642", "d": "4/2018"}, {"title": "react ssr image onload hydrate work chrome", "body": "want request feature report bug bug current behavior chrome seem fire image initial server side html fires safari firefox current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example example seen pull repo go console log image loaded occur chrome see log safari firefox changing file causes img onload trigger properly expected behavior expected behavior onload fire images initial server side html versions react browser os affected issue work previous versions react browsers chrome os x el capitan react versions react react", "num": "12641", "d": "4/2018"}, {"title": "traverse react tree", "body": "would like propose add method react today lot libraries relies walking react tree ssr used preload data styles whatever asking found bug loadable components fixed bug also react apollo probably libraries use strategy several questions good strategy tell good strategy could maintain expose react another package", "num": "12640", "d": "4/2018"}, {"title": "remote form submission via dispatchevent broken firefox", "body": "want request feature report bug bug current behavior following result called firefox click external submit via button one things love react smooths browser idiosyncrasies plagued web development many years rare find edge case like however pretty weird way submit form originally expected behavior seems like called maybe bug firefox react maybe better way compatible across browsers versions react browser os affected issue react firefox mac work previous versions react idea", "num": "12639", "d": "4/2018"}, {"title": "first pass context lost call return", "body": "really enjoying explorations building better compound components using experimental issue intended start discussion shortcomings current api ran experiments used leaf node yields data successful since solved run issues stability feature however compound component usage implement features layout often yields element render prop cases elements rendered parent context created first pass lost reproduction case found enduser components unaware use callreturn internally would expect see greetings instead default nt consider bug rather sideeffect using api however believe usecase valid one providing api supports would beneficial library authors share thoughts api discussion initially api called coroutine yield suggested subtree would yield later resume presumably api renamed suggestion would implement coroutineyield functionality continues rendering continuation children yield fiber course aware choices led current api input welcomed would function similarly current handler return children render instead returns aggregated value value passed second argument together yield element props index within coroutine element returned continuation reconciled yield fiber children preserving position tree thus also context accumulated coroutine yield note new api would strict superset current implementation imagine callreturn could written coroutine yield follows javascript const createcall children handler props gt createcoroutine createyield null props values index gt handler valuesprops valuesyields props reactchildrentoarray children props yields gt props yields props const createreturn value gt createyield value gt null dived reconciler implementation call return implementing api like seems feasible definitely willing give shot approach clear however aware decisions led current implementation exact impact performance increased tree traversals etc ccing sebmarkbage gaearon edit prototyped api codesandbox causes multiple renders using uses nasty traversals highly unstable illustrates idea outlined", "num": "12638", "d": "4/2018"}, {"title": "three functions", "body": "reactminjs version", "num": "12637", "d": "4/2018"}, {"title": "ca nt validate value prop context provider using proptypes", "body": "want request feature report bug sure bug feature request current behavior ca nt validate value prop context provider using proptypes see codesandbox example expected behavior expected proptypes violation warning console versions react browser os affected issue work previous versions react happy implement others also wish possible validate value context provider using proptypes would help someone pointed right direction though nt dug react internals much yet", "num": "12636", "d": "4/2018"}, {"title": "support performance measures production", "body": "want request feature report bug request feature like access api production build react collect timing measurements real users field suspect performance timing get expensive open suggestions make nicerpossible", "num": "12634", "d": "4/2018"}, {"title": "add react lifecycle diagram documentation", "body": "want request feature report bug feature sorta love see something similar included documentation page component lifecycles remember gaearon sharing found invaluable quick reference", "num": "12633", "d": "4/2018"}, {"title": "update component without rerender", "body": "reactjs doc says knowledge far way update ui create new element pass reactdomrender consider canvas component could update without rerendering example componentwillreceiveprops create new line canvas even shouldcomponentupdate retrun false canvas updated wrong", "num": "12632", "d": "4/2018"}, {"title": "gas", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12631", "d": "4/2018"}, {"title": "css transition dropin substitute", "body": "want request feature report bug report bug current behavior react app crashes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example transition component replaced csstransition getting delay enter animation understand swap easily expected behavior used transition component versions react browser os affected issue work previous versions react chrome mac os x high sierra", "num": "12627", "d": "4/2018"}, {"title": "breaking change using getting lot ref string errors", "body": "want request feature report bug bug current behavior use new version getting lot error concerning set ref name component nt owner works fine sure code got stringent bug detecting things nt changed code work either way many third party libraries breaking change current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior work identical new thing maybe even larger rolling code back works normally versions react browser os affected issue work previous versions react", "num": "12626", "d": "4/2018"}, {"title": "nt call getderivedstatefromprops purecomponent props", "body": "want request feature report bug feature current behavior called purecomponent even props nt changed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react hoping would nt called purecomponent props nt changed reason shouldntcould nt case", "num": "12619", "d": "4/2018"}, {"title": "support partial hydration static content", "body": "want request feature report bug feature current behavior hydrating serverrendered content difficult inefficient impossible example process rendering server significant work additional data may required data processing conversion custom templating localization content large product information news article resulting content highly dynamic changes state choice recreate within react paradigm recreate client however complicated servergenerated content often typically static delivering redundant copy static content client compare ignore hydration seems waste resources prohibitively expensive current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior instead additional complications recreating client hydration much easier accept content server asis tell hydrate leave alone may options nonhydrating ssr add new callback disable hydration component content javascript export default class nohydrate extends component return false avoid rerendering component hydrate shouldcomponenthydrate return false render server simply render content client never called server content accepted asis return thispropschildren access ssr content dom probably worst option though one definitely works currently use empty content actually works documented supposed considering way make work documenting may needs happen however could added behavior would look cleaner versions react browser os affected issue work previous versions react version sure working option worked supposed work future versions", "num": "12617", "d": "4/2018"}, {"title": "uncaught typeerror super expression must either null function undefined importing react reactdom", "body": "dependencies version helps simplest code hello world using react component import react react import reactdom reactdom class hello extends reactcomponent render return hello world reactdomrender documentgetelementbyid root using bundlejs html script bundle everything getting error thanks advance", "num": "12616", "d": "4/2018"}, {"title": "unexpected warning hydrating portal ssr", "body": "want request feature report bug bug current behavior given following simplified snippet jsx class hovermenu extends reactcomponent render typeof document undefined return null const root documentgetelementbyid root return reactdomcreateportal hello world root class para extends reactcomponent render return text valid exists following error shown hydrating ssr warning goes away update definition prefer double rendering caused nt quite understand error telling rendered serverside either case error particularly confusing dom even rendered inside dom wonder happening nested inside react expected behavior error thrown least error message clearer versions react browser os affected issue work previous versions react chrome react ssr next", "num": "12615", "d": "4/2018"}, {"title": "invalid value data prop expected behavior", "body": "per blog post react allows passing data attributes freely react macos chrome freely seems stop short functions replication steps behavior expected linksrecommendations silence disable welcome console errors stack traces printed three messages scroll whole page console every reload love find way around nt involve hacking app code react disable warning following closed thread console warn vs error led currently open thread warning output hooks currently trying negative lookaround regex filters chrome dev tools locking dev console process edit dev tools filter solved issue well enough leaving post case bug", "num": "12614", "d": "4/2018"}, {"title": "context null", "body": "want request feature report bug bug current behavior called context executed making impossible access statically defined class methods jsfiddle expected behavior would expect provided context class method defined example simple class static methods accessed", "num": "12612", "d": "4/2018"}, {"title": "react setstate callback called external npm packaged component", "body": "creating one npm package react setstate callback working npm package build used react tried react everything working fine help resolve issue appreciated", "num": "12611", "d": "4/2018"}, {"title": "", "body": "want request feature report bug neither question current behavior unable locate reacttestrenderer source tree created tree created contain generated html optional component property omitted confusing since react omit entirely generated html jsx element attributes whose value wanted confirm expected behavior assume understand case eg explicit test property expected behavior na versions react browser os affected issue work previous versions react react react test renderer browseros na worked previously na", "num": "12608", "d": "4/2018"}, {"title": "ismounted deprecated", "body": "get ismounted deprecated plain javascript react classes error dependencies wan na know problem reactnavigation", "num": "12605", "d": "4/2018"}, {"title": "nested context update longer", "body": "want request feature report bug bug current behavior nested context consumers seem update leaving higher updates stale expected behavior critical piece code composes multiple consumers one dynamic array context providers creates nested blob consumers receiver sitting end example first consumer fires get value returns subtree contains second consumer contains nt actually render looks like something contextconsumer prevents react alphas believe would render regardless wonder would possible forward changed values actual receiver ca nt call setstate versions react browser os affected issue work previous versions react react", "num": "12604", "d": "4/2018"}, {"title": "react migration issue", "body": "reactlib reactdomlib anymore getting error module found error resolve module reactdomlibreactinjection parts code used import domproperty reactdomlibreactinjection dompropertyinjectdompropertyconfig config please give alternative solution", "num": "12603", "d": "4/2018"}, {"title": "reactdom use coffeescript", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12602", "d": "4/2018"}, {"title": "put two root subroot items reactdomrender like case creating canvas", "body": "files rendered working fine canvas printed product page next files like fronted page product canvasas mentioned render pages time designing pages second canvas element printed way create canvas print files please suggest current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12597", "d": "4/2018"}, {"title": "question context provider state initialisation", "body": "consider component wrapping context provider js class valuewrapper extends reactcomponent constructor props super props thisstate value null setvalue thissetvalue setvalue value gt thissetstate value render gt consumer might want set default value first mounted way see using new api check existing value first render js class valueupdater extends reactcomponent state inputvalue handleinputchange e gt thissetstate inputvalue etargetvalue render gt value setvalue gt value setvalue thisstateinputvalue seems break golden rule updating state render method would immediately cause rerender ideally would able call context method component context render prop possible far tell docs suggest passing props another component tried initialisation component method would called every render surely would rerendered time better pattern trying use context inappropriately", "num": "12596", "d": "4/2018"}, {"title": "ca nt use asyncstorage fetch inside getderivedstatefromprops", "body": "trying migrate using using tab navigation adding property state screen file tab detect correct index load value storage fetch data api currently inside tab screen using new static function nt seem able update state within asyncstorage fetch imported service wrapper function fetch call api tried using fires first time tab loaded need storage api call every time user changes tab", "num": "12595", "d": "4/2018"}, {"title": "getting warning switching development production", "body": "scripts include html get thoughts thanks", "num": "12593", "d": "4/2018"}, {"title": "add unicitykey save react rendering subpart dom nt changed", "body": "gt new feature proposal today want save react rendering sub part parent choice create nested implement shouldcomponentupdate useful case apps little likely written multiple nested components since every dom part unique splitting app components would verbose main component page inline dom render function time depending app state big dom nodes could save rerendering idea able use kind unicitykey would tell react okay unicitykey changed need go deeper node unchanged example would inline version", "num": "12592", "d": "4/2018"}, {"title": "multiple renderers allow context", "body": "currently nt allow multiple renderers share context however relax constraint allowed long rendering nt interleaved pop provider also pop sigil need run fabric rn time", "num": "12589", "d": "4/2018"}, {"title": "property", "body": "puzzled using property access dom component property access object purpose property", "num": "12588", "d": "4/2018"}, {"title": "controlled nt update firefox also setting state another event", "body": "reporting bug current behavior selecting value react controlled select box firefox selection nt change occurs mousedown handler also generates state change seems occur mousedown handler sets state rerenders dropdown onchange event handler fires onchange triggered old select value react provided old state rerender codepen modified example docs steps reproduce run example firefox open dropdown select different value eg grapefruit observe new value selected expected behavior select dropdown updated value available react versions react browser os affected issue work previous versions react tested firefox development edition normal osx using react also encountered windows sure exact versions tested chrome everything works intended osx windows", "num": "12584", "d": "4/2018"}, {"title": "anchor keepdefault", "body": "way keep anchor default click handling along using onclick trying make controlled link open new tab", "num": "12583", "d": "4/2018"}, {"title": "check", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12582", "d": "4/2018"}, {"title": "question react components", "body": "click react component twice new requisition made observed opening chrome networking tab clicking twice element example happens react version", "num": "12581", "d": "4/2018"}, {"title": "question getderivedstatefromprops previous props", "body": "read article update async rendering little doubt ie doest receive prevprops one arguments situations useful compare prevprops nextprops article suggests ie may notice example propscurrentrow mirrored state imho wrong couple reasons first one breaks single source truth rule also inconvenience keeping propscurrentrow statelastrow sync second one think summarized ie key dry repeat figure absolute minimal representation state application needs compute everything else need ondemand suggestion basically seen since dawn react copying prop state around need looks bit wrong suggestion would add argument", "num": "12577", "d": "4/2018"}, {"title": "", "body": "", "num": "12576", "d": "4/2018"}, {"title": "feature request umd version reacttestrenderer", "body": "react reactdom cjs umd versions available possible create umd version reacttestrenderer well", "num": "12572", "d": "4/2018"}, {"title": "reactjs logo license", "body": "unable find license react logo anyone know license", "num": "12570", "d": "4/2018"}, {"title": "silence noisy missingkey warning nt apply", "body": "like request feature would enable us silence missingkey warning since nt apply serverside applications example library using react serverside templating using demo app ideally able set property silence quite noisy crowds dev logs listening lt get gt get lt get users warning child array iterator unique key prop check toplevel render call using see information userrow userslist div body html master warning child array iterator unique key prop check toplevel render call using see information li paginate userslist div body html master span li ul nav paginate userslist div body html master gt get users lt get users gt get users lt get users gt get users lt get userstesting warning child array iterator unique key prop check toplevel render call using see information usersshow div body html master gt get userstesting lt get users gt get users lt get userstestingedit gt get userstestingedit lt get warning child array iterator unique key prop check toplevel render call using see information p homepage div body html master button div div form newmessagepanel div div homepage div body html master warning child array iterator unique key prop check toplevel render call using see information messagepanel div div homepage div body html master gt get lt get gt get lt post gt delete lt get gt get", "num": "12567", "d": "4/2018"}, {"title": "add isstatelessfunctioncomponent reactis package", "body": "want request feature report bug want request feature current behavior api expected behavior writing hoc could forward ref wrapped component according react specification ref allowed given stateless function component need api tells whether component sfc course add forwarded ref component without check whether sfc leave runtime error typescript language prevent static analysis warnings wish util api solve problem contribute component type narrowing new apis suggestion reactisisstatelessfunctioncomponent reactisisclasscomponent versions react browser os affected issue work previous versions react react amp reactis", "num": "12566", "d": "4/2018"}, {"title": "warning getderivedstatefromprops valid state object null must returned returned undefined", "body": "want request feature report bug depends look sure looks like bug current behavior nt explicitly return anything warning output console warning getderivedstatefromprops valid state object null must returned returned undefined expected behavior treat really inconvenient add extra unneeded statement end unnecessary complication code adding noop line making everybody code less clean reason treat versions react browser os affected issue work previous versions react", "num": "12562", "d": "4/2018"}, {"title": "reactdomrender calls rerender context consumers unnecessarily", "body": "want request feature report bug bug current behavior subsequent calls tree causing consumers rerender even provided value static amp reference static primitive type whereas normal rerender caused ie nt cause situation occurs update blocker provider amp consumer thysultan provided excellent demo expected behavior calls behave rerenders caused tree correctly reconciled recreated scratch logical nested rerenders avoided versions react browser os affected issue work previous versions react react", "num": "12561", "d": "4/2018"}, {"title": "react onclick event firing samsung native browser", "body": "click firing samsung native browser", "num": "12560", "d": "4/2018"}, {"title": "unexpected warning use getderivedstatefromprops", "body": "want request feature report bug bug current behavior v use method controlled component value input field get warningerror says switching controlled uncontrolled vice versa remove error goes away current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example import react component react class usersettings extends component constructor props super props handlechange e thissetstate etargetname etargetvalue handleupdateuser e epreventdefault const updateuser uid thisprops updateuser uid thisstate static getderivedstatefromprops nextprops return firstname nextpropsuserfirstname lastname nextpropsuserlastname email nextpropsuseremail render const firstname lastname email thisstate return settings thispropsuserauthstatus first name last name email export default usersettings expected behavior nt expect get warning versions react browser os affected issue work previous versions react react os mac ossierra browser chrome", "num": "12558", "d": "4/2018"}, {"title": "webpack package react development mode popprovider error", "body": "want request feature report bug bug current behavior hi used webpack package react reactdom problem compiling reactdomdevelopmentjs problem browser opened reactdomdevelopmentjs file problem sentence reactfiberscheduler function discovered problem occurs development mode problem production mode current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example tried pack react reactdom webpack webpack devserver problem webpackconfigjs javascript const webpack require webpack path require path extracttextplugin require extracttextwebpackplugin htmlwebpackplugin require htmlwebpackplugin uglifyjsplugin require uglifyjswebpackplugin const publicdir dlldir pathresolve dirname dll appdir pathresolve dirname scripts rootdir pathresolve dirname builddir pathresolve dirname build styledir pathresolve dirname stylesheets manifestdir require pathresolve dirname const port const webpackdevconfig mode development devtool sourcemap entry index output publicpath publicdir filename name hash js path builddir optimization minimize true minimizer new uglifyjsplugin sourcemap true uglifyoptions compress unused false deadcode false warnings true output comments true resolve modules nodemodules appdir dlldir externals jquery jquery module rules test js x include appdir dlldir styledir use loader babelloader test css use extracttextpluginextract fallback styleloader use loader cssloader options importloaders loader postcssloader publicpath styledir test pngjpgjpegbmpgif use loader urlloader options limit loader imagewebpackloader plugins new webpacknoemitonerrorsplugin new webpackdllreferenceplugin manifest manifestdir context rootdir new extracttextplugin name hash css new htmlwebpackplugin publicpath publicdir filename indexhtml template chunks index inject body devserver host port port proxy historyapifallback true moduleexports webpackdevconfig expected behavior normal operation versions react browser os affected issue work previous versions react", "num": "12555", "d": "4/2018"}, {"title": "setstate always triggers componentwillreceiveprops", "body": "hi since react every triggers behavior breaking change project causes lot problems normal behavior bug also triggers new method", "num": "12554", "d": "4/2018"}, {"title": "meta bringing flow types line apis", "body": "hi realize react team nt work flow directly react typings live however currently large gaps flow support new apis thought might good raisetrack benefit people searching react tracker filed issues flow repo missing typings nt outstanding prs x prefixed lifecycles commit x commit x commits x pr pr pr pr pr feel free close issue nt think useful maybe react team knows someone flow team help give priority libdef updates especially prs", "num": "12553", "d": "4/2018"}, {"title": "react context api typeerror set property currentvalue undefined", "body": "want request feature report bug bug current behavior using new context api getting error versions react browser os affected issue work previous versions react mycontext provider consumer consumer context gt contextdata return thispropschildren return null render return context gt thisconsumer context sure bug react something correctly", "num": "12552", "d": "4/2018"}, {"title": "new context provider may block old context propagation children constant", "body": "want request feature report bug bug current behavior seems children newstyle context constant block updates oldstyle context providers propagating consumers sandbox demonstrates issue clicking button number correctly increment update propagated button colors button clicked causes update newstyle copy source code sandbox jsx import proptypes proptypes import react react import reactdom reactdom class root extends reactcomponent constructor props super props thisstate count thiscountup thiscountupbind getchildcontext return thiscontext count thisstatecount countup thiscountup render return thispropschildren countup thissetstate count gt count count rootchildcontexttypes count proptypesnumberisrequired countup proptypesfuncisrequired const ctx reactcreatecontext class extends reactcomponent constructor props onclick void super props thisstate color randomhexcolor newcolor thisnewcolorbind render return newcolor const color randomhexcolor thissetstate gt color function randomhexcolor const colorstr mathfloor mathrandom mathpow tostring return slice colorstrlength colorstr class extends reactcomponent render return ctx gt class extends reactcomponent render return count proptypesnumberisrequired countup proptypesfuncisrequired reactdomrender documentgetelementbyid root expected behavior oldstyle newstyle context updates coexist versions react browser os affected issue work previous versions react also broken seems happen constant happens children provided first call updated directly use instead problem happen also problem using production optimization hoists constant elements outside component specified children constant would even defeat fixworkaround example", "num": "12551", "d": "4/2018"}, {"title": "feature portals virtual dom", "body": "like idea portals proposal extend idea short special element react allow connect portal element without real id dom element something like jsx const app gt lt gt const somewidget gt reactdomcreateregion somewidget guid idea portal region anywhere virtual dom rendered asynchronously needed currently working project uses custommade library rxjs based frintjs make something like works libraries look connect widgets react application dynamically props needed", "num": "12550", "d": "4/2018"}, {"title": "upgrade babel", "body": "babel still beta presumably released soon get head start upgrading perhaps stable enough us upgrade even final release one benefit could use jsx fragment syntax tests yay reznord volunteered pick", "num": "12548", "d": "4/2018"}, {"title": "broken link react jsx tag descriptions", "body": "current behavior link address linked page regarding reactspecific tag leads page link following paragraph also reactspecific attribute dangerouslysetinnerhtml used directly inserting html strings component", "num": "12547", "d": "4/2018"}, {"title": "reactdom development bundle uses arrayfrom", "body": "want request feature report bug bug current behavior currently versions ship reactdomdevelopmentjs containing usage available certain reactsupported browsers like causes breakage particular code paths taken browser ran using current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reproduction see hello world crash show nothing expected behavior would use document polyfill required versions react browser os affected issue work previous versions react internet explorer", "num": "12540", "d": "4/2018"}, {"title": "support hydration html minification", "body": "want request feature report bug report bug current behavior replaces dom ssr page served two sibling links page attributes wrongly set little repl replicate behaviour server responds html correct right hydration first changed whitespace artifacts added expected behavior first changed versions react browser os affected issue work previous versions react react chrome macos", "num": "12536", "d": "4/2018"}, {"title": "build reactjs working", "body": "react js project working run npm start command create build upload server working also set path homepage packagejson file buildzip build folder srczip src folder project unable find issue think happen router homepage name myapp version private true dependencies datatablesnet datatablesnetdt react reactbootstraptable reactdom reactrouterdom reactscripts reactable scripts start reactscripts start build reactscripts build test reactscripts test envjsdom eject reactscripts eject", "num": "12535", "d": "4/2018"}, {"title": "improve reactdom uppercase html warning", "body": "want request feature report bug improvement requestdiscussion current behavior rendering reactdom foobar using uppercase html always use lowercase html tags react expected behavior warning message improved make obvious fix issue different use cases example obvious message custom components add dashes first letter capitalized actually react component idea open suggestions warning versions react browser os affected issue work previous versions react master", "num": "12527", "d": "4/2018"}, {"title": "provide way detect infinite component rendering recursion development", "body": "want request feature report bug feature possibly bug current behavior trying new context api project awesome however haste start using managed stumble situation every time would try render certain component making use different contexts app would completely freeze thing would let get error state forcefully kill process via chrome task manager nothing would logged console app would completely freeze opened task manager saw cpu spiked every time would go component way could stop crash tab finally threw statements saw entered infinite loop providers managed get app stop crashing still unsure exactly happening sure using api incorrectly somehow confusing problem diagnose error checking would incredibly useful expected behavior would beneficial sort checks place similar happens many calls happening closely call example way instead freezing everything permanently app could least crash report sort information help realize gone wrong versions react browser os affected issue work previous versions react react chrome", "num": "12525", "d": "4/2018"}, {"title": "unmountmount console warning changed behaviour react", "body": "want request feature report bug bug current behavior migrating large codebase react following messages started showing console warning unmountcomponentatnode node attempting unmount rendered react toplevel container instead parent component update state rerender order remove component printwarning warning unmountcomponentatnode handleclick inline babel callcallback invokeguardedcallbackdev invokeguardedcallback invokeguardedcallbackandcatchfirsterror executedispatch executedispatchesinorder executedispatchesandrelease executedispatchesandreleasetoplevel foreachaccumulated runeventsinbatch runextractedeventsinbatch handletoplevel batchedupdates batchedupdates dispatchevent interactiveupdates interactiveupdates dispatchinteractiveevent warning render replacing reactrendered children new root component intended update children node instead existing children update state render new components instead calling reactdomrender fully understand tracked unmountingmounting components event click see order reproduce click header trigger warnings example running react warningsissues present seems like function unmounts component asynchronously event debugging executing method root still populated html internal react properties still present probably makes following call problematic current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example see order reproduce click header trigger warnings expected behavior warnings present console like react versions react browser os affected issue work previous versions react osbrowsers bug present react works expected react", "num": "12524", "d": "4/2018"}, {"title": "getderivedstatefromprops suppress state initialized warning", "body": "want request feature report bug either bug feature depending team sees current behavior presence suppress warning initialized even always called even first render jsx class foo extends reactcomponent static getderivedstatefromprops props return propsa uncommenting constructor silences warning redundant work constructor props super props thisstate propsa render slightly silly example return thisstatea expected behavior always called even initial render maybe considered initialized state means second argument allowed undefined would first call state initialized user change would breaking change depends user breaking pattern initializing state constructor although brings memories alternatively called initial render class implementer would call getderivedstatefromprops spread result initial state definition clearly possible anymore versions react browser os affected issue work previous versions react", "num": "12523", "d": "4/2018"}, {"title": "react constructor trigger twice strict mode", "body": "want request feature report bug bug current behavior constructor trigger twice strict mode current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior behavior like normal mode versions react browser os affected issue work previous versions react react chrome latest macos", "num": "12522", "d": "4/2018"}, {"title": "whitelist unknown tag warning", "body": "want request feature report bug feature current behavior warning expected behavior show warning versions react browser os affected issue work previous versions react react sure whitelisted used stuff maybe like workaround mind something related", "num": "12520", "d": "4/2018"}, {"title": "react property createref exist type typeof react", "body": "according new docs creating refs upgraded get errors reactcreateref property createref exist type typeof react", "num": "12519", "d": "4/2018"}, {"title": "event listener attached still called calling", "body": "want request feature report bug bug current behavior event listener attached still called calling target example codesandbox link js class app extends reactcomponent componentdidmount documentaddeventlistener click thishandleclickondocument windowaddeventlistener click thishandleclickonwindow componentwillunmount documentremoveeventlistener click thishandleclickondocument windowremoveeventlistener click thishandleclickonwindow handleclickondocument e gt consolelog handling event document handleclickonwindow e gt consolelog handling event window render return console log expected behavior wo nt called log console versions react browser os affected issue work previous versions react react browser chrome", "num": "12518", "d": "4/2018"}, {"title": "userlist component show browser ul children element thing components folder", "body": "want request feature report bug bug current behavior import sc soundcloud import react react import reactdom reactdom import provider reactredux import createstore applymiddleware redux import synchistorywithstore reactrouterredux import combineforms createforms reactreduxform import browserrouter router route browserhistory reactrouterdom import thunk reduxthunk import promise reduxpromise import createlogger reduxlogger import allreducers reducers import app componentsapp import clientid redirecturi constantsauth furthermore inside appjs following written produces browser console world causing browser npm start display expected behavior designed many components expecting blank page versions react browser os affected issue work previous versions react another comprehensive representation problem", "num": "12517", "d": "4/2018"}, {"title": "warning keeps appearing", "body": "want request feature report bug might bug current behavior replaced componentwillreceiveprops newly added getderivedstatefromprops warning keeps appearing console doubted higher order component first sight removed coupling component higher order wrapper also removed render effort remove side effects apparently componentwillreceiveprops component get rid warning thing could explicitly assign null warning gone missing something bug also wish warning could optionally turned development environment considering legacy react libraries still use injected eg hoc javascript class rootcontainer extends reactcomponent constructor super thisstate thiscomponentwillreceiveprops null way turn warning static getderivedstatefromprops nextprops prevstate return prevstate render return thispropshistory thispropschildren null export default rootcontainer export default withrouter connect makemapstatetoprops rootcontainer current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior warning least turn option even environment versions react browser os affected issue work previous versions react react reactdom reactredux reactrouterdom update apr reacthotloader cause warning", "num": "12516", "d": "4/2018"}, {"title": "provide better error circular context consumer", "body": "want request feature report bug requesting feature current behavior named consumer child component name parent component go infinite loop change name child component render without problems current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior showing error message warning console", "num": "12515", "d": "4/2018"}, {"title": "get width amp height", "body": "need get width amp height image tried way need get dimentions mount browser resizing", "num": "12514", "d": "4/2018"}, {"title": "setstate method clarification", "body": "render method called every number properties set using setstate ca nt get parameter pass setstate saying nt rerender component setstate method call callback function setstate setting state render called twice found calling twice optimized", "num": "12513", "d": "4/2018"}, {"title": "createref missing flow typings", "body": "want request feature report bug bug current behavior using flow complains missing react expected behavior flow complain versions react browser os affected issue work previous versions react react", "num": "12512", "d": "4/2018"}, {"title": "running npm start run react app browser shows page unresponsive", "body": "want request feature report bug yes current behavior start createreactapp running npm start browser gives aw snap something went wrong although get error running chrome slowly show anything expected behavior see main page versions react browser os affected issue work previous versions react using react reactdom react something want say yarnlock packagelockjson using bpm yarn interchangeably", "num": "12511", "d": "4/2018"}, {"title": "react umbrella", "body": "x fragment false positive warning fix fixed x big dev mode performance regression fixed x error handling bugs related replaying fixed", "num": "12509", "d": "4/2018"}, {"title": "possible incorrect eventtarget number inputs", "body": "since react looks like might case change event reports window ca nt reproduce outside dom test fixtures steps reproduce open build fixtures enter text input observe window recorded fixture reproduce using following codepen viewable diff changes master idea going think need check next x differences raf polyfill x differences mapset polyfill list probably grow", "num": "12506", "d": "3/2018"}, {"title": "possible regression dev mode", "body": "example presents huge performance drop react react investigated noticed several things perfomance drop visible using development bundle related styledcomponents simple div presents problem tried investigate performance tab chrome dev tools noticed get react measures even without reactperf react tree reconciliation seems long know big problem looks weird decided share twitter gaearon invited submit issue", "num": "12502", "d": "3/2018"}, {"title": "warning ie using reactfragment", "body": "want request feature report bug bug current behavior react using ie gives following warning steps reproduce use create new react app add example import react component react import logo logosvg import appcss class app extends component render return welcome react get started edit save reload export default app open app ie open ie dev tools refresh browser see mentioned warning message console window warnings chrome firefox edge expected behavior warnings shown versions react browser os affected issue work previous versions react react browser ie os windows", "num": "12500", "d": "3/2018"}, {"title": "exactly new context api flow typed", "body": "", "num": "12499", "d": "3/2018"}, {"title": "uncaught error unexpected object passed reacttestinstance constructor tag probably bug react", "body": "hello testing getting warning use case wanted render react test renderer ex component another reactdom renderer seem work wanted use provider containers thought create objects state could shared across renderers fiber containers workaround thoughts definite behaviour following warning eventually get error message believe related warning thank guidance", "num": "12498", "d": "3/2018"}, {"title": "error boundary bug", "body": "want request feature report bug bug current behavior internal error raised error tries propagate uncaught typeerror read property return null uncaught typeerror read property return null renderroot performworkonroot performwork performsyncwork requestwork scheduleworkimpl schedulework schedulerootupdate updatecontaineratexpirationtime objectupdatecontainer expected behavior error propagate error boundary versions react browser os affected issue work previous versions react", "num": "12497", "d": "3/2018"}, {"title": "react deprecated componentwillmount ssr", "body": "hi help understand refactoring deprecated componentwillmount recommended replace componentdidmount method called serverside static getderivedstatefromprops access particular instance put code must running sides initialization instance", "num": "12495", "d": "3/2018"}, {"title": "invalid dom property mean", "body": "using reactsafehtml render html editor website thing renders causes invalid dom property mean error use component nt affect rendered iframe border however throws warning", "num": "12494", "d": "3/2018"}, {"title": "bug new context api work reactdomunstablerendersubtreeintocontainer", "body": "want request feature report bug bug current behavior consumer rendered invokes reactdomunstablerendersubtreeintocontainer invokes render function default context value ignoring value provider current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open example codesandboxio click increment statecontextvalue gt state change childcomponent rendered directly show click render placeholder gt childcomponent rendered unstablerendersubtreeintocontainer show actual result childcomponent rendered unstablerendersubtreeintocontainer show default value specified createcontext expected behavior unstablerendersubtreeintocontainer pass context consumer versions react browser os affected issue work previous versions react react chrome windows", "num": "12493", "d": "3/2018"}, {"title": "new ref api reactreconciler", "body": "implement use new ref api custom renderer eg reconciler almost simple nothing tutorial thanks", "num": "12492", "d": "3/2018"}, {"title": "provide better error reactcloneelement nullundefined", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12491", "d": "3/2018"}, {"title": "use hook intercept dom ref etarget safety", "body": "use hook intercept dom ref etarget tripartite want check style someone write position fixed plans things", "num": "12490", "d": "3/2018"}, {"title": "use", "body": "would like use remove usage reactkomposer library unfortunately peer dependency uses wonder use specify wider range react peer dependency ideally like keep supporting react", "num": "12489", "d": "3/2018"}, {"title": "error still logged console caught error boundary testing", "body": "want request feature report bug quite sure featurebug error boundary want test works correctly produces big nt seem great way get around current behavior error captured error boundary still logs console tests making look like something failed expected testing error boundary case consoleerror error occurred component child errorboundary created wrappercomponent wrappercomponent current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example error boundary jsx import react react import proptypes proptypes export default class errorboundary extends reactcomponent static proptypes children proptypesoneoftype proptypesnode proptypesarrayof proptypesnode isrequired render proptypesfuncisrequired state haserror false error null errorinfo null componentdidcatch error errorinfo thissetstate haserror true error errorinfo render thisstatehaserror return thispropsrender thisstateerror thisstateerrorinfo return thispropschildren errorboundarytestjsx jsx import errorboundary errorboundary const child gt throw error catches error renders message gt const wrapper mount error occurred gt expect wrappertext toequal error occurred expected behavior sure exactly way sort temporarily pause logging course test seems messy error boundaries tested hacky solution jsx import errorboundary errorboundary const child gt throw error const pauseerrorlogging codetorun gt const logger consoleerror consoleerror gt codetorun consoleerror logger catches error renders message gt pauseerrorlogging gt const wrapper mount error occurred gt versions react browser os affected issue work previous versions react enzyme", "num": "12485", "d": "3/2018"}, {"title": "problem multi instance component", "body": "hello problem app parent component tables component children components game example two component game number components dynamic value component game state property test children component gameui test value transfer gameui mind components children isolated components want change state test transfer new value new value sending last renderer component gameui reactjs", "num": "12484", "d": "3/2018"}, {"title": "request feature add api aftersetstate", "body": "want request feature could add api named class sometimes something update state codes use better api etc javascript componentwillmount thisinit async setpageloading isloading return thisaftersetstate isloading async update await thissetpageloading true let data await fetch data url await thisaftersetstate data business await thissetpageloading false async init await thisupdate thisadjustsomthingdomrelated wish added reactjs future version question", "num": "12482", "d": "3/2018"}, {"title": "svg enable focusable accept boolean values", "body": "moved discussion situation focusable attribute svg specifications enumerated attribute accepting values technically boolean attribute although certainly somehow looks like react expects value passed string see following example thing attribute often used conjunction elements aria specification attributes booleans enumerated attributes values ariahidden attribute good example instance following good practice iconbuttons authoring perspective snippet would likely written like jsx problem authored boolean otherwise printed dom hand perfectly fine written boolean gets coerced react proposal given default value attribute likely attribute gets authored change value regard confusing specified string attributes accepting booleans authored suggestion would make possible specified either boolean string like similar attributes words following work authoring perspective believe would straightforward less confusing", "num": "12481", "d": "3/2018"}, {"title": "issues reactcontrolledvalueproptypes", "body": "want request feature report bug see current behavior bug inconsistency warning feature request bug warning expected behavior passing falsy attribute trigger warning truthy value onchange passed undefined null considered acknowledgement silence warning case split render method component use preview component interactive use component preview pass undefined change handler warning shown tell forgot intended way going along pass according definitelytyped nt valid attribute select ca nt use disabled changes appearance field versions react browser os affected issue work previous versions react chrome proposed fix would change", "num": "12477", "d": "3/2018"}, {"title": "eventbutton sent testutilssimulateclick undefined default", "body": "want request feature report bug report bug current behavior default sends event undefined current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior think default means left click libraries like reactrouter rely maybe default react reacttrainingreactrouter versions react browser os affected issue work previous versions react sure earlier versions getting behavior", "num": "12476", "d": "3/2018"}, {"title": "uncaught error working root error likely caused bug react", "body": "got debugging another error filing reference original code", "num": "12474", "d": "3/2018"}, {"title": "allow call onchange callback even notavaliddate values", "body": "want request feature report bug feature request use case want show custom validation message use materialui style floating label necessary know actual value input current behavior currently manual date entry incorrect onchange called null expected behavior allow exposing current display value callback options think provide bool flag allowinvalidincallback return object let say feasible", "num": "12472", "d": "3/2018"}, {"title": "backspacing word boundary causes cursor jump input type email", "body": "want request feature report bug bug current behavior input cursor jumps beginning upon backspacing final character word follows space input type reproduced jsfiddle steps enduser must take repeated enter word space character eg test input backspace remove last character word following space observe cursor jump beginning input box issue occur nt tried every type input yet expected behavior cursor jump even someone mistakenly enters space email input box tries backspace confuse person jumbling input versions react browser os affected issue work previous versions react observed latest version react following ios safari macos chrome safari windows chrome problem occur windows firefox", "num": "12467", "d": "3/2018"}, {"title": "future react proptypes", "body": "future react dynamic runtime type checker shifted static type checkers like typescript flow deprecated future need migrate actual react projects typescript flow longterm perspective", "num": "12465", "d": "3/2018"}, {"title": "selfclosing component nt considered children", "body": "want request feature report bug bug possibly current behavior component validates inputs inside like works fine go children inputs validate let see another case inserting selfclosing component inside lib implementation look children verify input match validation case form library nt find input inside expected behavior want validate inputs inside selfclosing components versions react browser os affected issue work previous versions react react", "num": "12463", "d": "3/2018"}, {"title": "itemprop itemtype incorrectly rendered using reactdomserver", "body": "want request feature report bug bug current behavior server side rendering elements microdata props outputed html attributes remain camel case current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior html attributes lowecase reactdom renderer suffer issue microdata attribute suffer issue versions react browser os affected issue work previous versions react least react affected react appear browser related issue", "num": "12462", "d": "3/2018"}, {"title": "change unmounting timing react", "body": "want request feature report bug question could bug current behavior react replace component another one old component called new component called however changed react new component called old component called expected behavior would expected react behaviour would maintained seems strange new components starting mounted old component unmounted react example react example", "num": "12461", "d": "3/2018"}, {"title": "bug react website", "body": "", "num": "12460", "d": "3/2018"}, {"title": "custom property names containing get removed custom components", "body": "could considered bug feature request say know react checking valid attribute property names check run inconsistently normal components custom components makes behavior confusing means could feature explicit behavior particular use case needs improved upon trying render custom properties like belonging amphtml particularly ampbind api requires property names think check valid attribute property names throw warnings option prevent removal custom properties example js jsx js test test resulting html html test test throws warning try codesandbox", "num": "12455", "d": "3/2018"}, {"title": "elements loose focus moving portal", "body": "want request feature report bug perhaps bug could also seen feature current behavior move element portal element looses focus focus element gains focus portal moving portal looses focus expected behavior would expected react maintain focus element moving portal versions react browser os affected issue work previous versions react tested react version browsers latest chrome firefox test others expect behaviour os tested mac high sierra", "num": "12454", "d": "3/2018"}, {"title": "function breaking thirdparty libs", "body": "want request feature report bug bug possibly current behavior new feature returns object function point stateless components class components react expose utility check whether given value valid passed result thirdparty library authors wish prevalidate component type commonly use test whether type valid return value despite valid component type fail naive test library authors order provide better errors would otherwise provided react invalid component type passed perfect world fault would fall squarely thirdparty library developers using imprecise check developers could rightfully point react given little ability precise preemptive checks one nt break internet bugs bug thirdparty developers taken reasonableyetillegal dependencies react internals order provide better experience users difficult may good idea chane return instead object versions react browser os affected issue work previous versions react react", "num": "12453", "d": "3/2018"}, {"title": "mistake found docs", "body": "chapter jsx depth pic first parameter string peer quotation marks", "num": "12450", "d": "3/2018"}, {"title": "read property return null", "body": "running strange issue reproduce happens running tests karma using issue test throwing error missing handler rendering checkbox handler appears happening misses first branch run null nt exist access fails tried reproduce following codesandbox simplified version code throwing error nt present", "num": "12449", "d": "3/2018"}, {"title": "feature add reactdomrendersync method", "body": "want request feature report bug feature current behavior async operation expected behavior would nice something like method would interrupt pending operations render put immediately critical current use case willing explain need versions react browser os affected issue work previous versions react", "num": "12447", "d": "3/2018"}, {"title": "thissetstate function componentdidmount", "body": "constructor super thisstate isuserlogged false loggeduser ca nt assign value return fbapi thisstateloggeduser getting error thissetstate function tried bind solve", "num": "12443", "d": "3/2018"}, {"title": "dangerous strings reach browser builtins", "body": "want request feature report bug bug well known workedaround one current behavior produces link alerts current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example load code codepen repl repl loads click run button top left see blue link bottomright pane click alert popup alert pop simple string reaches attribute cause arbitrary code execution even user interaction expected behavior string reaches browser builtin like setter cause code execution discussion polymer resin uses hooks another webcomponents framework intercept value reach browser builtins vetted similar approach could work react allows values reach browser builtins innocuous runtime type indicates author intentionally marked safe kind browser builtin example would allowed reach would string relative url one whitelisted protocol many developers know risky link implementation detail custom react element developers nt context know attributes need careful nt either since implementation detail versions react browser os affected issue work previous versions react believe widespread across versions earlier repl tried showed worked version nt know version jsfiddle uses", "num": "12441", "d": "3/2018"}, {"title": "next context api rerender children", "body": "npm node modules versions react reactdom question component z rerendered every time click button component b maincontainerjs javascript const testcontext createcontext null export testcontext export default class maincontainer extends component constructor props super props thisstate h w render consolelog render main container return createelement testcontextprovider value thisstateh thispropschildren thispropschildren null javascript import testcontext maincontainermjs export default class buttoncontainer extends component constructor props super props render consolelog render button container return createelement testcontextconsumer test gt consolelog test context consumer value changed test return createelement z test class z extends component constructor props super props render consolelog render z thispropstest return createelement test thispropstest class extends component constructor props super props thisstate thisincr thisincrbind render consolelog render thispropstest return createelement b incr thisincr test thispropstest incr consolelog increment thissetstate const b props gt consolelog render b return createelement button onclick e gt consolelog click propsincr button jsonstringify jsonstringify propstest log", "num": "12439", "d": "3/2018"}, {"title": "iphone right sliding function", "body": "iphone right back last page screen flickeredit first skip page back last page", "num": "12438", "d": "3/2018"}, {"title": "bad cohabitation ref state component", "body": "want request feature report bug want report looks like bug current behavior unknown reason attribute nt seem get well together bit background trying recreate following codepen managed recreate bug codesandbox link unknown reason returns null want see consolelog however remove everything related constructor props lines change props line something else everything works fine actually returns wanted value expected behavior expect able get value even though state previously defined used versions react browser os affected issue work previous versions react react chrome nt know used work never use", "num": "12437", "d": "3/2018"}, {"title": "functional components lifecycle methods state", "body": "could functional components turned components state problem needs changes need apply local state must change function class use prototype function reuse function js function button value countdown return value countdown buttonprototypeconstructor props gt buttonprototypeshouldcomponentupdate gt benefits approach educate people use functional components first place also avoid rewrite much code adding features app course downsides change lot style code learned react also much verbose opinion code much elegant remove need using classes personally nt like thoughts crazy add optionfeature", "num": "12436", "d": "3/2018"}, {"title": "minified react error object object", "body": "building locally produces errors whereas production build serves following unsure debug seem precedent receiving error code object ideas proceed", "num": "12434", "d": "3/2018"}, {"title": "remove devonly warnings shallow renderer", "body": "consideration warnings already covered renderers based reactreconciler maybe nt gain much mirroring shallow renderer maybe worth added complexity particularly complicated warnings like ones added", "num": "12432", "d": "3/2018"}, {"title": "nt assert warnings tests throw", "body": "think nt pass", "num": "12428", "d": "3/2018"}, {"title": "jestdiff call towarndev returns null making test failure confusing", "body": "caused line calling two different strings returns", "num": "12427", "d": "3/2018"}, {"title": "reacttestrenderr", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12423", "d": "3/2018"}, {"title": "ca nt set value selects programatically react", "body": "set selects using pure js plain simple effective myselect value react approach reason nt work react select values updated react usual dom button click default browser behavior clear form fields ca nt set select onreset ev first update state dom updated want set selects programatically using refs thissetstate state props gt return birthday moment thispropsuserbirthday error null foo thispropsfoo gt render return nt advice use controlled components know want set without rolling back controlled components", "num": "12422", "d": "3/2018"}, {"title": "password field causes memory leak production builds", "body": "want request feature report bug bug current behavior noticing passwordtype input fields well wrapping parents remain detached dom elements conditionally rendered removed dom issue seems occurring across several applications using react include newly created app able produce chrome memory heap snapshots environments demonstrate issue observe following example button addsremoves input field dom reproduce problem stated issue repeatedly click button say times take memory heap snapshot see multiple detached dom elements password field wrapping div note issue happen types input fields class app extends component state show false toggle gt thissetstate show thisstateshow render return thisstateshow amp amp versions react browser os affected issue work previous versions react tried issue react react chrome canary browsers tested particular", "num": "12420", "d": "3/2018"}, {"title": "wrong value changing valid invalid color", "body": "want request feature report bug bug current behavior changing backgroundcolor valid color valid color persists steps reproduce expected behavior changing backgroundcolor invalid format backgroundcolor set css going ignore value due invalid value versions react browser os affected issue work previous versions react react chrome official build", "num": "12418", "d": "3/2018"}, {"title": "change ag nt enough make component rerender", "body": "bug amp amp question current behavior bug code thanks find way fix would like explanation behavior made form reduxform using bulma css wanted add icon right input tag like bulma doc show us focus visual validation green fontawesome icon input valid another one red first rerender right icon ok invalid field write something icon nt change even see props trigger new icon changing trying debug make work without changing logic replacing tag right behavior dunno make example work fiddle state nt work uncomment comment working javascript import react react const inputitem spec input meta touched error gt const successiconright color const erroriconright color const label type placeholder iconleft iconright spec const rendericon gt return label amp amp label rendericon export default inputitem posting someone ring bell two component two close react interpret change tag render span ok manually add props parent make work like func javascript const rendericon gt question enough react render tag change", "num": "12417", "d": "3/2018"}, {"title": "dangerouslysetinnerhtml wrap ssr client editing invalid html", "body": "currently need use dangerouslysetinnerhtml tag special case case need split string several need render could look like looks dirty yes case need smth like found better solution problem ssr match client error problem seems ssr react wrapping dangerouslyinnerhtml client general problem react wrapping wondering could avoid somehow first html part valid valid second part problem second problem seems react making part valid server client react closing first part maybe wondering problem load html data database need replace special words real react components plan something like html markup text text split html get array items want render first part dangerouslysetinnerhtml render real reactcomponent last part dangerouslysetinnerhtml", "num": "12415", "d": "3/2018"}, {"title": "refs immutable object extensible", "body": "set immutable constructor props context super props context thisrefs bar null set ref thisrefsfoo node gt throws works well js react nt work", "num": "12413", "d": "3/2018"}, {"title": "unsafe lifecycle hooks nt run getderivedstatefromprops present", "body": "sure intended longer term existence hooks suggested purposes still might needed conjunction gdsfp particular usecase caused discover migrating document focus needs checked prior update flushing update changes visual state drops focus could move react traditionally yelled ref stuff admittedly migrated code nt need fine", "num": "12411", "d": "3/2018"}, {"title": "controlling radio input checked onclick props gives warning", "body": "want request feature report bug bug current behavior type control props handler event still receive warning form field needs handler suppress warning pass useless inline function props expected behavior give warning control component event ca nt assure possibilities common control inputs handlers versions react browser os affected issue work previous versions react nt test behavior input wonder behavior would desirable", "num": "12410", "d": "3/2018"}, {"title": "passing elements function requires manual keys present", "body": "want request feature report bug bugfeature current behavior react requires manual keys present tag passing element via function render gives key warning passing element created jsx via mobx store element requires manual keys present child tag even simple example incredibly hard nt allow using child component thus severely limiting functionality passed jsx considered static key requirement nt apply possible tell react consider element static codesandbox minimal case export class overlaystore observable activepopup null action setpopup element thisactivepopup element observer export class app extends reactcomponent render return overlaystoreactivepopup const overlaystore new overlaystore render documentgetelementbyid root overlaystoresetpopup long text link expected behavior require manually setting keys values like etc versions react browser os affected issue work previous versions react latest stable dependencies via codesandbox chrome macos nt matter", "num": "12409", "d": "3/2018"}, {"title": "circle ci failing test", "body": "want request feature report bug bug current behavior broken build process due invalid response current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example new pr facebookopensourcebot post something similar error also cause circleci tests fail expected behavior valid json response", "num": "12406", "d": "3/2018"}, {"title": "server side reactdom render hreflang hreflang", "body": "want request feature report bug bug current behavior reactdomserver render hreflang hreflang current behavior bug please provide steps reproduce possible minimal demo problem expected behavior render hreflang attribute hreflang serverside versions react browser os affected issue work previous versions react works", "num": "12403", "d": "3/2018"}, {"title": "react able get application environment ui defineplugin", "body": "working react application showcase different functionality based whether app running dev mode production query get application environment react code tried code work also tried webpack got error could anyone help tia cc", "num": "12400", "d": "3/2018"}, {"title": "unhandled rejection syntaxerror unexpected token lt json position", "body": "hello new react want import datas file datajson code portfoliojs import react component react class portfolio extends component constructor super thisstate websites componentwillmount fetch datajson response gt responsejson websites gt thissetstates websites render let websites thisstatewebsites return portfolio latest portfolio list websitesmap item gt itemdescription export default portfolio datajson error unhandled rejection syntaxerror unexpected token lt json position anonymous function componentwillmount fetch datajson response gt responsejson websites gt thissetstates websites render please need help", "num": "12398", "d": "3/2018"}, {"title": "way access new context api within componentdidmount", "body": "building react mapbox gl module use clone inject props today looking using context api saw new one seem find way read context details componentdidmount lifecycle makes sense use map implementation way around", "num": "12397", "d": "3/2018"}, {"title": "proposal allow void elements children override property", "body": "want request feature report bug feature current behavior creating one whitelisted void elements error thrown javascript reactcreateelement link null invariant violation link void element tag must neither use correct assumption make browser frontends proposed new behavior exceptional case generating sgmllike code likely server rendered may become necessary override default behaviour whitelisted html void elements example rss uses tag denote site root url url individual entries actual value tag cause error trying generate via react component proposed solution would add new lengthily named property bypasses void element check allows items rendered example implementation javascript reactcreateelement link allowinvalidvoidelementchildren true much vein property named likely avoids name collisions existing consumer code makes explicit setting flag causes nonstandard potentially undesirable effects usual use cases feature implemented way existing unit tests pass without alteration new unit tests would added ensure new functionality works intended following files identified places implement feature work previous versions react worked previous versions react likely bug", "num": "12396", "d": "3/2018"}, {"title": "im getting key iterator warnings", "body": "put back keys form stops working please refer", "num": "12395", "d": "3/2018"}, {"title": "keep children mounted replace parent", "body": "hi trying something like const container props gt propssomecondition propschildren propschildren const app props gt basically want situation app rerendering changing boolean prop imagine somecondition actual changing value different container render depending value maintaining children inside problem children async fetches didmount remount lose state containers change idea achieve children still mounted even parent changed thanks advance", "num": "12393", "d": "3/2018"}, {"title": "could get friendly error stack errorboudary", "body": "want request feature report bug maybe feature current behavior currently error component stack ie something like production would formatted almost useless debugging expected behavior want request feature allow us define static componentname field reason nt use used reactdevtools others libs use static field components everyone could see componentsproject structure maybe others potential risk expect react could support custom static componentname field eg could set field components reactdevtools ca nt inspect react read field rather get component name insert error stack string call know implement still could get componentsproject structure using libs like babel decompile make reactdevtools support field increase cost", "num": "12390", "d": "3/2018"}, {"title": "propagatecontextchange stuck infinite loop", "body": "want request feature report bug bug current behavior process converting navigation router new context api found sometimes gets stuck infinite loop created jsfiddle problem click name sort hyperlink two times second click enters infinite loop jsfiddle simple could make example get rid date birth column problem happen current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior get stuck infinite loop versions react browser os affected issue work previous versions react react version new context api introduced", "num": "12389", "d": "3/2018"}, {"title": "gitter room", "body": "please make react room gitter", "num": "12388", "d": "3/2018"}, {"title": "asyncsafe way reading thisstate", "body": "want request feature report bug feature request question problem sure people though feel like much solvable suppose component receives state updates many sources example javascript class counter extends reactcomponent constructor props thisstate number onbuttonaclicked thissetstate prevstate gt prevstatenumber onbuttonbclicked thissetstate prevstate gt prevstatenumber somewhere outside method need read since asynchronous safe way read number nt know sequence clicks since last actual update thisstate one safe way seems using empty callback things requirement method reads thisstate must synchronous also form seems bit odd nt actually intend set state seems asynchronous forcing application make reads asynchronous well could instead keep track state entirely ignore means keep replace calls solves problem bypassing react entirely question way force immediate setting state read recommended solution something like", "num": "12381", "d": "3/2018"}, {"title": "different behavior updating dom using ternary operator vs inline approaches", "body": "want request feature report bug sure bug feature current behavior similar cases often chosen matter preferences work dom different first case icon updated dom second case icon mountedunmouted const expandable expanded gt const expandedicon const collapsedicon return expanded amp amp expandedicon expanded amp amp collapsedicon current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior expected update cases might wrong versions react browser os affected issue work previous versions react windows chrome", "num": "12378", "d": "3/2018"}, {"title": "setstate rerenders even state stays", "body": "know define check check default goes props", "num": "12376", "d": "3/2018"}, {"title": "use bundle react app error like", "body": "error nodemodulesreact reactcjsreactproductionminjs module found error ca nt resolve fbjslibemptyfunction userszrworkreactfamilyinknodemodulesreact reactcjs nodemodulesreact reactcjsreactproductionminjs nodemodulesreact reactindexjs srcappjs multi srcappjs error nodemodulesreact reactcjsreactproductionminjs module found error ca nt resolve fbjslibemptyobject userszrworkreactfamilyinknodemodulesreact reactcjs nodemodulesreact reactcjsreactproductionminjs nodemodulesreact reactindexjs srcappjs multi srcappjs error nodemodulesreact reactcjsreactproductionminjs module found error ca nt resolve objectassign userszrworkreactfamilyinknodemodulesreact reactcjs nodemodulesreact reactcjsreactproductionminjs nodemodulesreact reactindexjs srcappjs multi srcappjs", "num": "12374", "d": "3/2018"}, {"title": "formatting numbers tolocalstring controlled input", "body": "want request feature report bug bug suspected current behavior trying use controlled input text tel field either numbers removed entered get nan possibly related expected behavior number formatted using versions react browser os affected issue work previous versions react chrome mac os", "num": "12373", "d": "3/2018"}, {"title": "react new context api basic intent", "body": "want request feature report bug misunderstanding current behavior impossible render component provider furnished createcontext function trying follow articles whats new react react new context api current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example code sandbox example sourcecode codesandbox import react component createcontext react import render reactdom const cartstate createcontext open false class cartstateprovider extends component state open false render return class app extends component render return open gt return open open closed render documentgetelementbyid root expected behavior render closed versions react browser os affected issue work previous versions react testing react new feature work previous releases", "num": "12372", "d": "3/2018"}, {"title": "add toplevel api detecting whether element html element", "body": "want request feature report bug feature current behavior react toplevel api function detecting whether object valid react element official way detect html element specifically expected behavior would make sense another function checking whether object reacthtmlelement would use cases typescript would useful type guard apart typescript would cool eg needed component add class children decide whether add class directly whether wrap child implementation draft typescript const listofhtmlelements readonly export function ishtmlelement elem elem reactreacthtmlelement return reactisvalidelement elem amp amp typeof elemtype string amp amp listofhtmlelementsindexof elemtype gt versions react browser os affected issue work previous versions react", "num": "12369", "d": "3/2018"}, {"title": "reservedprops optimized away google closure compiler", "body": "testing running react closure optimizations clojurescript hit problem eg property gets included output using foo way children value converted string could due cljs due google closure removes properties objects nt statically accessed banga already fix reactelement reactdom server another place problem unfortunately looks like nt fixable externs means user would nice fixed mostly react already works closure optimizations cljs testsuite uses", "num": "12368", "d": "3/2018"}, {"title": "increase code coverage", "body": "hello want start contributing react nt know start took look think help increasing code coverage think taking look coverage report nt know best place start give recommendation thanks", "num": "12367", "d": "3/2018"}, {"title": "impossible change classname", "body": "would like change class name invoke simple animation effect classname attribute must string run render appears simply update class animation nt run even keys set also ca nt render change class props readonly", "num": "12366", "d": "3/2018"}, {"title": "porting libraries preact question", "body": "hi want ask question im preact user never tryed react course couple months ago use react project trying port one libraries library aims easy form setup jsx email contrase\u00f1a submit code works perfecly preact im facing issues react example input loosing focus everytime time form rather update field value react example preact working library keeps internal state manage field values events im wrong help appreciated", "num": "12364", "d": "3/2018"}, {"title": "react onblur events firing unmount", "body": "want request feature report bug bug current behavior dom element rendered react component focus react component unmounts react event fire parent dom elements current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior would expect like browser fires event removing dom node react would fire events parent nodes focused node removed unmounted versions react browser os affected issue work previous versions react react mac os x browser chrome chrome idea worked earlier versions react", "num": "12363", "d": "3/2018"}, {"title": "reactdom minified development build error misleadingly says development build react rather reactdom", "body": "want request feature report bug bugish error clarification current behavior including minified development build reactdom error reads expected behavior error correctly notified using minfied development copy took realize meant reactdom core react feel accurately read", "num": "12362", "d": "3/2018"}, {"title": "question settimeout effect two react demo", "body": "react learner counfuse two react demo js import react react let num export default class hello extends reactcomponent state loading false data componentdidmount settimeout gt const button documentgetelementbyid button const button thisbutton consolelog button first click buttonclick consolelog button second click buttonclick delay gt const count num consolelog count thissetstate loading true render const loading data thisstate loading return loading return js import react react let num export default class hello extends reactcomponent state loading false data componentdidmount settimeout gt const button documentgetelementbyid button const button thisbutton consolelog button first click buttonclick consolelog button second click buttonclick delay gt const count num consolelog count thissetstate loading true render const loading data thisstate loading return loading return different code componentdidmount console message aslo different two demo result result", "num": "12361", "d": "3/2018"}, {"title": "addeventlistener working properly componentdidupdate", "body": "want request feature report bug bug current behavior update event listeners removing old listeners adding new ones element obtained react ref react alpha handlers nt register properly take part remove listeners put whole thing inside works fine worked fine componentwillreceiveprops moved part componentdidupdate react code kind like jsx work componentdidupdate prevprops const eventtype prevpropseventhandlers thisaudioremoveeventlistener eventtype prevpropseventhandlers eventtype const eventtype thispropseventhandlers thisaudioaddeventlistener eventtype thispropseventhandlers eventtype work componentdidupdate prevprops const eventtype prevpropseventhandlers thisaudioremoveeventlistener eventtype prevpropseventhandlers eventtype const eventtype thispropseventhandlers thisaudioaddeventlistener eventtype thispropseventhandlers eventtype work componentdidupdate prevprops settimeout gt const eventtype prevpropseventhandlers thisaudioremoveeventlistener eventtype prevpropseventhandlers eventtype const eventtype thispropseventhandlers thisaudioaddeventlistener eventtype thispropseventhandlers eventtype render return current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example unfortunately ca nt reproduce simple example check build next branch reactresponsiveaudioplayer run see behavior examplehtml adds listener run volume toggles muted unmuted componentdidupdate expected behavior listener adding work fine versions react browser os affected issue work previous versions react tested react think issue also exists react able reproduce problem locally react make manual tweaks createreactcontext make backward compatible published polyfill make sort thing easier", "num": "12360", "d": "3/2018"}, {"title": "potential future bug geteventkey edge synthetic event normalization", "body": "bug current behavior react currently normalizes keyboard events crossbrowser falling back native keyboardeventkeycode property using dictionary object normalize key noted source geteventkey used normalization deprecated values edge currently implement correct key values normalization fall back keyboardeventkeycode keyboardeventkeycode deprecated may dropped time microsoft per fixed issue yet released insider preview releases means potential keyboardeventkeycode removed edge fix made public may good idea rely keycode instance refer line versions react browser os affected issue work previous versions react reactdom version potentially affects future versions edge", "num": "12356", "d": "3/2018"}, {"title": "possible bug reactdomcreateportal used new window", "body": "want request feature report bug bug current behavior used conjunction container another window components respond user input called parent component portal produced codepen demonstrating issue click open portal new window appears pair buttons click either button new window nothing happens click hack button parent window simply calls parent note buttons new window work expected expected behavior expect components new window interactive versions react browser os affected issue work previous versions react react reactdom tested safari chrome mac", "num": "12355", "d": "3/2018"}, {"title": "setstate callback fire", "body": "want request feature report bug bug current behavior following piece code fairly simple component works perfectly react callback fire investigated saw reactdevelopmentjs clearly marks callback one accepted arguments enqueuesetstate however go function called reactupdatequeuejs see argument ommited nt know helps anyway callback fired whatever try current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example simple example reproduction expected behavior versions react browser os affected issue work previous versions react react tested react", "num": "12354", "d": "3/2018"}, {"title": "react adds classname dom instead class", "body": "want request feature report bug bug current behavior react adds classname dom instead class property current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open link inspect dom following link test repo expected behavior add class dom element property classname versions react browser os affected issue work previous versions react react internet explorer version works expected react", "num": "12349", "d": "3/2018"}, {"title": "cloned element using component created render nt trigger onclick", "body": "want request feature report bug bug probably current behavior rerendering cloned element using component created render event triggered clicking cause onclick triggered simplest implementation causes expected behavior onclick gets triggered cloning element using component created render fix versions react browser os affected issue work previous versions react react version", "num": "12348", "d": "3/2018"}, {"title": "mac os install problem", "body": "npm warn deprecated express express series deprecated npm warn deprecated wrench wrenchjs deprecated check fsextra operations using wrench thanks usage years npm err code etarget npm err notarget matching version found rimraf gt npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err notarget npm err notarget specified dependency mojito npm err notarget npm err complete log run found npm err futingdemacbookpro www futing vim packagejson futingdemacbookpro www futing sudo npm install g createreactapp createreactapp demo npm warn deprecated express express series deprecated npm warn deprecated wrench wrenchjs deprecated check fsextra operations using wrench thanks usage years npm err code etarget npm err notarget matching version found rimraf gt npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err notarget npm err notarget specified dependency mojito npm err notarget npm err complete log run found npm err", "num": "12345", "d": "3/2018"}, {"title": "dispatchevent longer effect latest react version", "body": "want request feature report bug bug latest react current behavior listen programatically generated key events react older react job current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example find link codesandbox basic react app trying dispatchevent fill input field click inject button react version sandbox react check console logging current state react component expected behavior change version sandbox latest fills expected value textbox get recognised react internal state console log blank means id even trigger internal state change want fill input textbox programatically setting internal test framework would want generate events manually observe entire app behaviour versions react browser os affected issue work previous versions react works react latest", "num": "12344", "d": "3/2018"}, {"title": "use case", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12343", "d": "3/2018"}, {"title": "jsx close tag name may optional", "body": "want request feature report bug feature current behavior html text expected behavior html tag always pairs simple write better", "num": "12340", "d": "3/2018"}, {"title": "feature new api make html scope", "body": "html nt concept scope use concept like variable many like add scope html maybe say label wrap input label changes html structure many scene using html variable like spectre add api whatever others make html scope", "num": "12339", "d": "3/2018"}, {"title": "jest test fails onchange missing onclick", "body": "seeing warning running jest tests cjsx code onclick app specific purposes works fine onchange yet fbjs warns onchange improved warn onclick detected well using", "num": "12338", "d": "3/2018"}, {"title": "refs final ref different output getelementbyid", "body": "want request feature report bug bugquestion current behavior react react application redux need use ref html pre want copy paste text button callback ref callback looks like pre ref gt thispreref ref button onclick event noticed final value thispreref equal final output documentgetelementid id html pre fine ref callback called many times since design react someone explain final ref equal final dom element finally showing page want avoid getelementbyid works returned value returned value equal first thispreref last current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example see expected behavior see versions react browser os affected issue work previous versions react react", "num": "12336", "d": "3/2018"}, {"title": "getderivedstatefromprops requestanimationframe problem", "body": "thanks hard work react incredible new static lifecycle methods work well common usage animation pattern approach popularised reactmotion add inside function update state keep adding new animation finishes way runs work add new start animation stopped way reliably translate pattern new static lifecycle move access static function move run forever even work way knowing whether update new props run always add new even animation finished rerunning check inside always possible", "num": "12335", "d": "3/2018"}, {"title": "controlled input step work expected unless initialized null", "body": "bug current behavior input type number step work expected initial value set step seems get honored initial value null example example uses controlled input binding value step step value edit value textbox increment using stepper increment ie initial value current step edit code initial value null edit textbox step value goes expected expected behavior possible render number input honors step without initialize input component value null first seems initial value provided write value attribute dom eg value initial value null value attribute written dom assignment eg value versions react browser os affected issue work previous versions react ported version confirm still issue originally found version seems affect chrome confirmed windows mac versions bug appear safari mac least", "num": "12334", "d": "3/2018"}, {"title": "uncaught typeerror assign function", "body": "react reactdom cause problem", "num": "12333", "d": "3/2018"}, {"title": "production reconciler instrumentation", "body": "apologies documented somewhere unable find anything related pretty exhaustive search docs code production instrumentation hooks reconciler specifically looking callbacksevents would allow track overall reconciliation time spans nothing granular eg equivalent span best tell spans reported fiber prior enabled development mode", "num": "12331", "d": "3/2018"}, {"title": "reactaddonstestutils requires peer reactdom none installed", "body": "install nodemodules scratch npm generates warning react latest verified removing reactaddonstestutils alter tests npm node possum commit current master", "num": "12330", "d": "3/2018"}, {"title": "reactcreateelement type invalid", "body": "want request feature report bug bug current behavior import react react import rendertostring reactdomserver import staticrouter route indexroute link reactrouter class dashboard extends reactcomponent render return dashboard class app extends reactcomponent render return dashboard const html rendertostring warning reactcreateelement type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined might mixed default named imports app router staticrouter typeerror read property tolowercase undefined reactdomserverrendererrenderdom reactdomserverrendererrender reactdomserverrendererread rendertostring expected behavior rendered dashboard component versions react browser os affected issue work previous versions react react reactdom reactrouter", "num": "12329", "d": "3/2018"}, {"title": "capturing events trigger vanilla bubbling events", "body": "want request feature report bug bug current behavior subscribing dom events possible use capturing however seems capturing takes place vanilla javascript bubbling phase results incorrect order events unless events subscribed via react nt always possible example mimicks one use cases expected behavior capturing event subscribed within react take place bubbling events subscribed via vanilla javascript versions react browser os affected issue development edition chrome", "num": "12328", "d": "3/2018"}, {"title": "simple slide show", "body": "trying make slide show reactjs slide show next button work perfectly previous button problem show demo next button handler works perfectly prev button handler works perfectly slide nt arrive first arraywhen slide arrive first array slide show work perfectly please help solve problem state functions next button handler pre next button handler render function map array list element like render let numslist thisstatenumbersmap num index gt consolelog index thisstatecurrent index lt thisstatecurrent return num else index gt thisstatecurrent return num else return num return numslist lt", "num": "12327", "d": "3/2018"}, {"title": "got white screen react", "body": "hey fe developer met big problem try use latest react reactdom situation got white screen huawei honor phone android browser show whether create app official createreactapp script make config webpack note use eruda look mistake bowser got nothing app created official createreactapp got white screen happen android vender browser display properly lastest chrome mobile react version react reactdom works fine bowser way solve tell please thanks", "num": "12324", "d": "3/2018"}, {"title": "reactelement reactnode types used flow undefined", "body": "use flow project started get message console flowruntime could reference given type try ttypeof value instead got undefined search found reason reactnode undefined types described flow docs something wrong", "num": "12322", "d": "3/2018"}, {"title": "react crashing error using component inside recursively", "body": "want request feature report bug bug current behavior react throw errorwarning using component inside recursively know edge case nevertheless mistakenly caught javascript import react react import hello bug hello export default gt bug component expected behavior sure error would good possible", "num": "12321", "d": "3/2018"}, {"title": "filter json working", "body": "filter data one json call using console says typeerror read property tolowercase undefined import react component react import browserrouter router route link reactrouterdom import data datosjson filter function searchingdata product return function x return xfirsttolowercase includes producttolowercase product class app extends component constructor props super props thisstate items product bind object componentwillmount method setstate working thiscomponentwillmount thiscomponentwillmountbind componentwillmount fetch res gt resjson data gt thissetstate items data searchword event thissetstate product eventtargetvalue view render export default app", "num": "12320", "d": "3/2018"}, {"title": "regarding new context api", "body": "want request feature report bug neither feature bug hope mind asking question maybe others also interested question examples seen regarding new context api context values relevant virtual element tree means relevant render function context values relevant view side effects recommended way use higher order components example let say component requires sideeffect handler shall passed explicitly props passed implicitly using context gt let name somemgr assume somemgr object needed componentdidmount like maybe also componentwillunmount old days componentdidmount looked like follows need hoc edit course reasonable programmer would used directly way saying possible old api like already asked shall use hoc handle use cases new context api trick recommendation maybe use case even considered antipattern many thanks advance answer versions react browser os affected issue work previous versions react lt versus", "num": "12319", "d": "3/2018"}, {"title": "validatedomnesting appear descendant", "body": "", "num": "12318", "d": "3/2018"}, {"title": "mit license gpl dependency", "body": "bug report current behavior license stated mit gpl dependency think either license wrong one gpl dependency changed test use package result dependency indirect gt gt devs say dependencies matter others say sarcastically code gpl lawyer lawyer department please feel free close nonissue think gpl dependency nogo many companies expected behavior dependency gpl licensed since would make user code gpl gpl code bundled distributed react users code potentially every react project included dependency gpl versions react browser os affected issue work previous versions react current version affects also affects course know note feel free close open repository could find linked fbjs repository npm clearly original one since npm states dependencies repository tells totally different story even private strange reminds horror story course legit reason right", "num": "12317", "d": "3/2018"}, {"title": "reactdomrender return null", "body": "question component componentdidmount function perform reactdomrender return null reactdomrender render page normally settimeout added componentdidmount function execute settimeout reactdomrender returns normally object nt know bug expectations reactdomrender return object correctly code js import react component react export default class extends component", "num": "12315", "d": "3/2018"}, {"title": "ios controlled input type date onchange triggered pressing clear", "body": "bug current behavior controlled input type date nt trigger onchange pressing clear button ios datepicker keyboard happens controlled input uncontrolled works fine reproduced iphone ios safari demo react jsfiddle demo react jsfiddle expected behavior controlled input date trigger onchange pressing clear button versions react browser os affected issue work previous versions react react amp reactdom amp os ios browser safari device iphone iphone se", "num": "12313", "d": "3/2018"}, {"title": "setstate executes settimeout become", "body": "componentdidmount settimeout gt lemen print behind banana", "num": "12312", "d": "3/2018"}, {"title": "getderivedstatefromprops mobx", "body": "use mobx manage application state react apps build ever since read post using mobx manage local component state well recently read react introduce new static method called future release deprecate worried deprecating break components need update state response change props course would nt issue except fact appears incompatible local component state managed mobx one things love react easy integrate tools new static method reduce flexibility nt used mobx issue may little hard grasp first built example repo see mobx react setstate implementation component needs update local state response props change take look example brief core issue static method mobx state component instance ca nt accessed updated static method generic enough updating mobx component state possible semantically sound manner deprecated however nt know possible nonhacky way realize may little late concern since appears react released anytime however think concern worth raising since new change react break view valid use react prefer another solution devised flexible people using react tools", "num": "12310", "d": "2/2018"}, {"title": "expose event focusable element", "body": "curious earlier event works things form elements elements disabling couple conditions code seems first brush least works splendidly element focusable via attribute obtain things like would problem relaxing conditions allowing include elements attribute case existing implementations userland rely event disabled removed element", "num": "12309", "d": "2/2018"}, {"title": "reset state", "body": "like function would reset state react start rendering scratch currently code causes duplication virtual dom react tab devtools shows node twice documentbodyinnerhtml reactdomrender documentqueryselector app page change documentbodyinnerhtml reactdomrender documentqueryselector app possible unmount container element lost prevent duplication vdom documentbodyinnerhtml reactdomrender documentqueryselector app reactdomunmountcomponentatnode documentqueryselector app lt unmount remove page change documentbodyinnerhtml reactdomrender documentqueryselector app however sometimes difficult bind event change router code legacy app react used rendering page page destroyed router decides change page another react nt get container element since ca nt call change change rendering lost container element would useful function reset react state rendering new page documentbodyinnerhtml reactdomrender documentqueryselector app page change documentbodyinnerhtml reactdomreset lt nt care previous state want render component scratch would rendering reactdomrender documentqueryselector app name nt called within point rendering duplicate virtual dom since container element changed", "num": "12308", "d": "2/2018"}, {"title": "get dom htmlelement instance reference order use scrollintoview api", "body": "implementationusage question like use native elementscrollintoview api react app scroll components code use need reference html element want scroll using react ref prop returns reference react component htmlelement dom instance ca nt use desired api way get access html dom element order use native scrollintoview api versions use react chrome browser latest", "num": "12307", "d": "2/2018"}, {"title": "best practice new react context api", "body": "new context api really great lot thanks efforts enabled us efficient easier way write react app still consider much boilerplateverbosity use leaf component everytime may write like published npm package think easiest way use new context api could use decorator like jsx import withtheme use anywhere import withtheme withtheme withtheme export default class leafcomponent extends reactpurecomponent suggesting adding official implement would think please give try tell think really appreciate attention", "num": "12306", "d": "2/2018"}, {"title": "inspect element hover", "body": "using mouseenter mouseover hover using html css know debug hover inspect elememt debug mouseover mouseenter inspect element dev tools react normal", "num": "12305", "d": "2/2018"}, {"title": "nt synchronize property value attribute especially value attribute", "body": "read repo", "num": "12302", "d": "2/2018"}, {"title": "state change td element", "body": "displaying tabular rows setting data td element state change displays currently updated td element dataall ones go missing screen thing placed within text box td element things work fine following sample code working code failing code", "num": "12301", "d": "2/2018"}, {"title": "safe read currentownercurrent assume statenode", "body": "might mean assumption like leads runtime failure dev fix code sites", "num": "12299", "d": "2/2018"}, {"title": "errors thrown componentunmount nt reported proper timings", "body": "want request feature report bug bug least qa respect current behavior creating testcase handle error thrown reported asynchronously since react errors reported last test cases bunch virtually lacks reproducibility rely current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example please clone repository execute expected behavior report errors every test case provide proper way handle especially testing already exists versions react browser os affected issue work previous versions react react", "num": "12297", "d": "2/2018"}, {"title": "ci danger failing auth errors", "body": "see", "num": "12292", "d": "2/2018"}, {"title": "syntax error reactis package", "body": "trying use reactis syntax error stopping imported", "num": "12287", "d": "2/2018"}, {"title": "strange behavior conditional rendering", "body": "want request feature report bug bug gives error warning message clear error wrap code div works fine gone wrong thanks", "num": "12286", "d": "2/2018"}, {"title": "scriptsjestmatcherstowarndev expected actual arguments mixed", "body": "want request feature report bug bug current behavior calls jestdiff b calls diffstrings b default annotated green red expected behavior pass expected values actual received values", "num": "12285", "d": "2/2018"}, {"title": "scriptsjestmatcherstowarndev unexpected warning recorded null null caused jestdiff returning null", "body": "want request feature report bug bug current behavior example actual warning multiline output message received matcher confusing rendering react components document new explicit hydration api render w markup full document expected behavior expected least show original expected messages without fancy upstream bug", "num": "12284", "d": "2/2018"}, {"title": "holl", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12283", "d": "2/2018"}, {"title": "bensin", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12282", "d": "2/2018"}, {"title": "mgm", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12281", "d": "2/2018"}, {"title": "typeerror read property valuetracker undefined", "body": "want request feature report bug bug current behavior worked branch error happened current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example error shows time radio clicked expected behavior opened pr versions react browser os affected issue work previous versions react branch notice error fixed", "num": "12280", "d": "2/2018"}, {"title": "development production find", "body": "want request feature report bug primary question secondary maybe tiny feature request question official way find whether imported react package development production module reactdevelopmentjs vs reactproductionminjs obviously something like think agree really evil solution answer question would possible add something like respectively something similiar react object useful sure first thought use usual webpack processenvnodeenv stuff assume react addon library library two different packages depending environment eg fancyreactaddondevelopmentjs vs fancyreactaddonproductionminjs also assume whatever reasons make sense maybe even allowed use react development module combination production module addon library vice versa would great directly import error thrown module combination invalid independent webpack processenvnodeenv maybe user addon library use tools javascript assume fancyreactaddonproductionminjs reactenvironment production throw new error use react production packages details course also use cases feature would also handy even necessary hope use case already convincing versions react browser os affected issue work previous versions react", "num": "12277", "d": "2/2018"}, {"title": "eventcurrenttargetvalue returns undefined react", "body": "upgraded react using give undefined basically stateless child component fire callback clicked pass extra params dom api value field parent component callback follows param accessible anymore looked event returned versions react looks like whereas react react intentional change go passing params callback nt really want use arrow functions since affects performance", "num": "12276", "d": "2/2018"}, {"title": "state updated doesnt update dom", "body": "hi want feature bug thistogglehidden gt thisstateistoogle misc thisstateistoogle amp amp members plugins add member condition update image chevron nothing happen use code everythings fine someone help please version react cheers", "num": "12275", "d": "2/2018"}, {"title": "warning invalid prop arialabeledby tag element", "body": "want request feature report bug bug current behavior react throws warning use arialabeledby warning invalid aria prop tag details see expected behavior waiaria shows ways implementations wacg link aria technique im developing website use android talkback runs fine arialabeledby attrs like ariadescribedby versions react browser os affected issue work previous versions react react version browser version chrome versi\u00f3n build oficial bits os ubuntu mobile extra info talkback android version talkback version", "num": "12274", "d": "2/2018"}, {"title": "input replacement bugchanging controlled input", "body": "want request feature report bug appears bug current behavior codesandbox quick development solutions listed codesandbox readme demo warning open debugging console wait secs settimeout line change state observe warning console warning component changing controlled input type text uncontrolled happening react updating necessary input elements react adds additional properties placeholder title readonly changes existing property value input replaced rather replacing entire input results controlled status changing dom input element persists value expected behavior old input element replaced new input uses placeholder text use case described origin section codesandbox readme actual desired behavior unknown versions react browser os affected issue work previous versions react react version chrome version official build throw warning may production version dom input value persisted codepen react version think", "num": "12273", "d": "2/2018"}, {"title": "react new error handling results data loss forms react typing", "body": "discussed similar problems error happens ex textarea widget unmount entire app previously user could copy paste text form even page behaving strangely print whatever error anywhere part system even third party dependency browser feature results immediate data loss user ex counter shows number words type bug users would sometimes lose text typed totally understand motivations feature models native apps crashing nt really work well least us web tangle third party dependencies exist today see works well facebook since control every dependency fix bugs across needed instead set third party dependencies one bug end stuck app randomly breaks shows blank users guess could put error boundary around every widget entire page hard enforce still results data loss scoped understanding ca nt render per discussion mentioned bug since throw destroys statefulness various browser widgets ex video plugins feature made opt", "num": "12271", "d": "2/2018"}, {"title": "react passes empty spaces children react components", "body": "want request feature report bug report bug current behavior passing empty string inside react element treated child current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example syntax make notice empty space react fills thispropschildren variable myreactcomponent expected behavior thispropschildren property myreactcomponent contain one children versions react browser os affected issue work previous versions react version chrome mac os high sierra", "num": "12270", "d": "2/2018"}, {"title": "component return null font awesome sibling throws domexception", "body": "want request feature report bug bug current behavior following react code throw exception firefox chrome throw current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsfiddle showing example code simply sets class either show hello wordl null wraps component hoc simulate changing data remove works wrap tag works change classname element well work expected behavior expect work like versions react browser os affected issue work previous versions react react version chrome version mac os x firefox version mac os x", "num": "12269", "d": "2/2018"}, {"title": "checkboxes handling going wrong", "body": "weird issue button called assign click modal userslist checkboxes opens modal confirm cancel button buttons functionality click confirm checked unchecked data matter selection made save click cancel data revert back confirmed saved data built component loading initially copying state copystate changes saved original state confirmed cancelled original state changes copied copystate happening state getting updated matter change make copystate copystate original state data somebody help render method assign handler cancel method confirm method", "num": "12268", "d": "2/2018"}, {"title": "componentwillunmount cancel requests", "body": "write perform necessary cleanup method invalidating timers canceling network requests people say ways cancel request mean canceling network requests would please share knowledge", "num": "12266", "d": "2/2018"}, {"title": "componentdidcatch unhandled", "body": "want request feature report bug sure tbh current behavior global handler unhandled errors windowaddeventlistener error evt gt use componentdidcatch function gets called correctly render throws exception global error event also triggered componentdidcatch call expected behavior since componentdidcatch handles error prefer global event nt triggered usual trycatch block least way figure evt object event handler exception caught react hope made sense", "num": "12262", "d": "2/2018"}, {"title": "setstate callbacks getting executed expected order", "body": "want request feature report bug bug versions react browser os affected issue work previous versions react v sure worked previous versions current behavior following piece code called multiple times quickly without executing callbacks completing expected callbacks executed correct order corresponding scope contrary expected behavior callback later value called first one older value next eventually calling older value upon debugging following piece code enqueuecallback function publicinstance callback callername reactupdatequeuevalidatecallback callback callername var internalinstance getinternalinstancereadyforupdate publicinstance setstateinternalinstancependingcallbackssetstate executed expected behavior expected callbacks registered executed order known bug mistake made", "num": "12261", "d": "2/2018"}, {"title": "create first visit popup react application using reactpopup module", "body": "make first visit popup react application possible implement using reactpopup module used module seem work check let know wrong homepage component import react component react import homepagecss import carousel nukacarousel import headercomponent componentsheaderheaderjs import decorators decoratorsjs import popup reactpopup export default class homepage extends component redirectpage gt windowlocation dashboard componentwillmount popupalert component render var mixins carouselcontrollermixin return homepage content", "num": "12260", "d": "2/2018"}, {"title": "display pop first time user visit react application", "body": "make first visit popup react application possible implement using reactpopup module used module seem work check let know wrong homepage component import react component react import homepagecss import carousel nukacarousel import headercomponent componentsheaderheaderjs import decorators decoratorsjs import popup reactpopup export default class homepage extends component redirectpage gt windowlocation dashboard componentwillmount popupalert component render var mixins carouselcontrollermixin return component carousel", "num": "12259", "d": "2/2018"}, {"title": "feature request checksum error reporting production", "body": "process enabling ssr unsplashcom would like track checksum errors occur however knowledge checksum errors reported production way tracking need might accidentally introduce change results checksum error want know quickly possible case avoid checksum errors must ensure first client render matches server render easy slip working better infrastructure make impossible eg state accessible enhanced renders ie first client render meantime need know break something", "num": "12258", "d": "2/2018"}, {"title": "warning message socketon", "body": "got problem socket spamming warning line idea improve thanks componentdidmount thissocketon emitloadcandidates data gt data undefined thissetstate isreading false servicesinsertcandidate data", "num": "12257", "d": "2/2018"}, {"title": "strange behavior conditional rendering bypassing props functional component", "body": "bug got today parent component includes nested child component prop passed prop named way variable get value idk important prop used later conditional render jsx block first cycle component gets prop correct way null passed jsx block nt render next cycle prop gets value insted null also works finally prop got null agian like beginning condition nt work proper block still appears code trivia jsx nt work proper const parent someprop gt const child someprop gt someprop null works great const parent somebigprops gt var someprop somebigpropssomeprop real code shots", "num": "12255", "d": "2/2018"}, {"title": "obfuscating bundlejs unauthenticated users", "body": "using react reactrouterdom redux reactredux simple scenario website reactjs php backend restful service backend want bundlejs code exposed unauthenticated users looked everywhere solution seem find one possible react js frameworks understand user unauthenticated data would injected bundle would rather unauthenticated users see anything admin panel solution", "num": "12252", "d": "2/2018"}, {"title": "react still require nontoplevel submit handler", "body": "want request feature report bug bug maybe current behavior using nondelegated handler submit event expected behavior least know submit event bubbled versions react browser os affected issue work previous versions react", "num": "12251", "d": "2/2018"}, {"title": "concern", "body": "read concerned new api wo nt flexible enough cover common use cases instance scrolling tabs component whenever prop changes use browser apis scroll tab view would best way accomplish without currently code something like js class tabs extends reactcomponent render return thispropstabsmap tab gt componentwillreceiveprops nextprops nextpropsselectedtabid thispropsselectedtabid documentqueryselector scrollintoview", "num": "12249", "d": "2/2018"}, {"title": "daniel baker email messages", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12248", "d": "2/2018"}, {"title": "support changing portal container without remounting children", "body": "related working project lot globally unique component instances words essentially database ids also dnd functionality reordering everything fine moving instance one parent another causes complete rerender instance instead moving nodes around thinking using portals instance prop element id render inside reparent simple case passing different element id using redux state however changing portal container node also causes complete rerender everything passed see codepen would possible skip rerendering effectively move portal contents instead", "num": "12247", "d": "2/2018"}, {"title": "context update nt fully propagate cases", "body": "think may bug context latest alpha updates scheduled commit phase nt seem propagate enter mon erase click dark mode expected children update actual children nt update seems happen indirection", "num": "12246", "d": "2/2018"}, {"title": "context providers maybe consumers show unknown performance tab", "body": "noticed alpha think need support else could skip altogether", "num": "12245", "d": "2/2018"}, {"title": "children consumer without new line gives typeerror render function", "body": "want request feature report bug bug current behavior get confusing error using new line children consumer un new context api error fix expected behavior component getting redered versions react browser os affected issue work previous versions react chromium archilinux react nt support new context api", "num": "12241", "d": "2/2018"}, {"title": "error trying createcontext", "body": "want request feature report bug bug current behavior error invariant violation element type invalid expected string builtin components classfunction composite components got object check render method current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example basically returning seems cause weird error wrong js import react createcontext react import render reactdom import hello hello const themecontext createcontext background yellow color white const styles fontfamily sansserif textalign center const app gt return start editing see magic happen render documentgetelementbyid root expected behavior render correctly even though havent implemented consumer also didnt help versions react browser os affected issue work previous versions react", "num": "12239", "d": "2/2018"}, {"title": "new react component definition autobind", "body": "nt know exactly planned auto bind methods would nice yeah know property initializers still user think suppose state stored object closure logs component object ideally nevermind feel free close issue without explanation curious reasoning behind new design", "num": "12238", "d": "2/2018"}, {"title": "new context require explicit interface", "body": "read post new context understood creating problems rather solving one please correct wrong previous context opinion achieved called means nt need explicitly api use instead define api provide using expect implicitly provided runtime design helps decouple api providers api consumers react component tree believe original idea context also applied golang would understand talking used new context consider example javascript xjs const x reactcreatecontext x export default x consumerjs import x complexprojectx problem class something extends reactcomponent render return x context every consumers x worked industry years got pain enough understand bad complex heavy dependency graph code good explaining things english please help explain problem got", "num": "12236", "d": "2/2018"}, {"title": "extracting context stack", "body": "useful feature context creating custom stack things see component embedded side think primary use case logging explicitly currently pretty expensive maintain case need see example could provide api lazily extracts whole path contexts tree would basically synchronously rerender shortest path recreate context time call create stack lazily cc acdlite", "num": "12235", "d": "2/2018"}, {"title": "context transform", "body": "new context api really bulky create middle man consumes one context value transforms provides another one create many components store intermediate state avoid rerendering provider input unchanged could convenience api use case js function transform inputvalue return inputvalue extradata cc acdlite", "num": "12234", "d": "2/2018"}, {"title": "ordering componentwillmountunmount react", "body": "problem seems ordering longer guaranteed react due support async previously always called old components removed called new components example form component inputs register parent form deregister allows form keep track global state inputs following scenario cause form throw error ordering longer guaranteed scenario possible form try register input name previous input unmounted allowed question understand reasoning behind change wondering suggested solution code previously relied firing obvious solution comes mind moving step however means deal unnecessary rerender upon mounting input still correct approach", "num": "12233", "d": "2/2018"}, {"title": "way hint hydration reuse dom nodes", "body": "want request feature report bug feature request since current opinion rather weird behaviour wai current behavior render additional dom client hydrating works partially new dom nodes get confused ones rendered server even though obvious addition server rendered elements get reused css classes would argue behavior would acceptable component state matched serverside state example use state change componentwillmount drive diff current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example clone run expected behavior current behavior truly intended would like way explicitly hint react hydrate specific nodes suggestion nodes property reuse value matches similar react knows handle changes arrays limited knowledge hydration works maybe shows afaik would virtually performance impact still allow client pure additions dom versions react browser os affected issue work previous versions react using react well yes worked react", "num": "12232", "d": "2/2018"}, {"title": "using reactportal newly opened window", "body": "want request feature report bug bug current behavior interactivity highly used react component reacttable newly opened window injected via react portal code based article click open button table opens new window interactivity expected behavior component work docked mode versions react browser os affected issue work previous versions react chrome", "num": "12231", "d": "2/2018"}, {"title": "issue error boundaries custom error types", "body": "think may found bug react defined custom error type react application throwing error boundary defined top application component tree whose purpose catch uncaught errors display error page error boundary catching custom error nt able distinguish error type put simply custom error types created following syntax error boundary perspective simply errors type illustration even though explicitly throwing error boundary method thinks error argument type crazy bug react issue reproduced code documented butin nutshell implemented application component wraps contents error boundary custom error thrown subcomponent custom typing gets lost somewhere along way error boundary perspective error thrown type custom type defined application also stackoverflow expected behavior custom error types would preserved crossed error boundaries tested reactreactdom chrome macos", "num": "12228", "d": "2/2018"}, {"title": "provide way perform synchronous render another root commit phase", "body": "want request feature report bug bug current behavior reentrancy checks prevent synchronous nested react component used work react seems related issue nested reactdom renders current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsfiddle documents problem simulation external dependency manifests expected behavior running think similar problem one nested except difference nt think use portals address usecase component manages dom tree nodes outside react contenteditable node uses bestinclass prosemirror library manage children component looks something like javascript class prosemirror extends component componentdidmount prosemirror manages dom nodes thisel part render cycle configuration prosemirror ends calling render isolated child node wants able immediately afterwards able leverage piece dom longer available synchronously looks like reentrancy change came react portals nt work us site called nt directly part root react tree clearer observe fiddle hierarchy something like way skip reentrancy checks cases isolated react render happening grandchild component react tree nt immediate parent versions react browser os affected issue work previous versions react querying dom immediately reactdomrender worked versions prior react excited async possibilities main react tree curious workarounds ignore reentrancy checks isolated renders", "num": "12227", "d": "2/2018"}, {"title": "ok put random things divroot", "body": "put initial text divroot element eg p tag text div canvas saw many people put entire rendered markup divroot hack seo happen divroot childnode erased put random things right thank patience", "num": "12226", "d": "2/2018"}, {"title": "new chrome iframe spec requires allow attribute use devices", "body": "want request feature report bug sure maybe feature side current behavior opening iframe third party site need access user camera new specs chrome states since version need add attribute order access things like camera microphone however react recognise attribute removes therefore nt access user camera error displayed console allow expected behavior tag known versions react browser os affected issue work previous versions react react version real possibilities change yet chrome version official build os macos sierra sorry already reported could nt find another issue mentioning", "num": "12225", "d": "2/2018"}, {"title": "uncaught typeerror function", "body": "want request feature report bug bug current behavior got following behavior import searchareajs indexjs searchareajs import react component react import searchareaclasses searchareacss class searcharea extends component state showfederalstate false export default searcharea import searcharea searchareasearcharea render return got following error console remove searchareajs defined state work like charm versions react browser os affected issue work previous versions react react v google chrome mac os", "num": "12223", "d": "2/2018"}, {"title": "important note", "body": "", "num": "12222", "d": "2/2018"}, {"title": "select input field working works change text input", "body": "building simple react text generator mostly finished except one problem ca nt seem solve select input nt work read documentation nt see problem code tried changing select input text input worked number input works fine pretty much exact code component import react component react class select extends component constructor props super props thisstate value propsvalue export default select appjs import react component react import appcss import output componentsoutput import select componentscontrolsselect import text componentscontrolstext class app extends component constructor props super props thisstate paras format html text componentwillmount thisgetsampletext getsampletext fetch res gt restext text gt thissetstate text text gt consolelog thisstate catch err gt consolelog err showformat x thissetstate format x thisgetsampletext changeparas number thissetstate paras number thisgetsampletext render return react text generator format paragraphs export default app help greatly appreciated also sorry messed formatting", "num": "12221", "d": "2/2018"}, {"title": "contextconsumer unexpectedly updates time one child components call setstate", "body": "want request feature report bug report bug current behavior time child component calls parent rerenders current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior presumably expected behavior one setting state child component affect parent components particularly state change versions react browser os affected issue work previous versions react versions browser chrome osx works expected previous context api used", "num": "12218", "d": "2/2018"}, {"title": "warning reactcreateelement type invalid expected string", "body": "taking tutorial learn react js everything fine days could run example simple carrying recommended basic configuration plus addons add recognize javascript version several days longer reviewing project working correctly executing command see error show anything browser multiple errors appear console one uninstalled reinstalled reac reactdom problem still persists try new project cloning friend works normally copied structure mine warning reactcreateelement type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined might mixed default named imports error occurred one react components consider adding error boundary tree customize error handling behavior packgejson webpackconfigjs const path require path const config entry srcindexjsx output path pathresolve js filename bundlejs moduleexports config appjsx import react component react import render reactdom class app extends component render return mi aplicacion react js probando la exportacion export default app indexjsx import react component react import render reactdom import app componentsappjsx render documentgetelementbyid appstart indexhtml", "num": "12214", "d": "2/2018"}, {"title": "autofocus issue firefox going react", "body": "got strange issue might bug firefox quantum sure tried upgrading react noticed pages give flash unstyled content isomorphic app even js turned see thing happens pages use autofocus attribute firefox version mac maybe react developer give scenario try see see anything strange server side rendered template regular stylesheet document head react reactdom version create page load latest firefox issue present chrome safari present remove autofocus attributes cc gaearon maybe something autofocus attribute changes recently", "num": "12211", "d": "2/2018"}, {"title": "warn stringifying attribute takes long", "body": "react nt attribute whitelist would valid objects get stringified added attributes smooth migration path lot existing code already depends behavior however one pitfall sometimes made realize includes object whose stringifying unusually expensive example deeply nested immutable map would nt produce error would slow rendering good reason could protect putting counters around places stringify attributes stringification takes say milliseconds something bad going probably warn", "num": "12209", "d": "2/2018"}, {"title": "reacthydrate match", "body": "want request feature report bug bug current behavior match current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example component use show error expected behavior show versions react browser os affected issue work previous versions react react os mac os x browser chrome official build", "num": "12208", "d": "2/2018"}, {"title": "precompile renderers prepack", "body": "filing future work anyone wants take feel free easiest task wo nt able answer lot questions largely fun though want remove much indirection hot paths however react reconciler abstracted away underlying platform renderer host config example reactdom says insert dom node reconciler uses function problem get function passing config object around extra code around extra indirection runtime note approach significantly reduce code size hope could make runtime bit efficient ideally want compiled reconciler code directly include calls dom apis already use closure compiler helps inlining smart enough see functions host config fully inlined object never escapes bundle prepack smart enough actually executes initialization code hypothetical new approach run prepack first get rid intermediate representations run closure compiler top less indirection means closure compiler smarter inline made proof concept shows dom methods successfully end right reconciler hot paths like want proof concept hacky done outside build workflow wo nt sending pr roughly try first need add prepack build workflow roughly shows done even though give broken bundle need make sure include maybe options still broken main reason breaks immediately umd wrapper emitted rollup prepack nt understand soup checks means nt think easy way model without changing prepack found easier change function return tell rollup output simple factory pattern assigns global enough start hacking course work browser prepack still confused things found easiest take rollup bundle save disk manually tweak rerun prepack cli afterwards could quickly get idea exactly breaking common cases access prepack nt know probably possible get around modeling react abstract global ie something like prepended input bundle nt get far replaced bundle need proper fix access initialization cases like shimmed something like cases like probably wo nt work nt know model abstract cases nt clear made initialize lazily prepack executes initial path code like js var supportsomefeature documentdocumentmode lt function shoulddosomething supportsomefeature could written like js var didinit false var supportsomefeature function ensureready didinit return didinit true go wild supportsomefeature documentdocumentmode lt function shoulddosomething ensureready supportsomefeature super happy works like places ends necessary maybe model abstracts nt know prepack well nondeterministic calls like sure shimmed string literals maybe teach prepack also abstract string somehow say fix immediate issues get excited first bundle huge prepack preevaluates metaprogramming code like turn giant precomputed object literals final values one way solve remove code like tricky although time move direction another way delay initialization prepack preexecutes initial path change code lazily initialize objects eg functions use called first time already work find places css prefixes mentioned css prefixes dom property configs cases prepack explodes solving get back roughly bundle size normal react super hacky version made event plugins lazy injected first call way prepack nt attempt preevaluate paths contains explosive objects maybe better way eg making lazy somehow avoiding need objects altogether get rid host config needed make sure parts like mutation object nt referenced inner closures otherwise prepack wo nt know safe omit added early used destructured functions point bundle already hundred bytes smaller original one host config indirection gone final problem bumped gcc running memory reason prepacked input puts pressure able work around manually bumping process memory limit peaks around compiles sum fun evening hack probably viable longer term strategy need think solve object initialization issues whether want make things lazy course also need figure integrate build properly eg readd umdnode headers later model prepack think fun task work motivated contributors tag one please nt expect result would get merged mostly exploratory work would awesome see working pr though", "num": "12206", "d": "2/2018"}, {"title": "prefix private api fields context object", "body": "safe read obvious even nt document others people think safe prefix unsafe ones underscores even longer prefixes like", "num": "12203", "d": "2/2018"}, {"title": "rowspan colspan render inconsistent case", "body": "js renders dom js renders sure preferred consistent right js class hello extends reactcomponent render return consolelog reactdomserverrendertostring html", "num": "12202", "d": "2/2018"}, {"title": "regression react automatically marks first item mutliple select checked", "body": "want request feature report bug bug regression current behavior react creating first child automatically getting marked selected react seem way specify gets selected default expected behavior react unless marked option selected options selected default versions react browser os affected issue work previous versions react versions effected include worked bug reproducible chrome firefox hacky workaround found get around first option getting selected inject first child multiselect", "num": "12200", "d": "2/2018"}, {"title": "warn componentnameproptypes", "body": "want request feature report bug feature current behavior sometimes boss stressing add prop types way notice uppercase p proptypes react warn typo expected behavior love get warning sake whenever mistype would actually love implement pull request could nt find anywhere else warning static properties like would like put code", "num": "12197", "d": "2/2018"}, {"title": "bug gulputil deprecated react", "body": "hi everyone problem react run command npm install log npm install npm warn deprecated gulputil gulputil deprecated replace following guidelines resolve conflict project see variant migrate new react version dangerous pain variant fix react source code change gulputil use packages instruction possible help ps sorry english", "num": "12196", "d": "2/2018"}, {"title": "requesting localization tl tagalog filipino", "body": "would like ask translate documentation tagalog filipino", "num": "12195", "d": "2/2018"}, {"title": "stub document object link click", "body": "hi trying mimic function called link click react getactiveclass e navdata const elements documentbodygetelementsbyclassname camnavpanelrewardsmenu getelementsbytagname li describe camnavpanellistitem isredirect false plus highlight li gt let wrapper let please help getting getelementsbytagname undefined", "num": "12194", "d": "2/2018"}, {"title": "feature implement method get sync state since async", "body": "want request feature report bug feature request current behavior expected behavior", "num": "12193", "d": "2/2018"}, {"title": "add oldprops additional argument getderivedstatefromprops", "body": "want request feature report bug feature current behavior receives nextprops previousstate arguments current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example deprecated used allow code like new function choice static method constantly copy state order access later illustrated example posted twitter gaearon expected behavior ideally difficult implement would also take current previousold props argument something like would eliminate need constantly assign props state purely comparison purposes quick look source nt make clear easy would though versions react browser os affected issue work previous versions react", "num": "12188", "d": "2/2018"}, {"title": "update shouldcomponentupdate docs advice closures", "body": "want request feature report bug possible bug depending understanding new context feature current behavior presence component blocking updates context consumers first click toggle top data expected behavior consumers shouldcomponentupdate component continue updating first toggle top data click versions react browser os affected issue work previous versions react react", "num": "12185", "d": "2/2018"}, {"title": "access refs recommend callback pattern instead", "body": "mean currently using thisrefstextinput access refs recommend callback pattern instead callback pattern mean mean use refs", "num": "12184", "d": "2/2018"}, {"title": "ref callbacks called componentdidupdate", "body": "want request feature report bug bug current behavior refs documentation states ref callbacks invoked componentdidmount componentdidupdate lifecycle hooks however seems ref callback called update occurs closest things similar bit confused seems nobody ever experienced something like might misunderstanding something current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example copy code link import react react import render reactdom const styles margin auto padding width border solid black textalign center cursor pointer class test extends reactcomponent test e consolelog ref callback constructor super thisstate number update thissetstate number mathrandom componentdidupdate consolelog updated render return class app extends reactcomponent render return render documentgetelementbyid root expected behavior ref callback logged updated logged versions react browser os affected issue work previous versions react tried several versions react chrome running macos", "num": "12183", "d": "2/2018"}, {"title": "unexpected contextconsumer contextprovider behavior", "body": "want request feature report bug bug current behavior use two contexts created childtree use set new context expect child consumer got new result next sibling childtree got unexpected new context current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example createcontext issue expected behavior contextprovider affect children node versions react browser os affected issue work previous versions react react", "num": "12182", "d": "2/2018"}, {"title": "request filipino translation", "body": "hi would like contribute project thru translation would like translate necessary files filipino hoping response thanks", "num": "12180", "d": "2/2018"}, {"title": "removing ref callback works differently hostcomponents vs classcomponents", "body": "want request feature report bug bug current behavior remove ref mounted hostcomponent update calls original ref null remove ref mounted classcomponent update call original ref null note nt call passed fooinner ref null note call passed div ref null modify ref either hostcomponent classcomponent change original ref called null new ref called instance take sandboxes change second expected behavior honestly sure consistent reason different hostcomponents decide schedule ref effect completework long classcomponents decision made beginwork long means workinprogressref null behavior different hence issue probably pick one make consistent versions react browser os affected issue work previous versions react unsure sure issue latestfiber nt dug deep enough see happened lt", "num": "12177", "d": "2/2018"}, {"title": "way directly use function like react", "body": "case nb somewhat related tasked integrating wysiwyg uses ofc reactagnostic want use object iframe use style props website consistency properties theme object per react convention camelcased eg paddingtop however css needs put iframe needs cssstandardcased question way directly use function like react guessing handled source csspropertyoperationsjs afaik direct export", "num": "12176", "d": "2/2018"}, {"title": "flow find reactdom hydrate function", "body": "want request feature report bug bug current behavior flow ca nt find reactdom function current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example try following code project using flow js flow import hydrate reactdom flow error module named export called calling method default export also fails import reactdom reactdom reactdomhydrate flow error property found reactdom expected behavior cause flow errors versions react browser os affected issue work previous versions react reactdom node flow nt think ever worked", "num": "12175", "d": "2/2018"}, {"title": "form causes react crash", "body": "file new bug adding input form element component react crashes caused mozilla firefox browsers version react higher", "num": "12174", "d": "2/2018"}, {"title": "onchange behaviour radio buttons", "body": "want request feature report bug bug current behavior assigning onchange listener radio button group form event fires per radio button current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example created basic example problem working jsfiddle since guess using date version react also found workaround problem using components internal state detailed expected behavior onchange event fire every time selected radio button changes versions react browser os affected issue work previous versions react affected version far tell happens across browsers check previous future versions problem appears fixed sadly still process preparing update", "num": "12172", "d": "2/2018"}, {"title": "remove use proxy events development", "body": "think maybe revert people already think kind api also annoying view debugger none properties show instead could seal event object something like", "num": "12171", "d": "2/2018"}, {"title": "prop pass data event handlers", "body": "feature request suggestion add known prop gets passed handlers second parameter would eliminate need closures inline binding inline arrow functions proxyeventtargetdataset etc currently need pass event handler several ways create class method returns closure use inline bind arrow function intuitive alternative use pass object prop gets converted string immutable map becomes pass id use handler find data", "num": "12169", "d": "2/2018"}, {"title": "ca nt use prevstate function callback parameters setstate", "body": "", "num": "12165", "d": "2/2018"}, {"title": "unstablerendersubtreeintocontainer execution order", "body": "current behavior execution order changed know old api replaced starting switch codebase still depends libraries use old api matter knowing change wrote link order functions executed see calling children gets mounted called behavior change intentional", "num": "12160", "d": "2/2018"}, {"title": "add stringref warning strict mode subtrees", "body": "", "num": "12158", "d": "2/2018"}, {"title": "getting started docs terrible", "body": "came back react year using getting started docs pretty much helpful slightest docs links websites without instructions get react project running remember year ago back react docs step step walkthrough set get project running scratch links websites without react specific instructions happened docs become useless needs step step guide added back docs guide get nothing running browser instead links websites nt anything react remember back react could run guide hello world app running within minutes problems trying figure new docs hour still luck getting running instructions used actually instructions basically saying install run command terminal docs say well use link site nothing react even sort instruction react website link without context around docs please reverted old versions actually create proper getting started page get nothing running", "num": "12157", "d": "2/2018"}, {"title": "typescript definition sfc returning fragmentstring", "body": "want request feature report bug likely bug current behavior open sandbox wait compiler catch see error expecting returned expected behavior based blog post possible component like correct looking type definition method return type correct however sfc declaration looks like assume oversight type well case true able create pr correct missing something please versions react browser os affected issue work previous versions react", "num": "12155", "d": "2/2018"}, {"title": "reacttestrenderer asynchronous rendering guarantees", "body": "want request feature report bug think question understand react newer fiber architecture introduces asynchronous rendering pipeline allows better prioritisation work also aware version react still expected render synchronously looking forward though using especially reacttestinstance helper apis guarantees safe developer lean creating testrenderer instance safe immediately introspect instance look child node given type differ components userspace asynchrony instance class component child node want make test assertion safe safe way flush pending reconciler changes check pending work currently experiencing intermittent failures test assertions look like error output looks like fail pathtomycomponenttestjsx mycomponent test assertion child node instance instances found node type childnode expectone reacttestinstancefindbytype versions react browser os affected issue work previous versions react seeing failure running running", "num": "12153", "d": "2/2018"}, {"title": "umbrella releases", "body": "x new context api x add context api test renderer add context api shallow renderer even makes sense x mark private fields private x context consumerprovider bailout props change x looks like wording warning might need updated reflect actually wo nt work recommendation x prefixed versions x x fires deprecation warnings x x enables asyncbydefault updates x also enables strict mode changes related async mode update scheduling x interactive updates async expires within second subsequent interactive event fired earlier one flushed earlier one synchronously flushed processing incoming one used event result discrete user interaction words interactive events events debounced without affecting terminal state click event interactive scroll event x controlled updates syncish effectively using synchronous mode updates flushed react yields back browser used controlled components state dom must always sync react internal state x deferred updates default updates outside react lifecycle event handler promise handlers etc x useful prerendering via quite ready make api stable also enables asyncmode children root x useful things like draft need wrap event handlers confirm et al work nested inside lifecycle prioritychanging function x expose persistent mode via use separate entry point pr x fix fragment support test renderer x revert deprecation injecting custom event plugins necolas ready commit providing another migration path rnw deprecate even outside strict mode keep working warning add prefix want keep using deprecate legacy context api possible migration strategy implement legacy api top new api extract separate package like revert deprecation injecting event plugins far future major version remove deprecated apis legacy context api assuming deprecate minor strict mode everywhere presumably added warnings strict mode point chose include may include beyond new component api holding closer feature complete phrase means implemented async rendering bytecode compilation static version method would take lots effort migrate mostly class instance methods used event handlers migration effort may worth eventually introduce new component api replaces classes stable version really made stable ago clearly useful synchronous mode however asynchronous mode effectively noop would weird ask everyone migrate new api remove upcoming release stable version probably ready used production limited capacity holding tested internally tentative plan make stable automatically opt error boundary children strict mode technically strict mode resilient many apps would effectively opt components strict mode since recommendation always error boundary top tree", "num": "12152", "d": "2/2018"}, {"title": "contextconsumer contextprovider reacttestrenderer", "body": "want request feature report bug bug current behavior unsupported component type test renderer probably bug react called know component types current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior identify new context types versions react browser os affected issue work previous versions react", "num": "12150", "d": "2/2018"}, {"title": "ci broken", "body": "looks like commit broke ci sure release script passed test variants devprod bundle devprod first unable reproduce broken behavior fresh install able sure yet causing perhaps something yarn workspace prerelease versions", "num": "12147", "d": "2/2018"}, {"title": "processci check looks like typo", "body": "check looks like typo may wrong nt found ci checked", "num": "12145", "d": "2/2018"}, {"title": "change lifecycle deprecation warnings lowpri", "body": "warnings driven use rather avoid thrashing automated tests", "num": "12144", "d": "2/2018"}, {"title": "using react app without rendering html piece", "body": "come angularjs need using react app without rendering html piece like contain html tags want use react app model logic errormessage name errorsfirst name email errorsfirst email message errorsfirst message fyi achieve scenario question achieve scenario", "num": "12143", "d": "2/2018"}, {"title": "upload files ftp server location using reactjs", "body": "hi please let know anyone knows upload files ftp server using reactjs", "num": "12142", "d": "2/2018"}, {"title": "dev memory leak render event listeners", "body": "want request feature report bug bug current behavior using dev appears around event listeners added every time component rerendered occasionally get garbage collected listening events happen lot scroll fast typing etc slow kill tab using current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open dev tools performance check memory checkbox start performance capture type quickly text box bit stop performance capture note increase event listeners picture included reference expected behavior memory leaks versions react browser os affected issue work previous versions react chrome macos let know anything help clarify hopefully got right wordinginfo thanks", "num": "12141", "d": "2/2018"}, {"title": "safari errors using fragment upon hydrating", "body": "want request feature report bug bug current behavior safari mac os x ios throws error able make reduced test case reporting hope someone else also issue able figure root cause currently best figured production universal rendering scenario using reactfragment together elements use context like component connected redux safari errors client side hydration example one case code like errored safari replaced fragment div case modal component also connected redux returned node using another scenario cms content using custom renderer json transformed react rendering components complex context based logic using fragments anywhere causes error safari similarly issue fixed replacing fragment div span depending case currently things able track together use fragments context possible bug requires condition large complex project apple user complicates things also inconvenient bug happens production react bundle results unhelpful error messages current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example current best attempt isolating issue replicate expected behavior safari throw hydrate using mixture fragment context versions react browser os affected issue work previous versions react react production issue development version safari safari works fine", "num": "12140", "d": "2/2018"}, {"title": "question call method react component instance", "body": "bit new react advice pointers current implementation always open advice question extended react component class create new component export default class comp extends reactcomponent render component using following code like element could different places page currently transition moving te components react yet multiple components page call method specific component instance way get instance selecting dom element approach totally different way", "num": "12139", "d": "2/2018"}, {"title": "working context", "body": "typescript import react react import reactdomserver reactdomserver const proptypes require proptypes export class parentcomp extends reactcomponent lt gt export class childcomp extends reactcomponent lt gt let html reactdomserverrendertostaticmarkup consolelog html context workin result call parent context parant foo foo", "num": "12138", "d": "2/2018"}, {"title": "modify parent component state child component props", "body": "want request feature report bug bug current behavior possible modify state parent component child props prop array object seems byproduct fact javascript passes arraysobjects functions reference instead value current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example shown mean codepen expected behavior able modify parent state child component props since props normally assumed immutable easy prevent behavior deep clone arrayobject passed prop value array example see mean versions react browser os affected issue work previous versions react tried react", "num": "12137", "d": "2/2018"}, {"title": "childrenonly inconsistent childrencount", "body": "want request feature report bug bug current behavior const children reactchildrencount children gt const child reactchildrenonly children gt error reactchildrenonly expected receive single react element child repro codesandbox expected behavior excepted return one element array throw versions react browser os affected issue work previous versions react react certain behavior prior react prefiber fiber supports encourages use fragments ie arrays elements issue much likely encountered react onward furthermore code reads like something wrong many children may child expected one child um okay", "num": "12136", "d": "2/2018"}, {"title": "synthetic event system", "body": "hi new react dont know synthetic event anyone help explore topic", "num": "12133", "d": "2/2018"}, {"title": "characters string objects rendered separate elements", "body": "want request feature report bug bug current behavior characters string objects created new keyword rendered separate elements english visible user farsi letters become disconnected looks like h current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example five separate text elements rendered chrome inspector looks like expected behavior value represented string object rendered like native string value would versions react browser os affected issue work previous versions react react tested chrome ubuntu likely unrelated version os", "num": "12132", "d": "2/2018"}, {"title": "meta charset rendered camel case", "body": "use reactdom rendertostring meta property charset rendered camel case like insted using react reactdom version", "num": "12131", "d": "2/2018"}, {"title": "update state batch react outside render cycle", "body": "app many state changes coming external sources calling setstate outside render cycle hurts performance lot setstate starts new render cycle would like something like achieve react", "num": "12130", "d": "2/2018"}, {"title": "server side rendering", "body": "ok server side rendering", "num": "12129", "d": "1/2018"}, {"title": "datareactid property", "body": "hi many projects written reactjs one project datareactid property existing others existing", "num": "12128", "d": "1/2018"}, {"title": "fix secure origins allowed nginx", "body": "nt want use thanks", "num": "12125", "d": "1/2018"}, {"title": "unexpected dom elements list rendering duplicate keys", "body": "want request feature report bug reporting bug current behavior unexpected dom elements list rendering current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example switch tabs unexpected dom elements expected behavior unexpected dom elements versions react browser os affected issue work previous versions react tested react gt extra elements react duplicate keys mistakes dom elements anyway", "num": "12124", "d": "1/2018"}, {"title": "concating react resources", "body": "hi want use many libraries frameworks project concat react framework like angular vue ember", "num": "12122", "d": "1/2018"}, {"title": "add seo support reactjs without using ssr", "body": "hi team currently working seo reactjs applicationso thinking add different meta tags route figured using ssr converting applications use ssr seo support good option tia", "num": "12121", "d": "1/2018"}, {"title": "know onerror resons", "body": "", "num": "12120", "d": "1/2018"}, {"title": "error deployed react website using react error", "body": "visit full message use nonminified dev environment full errors additional helpful warnings", "num": "12119", "d": "1/2018"}, {"title": "automatically assigning keys", "body": "want request feature report bug want request feature current behavior currently developer manually assign key element array even knows elements array order change expected behavior simply prefer fourth methods second method may lead conflicts third method makes feel dirty things touching internal cogs react versions react browser os affected issue work previous versions react react browser os relevant", "num": "12113", "d": "1/2018"}, {"title": "error save component ref state", "body": "want request feature report bug bug current behavior error save component ref state current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior seems like ref callback called many times every time different argument fix problem nt know versions react browser os affected issue work previous versions react react", "num": "12112", "d": "1/2018"}, {"title": "document use setstate componentwillunmount", "body": "want request feature report bug feature current behavior excerpt documentation componentwillunmount invoked immediately component unmounted destroyed perform necessary cleanup method invalidating timers canceling network requests cleaning subscriptions created componentdidmount docs nt mention used consider following example undone timer time since timer invalidated place reset state class helloworld extends component state showgreeting false onclick thissetstate showgreeting true componentwillunmount cleartimeout thistimer legal call given asynchronous feels may invoked component actually unmounted may produce warning understanding actually pumps state dispatch queue manually ensure state changes land component late current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior sure versions react browser os affected issue work previous versions react webkit", "num": "12111", "d": "1/2018"}, {"title": "router react", "body": "hi using packages like reactrouter reactrouterdom react default router npm packages like reactrouter reactrouterdom part react", "num": "12110", "d": "1/2018"}, {"title": "input accounted form", "body": "want request feature report bug bug current behavior inputs rendered react controlled uncontrolled accounted submitting forms instance html amp whereas html jsx function myinput props return ca nt get fully working example codesandbox requires looking resulting http request jquery serialize form expected behavior second example produce react components usable regular forms note browser inspectors show expected react rendered inputs however seems attribute uses getters setters inputs whereas plain html inputs strings versions react browser os affected issue work previous versions react react tested chromium firefox archlinux", "num": "12108", "d": "1/2018"}, {"title": "reacttestrenderer totree yet know handle nodes", "body": "want request feature report bug bug current behavior invariant violation totree yet know handle nodes expected behavior returns tree versions react browser os affected issue work previous versions react", "num": "12106", "d": "1/2018"}, {"title": "ca nt edit wiki", "body": "hello ca nt edit wiki add website list editing disabled", "num": "12104", "d": "1/2018"}, {"title": "setstate callback never called component state nt update production", "body": "using react running strange behavior things work fine locally production using meteor stops working noticed callback never called dom nt reflect changes devtools nt reflect changes calling nt anything hand returns object correct updated state returns object correct updated state sure problem side somehow fairly complex component nt even write make matters worse thought maybe could get tips go along debugging frustrating issue", "num": "12102", "d": "1/2018"}, {"title": "access component child instance", "body": "creating small generic state management based object writing react helper found issue create hoc need access react looking source code component nt seem like canshould standalone function library able used independently making everyone download react feasible navigated official hoc documentation past issues google could nt find way retrieve passed component hoc code working yet repo linked js load whole react independently project type import component react const connect opts gt passed gt return class withstate extends component export default connect find hack make work seems like one fragile pieces code ever written relying differences modules commonjs js const connect opts gt passed gt const react require react return class withstate extends reactcomponent export default connect way import react used reactexclusive helper library questionfeature request possible access constructor parent child could make possible somehow something like would ideal think way javascriptreact works figured ask since chances know way better whether something like possible want request feature report bug request feature think", "num": "12101", "d": "1/2018"}, {"title": "extend classname manipulation", "body": "currently string manipulation outside react starring classnames works perfectly writing code feels little verbose jsx prop plain string directly mapped dom element property let create polymorphic frankenstein keep close pure jsdom possible suggestion changing adding since long time ago microsoft dom element method works greatly direct manipulation would nt fit jsx declarative syntax extending components prop would work pretty much like classnames mapping class names keys conditional values upon rendering component react would merge single string passed render good old plain string angular something like long time prop plain string ngclass directive makes magic", "num": "12099", "d": "1/2018"}, {"title": "ca nt use reactfragment", "body": "want request feature report bug bug current behavior broken runtime current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example use syntax render mapped fragments try render component get met error expected behavior expect component render works fine rendering array nt want type comma elements also works fine use semantically correct versions react browser os affected issue work previous versions react react chrome version official build mac", "num": "12097", "d": "1/2018"}, {"title": "typeerror read property state undefined createreactclass", "body": "currently attempting create button red text yes click button changes green color text confirm final stage action takes place currently defining state changes click button initial color final color click however currently getting error typeerror read property state undefined pointing line whenever code compiled webpage defining initial state behavior click code inside table render anyone ideas brand new react apologize obvious also learned react using createclass trying piece together make work new package advice greatly appreciated react chrome", "num": "12096", "d": "1/2018"}, {"title": "trying run createreactapp command", "body": "f createreactapp helloworld creating new react app f installing packages might take couple minutes installing react reactdom reactscripts npm err unexpected end json input parsing near dirrecursive npm err complete log run found npm err c aborting installation npm install save saveexact loglevel error react reactdom reactscripts failed deleting generated file packagejson deleting helloworld f done npm version", "num": "12095", "d": "1/2018"}, {"title": "error event fired twice development mode", "body": "want request feature report bug bug current behavior error event fired twice development mode example see gt gt gt gt gt error logged twice expect see note issue nt happen production version react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codepen demo static html reproducing problem hello world", "num": "12093", "d": "1/2018"}, {"title": "native ecmascript module react reactdom", "body": "want request feature report bug probably feature request since root considering build tooling questions proceed efforts current behavior native ecmascript module output current build tools nt easily allow adding native ecmascript module build target investigating workflow using native ecmascript module version react reactdom browsers found implementation outputs native ecmascript modules one use wrapped version transpiled versions added export statements transpiling would necessary browsers supporting ecmascript modules natively even spread operators supported browsers although fully supported ast generators tools due fact spec nt finalised test projects different build tools built simple proof concept outputs ecmascript modules used modern browsers challenge question tools settings used poc contradict current build settings tools wondering something added build target something better suitable external repo time would love make happen would like hear something deemed worth would preferred way implementing investigation find easy way without changing considerable amount code build tooling making relatively high risk endeavour webpack vs rollup different settings needed babel named exports instead commonjs moduleexports pattern name effects build process make somewhat complex clarify things links poc repo outputs native ecmascript modules react reactdom repo minimal setup test working app made modules browser expected behavior preferably build target native ecmascript modules versions react browser os affected issue work previous versions react relevant", "num": "12091", "d": "1/2018"}, {"title": "use setstate componentwillreceiveprops", "body": "use js componentwillreceiveprops nextprops thissetstate key value thisdowhatever dowhatever const thisprops new propsold propsnextpropsthisprops", "num": "12090", "d": "1/2018"}, {"title": "debug renderphase side effects strictmode dev", "body": "relates pr currently doubleinvoke component reducer functions feature flag also inside subtree however likely new element present production apps believe important negatively impact performance strict warnings like warnings impact dev mode doubleinvoked lifecycles impact dev prod actually good thing facebook since helps us identify potential bugs production easily limit impact developers think would complicate story external users negative performance impact propose continue observe flag dev prod since impacts facebook doubleinvoke strict mode dev enabling behavior greatly complicates incremental rendering tests see also converting internal explicitly override featureflag running think okay since tests break use nooprenderer published npm", "num": "12089", "d": "1/2018"}, {"title": "question react app embedded div container setstate refreshes container", "body": "observed peculiar behavior unsure whether design issue specific environment basically react app rendering div included web container trigger component local state change calling setstate whole web component page refreshed thus loading react app scratch loosing app state expecting setstate refresh app whole page nt expected behavior proper way react scenario thanks advance", "num": "12087", "d": "1/2018"}, {"title": "remove componentchildcontexttypes componentcontexttypes proptypes requirements context", "body": "since currently undergoing work context api feel like may good time bring projects design decision use internal components made early assumption use may well go whole way use well enforcing declaration single react feature nt make much sense optional required get around enforcement components end looking like following javascript makecontextjs import proptypes proptypes const makecontext keys gt const obj keysforeach key gt obj key proptypesany return obj export default makecontext javascript contexttypesjs import makecontext makecontext export default makecontext somevalue someothervalue javascript parentcomponentjs import contexttypes contexttypes import childcomponent childcomponent class parentcomponent extends reactcomponent getchildcontext return somevalue someothervalue false render return parentcomponentchildcontexttypes contexttypes javascript childcomponentjs import contexttypes contexttypes const childcomponent props somevalue gt somevalue childcomponentcontexttypes contexttypes see declaration essentially pointless yet forced api enforces seems much like developer decide whether rule enforced", "num": "12086", "d": "1/2018"}, {"title": "feature request middleware", "body": "incomplete draft feature think could really cool replace higher order components context way think component spirit react know feature feasible desirable react especially would lead bigger api surface proposal written documentation give feel would use react middleware middleware applied somewhere component tree instantiated child components instantiated mount context child components means child components depth middleware used like normal components works slightly differently middleware element used added middleware stack already middleware stack removed stack pushed end innermost props simplified example addition actual classes stack also includes recent props roughly works lifecycle methods additions existing lifecycle methods mounting new middlewareshouldmiddlewaremount new middlewareshouldmiddlewarepropagate component constructor new middleware constructor new middleware middlewarewillmount component componentwillmount component render new middleware interceptrender component componentdidmount unmounting new middleware middlewarewillunmount static shouldmiddlewaremount reactcomponent determine current middleware apply component method nt implemented middleware always applied middleware middleware stack method called every time component constructed example javascript class transforminlinestyles extends reactmiddleware mount middleware set transforminlinestyles truthy value children given component still enable middleware static shouldmiddlewaremount component return componenttransforminlinestyles const props gt const b props gt btransforminlinestyles true const app gt applied applied b static shouldmiddlewarepropagate reactcomponent determine whether middleware remain middleware stack excluded subtree given component specified returns false words default behavior middleware propagate useful want limit middleware affecting deeply nested children also useful giving middleware access immediate children example javascript import react react class providetheme extends reactmiddleware static stoppropagation props gt propschildren static shouldmiddlewarepropagate component return component thisstoppropagation const app gt middleware stack providetheme middleware stack b middleware stack c providetheme middlewarewillmount reactinstance called child component calls componentwillmount good place initialize state middleware instance middlewarewillunmount reactinstance called child component calls componentwillunmount example na\u00efve example could used trigger automatic updates mobx javascript class observer extends reactmiddleware middlewarewillmount reactinstance thisdispose autorun gt middlewarewillunmount reactinstance stop listening changes mobx thisdispose interceptrender children interceptrender called result render function component resulting value used render dom example example middleware transforms object classes string result works similarly ngclass works angularjs javascript class objectclassnames extends reactmiddleware life cycle method intercept render method recursively loop children performing thistransformprops props interceptrender children return reactchildrenmap children child gt reactisvalidelement child return child return child props thistransformprops childprops children thisinterceptrender childchildren child object classname call thistransformclassname transformprops props props propsclassname typeof propsclassname object return props concatenate truthy keys classname object string transformclassname classname const result const widget props gt const app gt middleware react middleware replace two problematic patterns used react context context react docs says use context context however useful feature people continue use abuse forseeable future react router started abusing context recent version shows clearly need middleware propose would able inject props arbitrary subtree app performance implications would ideal scenario libraries react router relevant props context rarely changes middleware shouldcomponentupdate still function like would expect higher order components primal rule programming dry using mobx react must use observer decorator reactive classes nt really big deal include would reduce size every single observer component two lines importantly would nt forget creating higher order component static properties longer available package hoistnonreactstatic designed able access static properties higher order components transparently static property initialized lifecycle methods component however proxied creating higher order components also messy affair middleware could achive thing react way replace connect reactredux could set shouldmiddlewarepropagate return false would affect one component alternatively could use static properties mapstatetoprops mapdispatchtoprops", "num": "12085", "d": "1/2018"}, {"title": "automatically fix javascript errors pull requests", "body": "run sticklerci service aimed improving code quality simplifying code review automating code feedback pull requests launched autofixing javascript pull request commits javascript open source project service save time brain power automatically fixing style errors interested trying product submit pull request configuration file maintainer need enable webhooks logging enabling webhook thank", "num": "12079", "d": "1/2018"}, {"title": "image srcset bug", "body": "hi problems img tag srcset inside small components function latestgriditem item const id itemid const title itemtitle const name itemname const posterpath itembackdroppath const testposterpath const postersrc const srcset return processenvpublicurl movie id gt title undefined title name failed parsing srcset attribute value since unknown descriptor setvalueforattribute setvalueforproperty setinitialdomproperties setinitialproperties finalizeinitialchildren completework completeunitofwork performunitofwork workloop callcallback invokeguardedcallbackdev invokeguardedcallback renderroot performworkonroot performwork requestwork scheduleworkimpl schedulework enqueuesetstate nodemodulesreactcjsreactdevelopmentjscomponentsetstate anonymous anonymous promise resolved async srcapitmdbapijstmdbapigetmoviesnowplaying homethisgetnowplayingmovies componentwillmount callcomponentwillmount mountclassinstance updateclasscomponent beginwork performunitofwork workloop callcallback invokeguardedcallbackdev invokeguardedcallback renderroot performworkonroot performwork requestwork scheduleworkimpl schedulework scheduletoplevelupdate updatecontainer anonymous unbatchedupdates rendersubtreeintocontainer render srcindexjs webpackrequire bootstrap fn bootstrap mediascss webpackrequire bootstrap anonymous bootstrap anonymous bootstrap dropped srcset candidate autoprefixer babelcore babeleslint babeljest babelloader babelpresetreactapp babelruntime casesensitivepathswebpackplugin chalk cssloader dotenv eslint eslintconfigreactapp eslintloader eslintpluginflowtype eslintpluginimport eslintpluginreact extracttextwebpackplugin fileloader fsextra htmlwebpackplugin jest lodash nodesass objectassign postcssflexbugsfixes postcssloader promise raf react reactautosuggest reactdevutils reactdom reactgooglematerialicons reacthelmet reactrouterdom reacttransitiongroup sassloader styleloader swprecachewebpackplugin urlloader webpack webpackdevserver webpackmanifestplugin whatwgfetch need help thank", "num": "12077", "d": "1/2018"}, {"title": "update rolluppluginnoderesolve", "body": "want request feature report bug feature current behavior update rolluppluginnoderesolve external option instead noderesolve getplugins createbundle rimraf processtickcallback expected behavior like use rolluppluginnoderesolve debian packaging react dependency gitlab aptget install gitlab works setup gitlab server pr removed option versions react browser os affected issue work previous versions react dependent react version build dependency", "num": "12076", "d": "1/2018"}, {"title": "expose component methods", "body": "want request feature report bug request feature current behavior methods components exposed expected behavior would like able expose methods component used container component done attribute similar ref like example expose example imagine car component wheel component car would like rotate wheels using method wheels expose cars something like class car extends component constructor props super props rotatewheels thiswheelsrotate render return class wheels extends component constructor props super props thisstate wheelrotation rotatewheels angle thissetstate wheelrotation angle render const wheelstyle transform return versions react browser os affected issue work previous versions react versions browsers", "num": "12074", "d": "1/2018"}, {"title": "fabric todos", "body": "notes spillovers fabric renderer commit update currentprops updates commit phase needs host effect marked need hook host updates persistent mode x actually use currentprops extracting events component tree resuming need able reuse host nodes used another thread always clone direct siblings changed node case relayout", "num": "12073", "d": "1/2018"}, {"title": "controlled fields rerender setstate call even though data changed", "body": "want request feature report bug reporting bug current behavior basically many controlled fields app currently developing normally want rerender values changed onchange event rerender every time setstate gets called anywhere within component parent component even tried creating custom component contains setting shouldcomponentupdate return false seems ignore command completely weird case consolelog child component render function nt get executed field gets rerendered nonetheless issue causing major performance problems app hope someone addresses issue fast possible continue working react project maybe someone provide temporary workaround please let know something missing using field incorrectly current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example isolated problem new empty app see behavior following gif code simple recreate problem creating controlled fields one another go browser inspect element input something basic input field rerender every new typed letter field way around javascript import react component react import logo logosvg import appcss class app extends component constructor props super props thisstate thishandleinputchange thishandleinputchangebind export default app expected behavior field rerender data changed versions react browser os affected issue work previous versions react able recreate problem react versions latest test versions sure worked correctly using chrome latest firefox latest ubuntu", "num": "12072", "d": "1/2018"}, {"title": "question react fiber using gpu", "body": "hi react team clovispro react want enhance react performances quite old phones tablets sometimes multicomponent updates could slow phone make ux uncomfy normal basic javascript uses cpu old hardware low cpu enhance react performances made update react fiber directly allow javascript run gpu know libraries make global hack thanks wink ps gpu already used css make animations smoother", "num": "12071", "d": "1/2018"}, {"title": "react bug", "body": "want request feature report bug report bug current behavior upgrade react safari browser console print bug undefined object evaluating jareactcurrentowner map constructor accept arguments current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example react safari browser look console bug expected behavior nt console mistake versions react browser os affected issue work previous versions react react", "num": "12070", "d": "1/2018"}, {"title": "react test utils nt reset form inputs upon simulated reset button click", "body": "want request feature report bug bug current behavior one components form inputs reset button tests find button simulate click none inputs reset reproduction see component shows test shows expected behaviour nt occur expected behavior simulated click reset button causes inputs form reset versions react browser os affected issue work previous versions react react reactdom testing jest", "num": "12067", "d": "1/2018"}, {"title": "rendering via jsx vs function call", "body": "rendering via significantly faster plans near future within next months perhaps optimise functional components perform optimisation avoiding jsx nonhtml elements", "num": "12066", "d": "1/2018"}, {"title": "problem input type changes email text", "body": "want request feature report bug bug current behavior input field changes email text exception typeerror thrown setselection reproduction see expected behavior crash uncaught exception versions react browser os affected issue work previous versions react master firefox would proposed change fix issue", "num": "12062", "d": "1/2018"}, {"title": "onchange event checkbox firing circumstances", "body": "sure likely lack knowledge fact started fiddling react couple weeks ago might hint anyway code meant display checkbox javascript import react react import connect reactredux import fetchsettingsifneeded updatesetting actionssettings class adjustids extends reactcomponent settingkey autoadjustids function mapstatetoprops state const settings settingsreducer state const isfetching didinvalidate settingsreducer isfetching true const mapdispatchtoprops dispatch gt fetchsettings key defaultvalue gt dispatch fetchsettingsifneeded key updatesetting key value gt dispatch updatesetting key value export default connect mapstatetoprops mapdispatchtoprops adjustids even probably relevant clarity data read written rest calls code mostly based back specific case checkbox supposed fire event clicked happens long initial state case every time click checkbox called instead initial state click called clicking call moment everything works flawlessly callbacks called data updated refreshed expected problem initial state tried many possible combinations see different scenario may cause problem seems case tried check something wrong controlleduncontrolled components far freshness react allows looks like supposed handle versions react browser os affected issue work previous versions react current dependencies need cleanup tried chrome firefox let know need additional detail thought probably needed also share project would nt work box work extend backend wordpress plugin", "num": "12061", "d": "1/2018"}, {"title": "source makes component stack less useful", "body": "want request feature report bug somewhere current behavior enable automatically add prop every component development component stack displayed certain react warnings changes displaying inferred name rendering component displaying filename line number occurrence react also access file path stripped filename included seems based assumption name file always maps exactly name component exports practice many people place components currently makes stack less useful example compare expected behavior would like stack include full file path least include inferred component name alongside filename would accept pr either option versions react browser os affected issue work previous versions react react introduced", "num": "12058", "d": "1/2018"}, {"title": "prop never invoked", "body": "want request feature report bug bug current behavior never invoked cc belak jquense current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reported back closed issue appears present react able reproduce simple case least chrome expected behavior invoked result log well value displayed beneath input codesandbox link versions react browser os affected issue work previous versions react reproduces issue appears date back earlier based prior issues thanks let know anything else clarify", "num": "12056", "d": "1/2018"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12055", "d": "1/2018"}, {"title": "simple react page working", "body": "created helloworld app using react typescript outputs correctly chrome firefox etc view app nothing appears upon checking devtool ie also blank nt really know working code import babelpolyfill import import react react import render reactdom export class helloworld extends reactcomponent lt gt render return hello world render documentqueryselector app webpackconfigjs const webpack require webpack const cleanwebpackplugin require cleanwebpackplugin moduleexports entry srcapptsx output filename appjs path dirname dist c workspacerucwebtflgovuksourcetflrucwebcdnstaticscriptsulezsamplecodehelloworldtsx enable sourcemaps debugging webpack output devtool sourcemap", "num": "12052", "d": "1/2018"}, {"title": "event handlers fragments", "body": "use case abstraction wants listen event bubbling intercept event somehow perhaps state context involved works fine today long wrap however ca nt necessarily always hear relaxed conceptually think constraints remain many environment nt want wrapper element around js b js b b would nice able use fragments easy implement synthetic event system suspect doable approaches including inserting element called dom implement need somewhere store current props use fragment fibers hold also need schedule commit phase effects whenever set event handlers fragment changes commit phase update statenode fibers hold current props way bubble fiber return pointers know statenode holds current set props ones extract event handlers", "num": "12051", "d": "1/2018"}, {"title": "write blog post showing recommended asyncsafe coding patterns", "body": "follow item pr relates show examples accomplish common tasks asyncfriendly way using new component api also show examples illustrate pitfalls eg calls", "num": "12048", "d": "1/2018"}, {"title": "write blog post new async unsafe static lifecycles", "body": "follow item pr blog post correspond release primary purpose let people know prepare subsequent release application developers post explain run codemod rename deprecated methods well general strategies use new lifecycle instead library maintainers provide recommended update release strategies including kinds code moved remain backwards compatible vs needs either remain moved new method peer dependency version changes required versions react support new methods", "num": "12047", "d": "1/2018"}, {"title": "update debugrenderphasesideeffects behavior", "body": "follow item pr x phase within context async tree doubleinvoke following methods updater functions current implementation also doubleinvoke several additional methods eg willmount willupdate scu etc behavior removed x phase also add devwarning detect components within async tree contain following methods", "num": "12046", "d": "1/2018"}, {"title": "npm recognized internal external command operable program batch file", "body": "current behavior createreactapp myapp creating new react app c usersswoledaddybuffneckmyapp npm recognized internal external command operable program batch file installing packages might take couple minutes installing react reactdom reactscripts npm recognized internal external command operable program batch file aborting installation npm install save saveexact loglevel error react reactdom reactscripts failed tried everything sun including uninstalling reinstalling node npm createreactapp package switching different version every variation add npm path could find internet dont usually issues npm use several projects seems work fine figure happening could actually install react reactdom manually tried installing reactscripts didnt output anything ctrlc get console back understand forum npm described dont issue projects works fine literally anything else help would greatly appreciated", "num": "12045", "d": "1/2018"}, {"title": "coalesce warnings deprecated lifecycle hooks", "body": "coalesce warnings deprecated lifecycle hooks print single message reconciliation rather one per componenttype relates pr comment", "num": "12044", "d": "1/2018"}, {"title": "highlight production bundles bold danger integration comment", "body": "added integration danger shows bundle size difference prs like change output production bundles bold results think also remove red triangle increase development bundles important", "num": "12043", "d": "1/2018"}, {"title": "strange warning proptype marked required format", "body": "component following proptypes javascript componentproptypes media proptypesshape proptypesany componentdefaultprops media initially set prop required changed nonrequired still console show warning see prop name identifying required option adding isrequired think bug faced several times app never got working properly work arround change proptypes help idea great", "num": "12042", "d": "1/2018"}, {"title": "suppress message download react devtools", "body": "featurebug current behavior react library logs either download react devtools better development experience logs warning installed version react devtools old work current version react please update react devtools previous fix employed reproduce run react site without production flag without react devtools extension installed expected behavior log output versions react react tried according comment following work react gt however changes log warning installed version react devtools old work current version react please update react devtools fixes stackoverflow yield results also plugin nt work installing nt option least tldr loving react logging install note tad annoying previous fixes nt seem work please provide option disable log", "num": "12041", "d": "1/2018"}, {"title": "react support feature like keepalive vue", "body": "found issue sophiebits said react never reuses instance unmounted means react never support feature like keepalive vue way maintain component state", "num": "12039", "d": "1/2018"}, {"title": "add reactisfragment api verifying fragment", "body": "want request feature report bug want request feature current behavior api verify reactnode react fragment though use distinguish verbose seems uncertianly right expected behavior add api verifies object reactfragment returns true false versions react browser os affected issue work previous versions react react", "num": "12038", "d": "1/2018"}, {"title": "bug createportal element children nt print correct clientheight properties etc", "body": "want request feature report bug could bug current behavior children div inside element created using createportal show correct clientheight scrollheight properties shows scrollheight consolelogged demo current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior get correct scrollheight etc properties versions react browser os affected issue work previous versions react", "num": "12035", "d": "1/2018"}, {"title": "componentdidupdate fires ref set react", "body": "want request feature report bug bug current behavior fires current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open console see going pasting code safekeeping jsx import react react import reactdom render reactdom import hello hello const styles fontfamily sansserif textalign center const app gt componentdidupdate vs ref timing issue class combobox extends reactcomponent class bodyend extends reactpurecomponent render documentgetelementbyid root expected behavior fire example open console see supposed reference nt set yet supposed fire component rendered called versions react browser os affected issue work previous versions react react chrome ubuntu yes worked fine react details sounds lot like issue reported bountysource reactbootstrapreactbootstrap gaearon commented nt look like filed issue react manage produce sscce reporting", "num": "12034", "d": "1/2018"}, {"title": "refs must owner warning", "body": "reporting bug problem interplay several packages feel package actually something wrong react versions react also happened nodejs electron windows current behavior get error message although none three explanations true actually react loaded twice version little prevent happens far understand application imports react two ways application react application nodemodulesmyapi react get react module path however myapi module installed via yarn link caseinsensitive filesystems yarn link cause file path different caseing ie application c application resolved link node uses via require c application case drive letter changes api everything required api even though call require react times end importing c applicationnodemodulesreact c applicationnodemodulesreact obviously thing yet means react loaded twice ref triggering error also added reactbootstrap adds stringref code bug using different react versions different case importing react code reactbootstrap nt anything wrong string refs still allowed node nt anything wrong since documents require nt guaranteed always return instance yarn nt anything wrong caseinsensitive filesystem nothing wrong using different cases drive letter link source link target react however relies require always returning instance ca nt expected behavior react nt rely behavior documented unreliable", "num": "12033", "d": "1/2018"}, {"title": "onpaste event firing wrong target", "body": "want request feature report bug bug current behavior pasting string either input fields one type date text result console pasting either input eventtarget input typetext expected behavior event target input type date pasting date input likewise type text versions react browser os affected issue work previous versions react chrome version official build firefox paste event trigger input typedate", "num": "12031", "d": "1/2018"}, {"title": "children treat reactfragment array", "body": "traversing children treats fragments standalone elements instead traversing children impression convenience equivalent arrays traversed", "num": "12026", "d": "1/2018"}, {"title": "possible set optional property purecomponent using typescript", "body": "bug current behavior creating interface optional key trying set type props also using datails stackoverflow expected behavior possibility set somehow optional props versions react browser seems extends require type allows optional keys like instead", "num": "12022", "d": "1/2018"}, {"title": "add referrerpolicy iframe react", "body": "property referrerpolicy exist type detailedhtmlprops htmliframeelement see react reactdom", "num": "12021", "d": "1/2018"}, {"title": "time parent component updated passed child component different", "body": "version reactfiberclasscomponentjs piece code think logic judge called test class app extends reactcomponent static proptypes name proptypesstring componentdidmount call setstate make app update thissetstate test nothing render return class child extends reactcomponent constructor super thisstate equal true componentwillreceiveprops nextprops nextprops thisprops thissetstate equal false render return newprops oldprops equal thisstateequal reactdomrender documentgetelementbyid container newprops oldprops equal truethe newprops oldprops equal falseprops passed child component different", "num": "12018", "d": "1/2018"}, {"title": "custom html tags", "body": "want request feature report bug bug current behavior upgrading react getting lot warnings custom html tags expected behavior warnings appear versions react browser os affected issue work previous versions react browser working", "num": "12016", "d": "1/2018"}, {"title": "bug wrong render output children textnode", "body": "seems bug react child node textnode render correct output steps reproduce jsfiddle expected output hello hello hello react rendered hello hello hello rendered output matching console log however textnode removed working expected see fiddle adding text node hello numbers causes unexpected output tested react", "num": "12015", "d": "1/2018"}, {"title": "fragments support dangerouslysetinnerhtml", "body": "addition fantastic helps keep html semantic clean unfortunately still way inject html without wrapping tag jsx const html hello world render html hello world would mostly helpful rendering html jsx back end rather spa context seems ideal candidate support may inject html without wrapping elements jsx const html hello world would render simple obvious aligned current api", "num": "12014", "d": "1/2018"}, {"title": "value input updatedcleared undefined value", "body": "trying clear values inputs undefined values setup demo page basically set render button clears input nt put default value searching issues nt find similar issue use case huge form predefined values update form try reset inputs cleared thanks help", "num": "12013", "d": "1/2018"}, {"title": "reactchildrentoarray reactcloneelement work portal elements", "body": "want request feature report bug bug undefined behaviour current behavior fails namely following complete snippet fails jsx import react react import render createportal reactdom const renderchildren children gt children reactchildrentoarray children return renders children toarray children const app gt createportal rendered portal documentgetelementbyid portal render documentgetelementbyid root following one wraps portal another element works fine jsx import react react import render createportal reactdom const renderchildren children gt children reactchildrentoarray children return renders children toarray children const app gt createportal rendered portal documentgetelementbyid portal render documentgetelementbyid root createportal new feature best case scenario possible use everywhere valid nodes accepted thing happening probably weird try clone portal maybe specify documentation cloned least open pr let know thoughts versions react browser os affected issue work previous versions react using react", "num": "12012", "d": "1/2018"}, {"title": "create property nonextensible object syntheticevent ie", "body": "want request feature report bug bug current behavior error thrown ie error message states create property nonextensible object originates following location file reactpackageseventssyntheticeventjs current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior errors versions react browser os affected issue work previous versions react version number reactdom possibly related", "num": "12011", "d": "1/2018"}, {"title": "events missing master simulatenative", "body": "see comment really documented people might rely need fix", "num": "12009", "d": "1/2018"}, {"title": "angularjs injector equivalent", "body": "current behavior documented way easily manipulate componentsstateprops thirdparty perspective expected behavior expected behavior mechanism similar angularjs injector allows additional compilation bootstrapping versions react knowledge affected issue tried reverseengineering react dev tools browserifying longterm sustainable solution constant updates made react codebase use cases time enterpriselevel multiparty deployment thirdparty wants modify presentationdata eg deploying ab tests clientside would ideal integrate code part mainbackend deployment unless ab test performs better control easily allowing thirdparty integrations eg browser extensions editing clientside presentation utilizing model data time something needs deployed frontend quickly without tied release cycles backend code time third party wants modify something without required onboarded contractor due sensitive sensitive private data ie pii hipaa etc frontend unit testing", "num": "12007", "d": "1/2018"}, {"title": "getting minification warnings even defineplugin uglifyjsplugin", "body": "hello scoured issues ca nt figure warning still around feels like done everything setup build scripts var config extend baseconfig configpluginspush new webpackdefineplugin processenvnodeenv jsonstringify production new webpackoptimizeuglifyjsplugin mangle true compress warnings false output comments false exclude minjs gi new webpackoptimizededupeplugin plugins using react webpack sure missing defineplugin uglifyjsplugin seem declared properly set production script help would greatly appreciated thank", "num": "12003", "d": "1/2018"}, {"title": "add reactchildrenisrenderable", "body": "want request feature report bug feature motivation given component gets props eg accepts props redux store via hoc renders either react node condition based data context would helpful know outside component whether renders markup would let us render wrappers component visible usage example let say wraps every child add margins borders animation etc nt accept props gets everything without checking renders markup get empty visible wrapper first third children thus break styling reactchildrenisrenderable would allow us easily filter children without ui x could achieve behavior passing handler condition switch connected component approach would break encapsulation suitable library components toggle renderability internally theoretically could use css pseudo selector though supported yet browser setting property would result rendering invisible nodes wrapped would nt able hide styling could try manually find node dom nt exist remove sound messy violates react declarative nature also data dynamic usually would hide components data still way server might never reveal loaded maybe could mess", "num": "12002", "d": "1/2018"}, {"title": "dangerouslysetinnerhtml", "body": "dangerouslysetinnerhtml currently uses according googles recommendations better replaces something like affect performance could done versions react browser os affected issue work previous versions react react os ubuntu browsers think", "num": "12001", "d": "1/2018"}, {"title": "react copies default checkbox value attributes", "body": "want request feature report bug report bug current behavior react sets via attributes defaultvalue inputs value current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example actual react expected vanilla dom expected behavior value attribute empty unless passed via props versions react browser os affected issue work previous versions react react browser", "num": "11998", "d": "1/2018"}, {"title": "npm test fails using expectcreatespy reacttestutilssimulatesubmit", "body": "want request feature report bug report bug current behavior npm test fails using expectcreatespy reacttestutilssimulatesubmit current behavior bug please provide steps reproduce possible minimal demo app countdownform component component creates input form input number total number seconds component returns formatted version number minutes seconds component works fine project giving desired output test fails code countdownform component import react react import createreactclass createreactclass contents test file component following reacttestutil simulate doc expectcreatespy doc import react react import reactdom reactdom import expect createspy spyon isspy expect import jquery import countdownform countdownform import reacttestutils reactdomtestutils describe countdownform gt call onsetcountdown valid seconds entered gt var spy expectcreatespy var countdownform reacttestutilsrenderintodocument var el reactdomfinddomnode countdownform npm testreacttestutilssimulatesubmit elfind form summary tests completed tests failed failed tests countdownform call onsetcountdown valid seconds entered chrome linux error script error objectinvokeguardedcallbackdev webpackinternal objectinvokeguardedcallback webpackinternal objectinvokeguardedcallbackandcatchfirsterror webpackinternal executedispatch webpackinternal executedispatchesinorder webpackinternal executedispatchesandrelease webpackinternal executedispatchesandreleasesimulated webpackinternal foreachaccumulated webpackinternal objectprocesseventqueue webpackinternal warn launcher chrome killed ms sending sigkill versions react browser os affected issue work previous versions react using ubuntu chrome version official build packagejson", "num": "11997", "d": "1/2018"}, {"title": "symbols keys children arrays iterators", "body": "want request feature report bug want request feature current behavior using element keys throws type error current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example using get following codesandbox expected behavior using keys work seamlessly opinion element keys perfect usecase versions react browser os affected issue work previous versions react using react browsers affected safari chrome firefox osx pretty sure browser dependent matter implementation thanks", "num": "11996", "d": "1/2018"}, {"title": "need learn", "body": "need learn get started react js", "num": "11994", "d": "1/2018"}, {"title": "warn server renderer class nt extend reactcomponent render method", "body": "server renderer look implementation something similar", "num": "11991", "d": "1/2018"}, {"title": "grabbing pending state value", "body": "assume write assume state nt updated yet result call write see value basically question pending state update normal functional setstate previousstate receive functional setstate capture pending value", "num": "11989", "d": "1/2018"}, {"title": "forked props isolated", "body": "fork prop like class newordercontainer extends component constructor props super props thisstate orderform propsorderform proceed update state mutates original prop specifically state component passing prop orderform mutations state forked prop isolated", "num": "11988", "d": "1/2018"}, {"title": "react componentdidupdate warning scheduled cascading update", "body": "want request feature report bug bug current behavior react componentdidupdate warning scheduled cascading update question current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react react", "num": "11987", "d": "1/2018"}, {"title": "lifecycle methods reactdomhydrate", "body": "want request feature report bug feature current behavior way distinguish lifecycle method called response call expected behavior component scrolls top page componentdidmount makes sense component first created within client however nt make sense component hydrated called content already visible possibly user already scrolled would possible add lifecycle method could something like achieve desired behavior versions react browser os affected issue work previous versions react", "num": "11985", "d": "1/2018"}, {"title": "debian onmousemove onmouseenter onmouseleave firing chrome", "body": "want request feature report bug report bug current behavior google chrome element onmousemove onmouseenter listeners fire events unless clicked likewise onmouseleave fire unless mouse clicked area occupied listening element current behavior bug please provide steps reproduce possible minimal demo problem following jsfiddle reproduces bug reproduce simply create element listeners test behavior chrome expected behavior onmouseenter onmousemove onmouseleave listeners fire chrome without mouse needing clicked versions react browser os affected issue work previous versions react tested react development server also react jsfiddle cases problem occurs using debian kernel version chrome version reproduce error tried reproduce issue windows major version chrome seems work properly", "num": "11984", "d": "1/2018"}, {"title": "drawer reactmaterialui", "body": "beginner react problems applying drawer project case appbar configured drawer open working presenting following errors reactcreateelement type invalid expected string built components class function composite components got undefined might mixed default named imports handletoggle assigned value never used handleclose assigned value never used ps sorry bad english brazilian code", "num": "11978", "d": "1/2018"}, {"title": "warning stateless functional high order component", "body": "want request feature report bug bug current behavior warning stateless functional high order component current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior warning versions react browser os affected issue work previous versions react react yes worked previous versions", "num": "11976", "d": "1/2018"}, {"title": "reenable coverage", "body": "see jest oom disabled", "num": "11975", "d": "1/2018"}, {"title": "add reactcreateref migration path string refs", "body": "creating issue track intend close pr outdated probably want turn real rfc potentially get", "num": "11973", "d": "1/2018"}, {"title": "consider removing mouseentermouseleave polyfill", "body": "suggested sure want decided create issue track future attempts pr stale", "num": "11972", "d": "1/2018"}, {"title": "need listen click change events", "body": "presently listen click events detect changes radio buttons checkboxes still need looks though curious remove click dependency change events update comments better document include click events", "num": "11971", "d": "1/2018"}, {"title": "add method remount component", "body": "want request feature report bug feature imagine might brought could nt find discussions extensive searching current behavior working certain nonreact party libraries sometimes require remount domnode ie dumping creating scratch currently way seems change prop either incrementing generating random uid however feels like hacky way implementing behavior issue working youtube player api svgdrawer library wish cleaner reactway expected behavior would nice could something like perhaps better parent via refs would effect changing said components prop", "num": "11969", "d": "1/2018"}, {"title": "add", "body": "", "num": "11968", "d": "1/2018"}, {"title": "state initialization disparity shallow renderer reactdom", "body": "want request feature report bug bug current behavior shallow renderer defaults class component state empty object set real renderers nt seem component render successfully shallow renderer fail runtime browser null reference error current behavior bug please provide steps reproduce possible minimal demo problem reactdom behavior crashes reading uninitialized state value shallow renderer behavior component able render expected behavior initialize state way versions react browser os affected issue work previous versions react react nt issue react", "num": "11964", "d": "1/2018"}, {"title": "running yarn start npm start fixtures throwing error", "body": "want request feature report bug bug current behavior running npm start yarn start reactfixturesdom throwing errors terminal current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reactfixturesdom run yarn start npm start following errors seen terminal gt reactfixtures prestart homegmadminpracticereactfixturesdom cp builddist react reactdom developmentjs public cp stat builddist react reactdom developmentjs file directory npm err code elifecycle npm err errno npm err reactfixtures prestart npm err exit status npm err npm err failed reactfixtures prestart script npm err probably problem npm likely additional logging output npm err complete log run found npm err note already run npm run build react parent directory see reactdevelopmentjs reactdomdevelopmentjs reactbuilddist running cp builddist react reactdom developmentjs public command terminal works fine fails run prestart command packagejson expected behavior copying happen successfully npm start successfully turn server versions react browser os affected issue react version kernel gnulinux os info distributor id linuxmint release codename serena work previous versions react nt know bug let work", "num": "11963", "d": "1/2018"}, {"title": "setstate callback called even state nt changed", "body": "want request feature report bug bug current behavior react breaking changes setstate callbacks second argument fire immediately componentdidmount componentdidupdate instead components rendered setstate documentation second parameter setstate optional callback function executed setstate completed component rerendered assume component nt rerendered setstate callback wo nt called well current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior setstate callback wo nt called versions react browser os affected issue work previous versions react react nt try previous versions", "num": "11961", "d": "1/2018"}, {"title": "syntactic sugar like", "body": "easy access attributes want know problem new reacter tks", "num": "11960", "d": "1/2018"}, {"title": "render pure pure", "body": "write return result every time render function pure meaning modify component state returns result time invoked next part write never return result next state props update function return different tree react elements pure pure", "num": "11959", "d": "1/2018"}, {"title": "expected find host parent", "body": "want request feature report bug bug current behavior specific order unmounting remounting causes invariant violation reproduce following sandbox example crashes invariant violation props odd numbers greater zero expected behavior app crash cycles number items list versions react browser os affected issue work previous versions react versions newer version", "num": "11955", "d": "1/2018"}, {"title": "syntactic sugar", "body": "syntactic sugar like tks", "num": "11953", "d": "1/2018"}, {"title": "settimeout working initial render", "body": "want request feature report bug bug think unless behavior intentional current behavior see basically trying batch set ajax calls wrapping promise calls settimeout replaced actually ajax calls calls consolelog affect first time update function called see console log statement within single ms statement next time update function called seconds later see console log statements delayed expected expected behavior expect sleep function work first time called stands ui broken interval calls update function minutes production understand async stuff react lil funky definitely nt know react works hood could intentional behavior somehow needed workaround get behavior need thanks guys keep great work versions react browser os affected issue work previous versions react react believe happens react well firefox developer edition", "num": "11950", "d": "1/2018"}, {"title": "output junit xml test metadata circleci", "body": "benbraou claimed issue please give chance work screenshot circleci build another private project part clearly highlights parts build failed contrast see one builds one scriptscircleciuploadbuildsh step failed need scroll output significant amount see part custom entry point ci steps scriptscirclecitestentrypointsh make easier us parallelize build steps like us change testentrypointsh script output junit xml metadata circleci described believe circleci build results page show exactly step failed bonus show individual jest tests would even cooler think important part breaking jest vs flow vs prettier etc separate chunks", "num": "11949", "d": "1/2018"}, {"title": "reactnativecustomtabs return response", "body": "created button open custontabs use external url reactnative app external url forms submitted return array response another page ie success page want get response success page app customtabs would close automatically code custom tab", "num": "11947", "d": "1/2018"}, {"title": "reactwebpacktypescript fine react fails resolve reactdom react", "body": "tsconfigjson webpackconfigjs apptsx import react react import reactdom reactdom reactdomrender hello documentgetelementbyid reactapp dependencies typesreact typesreactdom typeswebpackenv react reactdom tsloader typescript webpack webpack hash version webpack time asset size chunks chunk names bundlejs kb emitted big main apptsx bytes built hidden modules typesreact typesreactdom react reactdom webpack hash version webpack time asset size chunks chunk names bundlejs kb emitted main apptsx bytes built hidden modules error apptsx module found error ca nt resolve reactdom homedmitryprojectsfails apptsx npm v amp amp node v amp amp cat etcdebianversion", "num": "11946", "d": "1/2018"}, {"title": "get response customtabs reactnative", "body": "created button open custontabs use external url reactnative app external url forms submitted return array response another page ie success page want get response success page app customtabs would close automatically code custom tab get response customtabs app close customtabs closed reactnative app", "num": "11945", "d": "1/2018"}, {"title": "curly braces pointless ugly", "body": "want request feature report bug feature current behavior curly braces required delimit javascript expressions jsx attributes desired behavior javascript expressions expressed without need hello name onclick gt thisandthat short requiring around unnecessary although last one bit ugly gt thing", "num": "11944", "d": "1/2018"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11943", "d": "1/2018"}, {"title": "love react", "body": "thank", "num": "11941", "d": "12/2017"}, {"title": "facebook engineers thank", "body": "facebook engineers working open source like last year reactiflux wanted take moment thank hard work another big year much anticipation react released september react native moved fixing countless bugs adding new features jest releases year yarn relay modern released new engineers joined hey calebmer thesavior axemclion moved miss mkonicek tiny snapshot talking know dealing licensing issues year incredibly difficult frustrating yet handled situation mature humble manner continuing iterate innovate thank happy continue focusing work hand especially chapter finally closed guillermo rauch recently tweeted wraps believe ever react good idea spend rest decade continuing explore implications applications echo sentiment wraps also believe ever embody spirit open source humility servant leadership true focus community driven progress continues astound us thank qualities heart community thank time taken join ama answer questions twitter time taken respond issues merge pr thank going beyond always like invite react community reply thread thank comments team facebook let show grateful feel free include experiences team react ecosystem helped developer sincerely behalf reactiflux community gabegreenberg markerikson kyleamathews taion jquense vcarl benigeri phoenixmatrix btmpl kyleshevlin slightlytyler totaldis", "num": "11940", "d": "12/2017"}, {"title": "fibertriangle fixture working", "body": "see difference async onoff using chrome macbook pro", "num": "11937", "d": "12/2017"}, {"title": "remove legacy todos reactelementcreatefactory reactelementvalidatorcreatefactorywithvalidation", "body": "came across line interested taking first pullrequest please let know required adding warning related tests thank", "num": "11936", "d": "12/2017"}, {"title": "consider specific warning key undefined", "body": "proposed comment changed casing id response forgot commit aaaaaand ended happening basically key undefined could react warn user happens something like looks like tried supply key value supplied undefined check render think might make sense give specific warning case open suggestions specific wording case would used", "num": "11935", "d": "12/2017"}, {"title": "react call onblur callback", "body": "see u", "num": "11934", "d": "12/2017"}, {"title": "issue createreactapp", "body": "os windows bit c usersbharat mogerreact node v c usersbharat mogerreact npm v c usersbharat mogerreact createreactapp version issue createreactapp myapp c usersbharat mogerreact createreactapp myapps creating new react app c usersbharat mogerreactmyapps installing packages might take couple minutes installing react reactdom reactscripts npm err unexpected end json input parsing near luginflowtype dist npm err complete log run found npm err c usersbharat aborting installation npm install save saveexact loglevel error react reactdom reactscripts failed deleting generated file packagejson deleting myapps c usersbharat mogerreact done issue createreactapp myapp issue command npm c usersbharat mogerreact npx createreactapp error eperm operation permitted mkdir c usersbharat typeerror read property get undefined errorhandler c program c program cb c program c program c program arrayforeach c program f c program afterextras c program c program c program npmconfigget json typeerror read property get undefined processerrorhandler c program emitone processemit processfatalexception install prefix latest failed code c usersbharat mogerappdataroamingnpmnodemodulescreatereactappindexjs creating new react app c usersbharat installing packages might take couple minutes installing react reactdom reactscripts npm err unexpected end json input parsing near luginflowtype dist npm err complete log run found npm err c usersbharat aborting installation npm install save saveexact loglevel error react reactdom reactscripts failed deleting generated file packagejson deleting c usersbharat mogerreact done unsolved", "num": "11933", "d": "12/2017"}, {"title": "markojs faster react react become fast markojs", "body": "resources marko vs react indepth look isomorphicuibenchmarks", "num": "11932", "d": "12/2017"}, {"title": "r", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11931", "d": "12/2017"}, {"title": "default value element", "body": "want request feature report bug bug current behavior jsfiddle reset button clicked input value test select value grapefruit expected behavior reset button clicked input value test select value lime", "num": "11929", "d": "12/2017"}, {"title": "point production build unminified file", "body": "want request feature report bug feature current behavior react reactdom point respective minified production builds context included larger bundle undesirable minifying entire bundle produces slightly smaller output constituent pieces already minified expected behavior understand desire keep react small default clearly gate devprod builds would consider pointing unminified production build instead sorry discussed elsewhere could nt find issues versions react browser os affected issue work previous versions react introduced nodeenv check simplified point separate builds", "num": "11928", "d": "12/2017"}, {"title": "enable fiber stable version", "body": "searched lot ca nt find messages enable feature stable version", "num": "11926", "d": "12/2017"}, {"title": "auto refresh another taps react js", "body": "open login page two tabs browser login click another tab also refresh reload react js anyone help", "num": "11925", "d": "12/2017"}, {"title": "featreq render method could receive currentstate currentprops arguments", "body": "want request feature report bug feature current behavior method nt receive expected behavior method called would receive arguments instance could allow destructure arguments get needed properties example versions react browser os affected issue work previous versions react react nt work react version", "num": "11923", "d": "12/2017"}, {"title": "namespace constants inlined production build", "body": "poking umd build noticed namespaces exported domnamespaces inlined string literals first example second example nt great since sort long strings sure bug expected behavior component build system thought report case something configured", "num": "11920", "d": "12/2017"}, {"title": "redacted", "body": "redacted", "num": "11919", "d": "12/2017"}, {"title": "click events nt bubble portal content mobile safari", "body": "want request feature report bug bug current behavior mobile safari dom events originating elements rendered portal bubble propagate react component tree current behavior bug please provide steps reproduce please see following jsfiddle jsfiddle expected behavior seen desktop browser clicking portal content appearing modal including backdrop toggle indicator rendered main content however mobile safari ios click events propagate expected behavior click events propagate react component tree versions react browser os affected issue work previous versions react affected react ios", "num": "11918", "d": "12/2017"}, {"title": "wed\u0142ug projektu", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11917", "d": "12/2017"}, {"title": "react art crashes ssr", "body": "want request feature report bug bug current behavior react art crashes components rendered node expected behavior crash issue lies upstream art fork proposed fix pr needs attention cross posting hope ok", "num": "11916", "d": "12/2017"}, {"title": "props read", "body": "react docs say props read come mobx directly modifies eg onrename gt const todo thispropstodo todotask prompt task name todotask todotask", "num": "11913", "d": "12/2017"}, {"title": "react dom crashes contains three interpolated value one conditional", "body": "want request feature report bug bug current behavior react dom crashes contains three interpolated value one conditional reproduction change value react crashes tell conditional value necessary must three interpolated values expected behavior react crash versions react browser os affected issue work previous versions react react dom think worked crash", "num": "11911", "d": "12/2017"}, {"title": "qq browers show", "body": "webapp work qq browers ok browers react reactdom help please", "num": "11910", "d": "12/2017"}, {"title": "accessing testinstancestate reacttestrenderer package", "body": "want request feature report bug feature current behavior behavior listed docs current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior change state test object shown versions react browser os affected issue work previous versions react would affect browsers", "num": "11909", "d": "12/2017"}, {"title": "html tag property download ca nt work firefox", "body": "jsfiddle os windows browser firefox quantum want use property download download image ca nt work work chrome", "num": "11908", "d": "12/2017"}, {"title": "rendertostaticmarkup escapes amp amp", "body": "want request feature report bug bug current behavior output encoded current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react react expected behavior output versions react browser os affected issue work previous versions react react", "num": "11907", "d": "12/2017"}, {"title": "proposal destructure proptypes import statement standard", "body": "like propose following importing components instead ie javascript import proptypes proptypes class mycomponent extends component static proptypes fetchdata proptypesfunc javascript import func proptypes class mycomponent extends component static proptypes fetchdata func small improvement makes easier see type prop component glance reason nt chosen standard please give opinion reasoning", "num": "11906", "d": "12/2017"}, {"title": "lol", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11905", "d": "12/2017"}, {"title": "feature append component", "body": "way appending components like append nodes function list listref return class parent extends reactcomponent handleclick data gt appendchild thislistappendcomponent render return know easily handled state", "num": "11904", "d": "12/2017"}, {"title": "caret position onchange event ios safari incorrect", "body": "want request feature report bug bug current behavior simple controlled input onchange event also renders output span consistently reproducible caret positioning problems current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react included example setstate wrapped raf fixes issue causes different problem desktop safari expected behavior caret position consistently correspond internal cursor position actually versions react browser os affected issue work previous versions react tested reproducible react ios simulator ios actual device edit investigation seems like might issue safari underlying rendering engine close noop react team", "num": "11903", "d": "12/2017"}, {"title": "provide better message component type undefined ssr", "body": "might reference one problem still exist trying render server side got error nt notation code might problem dependencies thx help", "num": "11902", "d": "12/2017"}, {"title": "tspan text tags working", "body": "want request feature report bug bug current behavior chrome see following errors traced issue persisted seen tags capitalized already rendered inside svg sure else using library well current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react code snippet expected behavior expected behavior charts work without errors console related versions react browser os affected issue work previous versions react react issue occurred updated well", "num": "11899", "d": "12/2017"}, {"title": "reconciler trytoclaimnexthydratableinstance nextnextinstance heuristic creating duplicative elements", "body": "want request feature report bug bug though react code working intended current behavior hydrating serverrendered dom reactreconciler encounters unexpected node peek ahead next dom node test expected node reactreconciler delete unexpected node continue using second node hydrate second node match instance reconciler gives begins inserting dom nodes without trying reconcile case serverside rendering entire document serverside rehydrating level party analytics scripts injected top hydrate call happens causing entire application injected body instead reconciled existing nodes current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react force happen app injecting two empty tags top able reproduce via jsfiddle unsure exact combination flags force specific code path expected behavior ideally reconciler would look sibling nodes find matching element comment code relevant location says hacked together change prove inspecting sibling elements seems working unintended consequences modified nextinstance either hydratable sibling null using mac book pro observe n change measurable situation versions react browser os affected issue work previous versions react introduced react new hydration approach take invariant fullstop error thanks building new approach", "num": "11897", "d": "12/2017"}, {"title": "stop syncing value attribute controlled inputs", "body": "opening follow quick discussions syncing attribute consistent source bugs us benefits seem minimal previous discussion topic issues ca nt remember right would breaking change would done major release reasons keep syncing prevents putting controlled form inputs weird state browser extensions sure read attribute cases sure useful querying inputs specific value using attribute selector reasons stop syncing reduce complexity nontrivial way turn likely reduce bundle size well remove whole class bugs fighting browsers want helpful input values syncing input value attribute potentially exposes sensitive data third party tools think reasons good enough keep syncing attribute critical reasons keep cc nhunzaker jquense gaearon", "num": "11896", "d": "12/2017"}, {"title": "typeerror indexed property setter firefox quantum", "body": "react reactdom v report bug component uses inline styles fails firefox quantum bit percent use classnames everything works expected even wrapping styles objectassign shown fix issue code fails reactdom following function inspect line style name stylevalue fine matching values passed however inspect line stylename undefined also inspect line first argument stylename absolutely fine contains values look second argument styles stylename stylename undefined quantum clearly something screwy basically react app run quantum curreblt breaks quantum console exception output would expect function work quantum chrome safari edge looks like quantum issue function coded check way look whatever needs write style like width directly", "num": "11895", "d": "12/2017"}, {"title": "include component props stack componentdidcatch", "body": "second argument contains componentstack like data nt contain helpful error data user send ticket bugtracker info contain props every component", "num": "11893", "d": "12/2017"}, {"title": "write", "body": "current null null fiber reactdebugcurrentframegetcurrentstack null null gt string null use flow null", "num": "11892", "d": "12/2017"}, {"title": "render quora embedded links react", "body": "site quora offers easy way embed links instance offers quick code snippet works normal html page normally renders like however place code render function like looks like general way fix seeing problem practically every embedded functionality ever used google maps social media install special library handle google maps happening every single embed functionality", "num": "11891", "d": "12/2017"}, {"title": "fbme cdn links redirecting facebook home page", "body": "seems fbme cdn links changed links page seem simply redirect facebookcom previously loading react library noticed app suddenly started giving us error", "num": "11890", "d": "12/2017"}, {"title": "reactchildren take functions children consideration", "body": "component multiple children components different types strings jsx components functions wanted render using reactchildrenmap helper function unwraps children opaque data structure problem children defined functions seem ignored reactchildrenmap reactchildrencount helper functions see example access render directly propschildren wrapper convenient way one never know sure type", "num": "11888", "d": "12/2017"}, {"title": "uncaught typeerror super expression must either null function undefined", "body": "hi getting error browser packagejson appjs import react react import relay reactrelayclassic import create mutationscreate import babelpolyfill class app extends reactcomponent constructor props super props render consolelog thispropsstore return reactjs export default relaycreatecontainer app fragments store gt relayql presets react plugins buildbabelrelayplugin believe relay reactjs getting error even install beta version alpha tried commenting relay code also idea wrong", "num": "11887", "d": "12/2017"}, {"title": "still need check opera beforeinputplugin", "body": "came specific browser check opera opera used blink version opera uses presto still browser support matrix could remove check nt official official guideline opera sophiebits thoughts far back facebook go opera", "num": "11886", "d": "12/2017"}, {"title": "backspace fails clear values input typeemail", "body": "want request feature report bug bug current behavior email input nt control whitespace possible variation issue however shows bug shows current behavior bug demo bug react bug react bug react fiddle bug react fiddle expected behavior user presses backspace key holds values input removed including whitespaces versions react browser os affected issue work previous versions react works bug gt testing chrome macos sierra", "num": "11881", "d": "12/2017"}, {"title": "onclick nt fire components change position", "body": "want request feature report bug bug current behavior list components change height based internal state openclose close user clicks outside component one open time possible toggle component onclicks currently open component ones seems onclick nt fire components different position initially rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior components component open clicked expected behavior achieved using addeventlistener versions react browser os affected issue work previous versions react react tested firefoxchromesafari", "num": "11878", "d": "12/2017"}, {"title": "number input gets cleared typing period decimal mark", "body": "want request feature report bug bug current behavior os browser configured locale uses comma decimal mark finland interested codepen accidentally type period number whole input gets cleared somehow related parent component state updated prop removed component input nt get cleared current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior input retain visible value even would invalid ca nt converted number versions react browser os affected issue work previous versions react react chrome macos tested safari typing period kinda works typing first number period gets converted comma cursor jumps beginning also tested firefox seems think period correct decimal mark", "num": "11877", "d": "12/2017"}, {"title": "problem api", "body": "encountered problem try conditionally render content screen print media types using api latest google chrome windows content intended print media type displayed incorrectly printout preview created minimal demo shows issue first case please open page press ctrl p keys open printout preview console see function called two times one printout preview second main page overlapped printout preview guess case everything working correctly printout see print word main screen screen word displayed even closing preview second case please try open printout preview clicking screen label see functions called nt force component rerendering hence see screen printout preview print label displayed please take look time", "num": "11876", "d": "12/2017"}, {"title": "checkbox updating", "body": "example three seconds check box unchecked class hello extends reactcomponent constructor props componentdidmount render reactdomrender documentgetelementbyid container", "num": "11875", "d": "12/2017"}, {"title": "move jsorg", "body": "maybe move docs", "num": "11874", "d": "12/2017"}, {"title": "unexpected token function jest test component async function expressions", "body": "bug current behavior react component async function calls like var getparameter async function getparameter receive error syntaxerror unexpected token function error resolves remove async babelrc file looks like presets react please advise", "num": "11869", "d": "12/2017"}, {"title": "improve accidental return render props", "body": "know easy accidentally forget return functions arrow functions nt allow returning render functions think children position harder disallow difficult detect undefined return errorwarning also come implementation wonder improve somehow", "num": "11866", "d": "12/2017"}, {"title": "generator component reactdomdevelopmentjs bug", "body": "want request feature report bug bug current behavior reactdomdevelopmentjs behavior different behavior reactdomproductionminjs current behavior bug please provide steps reproduce possible minimal demo problem example nt work replace work expected behavior generators work reactdomdevelopmentjs see given example versions react browser os affected issue work previous versions react", "num": "11864", "d": "12/2017"}, {"title": "react nt rerender dom manual dom tree key prop changes", "body": "want request feature report bug bug current behavior real world used sort array items dn item send new sorting state server ok server responds data sent server rejects sorting sends data beginning array items nt sort back current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react simulated dn sorting programmatically flipping dom nodes via dom interface dom rendered using given state b flip dom nodes seconds b set new state first step b nt help expected behavior sort nodes back b versions react browser os affected issue work previous versions react react issue also appears react", "num": "11863", "d": "12/2017"}, {"title": "shallowrenderer considering contexttypes rendering children", "body": "want request feature report bug bug current behavior shallowrenderer considering contexttypes note able easily include reacttestrenderer fiddle include unit test context used shallow normal rendering const context appname abc mode def expected behavior would expect rendering shallowrenderer render method would check mask property specified like function getmaskedcontext workinprogress unmaskedcontext reactdom library fixed behavior changing render method like inpired getmaskedcontext const oldrender shallowrendererprototyperender shallowrendererprototyperender function render element versions react browser os affected issue work previous versions react bug version upgrading react using enzyme shallow rendering nt behavior difficult say part code changed react enzyme point code sample includes code react libraries", "num": "11862", "d": "12/2017"}, {"title": "consider making lt gt pure unwrapped fragment", "body": "feature request currently pass fragment children custom component component gets fragment child javascript const app props gt const mycomponent props gt childrencount propschildren childrenmap propschildren item gt consolelog itemtype fragment true means components children altered cloned need check first item fragment first take children instead little unexpected reading documentation impression fragment pure abstraction caller side fragment nt propagate components children time understandable fragment might supported props future receiving component might want read fragment shortcut props always mean pure abstraction group children show condition instance maybe react could unwrap children right away elements created pass set children merge another children level react", "num": "11859", "d": "12/2017"}, {"title": "add support nomodule attribute script tag", "body": "want request feature report bug feature add support nomodule attribute script tag current behavior get attribute removed current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior attribute respected versions react browser os affected issue work previous versions react react chrome osx regression nt think ever worked nt intentional oversight open pr add seems like change", "num": "11858", "d": "12/2017"}, {"title": "bug read property isreactcomponent undefined", "body": "ca nt seem find root cause random failure emzyme jest test helps would appreciated n shallowcomponentwrappermountcomponent objectmountcomponent reactshallowrendererrender batchedrender objectbatchedupdates objectbatchedupdates reactshallowrendererrender reactshallowrendererrender reactdefaultbatchingstrategytransactionperform objectbatchedupdates objectbatchedupdates reactshallowrendererunstablebatchedupdates performbatchedupdates withsetstateallowed new shallowwrapper shallowwrapperwrap shallowwrapper shallowwrappersingle shallowwrapperdive processtickcallback", "num": "11857", "d": "12/2017"}, {"title": "able build basic file", "body": "hi error get invariant violation element type invalid expected string builtin components got object likely forgot export component file defined error located rctview view rctview view appcontainer renderapplicationjs appjs like sure wrong would grateful pointers thank import react react import appregistry view text reactnative class app extends reactcomponent render return sierra tanner appregistryregistercomponent sampleapp gt app", "num": "11856", "d": "12/2017"}, {"title": "bug scryrenderedcomponentswithtype", "body": "spits following findallinrenderedtree instance must composite component test case class accordion extends reactcomponent render return thispropschildren const tree reacttestutilsrenderintodocument hello const elements reacttestutilsscryrenderedcomponentswithtype tree accordion expect elements clientheight tobeequal", "num": "11855", "d": "12/2017"}, {"title": "windowopera null problem", "body": "want report bug var named opera value null window loading react react app crashes steps reproduce create new app using createreactapp myapp cd myapp amp amp yarn start add one line windowoperanull closing body tag file publicindexhtml app crashes could nt reproduce jsfiddlenet think problem appears execute windowoperanull loading react expected behavior crash react google chrome version official build info problematic behavior previous versions react", "num": "11853", "d": "12/2017"}, {"title": "listeners leak increasing nodes unmountcomponentatnode", "body": "want request feature report bug possible bug current behavior render simple react app using several times get following chart looks like increasing number listeners nodes application fiddle expected behavior think graph flat versions react browser os affected issue work previous versions react using latest createreactapp react", "num": "11852", "d": "12/2017"}, {"title": "autofocus attr included button element rendered", "body": "want request feature report bug bug current behavior prop component rendered dom according mdn autofocus valid attr button element current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior autofocus attr rendered dom provided prop button component versions react browser os affected issue work previous versions react react chrome", "num": "11851", "d": "12/2017"}, {"title": "reactformwithconstraints unable find node unmounted component", "body": "using reactformwithconstraints form validation version createcompany file extends form submit click calling superhandlesubmit validation throws error package built formwithconstaints file looks like ca nt switch higher version higher version breaks code could someone help packagejson looks like companyform file looks like parent component looks like", "num": "11850", "d": "12/2017"}, {"title": "lifecycle method build initial state classes", "body": "feature request need way build initial state reactcomponent case usage classes current behavior warning case thisstate modified willcomponentmount access partially constructed object case somewhat complex state building logic constructor example hierarchy classes buildstate method called constructor generate initial state derived class overrides buildstate method richer state result part object related derived class wo nt constructed yet ca nt accessed buildstate buildstate approach currently used resub framework expected behavior rather warning case thisstate modification new lifecycle method called right constructor call returns state versions react browser os affected issue work previous versions react react affected", "num": "11847", "d": "12/2017"}, {"title": "react new error handling functionality seems harm good", "body": "nt sure report problem new feature finished upgrading team react overall think upgrade great using fragments relaxed constraints return render overall happy issue error boundaries feature seems wellintended help quite bit improved error reporting especially beautiful make debugging dream problem believe leaving users worse state display fallback uis perfect world would client side errors none would even discussion unfortunately deal clientside errors agree leaving ui unpredictable state less desired would argue still better taking away ui completely user triggers clientside error ui still continue use site littletono issue case errors react new functionality even smallest errors unmount ui options go easy route implement toplevel error boundary unmount whole ui replacing fallback nothing user take significant developer time implement finegrained error boundaries still leave ui untouched replacing components error overall still taking functionality away user either way new functionality need least toplevel error boundary display something user toplevel boundary still displays navigation bar user still navigate away page use parts site alternative need refresh page everything unmounted agree displaying fallback ui useful instances expect error cases example loading image third party cdn something cases bug producing unexpected error still able keep ui previous state envision working error boundaries still exactly today except error thrown inside render component component either mounted nt yet mounted left prior state already successfully mounted parent offending component parent children still rendered error thrown inside lifecycle method offending component tree left children parent still updated error boundaries still display fallback ui want componentdidmount still ability set state handling expected error display fallback ui handling unexpected error try leave ui unbroken state possible user error still reported caught toplevel error boundary logged ui need replaced instances perhaps missing standard process handling problems talking happy hear people get around believe feature exists today means work developers poor functionality users", "num": "11846", "d": "12/2017"}, {"title": "incorrect error tag", "body": "want request feature report bug bug current behavior currently gives error tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior tag end tag per spec react report errors versions react browser os affected issue work previous versions react react writing sure previous version dependent browser version", "num": "11845", "d": "12/2017"}, {"title": "redirect home login react redux", "body": "new working react try redirect another page something like home page user authenticate getting problems nested routes tried solution one documentation nt work way need basic code login github repository thanks advance help", "num": "11844", "d": "12/2017"}, {"title": "question need help react new lifecycle", "body": "hi update react read create fiddle example codesandbox understand worked hot reload component inside hoc component updated error jsx const connect composed props gt class connect extends component getchildcontext return gt one subscriptions unmout thissubscriptionssome return connect import connect child grandchild connect connect class app extends component render return try use without hoc okay jsx class connect extends component getchildcontext return gt one subscriptions unmout thissubscriptionssome render return jsx class child extends component componentwillmount consolelog child willmount thissubscribe componentwillunmount consolelog child willunmount thisunsubscribe class grandchild extends component componentdidmount thiscontextsome consolelog child didmount one idea put connect component inside connect decorator render return composed inside parent work fine hope bug jsx const connect composed props gt class connect extends component render return thispropschildren return class extends component render return", "num": "11843", "d": "12/2017"}, {"title": "possible declare class variable component class", "body": "possible declare class variable component class example js class app entends reactcomponent myvariable true render consolelog thismyvariable possible return return dom element used declare variables earlier using clientside rendering using webpackdevserver recently moved serverside rendering using express webpackmiddleware declare class variables going wrong", "num": "11842", "d": "12/2017"}, {"title": "map defined", "body": "use project mobile error map defined", "num": "11841", "d": "12/2017"}, {"title": "better use three definitions variables react", "body": "one const arr class watchstore extends component constructor props super props two class watchstore extends component constructor props super props thisstate arr three class watchstore extends component constructor props super props componentdidmount thisarr best way use three defined methods arr need rendered make temporary cache comparison new data", "num": "11839", "d": "12/2017"}, {"title": "hydration warning code splitting server side rendering", "body": "want request feature report bug bug maybe current behavior server side rendering enabled server side along code splitting client side app throws warning code splitting disabled warning goes away expected behavior error message shown servermarkupjs javascript const markup reactdomserverrendertostring appjs javascript import route switch reactrouterdom import pagesaboutpage import homepage pageshomepage import learnmorepage pageslearnmorepage class app extends component lt gt render return moving client side indexjs javascript import hydrate reactdom import clientapp clientapp hydrate documentgetelementbyid root clientappjs javascript type asynccomponentstate component function asynccomponent importcomponent function class asynccomponent extends component lt asynccomponentstate constructor props super props return asynccomponent const asynccomponent gt import pagesabout const homepage asynccomponent gt import pageshomepage const learnmorepage asynccomponent gt import pageslearnmorepage class clientapp extends component lt gt render return export default clientapp change include instead ie disable code splitting dont get warning missing something versions react browser os affected issue work previous versions react react found similar qn stackoverflow unfortunately reply", "num": "11838", "d": "12/2017"}, {"title": "react preserves duplicates dom node rerender", "body": "hi guys getting really weird behavior latest project assume bug react want override default browser context menu subscribed events right click context menu want show custom div left click div hide event listeners oncontextmenu e gt etarget id contextmenuid const offsetx offsety e const contextmenu isactive true position x offsetx offsety thissetstate contextmenu epreventdefault onclick e gt const contextmenu isactive false position x thissetstate contextmenu thisstatecontextmenuisactive amp amp add new note assume everybody imagine expected behavior real behavior right click gt context menu shows gt left click gt context menu still gt right click gt another context menu shows literally see dom nodes duplicated elements tab devtools try code file try rightleft click somewhere blue area environment ms windows chrome react", "num": "11836", "d": "12/2017"}, {"title": "cursor jumps backspacing number input shadowdom", "body": "want request feature report bug bug current behavior number inputs decimal values chrome shadowdom maintain cursor position user backspaces input field super lowquality gif sorry issue appears similar problem case custom elements shadow root exhibit problem current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react react component render number input attach react component part shadowdom node custom element enter decimal value eg input slowly backspace input soon decimal point would last character decimal point removed cursor position jumps beginning input demo expected behavior shadowdom case behaves like cases backspacing input cursor jump beginning input decimal point unexpectedly deleted versions react browser os affected issue work previous versions react react chrome osx", "num": "11827", "d": "12/2017"}, {"title": "react call onblur callback", "body": "want request feature report bug bug current behavior input control becomes disabled react call onblur callback current behavior bug please provide steps reproduce possible minimal expected behavior focus input element press enter button makes input disabled equal", "num": "11826", "d": "12/2017"}, {"title": "anchor text content mismatch causes unwanted focus page scroll", "body": "want request feature report bug bug current behavior serversiderendered text content anchor match anchor focused causing page scroll browsers current behavior bug please provide steps reproduce possible minimal demo problem issue isolated ssr necessary expected behavior button focused versions react browser os affected issue work previous versions react react ok react broken reproducible latest safari chrome firefox probably others", "num": "11824", "d": "12/2017"}, {"title": "development env check friendly bundlertools except webpack", "body": "nt like use lots coders nt use china easetouse tool called problem parse filedependencies checking keywords like right react added codes like get result current file rely files need one u guys please make agnostic environment let tools work", "num": "11820", "d": "12/2017"}, {"title": "mousedown mouseup abandoned chrome", "body": "see mousedown mouseup possibly others anything chrome possible shim pointervents somehow", "num": "11817", "d": "12/2017"}, {"title": "devan criego", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11816", "d": "12/2017"}, {"title": "enable synchronously toggling experimental addusertiminglistener", "body": "currently reactinternalsaddusertiminglistener enables logging user timing api inside however use case building profiling tool instrumentation turned time avoid overhead randomly turned period take sample would ideal able enable logging synchronously eg turn start callstack turn end synchronous stack complicated fact enabled state logging toggled inside react callstack profiler would control toggling happens think would fine throw errorreturn falsesomething like logging toggled inside react stack allowing profiler try later fact toggling synchronous profiler cp avoid error toggling start end event handlersettimeoutreqanimframe etc would ensure inside synchronous call react though quite sure implications fiber would react async rendering mean could reenter event loop time toggling happen alternatively toggling could happen async later react stack like setstate case code requesting toggling would probably need kind callback know toggling happened keep track whether react logging however variant seems like would complicated implement use case nt think useful toggling fail recoverable way cc gaearon", "num": "11812", "d": "12/2017"}, {"title": "virtual dom replacement template literals hyperhtml", "body": "want request feature report bug feature current behavior usage virtual dom prevents console errors direct dom manipulation meanwhile slower suggestedexample api makes obsolete altogether real world terms expected behavior ability use libraries expect manipulate dom styling frameworks hyperhtml server side also experimental native implementation", "num": "11810", "d": "12/2017"}, {"title": "feature request global state renderhydrate level", "body": "feature request relates pain point sure better issue state available components without passing everything props component tree speaking global state use context couple issue root component job receive disseminate state root component component nt care root maybe example using express page might well components composed however like nt care depth talking multipage app thinking around react seems skewed toward special case single page app spa sometimes right choice google maps clearly right something broader scope like amazoncom clearly general case much interesting solve every root component wrapped publishes context downwards every nonroot component wrapped receiver higher level component declares context boilerplate expressive bookkeeping alternatives nt far know component knows props possibly context passed nt handle data current render call simply importing global state commonjs modules impossible serverside anything request scoped like query params route params cookies headers anything generated middleware based things proposal handle global state higher level props passed component component extend reactdomrender take argument global context would make everyone life easier nt even worry changes firing componentwillreceiveprops least first version think analogous express req object passed around one always access per request object many things would useful put authenticated user geolocation store redux query route params etc etc would look like request specific data might things truly request specific also things across requests latter done imports bit messy end code like global data available components tree simplifies things lot nt think", "num": "11809", "d": "12/2017"}, {"title": "reacttestrenderer include fragments", "body": "want request feature report bug bug current behavior docs result current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react see expected behavior somehow lost sure would make sense somewhere versions react browser os affected issue work previous versions react", "num": "11808", "d": "12/2017"}, {"title": "false positive warning style mismatch hydrating server markup", "body": "want request feature report bug bug biggy sure support development current behavior seems always throw warning hydration failures eg warning prop match server textdecoration none client textdecoration none note space colon none server client space current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react ssr rendered component using inline styles hydrate doesnt occur either chrome firefox expected behavior warning versions react browser os affected issue work previous versions react react browser", "num": "11807", "d": "12/2017"}, {"title": "remove selectionstart polyfill", "body": "looking code would exist according might wrong though would nice check remove relevant code supported everywhere else", "num": "11806", "d": "12/2017"}, {"title": "run benchmark trials random order", "body": "current benchmark script runs trials specific order try running note takes looong time finish think running trials deterministic order like may actually introduce issues process starts grabbing cpu middle trials specific set trials eg hn benchmark base repo affected results skewed ran trials random order would expect temporary changes evenly distributed random runs thus favor particular version benchmark would nt better make sense tagging good issue look nt promise would easy", "num": "11805", "d": "12/2017"}, {"title": "consider removing xml compatibility ssr hiding behind option", "body": "see sure important seems suboptimal send extra markup people nt need xml", "num": "11799", "d": "12/2017"}, {"title": "select warning fires repeatedly", "body": "want request feature report bug bug current behavior see fiddle warning related select fires repeatedly gaearon tells dedupe bug current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react see expected behavior see versions react browser os affected issue work previous versions react", "num": "11795", "d": "12/2017"}, {"title": "understanding reconciliation", "body": "one tutorial mentioned thisstateshowwarning return return instance maintained renders understand however let consider transition means became react checks previously first child div nt unmount instead seems compare keys find nt change question related comparison logic order based components different renders first compared based keys tutorial author goes example thisstateshowwarning return return says showwarning goes false true react check say hey component let unmount example previous keys explicitly provided based react compare based position tree fact first childs div found code seems react uses name property first instance compare previous next children fail see name", "num": "11793", "d": "12/2017"}, {"title": "hydrating component causes warning component render", "body": "want request feature report bug bug current behavior hydrating prerendered component uses object method get warning component also appear blank noteworthy since markup returned appears correct meaning markup ssr server returns correct markup appears page use client without ssr correct get errors current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react code posterity js import react react import hydrate reactdom const helloobj tostring gt bonjour const mycomponent gt hydrate documentgetelementbyid app expected behavior component blank error outputted console versions react browser os affected issue work previous versions react reactreactdom worked lt confirmed working use method chrome version os x", "num": "11789", "d": "12/2017"}, {"title": "synthetic event breaks", "body": "want request feature report bug bug current behavior breaks current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react explicitly used extend prototype expected behavior work versions react browser os affected issue work previous versions react broken react used work react recommended approach use babel polyfill open new issue", "num": "11788", "d": "12/2017"}, {"title": "input attribute readonly triggers warning prevents attr passed component", "body": "came across warning attempting pass attribute input rendered within party component warning unknown dom property readonly mean readonly valid input attribute sure error coming assuming react error seems pretty generic would nice get past error component wo nt get attribute trying pass", "num": "11785", "d": "12/2017"}, {"title": "refactor packagessharedreactdomframeschedulingjs", "body": "found code format good packagessharedreactdomframeschedulingjs js ide always give warn follows think refactor", "num": "11784", "d": "12/2017"}, {"title": "rfc remove vars follow", "body": "removed pr thanks raphamorim merged could lint developers use bit tricky files use way override lint configuration subset files discuss solutions", "num": "11783", "d": "12/2017"}, {"title": "component unmounts directly mount", "body": "wrapper components get state mountedfalse directly mounting componentwillunmount nt fire components still mounted dom state changes fired component context eg onclick listeners result errors unmounting reproduce issue jsfiddle possibly due differences environment currently nt much time explain two gists components together break gist breaking component usage one issues found literally directly mounting prints false environment ff beta react babel plugins env ff gt chrome last versions safari last versions react using reacthotloader happens page reload well", "num": "11781", "d": "12/2017"}, {"title": "access react object within page js", "body": "reactvr object rendering code react initialised periodically receiving server updates want pass react props props react object set normal js server updates coming via websockets connection within react messages received normal js normal js returns data server use within react connection gets opened message never received however messages sent within react js socketaddeventlistener message function event consolelog message server eventdata", "num": "11777", "d": "12/2017"}, {"title": "testing asynchronous setstate react", "body": "hello read article dave ceddia snapshot testing react components jest useful got big doubt jest works one nt understand jest manage asynchronous process called instance example article function calls increments value perfect test assure called calls ended second call strongly believe got misconception process one help well received thanks lot advance ps redirected", "num": "11775", "d": "12/2017"}, {"title": "chrome extensions mutate dom notfounderror", "body": "want request feature report bug bug maybe question current behavior chrome sure browsers chrome extensions mutate dom willynilly turn react goes update node get critical error notfounderror nt error boundary place whole app blows reproduce fiddle simple phone number counter work install google voice chrome extension reload fiddle enable extension expected behavior sure honestly annoying entire page crashes rather maybe throwing warning type error skipping corrupt node afraid cascading effect type change might maybe react nt cater type error case added error boundaries help track issues amount places getting bit absurd making tricky new feature development rate might well setting user input text nt seem like good solution common enough since added react project fixed different instances find one two week right seem slowing though fear ongoing fightmaintenance issue versions react browser os affected issue work previous versions react react previous version react also similar issues nt seem crash like react thankfully react error boundaries predictable handles chrome latest", "num": "11774", "d": "12/2017"}, {"title": "smarter autofocus", "body": "believe autofocus improved better dx browsernative autofocus nice work component updated sure fine pretty common need focus component updated yep declaratively immutable data ftw least works use wrapper component check componentdidupdate method hope makes sense", "num": "11773", "d": "12/2017"}, {"title": "pressing tab text input moves input bug", "body": "want request feature report bug report bug current behavior pressing tab inside text input physically moves input page demo expected behavior either nothing switch inputs versions react browser os affected issue work previous versions react react version os mac osx browser chrome happen firefox nt know post ca nt figure react bug something else implementation simple", "num": "11772", "d": "12/2017"}, {"title": "error rendering inputs separate window using portals", "body": "want request feature report bug bug current behavior using react portals render react elements completely separate popup window attempt render popout window following error occurs react fails render window turns white reactdomdevelopmentjs expected behavior renders correctly popout window steps reproduce created repo clone recreate issue use service like jsfiddle accesscontrolalloworigin error main browser window popout window separate domains popout machine local use jsfiddle repo modified clone createareactapp steps reproduce included repo readmemd files interest repo appjs popoutportaljs repo kgorgireactpopoutbug versions react browser os affected issue work previous versions react bug occurs edge ie popout window renders correctly chrome firefox tested bug react os windows", "num": "11768", "d": "12/2017"}, {"title": "figure better fix memory leak", "body": "see filing follow", "num": "11763", "d": "12/2017"}, {"title": "fix misleading error message production", "body": "see test case pretty sure different message production nt intentional consequence set production functional components need see possible emit useful message development production possible need change production message ambiguous instead suggesting wrong reason problem", "num": "11761", "d": "12/2017"}, {"title": "reactcreateelement type invalid warning using reactfragment", "body": "react shows warning console use reactfragment", "num": "11759", "d": "12/2017"}, {"title": "testing react", "body": "hi using jest trying write test jsxfragments something new need order jsxfragments testable currently getting issue error seems coming babel", "num": "11758", "d": "12/2017"}, {"title": "make state independent", "body": "component javascript import react component react class inputtest extends component constructor props super props export default inputtest use component like javascript import react component react import inputtest bbb class componentname extends component constructor props super props export default componentname use twice make every state independent", "num": "11755", "d": "12/2017"}, {"title": "inline style currentcolor support", "body": "complied", "num": "11753", "d": "12/2017"}, {"title": "investigate foreach iterations showing init time profiling", "body": "sure real chrome profiler highlights places init time hot paths taking need good look", "num": "11748", "d": "12/2017"}, {"title": "elements rendering import usage", "body": "react attempting render soon imported regardless whether used component imported zero information highly worrysome stopped production componentajs path called router things saved session storage c rendered const item sessionstoragegetitem things saved export default const componenta props gt componentcjs import componenta componenta used yet import componentb componentb const componentc props gt error item null", "num": "11743", "d": "12/2017"}, {"title": "react complains use constructor", "body": "code gives following warning nt happen variable acceptable call constructor", "num": "11738", "d": "12/2017"}, {"title": "still need stringify attributes assigning", "body": "react manually stringifies attributes assigning appears however possible behavior see get rid dompropertyoperations", "num": "11735", "d": "12/2017"}, {"title": "valuedefaultvalue symbolfunction ignored stringified", "body": "regression master found thanks attribute fixture snapshots", "num": "11734", "d": "12/2017"}, {"title": "clientserver mismatch text inside abutton causes abutton focus page load", "body": "want request feature report bug bug current behavior clientserver mismatch text inside button element causes automatically focused page load current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react let text let url randomurl typeof window undefined text client text else text text return focus window ie dom element selected chrome inspector react inspector widnow nt add focus expected behavior expected behavior would either show client text text depending resolves diff automatically highlighted versions react browser os affected issue work previous versions react macosx chrome ff safari", "num": "11726", "d": "11/2017"}, {"title": "use two versions react amp amp time", "body": "want request feature ask question faced dilemma using two versions react time problem occurs writing large projectcontainer react within download appwidgets previously written using older version react without changing old projects put respond old version react new projects put react example webpack solution something like example renames old version new one looking reverse solution settings", "num": "11719", "d": "11/2017"}, {"title": "typeerror attempted assign readonly property nodestore", "body": "folks following fairly standard component export const alert props message string type alerttype createagainbutton object gt code raises following react error error reported located react module output fails chrome safari nt tried browsers typeerror attempted assign readonly property validatechildkeys else isvalidelement node element passed valid location nodestore nodestorevalidated true else node var iteratorfn getiteratorfn node view compiled createelementwithvalidation fixed key warnings appear validtype var lt argumentslength validatechildkeys arguments type view compiled mountindeterminatecomponent warning false lt component appears render method nt extend reactcomponent likely cause errors change extend reactcomponent instead componentname componentname reactcurrentownercurrent workinprogress value fn props context react devtools reads flag workinprogresseffecttag performedwork view compiled performunitofwork reactdebugcurrentfibersetcurrentfiber workinprogress var next beginwork current workinprogress nextrenderexpirationtime reactdebugcurrentfiberresetcurrentfiber view compiled workloop nextrenderexpirationtime lt mostrecentcurrenttime flush expired work nextunitofwork null nextunitofwork performunitofwork nextunitofwork else flush asynchronous work deadline runs time view compiled callcallback nested call would trigger fake event handlers call higher stack fakenoderemoveeventlistener evttype callcallback false funcapply context funcargs diderror false view compiled invokeguardedcallbackdev errors trigger global error handler var evt documentcreateevent event evtinitevent evttype false false fakenodedispatchevent evt diderror didseterror view compiled invokeguardedcallback param args arguments function invokeguardedcallback function name func context b c e f invokeguardedcallbackapply reacterrorutils arguments view compiled renderroot var diderror false var error null invokeguardedcallback null workloop null expirationtime hascaughterror diderror true error clearcaughterror view compiled performworkonroot rootremainingexpirationtime commitroot finishedwork else rootfinishedwork null finishedwork renderroot root expirationtime finishedwork null completed root commit rootremainingexpirationtime commitroot finishedwork view compiled performwork nextflushedroot null amp amp nextflushedexpirationtime nowork amp amp minexpirationtime nowork nextflushedexpirationtime lt minexpirationtime amp amp deadlinedidexpire performworkonroot nextflushedroot nextflushedexpirationtime find next highest priority work findhighestpriorityroot view compiled requestwork todo get rid sync use current time expirationtime sync performwork sync null else schedulecallbackwithexpiration expirationtime view compiled scheduleworkimpl var root nodestatenode checkrootneedsclearing root fiber expirationtime requestwork root expirationtime checkrootneedsclearing root fiber expirationtime else view compiled enqueuesetstate next null insertupdateintofiber fiber update schedulework fiber expirationtime enqueuereplacestate function instance state callback var fiber get instance view compiled setstate componentprototypesetstate function partialstate callback typeof partialstate object typeof partialstate function partialstate null invariant false setstate takes object state variables update function returns object state variables void thisupdaterenqueuesetstate partialstate callback setstate view compiled anonymous function thispropsdispatch actionschange track attachments filename attachmentfilename responsedata thispropsattachmentsfilter attachment gt attachmentuploading length thissetstate uploadingattachments false catch error gt thispropsdispatch actionschange error errorresponse located piece code appears cause issues unclear use alert component two places firstly component called globalerror defined appears based global state code snippet seems root issue take away boolean logic display time problem goes away see bottom stack trace setting stateuploadingattachments wonder anything obvious wrong ideas phil", "num": "11718", "d": "11/2017"}, {"title": "usage react js", "body": "hello new react js got questions react js fitable static webpage also fitable dynamic webpage without using button commen combine react js another library instance jquery context react js recommended use also different tools instance jquery angular js bootstrap etc thank", "num": "11712", "d": "11/2017"}, {"title": "evaluate prop use samevaluezero comparison shallowequal prevent double render", "body": "want request feature report bug feature bug sure current behavior shallowequal function uses samevalue comparison aka objectis evaluated inside react anyway example comparison false second call see called twice expected behavior use samevaluezero comparison react component nt render second time versions react browser os affected issue work previous versions react browsers react gt change nt affect react users evaluates breaking change react breaking change fbjs alternatively nt evaluate inside react ready file pr soon realize proper behavior", "num": "11710", "d": "11/2017"}, {"title": "react map props dom internally", "body": "hi working library proxy svg elements mutate svg element loaded noticed added prop mutate component nt map properly javascript proper syntax code working lives wondering reactdom internally consistent api library support topic greatly appreciated thanks", "num": "11706", "d": "11/2017"}, {"title": "server rendering tag attribute value", "body": "want request feature report bug bug current behavior server render html instead using react node way render rather sure browsers treat", "num": "11705", "d": "11/2017"}, {"title": "investigate flow fails windows", "body": "could nt enable windows ci also remember seeing locally windows machine need investigate fails windows works macos", "num": "11703", "d": "11/2017"}, {"title": "reactdomcreateportal support fragment", "body": "hello maybe possible add support fragment createportal method example code add wrapper buttons javascript class formbuttons extends purecomponent constructor props super props thisel documentcreateelement span thisel best solution without wrappers componentdidmount const portalselector thisprops documentgetelementbyid portalselector appendchild thisel componentwillunmount const portalselector thisprops documentgetelementbyid portalselector removechild thisel render const submit reset submitting pristine thisprops return reactdomcreateportal thisel versions react browser os affected issue work previous versions react", "num": "11701", "d": "11/2017"}, {"title": "closed", "body": "close made mistake self", "num": "11700", "d": "11/2017"}, {"title": "reactdomserverrendertostaticmarkup gets stuck trying render portals", "body": "calling gets stuck loop trying static render current behavior behavior seen uncommenting line warning make tab freeze expected behavior return results throw kind error input valid", "num": "11692", "d": "11/2017"}, {"title": "remove support tapeventplugin", "body": "libraries relied kept impossible support forever given want make changes event system deprecate injection relies remove react migration path turn userland component something like hopefully somebody using work nt actively use", "num": "11689", "d": "11/2017"}, {"title": "reactdom production builds use supported", "body": "want request feature report bug bug current behavior production builds include new set supported ie ie supported browsers reported onwards current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior production builds use features available supported browsers versions react browser os affected issue work previous versions react reactdom nt noticed problem earlier builds", "num": "11688", "d": "11/2017"}, {"title": "reactdom ability access windowevent development", "body": "imported request gaearon want request feature report bug bug current behavior development mode react uses able catch errors without interrupting normal break uncaught exceptions feature devtools current implementation event created dispatched allows error handling without block unfortunately side effect overriding unable access within guarded callbacks running react development mode production mode works fine would like access windowevent superhuman able detect dom focus user point view usually documentactiveelement cases like blur event clicking two iframes focus end different place works fine production currently work around development mode overriding maintiaining reference event production mode use windowevent current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react development production cases would expect alert say development says expected behavior would like way access windowevent development happy somewhat obscure ideally would use secret internals make work versions react browser os affected issue work previous versions react development least probably", "num": "11687", "d": "11/2017"}, {"title": "sluggish scrolling rendering table large dataset react", "body": "creating application realtime streaming data table using react number rows shown time rather large rows situations occur scrolling behavior browsers desktop amp mobile really takes hit staggers attempting browse content anybody experienced kind scrolling behavior rendering large data sets table expecting react able efficiently drawredraw elements ease nt appear case tried using jsfiddle recreate scenario much success", "num": "11686", "d": "11/2017"}, {"title": "javascript exception invalid host", "body": "using releasing app android get error upon launching app even appear crashes believe may related javascript engine mobile ideas happening note application", "num": "11685", "d": "11/2017"}, {"title": "warning tag unrecognized browser", "body": "want request feature report bug bug current behavior chrome js console see warning tag supported browser current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react jsfiddle example expected behavior warning displayed versions react browser os affected issue work previous versions react react chrome ok react", "num": "11682", "d": "11/2017"}, {"title": "warning button calling super make sure pass props component constructor passed", "body": "version use typescript write react using object oriented inheriting package components write solve type problem ts editor passed type check react pass paneltsx typescript import react react export interface ipanelprop extends reactprops width number height number export interface ipanelstate export class panel extends reactcomponent public readonly props ipanelprop null public state ipanelstate public async constructor props super props \u7ec4\u4ef6\u521a\u521a\u6302\u8f7d\u65f6 public async componentwillmount \u7ec4\u4ef6\u5df2\u7ecf\u6302\u8f7d\u65f6 public async componentdidmount param props \u63a5\u53d7\u7684props public async componentwillreceiveprops props public async shouldcomponentupdate public async componentwillupdate public async componentdidupdate \u7ec4\u4ef6\u5c06\u88ab\u5378\u8f7d\u65f6 public async componentwillunmount public render return thisrendercontent public rendercontent return null typescript import react react import panel ipanelprop panelpanel import itreeprop itreestate itreeitem treeicontype treedto export class tree extends panel public props itreeprop public state itreestate treelist private index private style require assetsstyle old way used following way tsc wrong complex inheritance react typescript import react react export interface itextareaprop export interface itextareastate export class textarea extends reactcomponent public state public async constructor props super props \u7ec4\u4ef6\u521a\u521a\u6302\u8f7d\u65f6 public async componentwillmount \u7ec4\u4ef6\u5df2\u7ecf\u6302\u8f7d\u65f6 public async componentdidmount param props \u63a5\u53d7\u7684props public async componentwillreceiveprops props public async shouldcomponentupdate public async componentwillupdate public async componentdidupdate \u7ec4\u4ef6\u5c06\u88ab\u5378\u8f7d\u65f6 public async componentwillunmount public render return textarea", "num": "11681", "d": "11/2017"}, {"title": "react storages flow types", "body": "hi im trying understand flow resolves nothing called directory defined", "num": "11680", "d": "11/2017"}, {"title": "click event propagating elements created loop unique keys", "body": "react version code generates react dom like text click elements event propagating debugging found issue keys restrictions keys react like max length specific characters", "num": "11679", "d": "11/2017"}, {"title": "disabled button click event propagates", "body": "want request feature report bug bug current behavior clicking disabled button fires mouse event bubbles caught parent click event listeners event swallowednot fired major browsers current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior event fire bubble versions react browser os affected issue work previous versions react react", "num": "11678", "d": "11/2017"}, {"title": "resetting form containing focused controlled number input puts step state", "body": "fixture demonstrating issue first test case controlled number input within form containing reset button hitting enter trigger reset event causes focused input reset wo nt sync tracked value work blur number inputs avoid triggering validation warnings nt affect input types since tracked value updated immediately might viable tradeoff avoiding validation warnings sure actionable wanted least document future reference cc nhunzaker gaearon", "num": "11674", "d": "11/2017"}, {"title": "constructor props super props vs constructor super", "body": "know question asked many times still clear many people said pass props constructor want access thisprops one example answer oficial doc says class components always call base constructor props pass props still everywhere except also source code create element see adds regardless use main question react official doc says class components always call base constructor props really necessary current react doc wrong need call always", "num": "11671", "d": "11/2017"}, {"title": "add hooks reactdomserver support caching", "body": "want request feature report bug feature current behavior reactdom ssr performance could improved using serverside cache currently reactpartialrenderer currently accessible package desired behavior server would nice plugins could used improve render performance currently way would externally maintain renderer implementation however already contains behavior required support plugins little refactoring refactored created proof concept supporting plugins react server side rendering see reactpartialpluginrenderer fork comprised different commits strict refactoring addition exporting reactdom server package create extending refactored introduce plugin interface proof concept plugin implementations application example view instructions running example repo understand exporting exposes internal api far ideal scenario would made accessible package would plugin implementation similar required maintain forked maintaining plugin renderer repo nt problem would great plugins could used without needing maintain core server renderer thanks adam", "num": "11670", "d": "11/2017"}, {"title": "rfc drop isattributenamesafe check react", "body": "currently validate dom attributes client ignore ones invalid names check used important safety rendering client side anymore let call browser would throw bad attribute name check used run infrequently data attributes custom elements attributes follow code path since simple attributes names effectively treated unknown attributes even though cache result seems unfortunate work browser already us would breaking change go think remove check let browser throw make spreading props blindly bit dangerous warning visible", "num": "11667", "d": "11/2017"}, {"title": "eventphase property onclickcapture events wrong value", "body": "want request feature report bug assume bug current behavior register event handler click element inspect event property set equivalent currently rewriting tests use public api found problem current behavior bug please provide steps reproduce possible minimal demo problem codesandbox would expect alert way round expected behavior property set versions react browser os affected issue work previous versions react nt tried versions different testing done chrome", "num": "11663", "d": "11/2017"}, {"title": "another dependency use reactproptypes", "body": "use react another package use reactproptypes update another package search polyfill try write nt work import allreact react import proptypes proptypes allreactproptypes proptypes", "num": "11661", "d": "11/2017"}, {"title": "add bundle linting tests release script", "body": "ci currently lint bundles run development production bundle tests add first step linting bundles script called change ci command run finally add release script function note function already broken need replace since running longer works due custom config running work custom script never mind fixed verify changes run see whole workflow run successfully task requires understanding work", "num": "11660", "d": "11/2017"}, {"title": "move reactfibertreereflection reactreconcilerreflection", "body": "move exported entry point similar entry point set create flat bundle similar set change code imports directly instead make dependency ensure reconciler nt actually get bundled instead stays call interaction two packages actually tested run task friendly beginners requires understanding relationship different packages willingness research experiment build process set", "num": "11659", "d": "11/2017"}, {"title": "investigate ci failure possible race condition", "body": "looks like scriptscircleciuploadbuildsh curl could nt open file builddistreactdevelopmentjs scriptscircleciuploadbuildsh returned exit code action failed scriptscircleciuploadbuildsh happened two times random commits nt see pattern probably caused changing tasks distributed parallel nodes nt understand would try run build exists though happening", "num": "11657", "d": "11/2017"}, {"title": "deprecate testutilssimulatenative", "body": "sure ever intended part public api documented naming misleading actually nt simulate native event oops simulates react would received native event way tightly coupled event system internals unfortunate much better educate people dispatch actual browser events tests instead think deprecate removed tests relying leave test two deleted next major", "num": "11656", "d": "11/2017"}, {"title": "question react reconciliation", "body": "goal better understand react reconciliation created example simple timer component basically shows second passed class stateful extends reactcomponent constructor props super props thisstate componentdidmount let setinterval function thatsetstate function prevstate return timer render return thisstatetimer demo class understanding reconciliation class demo extends reactcomponent constructor props super props thisstate componentdidmount let settimeout function thatsetstate showwarning true render thisstateshowwarning return hoping would create new instance stateful component seconds reactdomrender documentgetelementbyid container showwarning statefulcomponent starting timer continued increase screen output basically second whereas expected show third second restart basically start etc miss reconciliation docs led believe feeling react docs misses highlight might missed something", "num": "11651", "d": "11/2017"}, {"title": "forceupdate recalls ref callbacks", "body": "want request feature report bug bug maybe current behavior calling forceupdate ref callbacks called forceupdate ref callback makes infinite loop current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior recall refs versions react browser os affected issue work previous versions react react chrome", "num": "11650", "d": "11/2017"}, {"title": "onclick callback simulating clicking elements triggers additional callback", "body": "link class normalloginform extends reactcomponent handlesubmit e gt epreventdefault consolelog click button \u6a21\u62df\u70b9\u51fb documentgetelementbyid div click render return lt button onclick thishandlesubmit gt log reactdomrender mountnode", "num": "11649", "d": "11/2017"}, {"title": "also lint untracked files", "body": "often would run would say lint passed changed files realize added file yet nt see file make include untracked files note file ignored git different matter shows untracked extremely likely want lint", "num": "11646", "d": "11/2017"}, {"title": "react roadmap document", "body": "want request feature report bug feature current behavior think many people would interested document would show futurelong term plans react features planned current behavior bug please provide steps reproduce possible minimal demo problem via similar bug expected behavior document link exists repo accessed see planned future versions react browser os affected issue work previous versions react na", "num": "11645", "d": "11/2017"}, {"title": "flowtype class inherit", "body": "problem react flowtype typings lets assume javascript foojs type propstype cool boolean class foo extends reactcomponent barjs import foo foo type propsbar temp string class bar extends foo test thispropscool error thispropstemp property found object type question pass additional props bar component", "num": "11643", "d": "11/2017"}, {"title": "radio box check box disabled checked dom structure lacks checked attributes", "body": "report bug radio box check box disabled checked dom structure lacks checked attributes browser structure css input checked color blue result checked failure", "num": "11642", "d": "11/2017"}, {"title": "react watcher bad practice inside alternatives", "body": "want request feature report bug feature js indexjs state num componentdidmount const numgenerator gt mathfloor mathrandom setinterval gt thissetstate num numgenerator render return say passed want component display haha haha haha haha want haha show flash js displayjs state showhaha false componentwillreceiveprops thissetstate showhaha true componentdidupdate thissetstate showhaha false setstate inside componentdidupdate bad practice right watch method like vuejs", "num": "11640", "d": "11/2017"}, {"title": "question workflow release new version", "body": "hello totally place asking sorry please close issue work german newspaper publishing smaller npm packages publically open source purposes privately currently quite sure workflow want learn best wondering manage publish new releases react see release sh scripts npm script basically builds package bumps version publishes lib npm far seems quite similar correct wrong also want publish new release someone runs npm script laptop seems somewhat unsettling feels like wondering care answer facebook", "num": "11628", "d": "11/2017"}, {"title": "add sugar simplify test assertions", "body": "made tests bit verbose might good time revisit write separate issues asserting warning messages verbose need dev block call normalize stack etc ideally wish higher level helper lets us push expected warning assertions validate happen handle component stacks automatically without copypaste normalization helper everywhere cases added actual duplication particular cases throw development nt throw production maybe need although hand pattern needs highly visible maybe extracting common code closure good enough", "num": "11626", "d": "11/2017"}, {"title": "rendertostaticmarkup incorrectly renders async attribute", "body": "want request feature report bug bug current behaviour async tag rendered value empty quotes like current behavior bug please provide steps reproduce possible minimal demo problem note fiddle adds async tag div script tags nt allowed behaviour exactly expected behavior async tag rendered quotes like using method async tag works expected method behaviour different versions react browser os affected issue work previous versions react latest", "num": "11624", "d": "11/2017"}, {"title": "createportal child ref callbacks called componentdidmount", "body": "want request feature report bug bug current behavior using new reactdom api adding ref callback portal subtree fired current component current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior expected ref callbacks children rendered portal like children fired parent component lifecycle method versions react browser os affected issue work previous versions react tested versions react current seem share behaviour", "num": "11621", "d": "11/2017"}, {"title": "include component stack invariants", "body": "iirc nt include devonly anymore maybe let start including errors often prominent warnings would great info", "num": "11619", "d": "11/2017"}, {"title": "investigate uncovered differences development production", "body": "follow one found two invariants function behind dev block nt think intentional need verify may use issue track preserves existing behavior", "num": "11618", "d": "11/2017"}, {"title": "yarn linc nt fail filehasnotchanged warning", "body": "saw modifying eslint config running usersgaearonpreacteslintrcjs warning file ignored default use negated ignore pattern like ignorepattern override problem errors warning lint failed changed files error command failed exit code info visit documentation command react treat particular warning error", "num": "11615", "d": "11/2017"}, {"title": "request", "body": "hello guys make request actually make request axios ie dont work response returns network error using fetch response returns access denied react axios async function makerequest endpoint method get params null headers const request axios method url baseurl endpoint data params headers return await request fetch", "num": "11613", "d": "11/2017"}, {"title": "unfork gcc", "body": "currently using fork gcc js version updated yet gcc version includes see new release js version includes pr remove fork", "num": "11610", "d": "11/2017"}, {"title": "undo operation text input throws exception", "body": "want request feature report bug bug report looks like unmounting text nodes undoing text input operations display value input rendered another component raises exception allow changes unmounted text nodes think issue anyway documented current behavior open change text first controlled text input start debugging developer tools press ctrlz undo text change raises exception setting nodevalue text label right input invalid arguments expected behavior versions react browser os affected issue work previous versions react affects using react also issue master issue springs reactdomjs think needs wrapper around text node see parent updating maybe something like feels like bandaid solution curious causing text node unmount beginwith", "num": "11609", "d": "11/2017"}, {"title": "change props child component", "body": "example want change prop parent component passes clicking button want controlled incident explicitly want make component independent callers need many parameters achieve twoway communication parent child components parent child good people", "num": "11608", "d": "11/2017"}, {"title": "issue input typenumber rendering decimal points", "body": "want request feature report bug would like report bug current behavior use issue displaying one additional decimal point noticed initial value state type end input displayed value state still remains type another end value disappears returns empty string instead current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react demo expected behavior expected behaviour either input performs built validation validation restrictive enough disallow second dot validation modified one must ensure second dot changes value back value without second dot versions react browser os affected issue work previous versions react affected react versions tried react tried google chrome tried browsers", "num": "11606", "d": "11/2017"}, {"title": "children option tags flattened select value", "body": "want request feature report bug bug current behavior following rendered string using reactdom get hydrating code get warning warning text content match server b client fiddle expected behavior get versions react browser os affected issue work previous versions react something reactpartialrendererjs ps browsing reactpartialrendererjs found code point props overwritten later", "num": "11602", "d": "11/2017"}, {"title": "ca nt access discuss react", "body": "know related react directly nt know turn one ca nt accesslogin discussreactjsorg quite time already get error page working discussreactjsorg currently unable handle request http error sometimes retry error sorry error authorizing account perhaps approve authorization", "num": "11601", "d": "11/2017"}, {"title": "dispatching input event element trigger onchange handler", "body": "want request feature report bug bug current behavior triggering native dom input event trigger onchange handler react dom versions current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react react dom react dom note alert appears fiddle expected behavior would expect onchange handler fired sure correct approach happy discuss options versions react browser os affected issue work previous versions react see fiddles chrome osx example", "num": "11600", "d": "11/2017"}, {"title": "investigate need feature check cancel close events", "body": "reactbrowsereventemitter checks browser support cancel close events attaching listeners curious necessary need like determine ramifications removing checks add comments lines checks necessary x maybe eliminate iseventsupportedjs needed check changeeventplugin", "num": "11598", "d": "11/2017"}, {"title": "componentdidmount fired dom mounted portal tree components", "body": "want request feature report bug bug current behavior components inside react portal componentdidmount fired dom mounted yet current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react demo expected behavior componentdidmount fired dom mounted versions react browser os affected issue work previous versions react problem exist react browser os des matter worked fine earlier react", "num": "11597", "d": "11/2017"}, {"title": "add warning hydrating output rendertostaticmarkup", "body": "want request feature report bug feature current behavior accidently generated ssr output using instead hydrated using led warning caused collapsed text nodes would added html comments warning got warning text content match server b client rendering would nice could detect executed output instead seems simple check attribute root element would suffice expected behavior would like kind warning along following lines versions react browser os affected issue work previous versions react due changes worked", "num": "11596", "d": "11/2017"}, {"title": "question automatize tests windows environment amp amp circle ci", "body": "hi everyone wondering makes sense implement react tests windows environment even test build task run master branch thinking using appveyor question migrate circle ci configuration questions make sense available implement", "num": "11595", "d": "11/2017"}, {"title": "warn thisstate set thisprops referentially", "body": "see example think probably reflects misunderstanding props state work detect warn see", "num": "11593", "d": "11/2017"}, {"title": "code coverage", "body": "found react good coverage working could really make impact", "num": "11592", "d": "11/2017"}, {"title": "inlineplaying element ios fire click events rendered react", "body": "want request feature report bug bug report current behavior rendered react autoplaying inline ios fire click events tapped even click handlers added using native dom example created without react fire click events autoplaying inline current behavior bug please provide steps reproduce demo code expected behavior click events fired versions react browser os affected issue work previous versions react issue appears react ios issue seen ios either version react", "num": "11589", "d": "11/2017"}, {"title": "onclick firing disabled buttons", "body": "hello react team found little event firing bug click icon element inside disabled button onclick div element triggered javascript gt delete", "num": "11588", "d": "11/2017"}, {"title": "add element", "body": "want request feature report bug like request feature current behavior create portal currently use function expected behavior", "num": "11586", "d": "11/2017"}, {"title": "move mousewheel event type detection browsereventconstants", "body": "think move wheel event support check browsereventemitter browsereventconstants runs check nice wheel scroll events eventually need attached locally filing part could happen master right less interested cutting overhead event listening much possible really low hanging", "num": "11585", "d": "11/2017"}, {"title": "part huawei mobile phone flashback render page android phones ios phones problem solve problem", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react part huawei mobile phone flashback render page android phones ios phones problem solve problem", "num": "11584", "d": "11/2017"}, {"title": "ie console error stopping render nexteffect", "body": "want request feature report bug bug current behavior page ca nt rehydrated probably rehydration issue happens use empty div instead console error seems equal set breakpoint point source current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react ca nt isolate bug provide minimal demo reliable reproduction steps without providing whole app spent day already still trying isolate issue removed randomly choosen components added render deep component fine defined rendered instead got error restoring various components makes react crash randomly looking points every refresh produces result though still report hope dev got idea could triggering keep looking meanwhile expected behavior errors page rendered versions react browser os affected issue work previous versions react react amp windows ie react working fine happening development production build", "num": "11583", "d": "11/2017"}, {"title": "elements key deduplicated", "body": "want request feature report bug bug current behavior elements key deduplicated unreasonable guess since duplicate keys undefined behavior however subsequent rerenders duplicate elements remain render tree way remove current behavior bug please provide steps reproduce follow instructions expected behavior elements key deduplicated behavior react least duplicate elements appropriately cleaned subsequent rerenders versions react browser os affected issue work previous versions react mac chrome react working", "num": "11582", "d": "11/2017"}, {"title": "controlled inputs nt work safari", "body": "originally thought issue around using upon digging appeared safari plain nt like controlled inputs whatever type appear input see action say worked around time leveraging instead allowed us stop event propagation safari sure affects safari looking older issues looks like solved problem safari nt ca nt confirm", "num": "11577", "d": "11/2017"}, {"title": "react reactrouter create component calls render component good without render crazy", "body": "link sandbox simple code like sidebarjs menujs uncomment component render method component called everytime change link menu component html code going loosing mind", "num": "11574", "d": "11/2017"}, {"title": "preparing", "body": "running list comprehensive things come nt want lose track cherrypick jquense license update changelog tag release release blog post test living heck", "num": "11573", "d": "11/2017"}, {"title": "reword unknown property warning less obnoxious", "body": "thought might cause knee jerk reactions practice think change phrasing neutral one potentially explaining prefer camel case", "num": "11570", "d": "11/2017"}, {"title": "read property reactinternalinstance null", "body": "super unhelpful error react improved ie hierarchy trace kind pointer", "num": "11569", "d": "11/2017"}, {"title": "react recognize prop dom element", "body": "want request feature report bug bug current behavior react recognize prop dom element though react recognizes open links check sandbox console react version warning displayed react version warning displayed sandbox console react version without warning message expected behavior recognized valid dom element attribute mentioned documentation versions react browser os affected issue work previous versions react tested reproducible latest versions chrome safari firefox macos x worked well react", "num": "11568", "d": "11/2017"}, {"title": "html entities rendertonodestream rendertostaticnodestream causing mismatch hydrate", "body": "want request feature report bug bug current behavior server started html entity anywhere within component jsx causes mismatch occur using hydrate expected behavior nt expect mismatch occurs rendertonodestream rendertostaticnodestream nt occur using rendertostring rendertostaticmarkup versions react browser os affected issue work previous versions react react chrome manjaro linux sure worked previous versions", "num": "11567", "d": "11/2017"}, {"title": "umbrella new algorithm resuming interrupted work", "body": "resuming ability reuse fibers interrupted higherpriority update take following scenario component updated normal async priority update finished processing higherpriority update scheduled let say synchronous though could also higherpriority async update sync update interrupts async update leaving unfinished sync update finishes go back processing interrupted async update possible even likely interrupted work nt touched sync work resumed without starting completely important optimization several async features mind including error handling blockers prerendering hidden priority used implementation resuming mostly worked bugs months ago spent time identifying bugs using fuzz testing fixing iterating existing algorithm eventually got version working passed tests even version nt features wanted algorithm seemed inherently flawed decided would best scrap existing algorithm revisit resuming future believe better idea resuming work going split work multiple prs use issue keep track progress apologies descriptions hard follow difficult describe without resorting jargon iterate issue work always reconcile current child set small refactor reflects already without resuming set reconcile always current set reverted resuming algorithm set reconcile sometimes workinprogress set code paths left implementation stash interrupted children cloning workinprogress fiber current already existing workinprogress interrupted stash interrupted workinprogress children corresponding fields case reuse later begin phase add additional check see incoming propsstate match interrupted propsstate bail reuse interrupted children interrupted children longer useful rerender parent overwrite unmounted fibers actually reused even rerender parent see next step gets us back functionality old resuming algorithm resume interrupted children come back priority originally rendered main limitation work lost parent rerendered higher priority need way distinguish workinprogress fiber previous current fiber pool unmounted interrupted children resume even parent rerenders higher priority fiber rerendered interrupted children could reused search interrupted children find ones unmounted nt alternate stash unmounted children separate set kept around indefinitely without overwritten set acts like pool children next time parent rerendered priority interrupted children check pool matches creating new fibers", "num": "11566", "d": "11/2017"}, {"title": "reacttestrenderer support portal", "body": "want request feature report bug report bug current behavior test javascript import react react import createportal reactdom import renderer reacttestrenderer const drop gt createportal hello thisdropcontainer test drop renders gt const component renderercreate const tree componenttojson expect tree tomatchsnapshot fails invariant violation drop nothing returned render usually means return statement missing render nothing return null test passes wrap createportal container javascript createportal hello thisdropcontainer expected behavior code without parent container works fine browser seems adding parent test pass believe support empty returns versions react browser os affected issue work previous versions react lastest", "num": "11565", "d": "11/2017"}, {"title": "introduction external pages dangerouslysetinnerhtml js fails", "body": "introduction external pages dangerouslysetinnerhtml js fails", "num": "11562", "d": "11/2017"}, {"title": "clicking radios fires change event unconditionally older browsers", "body": "may change agreed missed radio input clicks test fixtures fails safari ios safari chrome test fixture care figure way document", "num": "11560", "d": "11/2017"}, {"title": "react tag", "body": "looks like react tag never got pushed github cut new tag biggest annoyance release missing dropdown dom test fixtures append url huge deal seems low effort take care noone minds", "num": "11559", "d": "11/2017"}, {"title": "overflowx none", "body": "hi spent half hour realizing passing string none overflowx warnings logs jsx style passing invalid simply removed inline styles warnings errors would like send pull request react help add logging developers accidentally pass invalid string warn things like invalid even passing class browser barfing helped realize overflowx hidden valid attribute css value idea way log console invalid css attributes disappear jsx final inline style converted object would love logs invalid css attributes maybe configuration missing see logs react annoying try get overflow none invalid next time css something missing look mozilla manual thanks pointers annoying little bugger jsx", "num": "11556", "d": "11/2017"}, {"title": "something like emberobservercom", "body": "something like react world", "num": "11554", "d": "11/2017"}, {"title": "nonpassive event warnings component clicked", "body": "want request feature report bug bug current behavior following console warning emitted every time input clicked current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react steps new tab visit open browser console ensure messages unfiltered run code click either select fields page warning emitted every time either select field clicked selection need change expected behavior warning attached event listeners versions react browser os affected issue work previous versions react react chrome official build tested also ubuntu opera issue issue began appearing recent upgrade chrome using react first saw upgraded see issue resolved", "num": "11553", "d": "11/2017"}, {"title": "render root tag", "body": "mistake amp amp test want render div tag", "num": "11552", "d": "11/2017"}, {"title": "rendered ui react reactdom", "body": "code js import react react import reactdom reactdom import router route hashhistory reactrouter import archives modulesarchives import layout moduleslayout import featured modulesfeatured import settings modulessettings consolelog hi reactdomrender documentgetelementbyid app error browser", "num": "11551", "d": "11/2017"}, {"title": "add validation reactchildren helpers", "body": "currently helpers like validate passed elements things like missing keys go unnoticed see discussion deleted original tweet context", "num": "11549", "d": "11/2017"}, {"title": "stopimmediatepropagation available synthetic events", "body": "order call method access via awesome supported see prior issue use case sip nt required specific use case want kill hover events touch input trigger cancels internal cascade", "num": "11547", "d": "11/2017"}, {"title": "ignore system directories build script", "body": "noticed running gives error enotdir directory open usersgaearonpreactpackagesdsstorepackagejson error objectfsopensync fsreadfilesync readdirsyncfilterdir arrayfilter getpublicpackages ignore system directories", "num": "11544", "d": "11/2017"}, {"title": "nt get keys warning case", "body": "example generates buttons based state change nt get warning use keys class hello extends reactcomponent constructor props super props thisstate test thisarr componentdidmount settimeout gt thissetstate render return ps uncomment lines function get warning though nt get warning first case know without keys two buttons going rendered settimeout different", "num": "11540", "d": "11/2017"}, {"title": "input typecheckbox rendered correctly nested html atag", "body": "want request feature report bug bug current behavior peculiar problem using html tag react thing click directly checkbox tag checkbox rerender correctly state updated example given code render component click directly checkbox case showmap set false since set true constructor checkbox still checked html view however click tag directly checkbox state showmap updated correctly well view make work calling app scroll top page click tag example code import react react import render reactdom const styles fontfamily sansserif textalign center margintop class menu extends reactcomponent constructor props super props thisstate showmap true togglecheckbox event gt thissetstate showmap thisstateshowmap eventpreventdefault render return thisstateshowmap show hide show map const app gt render documentgetelementbyid root expected behavior press checkbox update visually versions react browser os affected issue work previous versions react react chrome windows", "num": "11539", "d": "11/2017"}, {"title": "make react resilient dom mutations google translate", "body": "coming search see workaround star issue want request feature report bug bug though decent chance chromegoogle translate one current behavior using google translate page using react certain code pattern produces javascript error rendered content changes current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react checked macos navigate chrome browser set language japanese right click page select translate english click checkbox error show source example found part code seems cause following two lines changing following fixes behavior google translate expected behavior produce error versions react browser os affected issue work previous versions react created identical example react following pages repeating steps outlined error produced seems affect react chromeonly feature affects chrome", "num": "11538", "d": "11/2017"}, {"title": "getting warning unique key prop despite added correctly", "body": "want request feature report bug bug current behavior reported using library react error demo steps reproduce go demo codesandbox try choose option see console error keys added work fine react expected behavior error keys added versions react browser os affected issue work previous versions react react worked fine react", "num": "11537", "d": "11/2017"}, {"title": "inline style decimal numbers", "body": "want request feature report bug bug current behavior style prop passed decimal number react converts dot comma resulting invalid css value suspect might due locale different english behavior irregardless user locale conversion correct use current behavior bug please provide steps reproduce possible minimal demo problem expected behavior decimal numbers always converted dot versions react browser os affected issue work previous versions react react version os macos browsers chrome safari firefox beta unaffected", "num": "11532", "d": "11/2017"}, {"title": "touched clicked component gets ghost mousedown event", "body": "deployed minimal trimmed app entire source code clicking touching either square make clicked touched square disappear square everything works intended desktop machine chrome firefox also shows correct behavior safari ios nt care ie edge following triggers bug chrome either android tablet desktop machine emulating handheld device reload app touch click top blue square squares disappear console log see clicked touched bottom green square received spurious mousedown event deleted appcss applied squares nt use would get following warning chrome emulating handheld device intervention unable preventdefault inside passive event listener due target treated passive see way deployed app warning goes away ghost mousedown event due bug code bug react bug chrome resolve issue looking workaround bug code", "num": "11530", "d": "11/2017"}, {"title": "add function name breakpoint tracing", "body": "want request feature report bug maybe feature current behavior interesting happen react fiber try use breakpoint trace react render function found call stack function name made captured picture current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react sorry expected behavior define function name versions react browser os affected issue work previous versions react react osx", "num": "11529", "d": "11/2017"}, {"title": "rfclarification asynchronous", "body": "quite tried understood asynchronous failing find answer past came conclusion historical reasons probably hard change however gaearon indicated clear reason curious find anyway reasons often hear think ca nt everything easy counter async setstate required async rendering many initially think render efficiency nt think reason behind behavior keeping setstate sync async rendering sounds trivial something along lines fact example allows synchronous assignments observables still respect async nature rendering async setstate needed know state rendered argument hear sometimes want reason state rendered state requested sure principle much merit either conceptually feels strange rendering side effect state facts today years old next year turn regardless whether owning component manages rerender year draw probably good parallel would nt able read last version self written word document printed would pretty awkward nt think example game engines give feedback state game exactly rendered frames dropped either interesting observations years nobody ever asked question know observables rendered question seems relevant often encounter cases knowing data rendered relevant case remember needed know pixel dimensions data layout purposes elegantly solved using nt really rely async either cases seem rare hardly justify design api primarily around done somehow suffices think doubt react team aware confusion async nature often introduces suspect another good reason current semantics tell", "num": "11527", "d": "11/2017"}, {"title": "transpilation freezes reactdomserver interface", "body": "initially reported attempting upgrade caused test previously working fail test using sinon stub results following error export frozen source frozen confirms result transpilation simply splitting report separate issue add reproduction soon plan submit pr follow", "num": "11526", "d": "11/2017"}, {"title": "disable form submission using onsubmit handler", "body": "want request feature report bug bug current behavior currently possible prevent form submission using handler current behavior bug please provide steps reproduce possible minimal demo problem sample code expected behavior never submit returns false every time versions react browser os affected issue work previous versions react react simplified code snippet nt load sandbox repro false gt", "num": "11522", "d": "11/2017"}, {"title": "react props frozen sealed", "body": "trying update application react getting error message chrome pseudo code currently like jsx const styles container fontsize fontfamily helvetica neue class mycomp extends component render gt let theme thispropstheme stylescontainerfontfamily themefont noticed error happens second time render run also test debugger inside render method getting return means frozen react state copied styles object second pass replaced frozen nt happen previous versions react react freezing properties", "num": "11520", "d": "11/2017"}, {"title": "consider including directory name stack trace files", "body": "see maybe file called pretty common directory structures include directory name short component stack trace", "num": "11519", "d": "11/2017"}, {"title": "unify linc lint build tasks", "body": "currently two tasks nt share code lint lint changed make share code using node api like currently move shared code", "num": "11516", "d": "11/2017"}, {"title": "bunch find module errors reactdom", "body": "want request feature report bug bug current behavior nt used version specific features react module failed transpile errors reproduce learn example react currently used react upgrade current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react versions react browser os affected issue work previous versions react react reactdom tested windows chrome browser browsers nt related meaningless yes worked react", "num": "11514", "d": "11/2017"}, {"title": "textarea falls error works fine", "body": "", "num": "11511", "d": "11/2017"}, {"title": "warn component proptypes rather proptypes", "body": "see feels like easy mistake make easy us detect", "num": "11510", "d": "11/2017"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11509", "d": "11/2017"}, {"title": "unnecessary rerendering bailedout components legacy context provider deep child updated batch", "body": "issue going start mostly theoretical still working make minimal repro case scenario one component return false bail child component still method called avoiding many details roughly jsx import react component react class extends component shouldcomponentupdate nextprops const result boolean nextpropsitem consolelog shouldcomponentupdate result return result render consolelog render thispropsitem return class b extends component state seconds componentdidmount thisinterval setinterval gt thissetstate seconds thisstateseconds componentwillunmount clearinterval thisinterval render consolelog b render thispropsitem return thispropsitemname thisstateseconds seconds export default case work expected seems direction errors seeing something taking place render cycle b rendered without reusing prop previous reconcile first question theories may happening explore using parent reading thing think fork original oss flux passing props naming collisions fairly certain performing mutations end manage pull repro case immediately post utter joy heart cc acdlite gaearon issue asking messenger recently", "num": "11508", "d": "11/2017"}, {"title": "formalize toplevel es exports", "body": "currently ship commonjs versions packages however might want ship esm future ca nt quite easily nt really decided toplevel es exports would look like package example bunch named exports also default export called encourage people better tree shaking currently exports class thus would start failing node converted default export", "num": "11503", "d": "11/2017"}, {"title": "iterators supported inside componentrender", "body": "current behavior provide list react components works provide iterator react components work works const app props gt elements const elements function yield yield yield nt work const app props gt elements const elements function yield yield yield unfortunately could nt make run jsfiddle maybe support iterators expected behavior render exactly version listbased one versions react browser os affected issue work previous versions react reactdom browserindependent tried firefox", "num": "11502", "d": "11/2017"}, {"title": "react renders differently server client", "body": "warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client come rendered different solution tried rendertostaticmarkup instead rendertostring working", "num": "11500", "d": "11/2017"}, {"title": "uncaught error thrown twice", "body": "problem mention issue unhandled error displayed twice error based gaearon comment context reason happens intentionally let browser interpret error uncaught rethrow understand thrown browser source file second thrown react source file added follow advice error add error boundary see error huge problem daytoday workflow fact nudges people add error boundaries nice case advice mentioned error get error thrown", "num": "11499", "d": "11/2017"}, {"title": "props set default parameter added component props property", "body": "want request feature report bug bug current behavior able render default value property contain explicitly set intended versions react browser os affected issue work previous versions react chrome", "num": "11498", "d": "11/2017"}, {"title": "react upgrade still looking reactjs even though nt exist anymore", "body": "want request feature report bug current behavior upgrading react means nodemodulesreactreactjs longer exists however watchingbundling files webpack webpack sometimes trips errors trying locate nodemodulesreactreactjs may well webpack issue react issue hoping someone help ca nt get bottom seems timing thing errors every couple file changes rebundles rest time works normally webpack config simple set true use babelloader presets expected behavior never look nodemodulesreactreactjs bundling webpack versions react browser os affected issue work previous versions react exists react problems previous versions", "num": "11497", "d": "11/2017"}, {"title": "setstate callback called component state updated react shallow renderer", "body": "want request feature report bug report bug current behavior call setstate callback test using react shallow renderer via enzyme callback gets called still old state edit seems limited componentwillmount current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react edit reproduce expected behavior setstate callback gets called access new state versions react browser os affected issue work previous versions react version worked enzyme edit think componentwillmount line causes render method shallow wrapper return early updates state", "num": "11496", "d": "11/2017"}, {"title": "add datareactroot back reactdomrender", "body": "want request feature report bug bug current behavior react added using current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior also tag tree root react detection purposes versions react browser os affected issue work previous versions react", "num": "11494", "d": "11/2017"}, {"title": "dom attribute datetime nt lowercased rendered string", "body": "want request feature report bug bug current behavior dom property nt converted lowercase attribute counterpart element element rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react const react require react const reactdomserver require reactdomserver const markup reactdomserverrendertostring reactcreateelement time datetime consolelog markup print expected behavior output versions react browser os affected issue work previous versions react react react dom node", "num": "11492", "d": "11/2017"}, {"title": "npm run build error", "body": "bug nodejs followed steps git clone npm install run script error js npm run build build usersucwebdocumentsgithubreact npm run versioncheck amp amp node scriptsrollupbuildjs versioncheck usersucwebdocumentsgithubreact node scriptstasksversioncheckjs building reactdevelopmentjs umddev typeerror read property specifier undefined think strange", "num": "11491", "d": "11/2017"}, {"title": "default browser android working blank access web build react", "body": "problem build web react tried access default browser android android working blank android wokring write es compile es working test android default browser working blank default browser android support es right someone help", "num": "11490", "d": "11/2017"}, {"title": "trigger simulated input value change react reactdom updated", "body": "trying trigger inputchange event react form outside react using pure js jquery reactdom able use simulated flag event object event pass note use react even though form trying trigger based react pure js jquery trigger input value change event original suggestion comment used work react release triggering input change event expected internal changes handles changes input data react believe point would give hint idea could", "num": "11488", "d": "11/2017"}, {"title": "text next element render page react", "body": "hello today spotted bug causes text next element render page react quick job search sure designed behaviour working perfectly react let know need information", "num": "11485", "d": "11/2017"}, {"title": "release script followup", "body": "x add timeout querying npm right publish x conditionally log post publish steps x maybe print readytopaste instructions cra prerelease testing x publish packages nt remove whitelist config x add v prefix release tags x nit seconds gt minutes long tasks", "num": "11481", "d": "11/2017"}, {"title": "let warn local yarn version support workspaces", "body": "want request feature report bug feature current behavior got error local yarn version think maybe upgrade yarn module land package folder upgrade yarn try exec command work current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior think would great throw warning ambiguous error versions react browser os affected issue work previous versions react react osx", "num": "11478", "d": "11/2017"}, {"title": "assignment jsx double circulation", "body": "want request feature report bug current behavior code js import react component react class app extends component export default app result print page expected behavior strange start versions react browser os affected issue work previous versions react", "num": "11476", "d": "11/2017"}, {"title": "pions", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11474", "d": "11/2017"}, {"title": "", "body": "", "num": "11468", "d": "11/2017"}, {"title": "use reactcloneelement original element key changed", "body": "use reactcloneelemen clone element found key changed add original key read doc cloneelemnt said key ref original element preserved miss thing code console message capture reactdom structure thanks", "num": "11464", "d": "11/2017"}, {"title": "rn nt receive events unknown tags", "body": "flow uncovered need verify return early process events case", "num": "11461", "d": "11/2017"}, {"title": "check length accessing characters", "body": "see comment although seems unlikely someone would pass onecharacter prop price least versions chrome right reported check first comparison please comment want take issue somebody already commented please let finish", "num": "11460", "d": "11/2017"}, {"title": "need implement n level expandable listview react native", "body": "basic query react native side menu n level expandable options categories subcategories amp make react native already research lot unable find significant solution thing help appreciated new react native basic knowledge may creating dynamic components done already implemented help lot something frequently needed development", "num": "11459", "d": "11/2017"}, {"title": "improve formatting errors building react", "body": "currently build fails eg due missing named export message pretty ugly would nice display relevant line inline syntax highlighting sort like babel maybe babel could helpful sure reproduce fail build removing somewhere run tip fastest way build might enough reproduce iterate error message relevant logic displaying build errors probably somewhere like work please comment nt many people working thing", "num": "11454", "d": "11/2017"}, {"title": "investigate dce regression", "body": "seems like started bundling persistent reconciler dom bundles maybe negated effect es modules even though net win need look happened", "num": "11450", "d": "11/2017"}, {"title": "fix command windows", "body": "currently fails windows depends grep find way make cross platform way eg node script", "num": "11444", "d": "11/2017"}, {"title": "ensure linted bundles exist", "body": "added validation built bundles however actually messed eslint nt running files invalid arguments fixed fail build glob patterns searching nt exist", "num": "11443", "d": "11/2017"}, {"title": "remove support cloneelement getmountedinstance shallow renderer", "body": "test added part shallow renderer rewrite understand tests take instance call pass result shallow renderer internally seems like misunderstanding api work need fix callsites read instead see test wrong change render different shallow renderer like js const shallowrenderer createrenderer let result shallowrendererrender expect result toequal foo bar const instance shallowrenderergetmountedinstance fail argument passing case proper react element actually mostly happens work react elements shallowrenderer instances code almost read anything else update path example hack needed think delete test fix internal callsites never intentionally supported prevents fixes shalllow renderer", "num": "11441", "d": "11/2017"}, {"title": "still yields error ssr rehydration feoffset filter", "body": "bug since regressions issues closed could comment gaearon current behavior navigate ssr page get rehydration error outputting svg expected behavior warnings versions react browser os affected issue work previous versions react version react gt browsers attaching svg thats causing error", "num": "11438", "d": "11/2017"}, {"title": "react complains onchange input type submit", "body": "confused error valueonchange makes sense would complain inputs types seems like bug show submit button docs states valid show text submit input docs react clearly show examples forms submit buttons piece button code code simple button component called like component renders like however get warning button nt submit form apart form object believe rendering readonly warning states anyone know happens", "num": "11436", "d": "11/2017"}, {"title": "release script followup items", "body": "today used new release script first time publish couple things noticed want followup pr x autoinstall update release script yarn deps running pr x script manually tagged release x postbuild test instructions show fullyqualified paths prevent accidentally verifying wrong build eg checkout release script running rather path x check handle packages one failed reconciler release bc expected matter probably x publishing stable release also update next release point", "num": "11435", "d": "11/2017"}, {"title": "react web app working ie", "body": "want request feature report bug report bug current behavior web app displaying black screen load current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react created demo app using createreactapp npm start application tried run ie displays black screen error saying expected identifier console expected behavior application displayed ie browser happening versions react browser os affected issue work previous versions react react reactdom reactscripts browser ie", "num": "11429", "d": "11/2017"}, {"title": "raising issue warning react depends requestanimationframe make sure load polyfill older browsers", "body": "want know suppress warning ie lt edge ie like could guys help thanks much", "num": "11428", "d": "11/2017"}, {"title": "class styles inside javasript styles", "body": "hi const styles theme gt return root borderradius themespacingunit boxshadow themeshadows padding insert style inside another class style like const styles theme gt return root borderradius themespacingunit boxshadow themeshadows padding", "num": "11425", "d": "11/2017"}, {"title": "ignore content client nt warn mismatches", "body": "react ssr amp lazysizes trying use noscript pattern lazy load images lazysizes seeing warning expected server html contain matching image component render method js render const cdn url width height thisprops react issue tags", "num": "11423", "d": "11/2017"}, {"title": "capture attribute supports boolean values", "body": "followup attribute elements currently supported configured attribute causes render attribute supports strings though important able configure default camera selected mobile devices", "num": "11419", "d": "10/2017"}, {"title": "treat value null empty string", "body": "per gaearon request opening new issue based currently create input like null value flag react treat uncontrolled input console warning generated however often valid condition example creating new object initialized w default values server passed component props form requires address address line often optional passing null value controlled component reasonable thing one workaround ie errorprone approach quite awkward per issue referenced react team planned treating null empty string nt yet occurred like propose tackling problem near future please let know help", "num": "11417", "d": "10/2017"}, {"title": "reactchildren support call return types", "body": "include react defined subrepo children enumerated similar support added issue follow suggested gaearon", "num": "11416", "d": "10/2017"}, {"title": "componentdidcatch fired expected", "body": "hello guys try build custom blog app branch mentioned issue issue ca nt bring live errorboundary though everything like described react docs debugging shows componentdidcatch never called errors synthetic new error real ui errors use errorboundary navigation component errorboundary component jsx export class errorboundary extends reactcomponent lt children jsxelement ierrorboundarystate state ierrorboundarystate haserror false blog component bugged natural way code cause render bug runtime also try conditional throw error inside blog render method wrap root application component errorboundary every time exatly effect componentdidcatch fired expected behavior componentdidcatch fired child component ca nt render properly due unhandled exception like described docs project technology stack packagejson windows chrome react typescript config extended file webpack webpackdevserver config redux reactredux reactrouterredux materialui components repository", "num": "11415", "d": "10/2017"}, {"title": "serverside rendering async routing", "body": "hi render synchronous route serverside client side hydrate dom get warning client side asynchronous route nt find component hand react fiber reconciliation tries remove non hydratable node page makes blank flash client side", "num": "11414", "d": "10/2017"}, {"title": "\u4e66\u5199\u683c\u5f0f\u9519\u8bef", "body": "jsx prevents injection attacks default react dom escapes values embedded jsx rendering thus ensures never inject anything explicitly written application everything converted string rendered helps prevent xss crosssite scripting attacks reactdom", "num": "11413", "d": "10/2017"}, {"title": "jsx \u4ee3\u8868 objects", "body": "babel\u5c06jsx\u7f16\u8bd1\u6210reactcreateelement \u8f6c\u8bd1\u5668\u4f1a\u628a jsx\u8f6c\u6362\u6210\u4e00\u4e2a\u540d\u4e3a\u7684\u65b9\u6cd5\u8c03\u7528", "num": "11412", "d": "10/2017"}, {"title": "reactdom \u4e66\u5199\u683c\u5f0f\u4fee\u6539", "body": "", "num": "11411", "d": "10/2017"}, {"title": "error boundaries triggered event handlers", "body": "want request feature report bug feature question current behavior componentdidcatch triggered error occurred event handlers react components expected behavior honest without reading full documentation error boundaries first attempt test error boundaries trigger error event handler ouch discovered componentdidcatch triggered react lifecycle methods render wondering design decision done like would convenient one component handle unexpected exceptions inside components instead two ways handle errors inside component also created stackoverflow question concern thanks versions react browser os affected issue work previous versions react react", "num": "11409", "d": "10/2017"}, {"title": "web development", "body": "use laravel react js mysql building site like yelp tripadvisor good option rendering csr ssr approach good website initially want stay monolithic architecture year later go microservice architecture method follow make shifting easier mono micro moreover target make site progressive web app beginning need suggestion guys", "num": "11408", "d": "10/2017"}, {"title": "errors guys help pls", "body": "want set yarn terminal shows error entering command packagejson name workspace private true scripts start meteor port ip port dependencies babelruntime bcrypt classnames history meteornodestubs moment proptypes react reactaddonspurerendermixin reactdom reactrouter help pls", "num": "11407", "d": "10/2017"}, {"title": "proposal promise setstate first arg", "body": "recommend way use setstate use function instead object async functions push inside setstate add arg write instead", "num": "11406", "d": "10/2017"}, {"title": "focusinfocusout relatedtarget ie", "body": "currently react lt support events problem ie lt blur event relatedtarget great support events question support later versions problem mentioned answer", "num": "11405", "d": "10/2017"}, {"title": "cases lose components", "body": "want request feature report bug problem understand current behavior behind react div components loaded current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react document structure looks like thisthe second div used react components first div able load properly dom last div load dom expected behavior divs loaded normally versions react browser os affected issue work previous versions react react system", "num": "11403", "d": "10/2017"}, {"title": "wip rfc improvements ref system", "body": "formal discussion talk future refs within react improve upon current behavior currently two ways refs react string refs callback refs string refs string refs applied composite components class components ie host components ie example might look like types jsx host components class mycomponent extends reactcomponent componentdidmount thisrefsinputfocus render return composite components class inputwrapper extends reactcomponent focus thisrefsinputfocus render return class formcomponent extends reactcomponent componentdidmount thisrefsinputwrapperfocus render return callback refs callback refs also applied composite components class components ie host components ie example might look like types jsx host components class mycomponent extends reactcomponent componentdidmount thisinputnode thisinputnodefocus render return composite components class inputwrapper extends reactcomponent focus thisinputfocus render return input domnode type text class formcomponent extends reactcomponent componentdidmount thisinputwrapperfocus render return inputwrapper instance proposed behavior propose three major changes current ref system works deprecate string refs removal react ref api broken several aspects taken refer thisrefs myname strings closure compiler advanced mode compatible nt allow notion multiple owners single instance magical dynamic strings potentially break optimizations vms needs always consistent synchronously resolved means asynchronous batching rendering introduces potential bugs currently hook get sibling refs one component refer sibling context reference works one level breaks ability wrap one encapsulation ca nt statically typed cast use languages like flow typescript way attach ref correct owner callback invoked child ref attached callback issued current owner require access react runtime find current owner creation reactelement making aheadoftime optimizations hard deal callback refs issues recommended choice react team time already everything callback refs personally feel need keep string ref system around libraries inferno preact already removed string refs reported performance optimization deprecate ref prop entirely feel refs components lead problematic patterns make apps much harder scale easily break unidirection flow component tree opinion class components nt able access instances components communication use instead alternatively cases access root dom node needed unavailable wrapper component could used escape hatch example something personally feel problematic pattern one seen bite teams past jsx class itemcontainer extends reactcomponent render let subscribe unsubscribe propssubscriptionhandler example couples handling items item container breaking control flow ideally passed child prop child control flow another usage refs composite components related usage passing component instance ref get back root dom node example follows approach avoided instance passing refs via props add special hostref prop works host components reduce confusion would normal prop composite components keeping current ref naming might cause unintended problems would also allow apps move new system incrementally furthermore accept callback refs string refs example jsx function button classname props return hostref simple prop gets passed child via jsx spread downsides migration cost changes proposal cost migration string refs still widely used thirdparty components likely trackable upgraded via codemodding refs composite components far widely used string refs may make sense make changes vs cost react ecosystem unlikely upgraded via codemod codemodding may possible automate vast majority string refs callback refs via codemod need form checking owner ref differs cases string refs vs callback refs point needs broken apart discussed might possible automate codemod refs composite components would require change structure components app work point needs broken apart discussed considerations react native currently nt host components composite components refs core components need special consideration may function maybe could function prop called something similar would work like refs currently", "num": "11401", "d": "10/2017"}, {"title": "follow want go microservice architecture building large scale website planning use laravel react js mysql initially beside type rendering best csr ssr implement things prooperly", "body": "", "num": "11399", "d": "10/2017"}, {"title": "elements components", "body": "code react element react component asking told render instance used case react element given according doc react elements immutable would pass different props instance render latter immutable", "num": "11398", "d": "10/2017"}, {"title": "mismatch node type hydrating svg ssr", "body": "want request feature report bug report bug current behavior getting following error trying hydrate ssr content current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react following check returns false expected behavior node types compared correctly svg uses camelcase tagname versions react browser os affected issue work previous versions react react", "num": "11397", "d": "10/2017"}, {"title": "function also iterable treated inconsistently", "body": "want request feature report bug bug think current behavior codesandbox plop html function makerenderable fn valuegetter const iteratorsymbol typeof symbol function amp amp symboliterator iterator function iterator let timescalled return next const done timescalled gt return done value done undefined valuegetter fn iteratorsymbol iterator return fn const renderablefunction makerenderable function b kinda irrelevant goes return b gt rendered version function function working return works renderablefunction function notworking return work renderablefunction reactdomrender documentgetelementbyid root expected behavior expect things render regardless whether child member array children versions react browser os affected issue work previous versions react yes worked react suggested solution fairly confident issue array children case getiteratorfn call within statement whereas original reconcilechildfibers puts getiteratorfn call outside mistaken simple fix would move curly brace lines wink happy complete test given little direction like test go thanks", "num": "11396", "d": "10/2017"}, {"title": "occams software", "body": "reasonably familiar react coder looking simple template image oriented app downloaded reviewedhackedplayed many examples section useful notice something felt worth mentioning perhaps alone find many files confusing trying figure code works perhaps hangover java trained engineers bringing coding style javascript really wish party nice emoji search app good example one consolidates files one file one make version clear readable easily understood fewer lines code code modules wade figure code works actually thought impossible impossible character character lines full use monitor easy mentioning react seems particularly sprawling framework could bit grooming demo fb react single page demo less anyone else agree would like propose section examples called full app snippets something equally silly us get directory vertigo easily sometimes reminds sitting back car reading book windy road", "num": "11394", "d": "10/2017"}, {"title": "feature assign multiple jsx attributes value", "body": "would like propose feature going keep real simple often times like similar multiple variable assignment javascript good idea bad idea", "num": "11393", "d": "10/2017"}, {"title": "calling setstate inside requestanimationframe loop causes leak", "body": "want request feature report bug bug current behavior component implements loop calls inside endlessly create listeners page shown picture chrome developer tools understand react uses raf reconciliation algorithm running multiple raf work without producing behavior understanding raf callbacks appended next frame callstack current behavior bug please provide steps reproduce possible minimal demo problem minimal code required trigger behavior profiling fiddle produce result previous picture expected behavior react behavior happen running code produce unwanted listeners seen picture versions react browser os affected issue work previous versions react tested react ubuntu chrome behavior happen previous versions react", "num": "11392", "d": "10/2017"}, {"title": "createportal support option stop propagation events react tree", "body": "want request feature report bug feature also bug cause new api breaks old current behavior stop events propagation portal react tree ancestors layers mechanism modalspopovers completely broken example dropdown button click click opens popover also want close popover clicking button createportal click inside popover fires click button closing use stoppropagation simple case tons cases need use stoppropagation also stop events expected behavior createportal option stop synthetic events propagation react tree without manually stopping every event think", "num": "11387", "d": "10/2017"}, {"title": "please simplify component event binding", "body": "request feature class toggle extends reactcomponent constructor props super props thisstate istoggleon true handleclick simple like class toggle extends reactcomponent constructor props super props thisstate istoggleon true event register like spring handleclick", "num": "11384", "d": "10/2017"}, {"title": "chain dependency causes warnings createreactclass", "body": "want request feature report bug potential bug current behavior render react app produces warning development mode current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react create new project uses create component build project library minify js assets create another project include dependency create another react component use bundle production build create third project include dependency build react app uses warnings expected behavior warnings regarding third party dependency versions react browser os affected issue work previous versions react react version one quick example installing dependency create react app uses component component implements uses", "num": "11382", "d": "10/2017"}, {"title": "show better warning accidentally returning constructor", "body": "based conversation vjeux wrote instead error super confusing told render defined component nt make sense since returned fix show different message gave us something without method", "num": "11381", "d": "10/2017"}, {"title": "ondrop breaks onselect event", "body": "want request feature report bug bug current behavior event fired inside editable element input textarea contenteditable event element longer fire changing selection using keyboard see gif onselect event gets called time move cursor around using arrow keys event fired longer fire move cursor around also using keys jsfiddle used record video expected behavior event always fire selection changes versions react browser os affected issue work previous versions react react chrome", "num": "11379", "d": "10/2017"}, {"title": "separate rendertostring rendertonodestream", "body": "currently possible run rendertostring client reactdomserver imports nodejs fs package would nice could still support rendertostring client", "num": "11377", "d": "10/2017"}, {"title": "reactchildren support portals", "body": "nt think currently checked probably treat elements", "num": "11373", "d": "10/2017"}, {"title": "get right enativeeventcurrenttarget use drag api", "body": "component looks like js handledrop e gt consolelog drop enativeeventcurrenttarget ecurrenttarget render return panellayerview thisstatedragover panellayerviewdragover ondragenter thishandledragover ondragover thishandledragover ondragleave thishandledragleave ondrop thishandledrop gt thispropschildren drag element set draggable true component get console message add listener dnd operation docbodyi tried find problem please help lookthanks ahead", "num": "11370", "d": "10/2017"}, {"title": "react recognize property dom elements", "body": "property definition yet recognized react though property relieves pain deal browsers support date inputs nt former require property form latter require nicely formatted date eg since user see exactly react wo nt even allow conjunction though proclaim machine readable format used browsers support date input alternatively support date passed property use always put nicely formatted date property pain relieved also react allow format property case indicated browser support still lacky best even avant garde browsers hence urgent issue react get relevant though herein duly noted", "num": "11369", "d": "10/2017"}, {"title": "add way opt user timing api calls", "body": "want request feature report bug bug feature dont know current behavior building dev environment performance timeline measures appear default ie without query string described bug way disable perf measures need way clear timeline focus custom perf measures", "num": "11366", "d": "10/2017"}, {"title": "fix coverage reporting", "body": "reason coverall says master pointing commit makes sense probably bug either reporting side removed badge readme", "num": "11363", "d": "10/2017"}, {"title": "npm recognized internal external command", "body": "want request feature report bug bug installation issue first time use react current behavior create app refered guide npm recognized internal external added node enviornment variables user variables system variables os win node version npm version", "num": "11358", "d": "10/2017"}, {"title": "bug onmouseevent nt exsit canvas", "body": "want report bug use onmousemove event canvas ca nt get mouseevent get proxy use addeventlistener get mouseevent test code import react component react class canvascolor extends component constructor super thiscolor ffffff componentdidmount thiscontext documentqueryselector canvas thisctx thiscontextgetcontext thisrendercanvas getcolor e gt consolelog e etarget const x elayerx const elayery const data thisctxgetimagedata x data parsefloat data thiscolor rgba datajoin consolelog thiscolor rendercanvas gt const imagesource documentqueryselector img thiscontextwidth imagesourcewidth thiscontextheight imagesourceheight thiscontextstyleposition absolute thiscontextstylezindex thiscontextstyletop thisctxdrawimage imagesource imagesourcewidth imagesourceheight onmousemove e gt thisgetcolor e render return", "num": "11357", "d": "10/2017"}, {"title": "lineargradient produces server side rendering warning", "body": "report bug server side rendering warning using svgs react current behavior get following warning using svg tag lineargradient attribute one components since server side warning reproduced warning repo simple example svg tag steps reproduce clone repo visit browser open javascript console see warning expected behavior expected behaviour warning server side rendering like none rendering client side worked react tested branch repo", "num": "11354", "d": "10/2017"}, {"title": "error boundary stack traces show components unknown", "body": "want request feature report bug bug unless missed something required support current behavior error boundary component stack traces show every component name current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react trigger error catch error boundary observe string shingo yamazaki codepen demo reproduce issue expected behavior versions react browser os affected issue work previous versions react react windows na", "num": "11353", "d": "10/2017"}, {"title": "invariants nt error codes yet missing production builds", "body": "see comment verified introduced regression", "num": "11348", "d": "10/2017"}, {"title": "rfc plan custom element attributesproperties react", "body": "meant address doc outlines pros cons various approaches react could use handle attributes properties custom elements tocsummary background proposals option set properties pros easy understandimplement avoids conflict future global attributes takes advantage custom element upgrade custom elements treated like react component cons possibly breaking change need ref set attribute clear serverside rendering would work option propertiesifavailable pros nonbreaking change cons developers need understand heuristic falling back attributes may conflict future globals option differentiate properties sigil pros nonbreaking change developers optin similar libraries handle attributesproperties system explicit cons new syntax clear serverside rendering would work option add attributes object pros system explicit extending syntax may also solve issues event handling cons new syntax may breaking change may larger change previous proposals option api consuming custom elements pros system explicit nonbreaking change idiomatic react cons could lot work complex component may bloat bundle size config needs keep pace component background react tries pass data custom element always using html attributes attributes must serialized strings approach creates problems data passed object array scenario end something like workaround use manually set property workaround feels bit unnecessary majority custom elements shipped today written libraries automatically generate javascript properties back exposed attributes anyone handauthoring vanilla custom element encouraged follow practice well like ideally see runtime communication custom elements react use javascript properties default doc outlines proposals react could updated make happen proposals option set properties rather try decide property attribute set react could always set properties custom elements react would check see property exists element beforehand example code would result react setting property element equal value camelcased property names react could use style uses today properties like pros easy understandimplement model simple explicit dovetails react javascriptcentric api dom element created libraries like polymer skate automatically generate properties back exposed attributes elements work approach developers handauthoring vanilla components encouraged back attributes properties mirrors modern ie oddballs like elements etc implemented avoids conflict future global attributes react sets attribute custom element always risk future version html ship similarly named attribute break things concern discussed spec authors clear solution problem avoiding attributes entirely except developer explicitly sets one using may sidestep issue browsers come better solution takes advantage custom element upgrade custom elements lazily upgraded page prpl patterns rely technique upgrade process custom element access properties passed properties set definition use render initial state custom elements treated like react component react components pass data one another already use properties would make custom elements behave way cons possibly breaking change developer handauthoring vanilla custom elements attributes api need update code app break fix would use set attribute explained need ref set attribute changing behavior properties preferred means developers need use order explicitly set attribute custom element reversal current behavior developers need order set property since developers rarely need set attributes custom elements seems like reasonable tradeoff clear serverside rendering would work clear model would map serverside rendering custom elements react could assume properties map similarly named attributes attempt set server far bulletproof would possibly require heuristic things like camelcased properties dashcased attributes option propertiesifavailable runtime react could attempt detect property present custom element property present react use otherwise fallback setting attribute model preact uses deal custom elements pseudocode implementation possible steps element defined property react use element undefined property react trying pass primitive data stringnumberboolean use attribute alternative warn set element undefined property react trying pass objectarray set property someattr object object useful alternative warn set element rendered server react trying pass stringnumberboolean use attribute element rendered server react trying pass objectarray anything pros nonbreaking change possible create custom element uses attributes interface authoring style encouraged may happen regardless custom element author relying behavior change would nonbreaking cons developers need understand heuristic developers might confused react sets attribute instead property depending chosen load element falling back attributes may conflict future globals sebastian raised concern using check existence property custom element might accidentally detect property superclass htmlelement also potential conflicts global attributes discussed previously doc option differentiate properties sigil react could continue setting attributes custom elements provide sigil developers could use explicitly set properties instead similar approach used glimmerjs glimmer example example sigil indicates pass data custom element using properties serialized attribute string react components already pass data one another using properties would need use sigil although would work would redundant instead would primarily used explicit instruction pass data custom element using javascript properties ht developit preact suggesting approach pros nonbreaking change developers optin preexisting react custom element apps would continue work exactly developers could choose wanted update code use new sigil style similar libraries handle attributesproperties similar glimmer angular vue use modifiers differentiate attributes properties vue example angular example system explicit developers tell react exactly want instead relying heuristic like propertiesifavailable approach cons new syntax developers need taught use needs thoroughly tested make sure backwards compatible clear serverside rendering would work sigil switch using similarly named attribute option add attributes object react could add additional syntax lets authors explicitly pass data attributes developers use attributes object data passed using javascript properties example idea originally proposed treshugart author skatejs implemented val library pros system explicit developers tell react exactly want instead relying heuristic like propertiesifavailable approach extending syntax may also solve issues event handling note outside scope document maybe worth mentioning issue requests react bypass synthetic event system declarative event handlers added custom elements custom element event names arbitrary strings means capitalized fashion bypass synthetic event system today also mean needing come heuristic mapping event names jsx however syntax extended allow attributes could also extended allow events well model variable name used event name heuristic needed cons new syntax developers need taught use needs thoroughly tested make sure backwards compatible may breaking change components already rely properties named could break may larger change previous proposals react may easier make incremental change like one previous proposals position proposal something take consideration later bigger refactor option api consuming custom elements proposal offered sophiebits gaearon react team react could create new api consuming custom elements maps element behavior configuration object pseudocode example code returns proxy component knows pass data custom element depending configuration provide would use proxy component app instead using custom element directly example usage pros system explicit developers tell react exact behavior want nonbreaking change developers optin using object continue using current system idiomatic react change require new jsx syntax feels like apis react example proptypes even though moved package somewhat similar approach cons could lot work complex component polymer paperinput element properties would produce large config developers using lot custom elements app may equal lot configs need write may bloat bundle size related point custom element class incurs cost definition config object size note sure true someone familiar react build process could verify config needs keep pace component every time component minor version revision adds new property config need updated well difficult add maintenance maybe configs generated source less burden may mean needing create new tool generate configs web component library cc sebmarkbage gaearon developit treshugart justinfagnani", "num": "11347", "d": "10/2017"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11345", "d": "10/2017"}, {"title": "unexpected rerenders production enviroment", "body": "want request feature report bug report bug current behavior react making unexpected rerenders used along happens production enviroment current behavior bug please provide steps reproduce possible minimal demo problem application running development mode setting key prop properly thus making rerenders route calls inside component app production mode appending new value existing key resulting rerender expected behavior application production mode setting proper key value rerendering versions react browser os affected issue work previous versions react nt believe browser problem issue safari chrome tested react react tried isolate issue much could help please let know", "num": "11344", "d": "10/2017"}, {"title": "support onend svg event", "body": "hi trying use warning unknown event handler property ignored workaround", "num": "11342", "d": "10/2017"}, {"title": "hydration breaks html class", "body": "updated application react app using reactresponsive since updated react bugs related invalid html outputted react hydration server generates html desktop client mobile rendering mismatch previously causing full rerender perfect worked react supposed notrerender everything mismatching parts run html invalid mix sliced html generated server desktop mode html served server hydration html generated client without ssr normal mobile mode html rendered react disable ssr wrong html generated hydration client mobile mode invalid html rendered react tries hydrate expected html versions chrome react", "num": "11336", "d": "10/2017"}, {"title": "iframe content getting initial document differs actual result", "body": "want request feature report bug bug sure react browser current behavior made static iframe display url run script iframe parent window works fine second refresh entire page every time load body innerhtml differs innerhtml supposed correct rendered html effected javascript within iframe page script shows html initial html loaded behavious watched pausing script even several time calling reload iframe problem persists fixed entire page reloads parent window current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react something like sorry know make import work fiddle expected behavior versions react browser os affected issue work previous versions react chrome macos high siera", "num": "11335", "d": "10/2017"}, {"title": "componentdidcatch getting called error promise", "body": "per new react release doc says react prints errors occurred rendering console development even application accidentally swallows parent component child component triggered error block promise call catch method promise componentdidcatch parent getting called sure whether expected behaviour jsfiddle", "num": "11334", "d": "10/2017"}, {"title": "consider publishing external requestidlecallback polyfill", "body": "require high fidelity requestidlecallback polyfill pretty much always fallback internal fallback still means others ship nt cooperating even fb two builtin one yet implementing option since want start using probably become even interesting priority queue option lands sufficient us since start polyfilling option even native requestidlecallback implementations", "num": "11330", "d": "10/2017"}, {"title": "get react full flow coverage", "body": "dialog gaeron want update typings package react think need help community", "num": "11328", "d": "10/2017"}, {"title": "release tool statistical perf analysis replacement reactperf", "body": "want request feature report bug feature current behavior na expected behavior great react integrates timeline browsers dev tools helpful cases trying fix performance specific thing however miss perf tool previous versions could find issue tracking reimplementation tool great perf tool covered well timeline integration easily see components render needlessly therefore easily eliminated scu impact give easily see collective render time component might example component renders fast many instances thus contribute significant render time anyway give overview components slow fast render slow components flamegraph shows find specific scenarios much detail distract basically wasted exclusive inclusive tables dom table feel much better represented timeline integration versions react browser os affected issue work previous versions react yes perf addon good", "num": "11326", "d": "10/2017"}, {"title": "webpack config docs request aka", "body": "like", "num": "11324", "d": "10/2017"}, {"title": "templates apart jsx non programmatic situations", "body": "view please take look examples hello world react gt appjsx hello world vue gt appvue identical nt yes two different paradigm hey expressing things way taking benefits virtual dom feature request like vue supports jsx programmatic situations think react also support templates non programmatic situations also imagine trying create website based existing theme purchased changing jsx literally feel like sticking knife eyeballs templates existing html works please also note programmatic situations low use case non programmatic situations high use case", "num": "11322", "d": "10/2017"}, {"title": "jsx alternative namespaced tagsxml", "body": "currently working template engine uses namespaced xml tags jsx support xml namespaced tags actively maintained alternative someone point right place question", "num": "11321", "d": "10/2017"}, {"title": "strict ordering commitupdate", "body": "exactly order calls related structure tree note question asking example following several ways could rendered strict relationship assuming nt know technical terms difference though feel free use look em examples sorry using madeup terms example bottomtotop etc example bottomtotopperlevel etc example toptobottom etc example toptobottomperlevel etc also prompts another related question commitupdate element guaranteed happen children adjusted", "num": "11319", "d": "10/2017"}, {"title": "remove warnings unsupported style properties", "body": "safelist blocklist basically react seemingly allows write jsx reactdomrender documentgetelementbyid root renders style properly warnings perhaps could remove warnings writing pure react use names reason hoping remove warnings bit lenient little python wrapper uses react jupyternteract frontends", "num": "11315", "d": "10/2017"}, {"title": "ssr result render browser incorrectly", "body": "want request feature report bug bug current behavior dangerouslysetinnerhtml render html string real document well server side render environment return rendered html right browser side render sanitize html tags content example html string browser rendering difference tag removed normal behavior react sure ssr right demo expected behavior browser got ssr html render tags removed versions react browser os affected issue work previous versions react react macos try done previous version react", "num": "11314", "d": "10/2017"}, {"title": "adding support component factories createelement etc", "body": "problem let assume implementing component suite providing dozen superfancy readytouse components react users however know whether users library preferring jsx normal javascript nonjsx case users surely want write instead far nonjsx users providing component component factory seems better solution whereas jsx users would surely prefer component class createelement support component factories yet convenient component suite provider decide whether components shall provided factories classes respectively render functions case stateless functional components whether shehe always provide versions feature request promote component factories firstclass citizens react world instead downgrading legacy currently planned make sure functions like createelement etc support component factories level component classes respectively render functions case stateless functional components supported currently btw access component factory also access component classfunction via factorytype considered deprecated react team know factorytype seems helpful little example many thanks advance", "num": "11313", "d": "10/2017"}, {"title": "example links reactreconciler readme broken", "body": "reporting since says links break please file issue fix intentionally link latest versions since api still evolving knowing place uptodate examples would help lot issue template really fit trying follow anyway want request feature report bug bug readme current behavior links reconciler configuration examples links broken current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react visit reactreconcilerreadmemd expected behavior correct links wanted fix pr could find appropriate replacement reactnative versions react browser os affected issue work previous versions react issue exists branch", "num": "11310", "d": "10/2017"}, {"title": "add property", "body": "want request feature report bug improvement current behavior synthetickeyboardevent currently support property mdn nice want write keyspecific inputspecific dependent layout modifier keys handling expected behavior already exposes property property well currently want use must access versions react browser os affected issue work previous versions react affects react earlier assume", "num": "11306", "d": "10/2017"}, {"title": "express tests via public api", "body": "great contribution opportunity need rewrite unit tests terms public api means import npm entry points like etc internal modules like bad requires already marked todo tests miss help find unclaimed test files comment issue want take particular unit test file name submit pr rewrites test use public apis instead step requires thinking use previous examples rewrote tests public api inspiration example generally need think behavior testing actually reproduces react app test rare cases may involve exposing api public need discuss separately hesitate start discussion figure rewrite particular test public api comment brainstorm full list tests need change may simple oneliner changes may involve bit rewrite may require rewriting scratch may even impossible research leading conclusion still valuable love know try let us know update tests taken subscribe issue might free future somebody time finish work comment test becomes available try taken madeinfree see taken accordeiro taken reznord x taken gordyd x taken anushreesubramani x taken dphurley x taken skiritsis x taken timjacobi x taken x taken jeremenichelli x x taken jeremenichelli x taken audyodi x taken gordyd x taken enapupe x taken sadpandabear x taken minerado x taken silvestrijonathan x taken x taken smaniotto x taken timjacobi x taken douglasgimli x taken ethanarrowood x taken accordeiro x taken jstejada x taken adsonpleal firsttime contributor refer contribution instructions clear fix specific test comment tried brainstorm gave test please post findings comment decide next fine find time figure try help maybe somebody else pick later", "num": "11299", "d": "10/2017"}, {"title": "react spread operator still official documentation", "body": "bug documentation current behavior react spread operator removed react still documentation expected behavior word caution included include react maybe also add ways spreading props versions react browser os affected issue work previous versions react react worked previous releases", "num": "11293", "d": "10/2017"}, {"title": "branch tag type checking", "body": "follow neat also means sometimes comparing strings numberssymbols could potentially deopt type hints function might actually better check childtag ensure hostcomponent fragment compare type separate branches fact might already bug incase ever add strings fibertype fibers hostcomponent checking tags type comparison branches ensure nt possible bugs well optimize type hints monomorphic functions", "num": "11290", "d": "10/2017"}, {"title": "make invalid prop type warnings specific falsy", "body": "common pattern however condition correctly warns used instead could suggest specifically warning longer term alternative use proposed concise operator", "num": "11289", "d": "10/2017"}, {"title": "add", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11287", "d": "10/2017"}, {"title": "react release script followup", "body": "x verify safe run including extracting errors see comment thread context pr x decide mechanism relax peer dependency constraints see context pr", "num": "11285", "d": "10/2017"}, {"title": "jest watching mode seems unexpectedly cache sources", "body": "probably configuration issue transitioning workspaces restart watcher see changes sometimes", "num": "11283", "d": "10/2017"}, {"title": "react test utils nt bundle copy reconciler", "body": "way currently set incorrect downright broken blow faces later specifically currently uses brings copy parts reconciler however also depends example would give accurate results nt bump use stateless fix forbidding bundle reconciler secret stuff exposed work could separate stateless helper safe share seems easier", "num": "11280", "d": "10/2017"}, {"title": "react test renderer peer dependency keeps getting bumped", "body": "noticed reacttestrenderer peer dependency react gets bumped every version update least happens version still required could peer dependency version stay even versions package get bumped say ask makes hard libraries pull reacttestrenderer end users use directly nt pull package never use directly specific example mind enzyme version peer dependency dependency react installed enzyme tries install latest reacttestrenderer pull requires satisfy recently made test renderer peer dependency annoying user library manually install package nt use directly changed regular dependency noticing peer dependency testrenderer react gets bumped every version change causes problem possible leave peer dependency within major version least going forward another way library pull test renderer without forcing user", "num": "11278", "d": "10/2017"}, {"title": "latest version react deleted content asproptypes provided allow users decide whether delete contain contents", "body": "example react releases new version may require two new versions one containing deleted content included", "num": "11277", "d": "10/2017"}, {"title": "yarn workspaces followup", "body": "soon x package called weird maybe rename clarify difference x better strategy shared code currently pile code without particular structure import directly haste master though least worse might want tighten little bit future maybe firstclass entry points need clear code duplicated renderers using modules x server nt depend reconciler modules noticed depends seems like always miss warnings server maybe depend shared file instead regardless already issue master regression x find solid way avoid jest skipping modules current hack gross hack otherwise jest skips code thinking need compiled resolved hack dangerous cause false positives thirdparty code specifically check resolved symlink path jest transformer still means add package whose name start babeled tests add another exceptional case live hack little bit since plan publish packages start near future file issue jest though come better solution update fixed via later x get rid flag bundle config x rename entry points intuitive eg react entry point etc x make internal folder structure sensible x move requires around prettier x fix relative requires tests x get rid bundle config x bundling prod bundle x general remove anything bundle config determined using package folder x fix gross hack forbid importing packages move flow types odd packagelevel deps must top level split bundle config per package autodiscover packages bundling version check autogenerate simple entry point files npm exception move packages", "num": "11275", "d": "10/2017"}, {"title": "redirect first doc page", "body": "want request feature report bug bugbroken link thinking react section docs line current behavior broken link sends user page found current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior go appropriate link need help executing step versions react browser os affected issue work previous versions react", "num": "11274", "d": "10/2017"}, {"title": "dangerouslysetinnerhtml working ie", "body": "hello today spotted bug setting inner html element using property browser raise error use ssr actual html received server good probably problem func code string contains html", "num": "11271", "d": "10/2017"}, {"title": "reactdomhydrate falsely warns text content mismatch", "body": "want request feature report bug bug current behavior javascript function foo return foo function test return bar hydration serverside rendered produces following warning expected behavior warning versions react browser os affected issue work previous versions react react reactdom", "num": "11268", "d": "10/2017"}, {"title": "way set svg transformorigin attribute", "body": "list supported svg attributes actually supported dom current behavior attribute ignored warning shown console property supported possible set another error attribute valid course set dom makes spinner look correct expected behavior attribute set tag", "num": "11265", "d": "10/2017"}, {"title": "new way bind event handler function", "body": "currently way use event handlers functional components without performance degradation eg unnecessary function recreations bind arrow functions case render new handler created also react need perform bookkeeping remove previous handler dom element add new handler ok event delegation system react touch dom elements replace handler somewhere internal structure events nt bubble take noticeable time application sure change class components solve problem bind handlers component created want use functional components application came new fastest method binding handlers actually preform binding reason binding function event handler need access current component props current component state another way get props state component react describe docs yes access props state current component without unnecessary functions recreations render function node node return nodetext function onclick e const node getprops e nodeparentremovechild node function getprops e return etarget objectkeys etarget filter k gt kindexof reactinternalinstance debugownermemoizedprops demo perform event delegations efficient way react need assign current vdomelement rendered dom element vdomelement link actual owner component get props state react concealed developers made suffer performance degradation also choosing problem many articles advices recommend investigate rule bind handlers render function many solutions exist use bind constructor use class field properties arrow functions use autobind decorators solution need even recreate handlers component instantiation like current solutions definitely fastest way highly suggest make api public make helper get current props state eventtarget", "num": "11263", "d": "10/2017"}, {"title": "ref set null every render", "body": "want request feature report bug possible bug current behavior ref callbacks always passed subsequently passed reference current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react attached code sample following life cycle functions ref callbacks executed nullrefexamplezip initial render app render myapp render myportal render myapp ref set myapp myportal ref set myportal second render app update app render myapp update myapp render myportal update myportal render myapp ref set null myportal ref set null myapp update myapp ref set myapp myportal update myportal ref set myportal app update expected behavior nt expecting refs set null render although gets set shortly thereafter expected behaviour nt see documentation versions react browser os affected issue work previous versions react react macos chrome amp safari", "num": "11258", "d": "10/2017"}, {"title": "apply files npm whitelist build time", "body": "make build step apply logic npm whitelisting field way issues like would get caught early", "num": "11257", "d": "10/2017"}, {"title": "reactart npm missing lib folder", "body": "seems like intended public apis published npm folder whitelist", "num": "11254", "d": "10/2017"}, {"title": "uncaught typeerror thisupdaterenqueuecallback function", "body": "bug stack trace", "num": "11253", "d": "10/2017"}, {"title": "react server side rendering clientserver mismatched html differences", "body": "want request feature report bug bug current behavior migrating react helped us discover bug code safariios devices sort functionality would cause result return different order compared node server response chromefirefox rendered component component tag wrapping optional image elements react components completely rerendered overriding tag new url client react client component rerendered everything inside nt change wrapped url lead links leading peoples incorrect locations hopefully makes sense current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react nt know good way creating fiddle however best answer questions expected behavior would expected client side html overridden server side html react completely rerender component versions react browser os affected issue work previous versions react functionally different react react sure listed intended changes react raising make aware incase issue", "num": "11248", "d": "10/2017"}, {"title": "create property nonextensible object", "body": "want request feature report bug bug current behavior error thrown ie error message states create property nonextensible object originates following location file webpack nodemodulesreactdomlibpooledclassjs line expected behavior errors versions react browser os affected issue work previous versions react version number reactdom used work error messages started implemented dllplugin webpack involved outputting dependencies single file sure would problem though", "num": "11240", "d": "10/2017"}, {"title": "combine themebreakpoints react", "body": "need configuration app resposnive example used component searchicon materialui want adjust screen take consideration make margin also second option using react google chrome browser", "num": "11238", "d": "10/2017"}, {"title": "test", "body": "test", "num": "11237", "d": "10/2017"}, {"title": "shallow test renderer calls shouldcomponentupdate forceupdate", "body": "extra guard clause calling means always calls block even forced rerender tests example breaks shallow rendering enzyme using mobx observables minimal test case javascript import react react import shallowrenderer reacttestrenderershallow const renderer new shallowrenderer class testcomponent extends reactcomponent render return describe forceupdate gt call shouldcomponentupdate gt let called testcomponentprototypeshouldcomponentupdate gt called const component rendererrender rendererinstanceforceupdate expect called tobe lt throws called", "num": "11236", "d": "10/2017"}, {"title": "react props available arguments set html tag", "body": "want request feature report bug bug current behavior props passed dom element available react via thispropsattribute current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react issue visible expected behavior attribute passed html tag passed react props returns html tag containing world inside thispropsname props empty inside app react element versions react browser os affected issue work previous versions react browsers tested react", "num": "11234", "d": "10/2017"}, {"title": "request release react based mit license", "body": "updated react license bsd patent license mit license could release thank", "num": "11233", "d": "10/2017"}, {"title": "keyup event fired firefox android", "body": "want request feature report bug bug current behavior keyup event fired using vanilla js issue str android smartphone ensure autocompletion autocorrect enabled open firefox android works desktop chrome android type letter input field expected behavior alphanumeric char typed alert displayed versions react browser os affected issue work previous versions react version used react browser firefox android work previous versions react nt know", "num": "11231", "d": "10/2017"}, {"title": "reactiveformsmodule like react", "body": "struggling forms react reduxform library library arrive reactive forms lot bugs reactive form control field state nice way group fields validations asyn validations validator librarary included library react ecosystem better build library templates css another libraries lot bugs beta mode new versions example materialui compatible react frustating devine future solve important bugs", "num": "11229", "d": "10/2017"}, {"title": "issue dangerouslysetinnerhtml markup rehydration", "body": "want request feature report bug bug current behavior trying rehydrate markup argument optional error thrown happens component dangerouslysetinnerhtml prop example expected behavior error thrown versions react browser os affected issue work previous versions react react version browser", "num": "11228", "d": "10/2017"}, {"title": "async componentwillreceiveprops allow state update", "body": "want request feature report bug feature current behavior almost immediate rerender due called unless says otherwise expected behavior new props cause async call soon going update state anyway wo nt cool react might well wait async call thing calls one render instead two potential solution react see returns defers rerender", "num": "11224", "d": "10/2017"}, {"title": "reactwarningkeys thrown components returned iterator", "body": "want request feature report bug bug current behavior steps reproduce see expected behavior key warning versions react affects chrome macos warnings react solutions fix key warning edit docs explain needed react element dynamic props changed every render elements returned iterator", "num": "11222", "d": "10/2017"}, {"title": "code snippet docs unexpectedly throws", "body": "bug report docs present example code snippet crashes js process see particular notice highlighted parts code snippet first sentence snipppet reads react call ref callback dom element component mounts call null unmounts ref callback called null callback moment user clicks second input button method since null really yet method throw would suggest adding little guard code snippet people copypaste without worry replacing something like found docs react", "num": "11221", "d": "10/2017"}, {"title": "add flow coverage renderer fixture use maintained renderer tests", "body": "renderer package contains fixture updated every time change apis however covered flow full test coverage tedious make sure get exactly right messed making changes api also means updating lot renderers point would nice fixture could built top noop renderer something cc iamdustan gaearon", "num": "11220", "d": "10/2017"}, {"title": "way input rendering checking strategy reactdom", "body": "sure appropriate way ask like opinion notice use often code wondering way build pure function components apply logic shallow comparison rendering rendering component using reactdom reason something like guys think", "num": "11218", "d": "10/2017"}, {"title": "reactaddonstestutils needs older version reactdom", "body": "installed latest reactaddonstestutils latest npm also latest version reactdom also npm reactdom dependency would expect would trick however npm sends warnings really need older version reactdom able use testutils ok use latest reactdom version using react reactdom reactaddonstestutils", "num": "11214", "d": "10/2017"}, {"title": "use native event supported", "body": "want request feature report bug improvement current behavior right synthetic event created based two events webkit fallback days chrome safari opera spec event available actually fires includes spec properties extremely helpful tells whether event inserting text replacing text inserting line break etc tells input taking place dom right information nt exposed even browser supports checked expected behavior instead react treat slightlypreferred fallback native support add true goal end fallback stack guarantees always spec relevant information associated event extra properties critical situations want prevent default browser behavior firing perform logic internal model instead looking slate without extra information fallback hackier event occur trying parse dom change rerendering remove etc want avoid modern browsers results reduced performance another situation fixes spellcheck right nt trigger react handler even though modern browsers fire event listened right", "num": "11211", "d": "10/2017"}, {"title": "vs push", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior versions react browser os affected issue work previous versions react", "num": "11209", "d": "10/2017"}, {"title": "investigate nested update overflow caused coalescing", "body": "internal issue manifested infinite nested update loop triggering invariant trueadm investigated introduced fixed however failing tests related even though removed coalescing implementation feel like need investigate happened add regression test prevent issue occurring future might also valuable think additional information surface error least development example component names last ten fibers scheduled update", "num": "11207", "d": "10/2017"}, {"title": "react component passed children component nullifies effect purecomponent", "body": "nt know would come feature request bug expected things handled differently shouldcomponentupdate current behaviour component renders b passes c children b rerenders state change part passed b c basically nothing changes subtree b b still always rerenders fiddle reproduce issue click c make state change b rerenders effect much cases children passed level deep cause unnecessary rerenders previous versions question observations posted feel free answer expected handled different way", "num": "11203", "d": "10/2017"}, {"title": "react error decoder page broken", "body": "example following decode page broken described", "num": "11201", "d": "10/2017"}, {"title": "docs older versions react unavailable", "body": "want request feature report bug bug current behavior documentation older versions react deleted react documentation website shows documentation current version react current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior documentation previous versions react available somewhere ideally version picker top page select version react working like pythonorg example versions react browser os affected issue work previous versions react every version react latest", "num": "11199", "d": "10/2017"}, {"title": "automated release script", "body": "create command line tool automate release steps outlined", "num": "11198", "d": "10/2017"}, {"title": "reacttestrenderer breaks trying use internal property", "body": "using version get sample test case really error thrown fail testspecjs test suite failed run offending code var reactinstancemap var reactinternals reactsecretinternalsdonotuseoryouwillbefired var reactglobalsharedstate reactcurrentowner reactinternalsreactcurrentowner seems like maybe change", "num": "11197", "d": "10/2017"}, {"title": "add warnings adding functions components state", "body": "want request feature report bug feature hey wanted add type check state development order educate saw couple times codebase saves functions even components state checking codebase first time blush saw check method allow functions part state would say may wrong could warn developer well nt see case function live inside state saw lot posts stakoverflow putting components functions redux global state might conception want create pr order address warning development think", "num": "11196", "d": "10/2017"}, {"title": "onmouseenter lost hovering children", "body": "want request feature report bug bug current behavior event triggered element event lost mouse comes child rendered based event nt happen react hovering newly created child would persist event current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react react expected behavior react code reproduce hover anywhere red menu opens try hover anywhere blue background expected behavior hovering newly created child element persist event versions react browser os affected issue work previous versions react testes react chromelinux latest ubuntu mate tested anywhere else", "num": "11191", "d": "10/2017"}, {"title": "use testrenderer", "body": "want request feature report bug nt know current behavior codes javascript setupjs init dom const jsdom require jsdom const jsdom new jsdom const window jsdom function copyprops src target const props objectgetownpropertynames src filter prop gt typeof target prop undefined map prop gt objectgetownpropertydescriptor src prop objectdefineproperties target props globalwindow window globaldocument windowdocument globalnavigator useragent nodejs copyprops window global javascript import react react import expect chai import testrenderer reacttestrenderer import setup const testrenderer testrenderercreate test consolelog testrendererroot consolelog testrenderertojson consolelog testrenderertotree packagejson javascript babel options babel plugins addmoduleexports presets env react npm test test mocha require babelcoreregister console show current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior like versions react browser os affected issue work previous versions react jsdom mocha use mocha jest babelcore react reactdom reacttestrenderer chai os npm", "num": "11190", "d": "10/2017"}, {"title": "need hook hydration mismatch", "body": "want request feature report bug feature current behavior react attribute removed server rendered markup previous versions used attribute beacon checksum mismatches log servers notified production issues attribute removed mechanism determine checksum mismatch occurred aware checksum issues longer cause entire dom rerender however still important know occur typical use case display ads autoplay video want know ad gets rerendered double counted autoplay video interrupted due react rerendering dom related bugsrequests ability debug checksums production expected behavior solution necessarily need reintroduce checksum attribute could event hook callback applications leverage handle checksum issues versions react browser os affected issue work previous versions react react browsers worked lt react", "num": "11189", "d": "10/2017"}, {"title": "update performance optimization documentation reflect react", "body": "want request feature report bug bug date documentation current behavior current react documentation talks flag however since react appears behavior new default development builds shinier output yay pull request seems became new normal expected behavior would expect first step suggesting add reactperf gets deleted would also expect screenshot reflect new improved output perhaps one screenshots gaearonspull request linked versions react browser os affected issue work previous versions react react happy make pull request expectation aligned projects", "num": "11185", "d": "10/2017"}, {"title": "compatible", "body": "bug feature used able use react great react able use property generate custom elements custom attributes could picked ie get many warning messages custom tag elements likewise seems certain attributes nt getting rendered either instance elements like get output without size attribute nt think react know tags hardcoded react got way react output custom tags without throwing warning messsages reintroduce attribute indicate custom tag custom attributes", "num": "11184", "d": "10/2017"}, {"title": "flowify reactpartialrendererjs", "body": "annotation start flowifying avoid bugs like iamdustan wan na take", "num": "11175", "d": "10/2017"}, {"title": "react render text area placeholder initially", "body": "bug current behavior windows text area placeholder rendering initially expected behavior placeholder visible initial render versions react browser os affected issue work previous versions react windows appears regression", "num": "11172", "d": "10/2017"}, {"title": "react use requestanimationframe default", "body": "consider following sample code pasted class extends reactcomponent private canrender boolean false private latestdata outputstats hit getting framerates like words seem limiter react correct slightly separate topic true animation things think would good simply wrap block guess really react question though since observablething could also capped via ticks", "num": "11171", "d": "10/2017"}, {"title": "react official site work chrome", "body": "react official site show white screen show error", "num": "11170", "d": "10/2017"}, {"title": "react mismatched html warning logged hydrating portals rendered documenthead", "body": "want request feature report bug bug current behavior rendering portal server causes react log warning unexpected markup hydrating server markup currently happens using reacthead current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react sure possible simulate jsfiddle since requires serverrendering access fairly minimal repro case reacthead example app clone run via following see react warning logged thoughts simpler way repro happy well expected behavior entirely possible usage react portals nt anticipated sure invalid use case would like get thoughts better approach currently reacthead besides warning moduleapp seems function exactly expected high level reacthead works serverrendering tags eg etc collected array rendertostring placed server template client serverrendered tags queryselected removed replaced reactdomcreateportal order support spa functionality issue reacthead versions react browser os affected issue work previous versions react react", "num": "11169", "d": "10/2017"}, {"title": "reacttestrenderer find method documented incorrectly", "body": "mismatch behavior method documentation claims find first descendant test instance test testinstance returns true fact throws error multiple descendant test instances way docs worded expected work like happy submit pr fixing like guidance whether docs incorrect implementation incorrect worth implementation wrapped seems likely docs incorrect ie intentional choice whoever wrote methods also happy go split two separate methods eg", "num": "11166", "d": "10/2017"}, {"title": "someone point react actually updates dom", "body": "want learn performance react trying get sense exactly react manipulates dom stepping source inspecting devtools profiler see finally called react triggers update dom understand reconciliation works looking actual mechanics read specific line code react appends new elements dom eg someone point right direction asked reactjs freenode nt get response looking thanks advance", "num": "11165", "d": "10/2017"}, {"title": "support srcobject attribute video element", "body": "want request feature report bug feature current behavior currently set srcobject video get error current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react another issue closed issue never resolved firefox deprecated using safari nt support expected behavior ability set video element common webrtc applications versions react browser os affected issue work previous versions react react", "num": "11163", "d": "10/2017"}, {"title": "background color issue", "body": "hi got issue background colors simple component rendering div tested crome safari firefox visible chrome size dark rectangle affected rendered div give background color", "num": "11162", "d": "10/2017"}, {"title": "shallow renderer subsequent calls inside discard previous ones", "body": "current behavior multiple calls last one works shallow renderer current behavior bug please provide steps reproduce possible minimal demo problem dom renderer correctly renders hello world test shallow renderer renders undefined world versions react browser os affected issue work previous versions react issue introduced react reason must lines replacing fix", "num": "11161", "d": "10/2017"}, {"title": "server rendering meta tags attributes non camelcase result warning", "body": "want request feature report bug bug current behavior server rendering srcset attributes used needed camelcased results change renders camelcased version remove warning also happens srcset etc current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior warning given versions react browser os affected issue work previous versions react previous versions react passed camelcase rendered case correctly either snake lowercase renders camelcase executed server using react happening latest chrome", "num": "11160", "d": "10/2017"}, {"title": "autofocus nt work ssr react", "body": "works client hydrated used implemented js special case nt cause commit effect scheduled call like question even bother implementing js anymore emit attribute ssr let browser take care", "num": "11159", "d": "10/2017"}, {"title": "typeerror read property create undefined using reacttestrenderer", "body": "want request feature report bug bug current behavior trying run simple jest snapshot test failing reacttestrenderer current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react import react react import header componentsheaderheadercontainer import renderer reacttestrenderer test header loaded correctly gt const component renderercreate let tree componenttojson expect tree tomatchsnapshot running jest throws following error header loaded correctly header loaded correctly expected behavior snpashot test pass versions react browser os affected issue work previous versions react reacttestrenderer react reactdom", "num": "11158", "d": "10/2017"}, {"title": "react expected server html contain matching", "body": "seems like putting end tag makes react think missing react warns compensates adding another one looks like bug another different issue", "num": "11155", "d": "10/2017"}, {"title": "onchange get executed react", "body": "want request feature report bug bug current behavior react onchange gets fire reproduced bug link current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior onchange get executed maany times select radio button versions react browser os affected issue work previous versions react", "num": "11154", "d": "10/2017"}, {"title": "onmouseenter triggered children react", "body": "hi issue triggered children component occurs react created codepen shows issue simplified structure component needs capture events trigger simple component waits image passed loaded displaying using created open console see triggered hovering normal behavior also hovering div supposed happen remove whole logic element works intended possible coding way nt appropriate look like bug anyway", "num": "11152", "d": "10/2017"}, {"title": "react missing global context", "body": "hey using internationalize component wrap app component provide translation whole app like inside intlprovider set translation context getchildcontext could access anywhere global context global context removed nt seen change breaking changes wrapping every component use translations intlprovider use thiscontext instead sounds like overkill better approach", "num": "11151", "d": "10/2017"}, {"title": "update props commitupdate", "body": "given instance contains object attempts update object result error since object frozen correct approach set new props instance commitupdate see art renderer example sets properties instance directly eg correct approach ability wrap changing properties container object", "num": "11150", "d": "10/2017"}, {"title": "react recognize prop dom element", "body": "versions react reactrouterdom reactrouterredux next test case server side client side steps reproduce error occurs first navigation client side", "num": "11147", "d": "10/2017"}, {"title": "link file json", "body": "demohtmltxt demodatajstxt want ask away take file json react js file name orb folder htdocsorbdemo demodatajs demodatajs take filejson return dont show localhost example file demodatajs windowdemo windowdemodata var data getdata stockvsjson var lt var j j lt datalength j windowdemodatapush data j function getdata return stockvsjson function return stockvsjson demohtml function refreshdata pgridwidgetrefreshdata windowstockvsjson edit code example file number", "num": "11146", "d": "10/2017"}, {"title": "react component updates dom nt", "body": "upgrading react noticed regression one apps navbar would rerender upon loginlogout verified consolelog statements dom would nt get corresponding updates abbreviated component question js class navbar extends reactcomponent render const isauthenticated thisprops return isauthenticated thisrenderauthenticatedmenu thisrenderunauthenticatedmenu renderauthenticatedmenu return lt adding key fixed renderunauthenticatedmenu return lt adding key fixed export default connect state gt isauthenticated stateauthisauthenticated routing staterouting navbar worked without requiring annotated keys react became necessary upgrading expected behavior indicative regression", "num": "11144", "d": "10/2017"}, {"title": "react amp bad ux amp scroll bug", "body": "react amp bad ux right menu bad ux left menu much better", "num": "11143", "d": "10/2017"}, {"title": "input type number onchange vs oninput", "body": "entering text eee onchange fired oninput tested react chrome firefox safari edge dom behavior react react onchange equivalent dom input event", "num": "11142", "d": "10/2017"}, {"title": "deduplicate update mounted mounting component warning", "body": "note anushreesubramani working please send prs similar anushreesubramani wan na take one well would need deduplicate based ownerstack info similar works", "num": "11140", "d": "10/2017"}, {"title": "infinite loop maximum update depth exceeds", "body": "want request feature report bug bug current behavior wrote component recreate warnings fix javascript class app extends component constructor super thisstate value null render thissetstate value test process found error came uncaught error maximum update depth exceeded happen component repeatedly calls setstate inside componentwillupdate componentdidupdate react limits number nested updates prevent infinite loops execution stop going infinite loop printing variants error one another screenshot reference current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react snippet given expected behavior nt infinite loop execution stop printing error versions react browser os affected issue work previous versions react react chrome ubuntu tested older versions react problem present", "num": "11136", "d": "10/2017"}, {"title": "dom test fixtures unable load react", "body": "far tell path umd version react changed makes impossible test latest version react test fixtures probably need add condition react loader change path certain version", "num": "11132", "d": "10/2017"}, {"title": "dom test fixtures add caveats range inputs unsupported things", "body": "confusing recall range input type supported invalidating test cases example test case verifies changing range slider arrow keys works expected however looks like standard input plan make test fixtures public wonder would worth adding caveat language marking test invalid certain browser maybe would annoying thought might nice collect opinion others", "num": "11131", "d": "10/2017"}, {"title": "website old docs link redirect", "body": "open link old documentation link redirect redirect current documentation url", "num": "11130", "d": "10/2017"}, {"title": "website jsx editor documentation need padding bottom", "body": "found every live jsx editor scroll", "num": "11129", "d": "10/2017"}, {"title": "react client side render nt update dom style comes ssr", "body": "want request feature report bug bug current behavior react clientsiderender problem update dom style update prop detail repo current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react created repo expected behavior update dom style correctly versions react browser os affected issue work previous versions react using chrome dev os x el capitan macintosh intel mac os x khtml like gecko react work previou version like", "num": "11128", "d": "10/2017"}, {"title": "missing docs transferring props jsx", "body": "noticed latest docs nt talk transferring props jsx rest properties really useful building reusable react components curious omitting documentation intentional would great understand good practice anymore otherwise would happy send pr adds back docs changes community want see overall think important info surface current docs", "num": "11124", "d": "10/2017"}, {"title": "react document breaking changes nt warn react", "body": "want request feature report bug bug current behavior path upgrading react simple docs minor exceptions app runs without warnings work cases found nt true longer declared never declared anyways never yelled amp found old component amp completely broken callback longer falsy would write write sloppy code never existed anyways worked react expected behavior adding things migration guide maybe reenabling support falsy callback versions react browser os affected issue work previous versions react react browsers worked react", "num": "11123", "d": "10/2017"}, {"title": "reconciler gone", "body": "question know intentional one able track index newremoved node going provide api important able integrate correctly thirdparty code example pixijs threejs addchildremovechildaddchildat apis important able tell node imagine something like could beneficial even terminal ui native ui illustrate mean get expanded new children appended andor removed preferrably react", "num": "11118", "d": "10/2017"}, {"title": "using setstate inside function child component generates warning functions valid children", "body": "want request feature report bug reporting bug current behavior context react native app error nt related renderer using handcrafted component fetches data passes function child component rendered however using save call result get pretty interesting error see gives current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react tried remove business logic reproduce error react native app codesandbox fully reproduce expected behavior expected error versions react browser os affected issue work previous versions react know error occurs react renderer got react native first place started project react related issues might related ping gaearon", "num": "11116", "d": "10/2017"}, {"title": "wrap events react", "body": "per discussion react rc asked open separate issue regarding opening event system react currently use disappeared react blocking ability upgrade basically grab order wrap certain piece code fire afterward asked nt wrap instead least time believe experiments showed nt work react seemed firing internal synthetic events later time possibly batching nt know new hacky way thing happy punt question want request feature report bug depends certainly used work sense bug would require api creation perhaps maybe feature current behavior access event firing expected behavior way inject code fire events fire versions react browser os affected issue work previous versions react react solution existed react", "num": "11115", "d": "10/2017"}, {"title": "check raf polyfill lazily", "body": "cases like pretty confusing probably move warning happen first rather immediately", "num": "11114", "d": "10/2017"}, {"title": "consider providing umd build testutils", "body": "noticed stopped providing bunch fiddles old bugs use wonder add back eg let hear people say", "num": "11111", "d": "10/2017"}, {"title": "document deep equality checks jsonstringify shouldcomponentupdate bad idea", "body": "inspired", "num": "11107", "d": "10/2017"}, {"title": "asynchronous componentwillunmount react", "body": "react called first rendering next component dom current version called mounting next component creates issue existing code since reuse component history changes invokes new props change url thereafter invokes component still way synchronous way", "num": "11106", "d": "10/2017"}, {"title": "server render missing nodes recreated correct classname", "body": "possible regression looks like recreating missing nodes working correctly react nodes get recreated one copy classname sibling node instead getting recreated correct classname pen demonstrating issue works fine react jsx rendered html", "num": "11104", "d": "10/2017"}, {"title": "ssr reactdom client server handling newlines differently causing mismatch warnings", "body": "bug report noticed warning text content match warning certain pages isomorphic react app using react reactdom boiling simple test case seems different kinds newlines handled differently failing match everything fine mismatch error words separated browser however get except js error console second foobar reads one word seems chrome issue mishandling single r carriage return try echoes string console one word browser see foobar one word importantly though windows newlines result app definitely seems like bug react reconciliation logic setup full list npm deps nodeexpress app node browser macos chrome workaround preprocess text useruploaded content normalize newlines", "num": "11103", "d": "10/2017"}, {"title": "make undefined ref message better", "body": "reported could clearer", "num": "11102", "d": "10/2017"}, {"title": "type fiber tag disjoint union", "body": "sebmarkbage tried flow could nt handle well might worth trying someday", "num": "11101", "d": "10/2017"}, {"title": "react continues incorrectly handle disabled", "body": "would like report bug please closed gaearon said reopen still problem currently understand react incorrectly handling common case construction fairly normal create first element disabled remains preselected react render case instead renders first deselected control attempted fix forcing selection normal approach set relevant react disallows preferring novel property instead mimicing firstwrite version property attempt set set ignored may case defaultvalue broken select react inability render disabled either default selected initial present since least sometime first found first documented january prior faster tell core devs irc know far goes back past", "num": "11100", "d": "10/2017"}, {"title": "may broken", "body": "would like report bug refiling another outstanding bug closed despite reproducible decided create repro case since repro involves setting confronted human inability remember whether html zeroindexed oneindexed since repro also involves determining whether given selectable decided control four select see get third fourth joke got neither got first selectable winner testcase series see see instead see currently believe honored first time noticed tested", "num": "11099", "d": "10/2017"}, {"title": "allow suppressing error boundary logs intentionally throwncaught errors", "body": "repost erikras want request feature report bug somewhere current behavior running tests library behaviors want test throw error currently result output console error great application great library test expected behavior would great could something like please provide exact jest configuration mention jest node yarnnpm version operating system see also", "num": "11098", "d": "10/2017"}, {"title": "umbrella react dom bugs", "body": "since going open issues yesterday today also compiled list things seem broken reactdom grouped areas think issues equally important like start discussion around start attacking shorter longer term example potential fixes onchange event logic would need take account even inform think would good topic next chat cc jquense aweary nhunzaker maybe could also broadcast time autofill provide way handle browserautocompleted form values controlled components ie edge longer prompt remember password controlled form dom fixture form coverage restored state autofill composition events issues x incorrect data compositionend event typing korean change event fires many times inputing chinese characters onchange work well japanese ime react prs x try generate beforeinput event buggy composition scenarios ie x handle composition events changeeventplugin mouse enter leave mouseenter fires disabled inputs whereas mouseleave mouseenter event triggered cursor moves disabled button onmouseenter propagation double reactroot onmouseleave working expected input checkbox select x change event fire ie edge certain circumstances x pressing spacebar checked radio button fires click browsers x input type email controlled component control white spaces changing state onfocus onchange select multiple element work firefox x select onchange firing using keyboard input onchange triggered every time epreventdefault used input element backspace work x radio buttons correctly checked using multiple lists radio buttons input autofocus causes focus emitted ref undo behavior controlled textareas works differently default behaviour chrome triggers onchange twice replacing text selection x textarea onfocus stoppropagation incorrect cursor rendering firefox x onbeforeinput fires edge updates dom clear button ios date input return correct event value eventpreventdefault click handler prevent onchange called x reset select ignores defaultvalue", "num": "11097", "d": "10/2017"}, {"title": "programmatically filled input fire onchange event", "body": "want request feature report bug bug current behavior react generated input fire event programmatically filled demo expected behavior react generated input fire event programmatically filled demo versions react browser os affected issue work previous versions react reported bug tested chrome safari macos experience bug bug present react core goal create browser bookmarklet autofills form within react app", "num": "11095", "d": "10/2017"}, {"title": "add inline syntax errors website editor", "body": "tsriram suggested proof concept like wonder new editor", "num": "11094", "d": "10/2017"}, {"title": "add error boundaries website", "body": "places could handy live editor homepage show crashes search box gets broken fair adblocker global missing maybe", "num": "11093", "d": "10/2017"}, {"title": "investigate compiling react google closure compiler advanced mode", "body": "creating track already compile bundles gcc simple mode bunch things break advanced mode gradually moving closer able think prerequisite since otherwise never sure still correct landed open question still keep devtools working wonder fiber could array fixed indexes would nt need sourcemapping", "num": "11092", "d": "10/2017"}, {"title": "react spillover", "body": "dumping items since want close umbrella x convert oss repo modules block release nicetohave follow x move docs update fbmereactpolyfills point x fix rn crash dev x worth looking existing entries attribute table might mean bugs x decide flat bundles one create custom fiber renderer nt block final ideally final internal pr wip fb gaearon bvaughn context update unknown property warning documentation new behavior currently warning points blog post update crossorigin doc warning clarify throwercatcher semantics gaearon bvaughn sebmarkbage add closure compiler advanced deal mangling properly block release nicetohave follow whitelistblacklist warnings add yellow box warnings could make optin minor release bvaughn let make optin default rn make sure instanceprops reactnativecomponenttree nt leak sebmarkbage bvaughn rn ensure keep important invariants text must wrapped dan moved back blockers shipping without invariants adding later painful decide handle situation container content changed outside react right warn also either silently fails throws cryptic error also throw error canshould fix behavior match previous react see comments flarnie consider logging caught errors immediately rather commit gaearon bvaughn improve component stack usability issue pr ssr probably lowercase attributes html namespace pr", "num": "11088", "d": "10/2017"}, {"title": "read property func undefined updated react", "body": "updated react version get error bundlejs created webpack line use proptypes separately lib webpack config import path path import webpack webpack export default entry babelpolyfill webpackhotmiddlewareclient pathjoin dirname clientindexjs output path filename bundlejs publicpath plugins new webpackhotmodulereplacementplugin new webpackoptimizeoccurrenceorderplugin module loaders test js include pathjoin dirname client pathjoin dirname servershared loaders reacthotloaderwebpack babelloader test css loader styleloader cssloader resolve extensions js css", "num": "11087", "d": "10/2017"}, {"title": "deduplicate warning functions valid children", "body": "one", "num": "11086", "d": "10/2017"}, {"title": "even though using webpack uglifyjs plugin minification reactdevtools telling unminified code production quality", "body": "want request feature report bug bug current behavior reactdevtools showing red icon deployed application even though using webpack uglifyjs plugin webpack defineplugin processenvnodeenv jsonstringify production current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior react devtools would show black icon indicating production quality code versions react browser os affected issue work previous versions react using latest version google chrome version official build app running react reactdom", "num": "11085", "d": "10/2017"}, {"title": "errorboundary behavior", "body": "breaks app windows mac high sierra chrome tried new errorboundary functionality reactjs trying use catch undefined variables rendering certain components causing whole app behave strangely trying encapsulate side effects undefined variables components break gracefully errorboundary component defined like errorboundary imported correctly sitting container component render function wrapping child component like order test broken app functionality put undefined variable render function component errorboundary included undefined variable gets rendered happens browser rest app stops working correctly syntax error errorboundaries supposed behave", "num": "11084", "d": "10/2017"}, {"title": "difficult track source boolean prop warning", "body": "want request feature report bug dx issue think certainly frustration upgrade would submitted gaearon told thrice current behavior build works strewn warnings would like fix warnings like library provides hoc provides boolean props first concerned react would longer allow think problem one tests carelessly leaking props way even created dumbest hoc ever test hoc could pass boolean prop seems like however stacktrace componenttrace even remotely clear tests causing warning previous versions would show exact stacktrace file names line numbers generated error versions react browser os affected issue work previous versions react react yes worked previous additionally several tests need throw errors alert library users something wrong test logs full bright red new fact life library developers test somehow replicated current master branch reduxform", "num": "11083", "d": "10/2017"}, {"title": "error boundaries causes multiple errors thrown development mode", "body": "want request feature report bug bug maybe current behavior error caught react lifecycle methods thrown twice development mode current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react look console see one errors caught one still thrown could possibly confusing people see two identical errors console expected behavior error thrown versions react browser os affected issue work previous versions react stumbled fixing one tests checked component throw conditions test started failing react second thrown react really sure bug wanted clarify whether made intentionally seems like trick causes behavior bug happy help fix someone would suggest start", "num": "11082", "d": "10/2017"}, {"title": "deduplicate render methods pure warning", "body": "note task already claimed saw fiddle nested update bug would nice dedupe first place instead calling thousand times note task already claimed", "num": "11081", "d": "10/2017"}, {"title": "idea host codemods website", "body": "would nice provide repl codemods website especially createclass proptypes conversion handy oneoffs like converting stackoverflow answers fiddles also introduces people idea codemodding playful way repl include instructions running locally bottom", "num": "11080", "d": "10/2017"}, {"title": "improving browser qa", "body": "manually test lot behavior captured jsdom change events number input quirks event pooling error handling etc despite test suite comprehensive unit tests alpha beta release candidates number bugs slipped particularly around change events want explore would look like reduce burden manual browser qa possible particularly around things like change events hook javascript dom apis automatable filed issue explore following areas though happy others pitch deploying dom test fixtures public url distribute manual qa run automated tests investigate browserstack sauce labs possible browser automation options deploy nightly edge build react accompanying jsfiddle make easier determine fix works master without needing know setup react locally automation place extremely laborious comprehensive tests could run help fight regressions probably missing something going start post followup comments learn stuff", "num": "11079", "d": "10/2017"}, {"title": "tutorial doc incorrectly formatted babel url", "body": "bug documentation links users babel link incorrectly formatted code clicking link goes incorrect link prints instead code current url evaluates percent encoding instead link replaces", "num": "11078", "d": "10/2017"}, {"title": "old fiddles still broken due httphttps issue", "body": "see example mixed content page loaded https requested insecure script request blocked content must served https redirect happens without preserving protocol", "num": "11077", "d": "10/2017"}, {"title": "reactdom problems csp", "body": "want request feature report bug bug current behavior refused apply inline style violates following content security policy directive stylesrc self either unsafeinline keyword hash nonce nonce required enable inline execution expected behavior error csp try use reactselect app csp enabled result mentionedapparently problem reactdom line", "num": "11076", "d": "10/2017"}, {"title": "move website source new reactjsorg repo", "body": "new website launched propose following cleanup steps move gatsby source dynamic content md yml files new repo update external tools like netlify crowdin use new repo delete jekyll website source offer several benefits including improve focus simplify triage process website framework repos cut noise netlify preview comments prs nt related website creating issue mostly facilitate discussion around new proposed directory structure proposed directory structure cc ericnakagawa flarnie joecritch", "num": "11075", "d": "10/2017"}, {"title": "performance enhancements niche situations", "body": "hit couple things bit surprising sure really asking things documented somewhere also kinda going flow seems place raise generic issues even bugs keys make things slower bunch items thing changed xy positions adding key index made rendering slower possible shortsighted though since could well change layer items changing abovebelow found interesting rendering null makes huge difference two test cases full graphics pipeline vs essentially empty pojo renderer difference speed nt matter data graphics rather returned components dom nt work course custom renderers known certain type element edge node side effects render lifecycle returning significantly faster even straight functional component returns simple element side effects makes sense since react less branches consider even branches point nothing simple objects", "num": "11073", "d": "10/2017"}, {"title": "component respect defaultprops rendered react element", "body": "want request feature report bug bug current behavior component respect defaultprops rendered react element js object current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react expected behavior defaultprops applied provided example two identical buttons versions react browser os affected issue work previous versions react tested chrome versions nt work", "num": "11071", "d": "10/2017"}, {"title": "componentwillmount calls order deterministic reactdomhydrate reactdomserverrendertostring", "body": "question related serverside rendering support materialui usecase generate class names based react tree traversal order one users djeeg noticed react tree potentially traversed different order serverside clientside using hence question calls order deterministic", "num": "11070", "d": "10/2017"}, {"title": "tests failing using createportal react", "body": "bug two files indexjs import react component react import reactdom reactdom export default class somethingcool extends component render return reactdomcreateportal thisportal indextestjs import react react import reactdom reactdom import somethingcool itonly renders without crashing gt const div documentcreateelement div reactdomrender div app started createreactapp run test get console renders without crashing change component render empty div without works fine info createreactapp reactscripts react reactdom macos sierra note also used suggested workaround requestanimationframe tests please let know info needed help figure going thanks", "num": "11068", "d": "10/2017"}, {"title": "read namespaceuri null error rendering comment", "body": "see internal task", "num": "11067", "d": "10/2017"}, {"title": "react known regressions", "body": "going track since website issues creating lot noise fixed master x extra variable umds fixed x instead component stack warning fixed x crash hydrating development fixed x getting lost svg fixed x crash rendering shadow root fixed x allow running test shallow renderers production fixed x ssr nt separate unrelated text nodes cases fixed x ssr reactdom client server handling newlines differently causing mismatch warnings fixed x peer dependencies warn beta x fires twice child added fixed x fires hovered child fixed x shallow renderer merge multiple calls correctly fixed x ssr throws obscure error bad prop fixed x loses textarea placeholder first render fixed x false positive warning rehydrating camelcase svg tag names fixed x false positive warning rehydrating fixed x nt work ssr new features added master x allow attribute attributes x allow explicitly shallow ignore hydration warning", "num": "11065", "d": "10/2017"}, {"title": "bug reactdomhydrate detects fix diff", "body": "intentional difference client vs server rendering image component displays different src depending screen pixel density import react react import proptypes proptypes function image props let src propssrc const style props const width propswidth stylewidth const height propsheight styleheight const pixelratio globaldevicepixelratio width height amp amp pixelratio gt const lastdotindex srclastindexof return imageproptypes src proptypesstringisrequired width proptypesnumber height proptypesnumber imagedefaultprops width undefined height undefined export default image current behavior render retina screen get warning warning prop match server imagepng client image browser shows serverrendered content correct client one expected behavior client mutates dom changes src attribute img versions react browser os affected issue work previous versions react react chrome previous versions react good approach render would rerender whole dom instead diff", "num": "11064", "d": "10/2017"}, {"title": "onblur event triggers trying set focus input type number conditional rendering firefox", "body": "want request feature report bug bug current behavior trying render active focus event triggers firefox even focus set current behavior bug please provide steps reproduce possible minimal demo problem click name column render active focus works chrome edge firefox please see live example expected behavior clicking name column input appears active versions react browser os affected issue work previous versions react react firefox sure react issue actually noticed change input type works perfectly firefox problem related input type number", "num": "11062", "d": "10/2017"}, {"title": "relationship render updatecontainer requestanimationframe", "body": "highly related call reactdomrender accurately updatecontainer within renderer seems param called somewhere updating rendered specifically callback call eg recursive approach get error flushsync called inside lifecycle method called react already rendering tangential note happens even triggered elsewhere like may bit misleading someone please explain little order look like updatecontainer callback use case described issue sake clarity like call toplevel render components finished rendering rely react requestanimationframe timing rather inject another one triggering prop changes without making root node manage via setstate componentdidupdate realworld scenario using react drive animation via custom renderer thanks", "num": "11060", "d": "10/2017"}, {"title": "componentdidcatch receiving props", "body": "want request feature report bug feature current behavior triggered errorboundary component additional props passed component goes render props available deliberate current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react pass props like trigger error children expected behavior expect props case still passed versions react browser os affected issue work previous versions react react reactnative new feature", "num": "11059", "d": "10/2017"}, {"title": "svg image onload event getting dispatched", "body": "svg element getting onload event dispatched example tested react", "num": "11058", "d": "10/2017"}, {"title": "reacttestrenderershallow throws nodeenvproduction", "body": "want request feature report bug feels like bug open correctioncontext current behavior reacttestrenderershallow throws details versions react current behavior bug please provide steps reproduce possible minimal demo problem via similar template react template react count jk specs comparing snapshots shallow rendered components utilizing libraries change behavior ex recompose expected behavior able shallow render components wouldwill built deployed production versions react browser os affected issue work previous versions react reacttestrenderershallow runs happily check error throw appears new related comment response difference dev prod versions react great news terms react disallowing prod version shallow render nt cover prod code path librariesdependencies", "num": "11055", "d": "10/2017"}, {"title": "resolution failure bundlecollapser nonunique file contents", "body": "want request feature report bug report bug expected behavior expected behavior recommended optimization resolve requires correctly produce functionally equivalent output current behavior observed behavior bundlecollapser causes browserified bundle resolve files incorrectly components different paths identical contents steps reproduce full reproduction see bundlecollapseruniquenessfailure react render different values coming respectively since component content identical erroneously resolves wrong component displays value simpler reproduction specific react see bundlecollapseruniquenessfailure versions react browser os affected issue work previous versions react browserifybundlecollapser issue react version irrelevant real issue officially recommended optimization may result invalid bundle", "num": "11049", "d": "10/2017"}, {"title": "active tab included current route permalinks new docs site", "body": "want request feature report bug bug new docs site current behavior new docs site active tab included current route permalinks attempting send someone instead dropped correct tab active current behavior bug please provide steps reproduce possible minimal demo problem via similar template go click add react existing app tab grab permalink within section ex open permalink within incognito window expected behavior taken correct linked section within docs versions react browser os affected issue work previous versions react issue react new docs site", "num": "11043", "d": "10/2017"}, {"title": "warning documentation found", "body": "want request feature report bug bug current behavior documentation warnings returns current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior redirect correct documentation versions react browser os affected issue work previous versions react workaround look cached version google search check markdown", "num": "11036", "d": "10/2017"}, {"title": "missing documentation nullundefined input value", "body": "want request feature report bug like request documentation pass input get following warning warning prop null consider using empty string clear component uncontrolled components warning clearly states problem fails mention supposed pass could find explanation online found link url controlledinputnullvalue sounds page explain exactly looking merely redirects nt mention issue warn input value null states warning added nt say open pull request document value undefined controlled component adds following documentation similarly setting attribute setting make react assume component controlled may produce warning explanation react behaves way naively expect perfectly valid value eg numeric input empty passing empty string indicate absence numeric value seems odd really like information documentation", "num": "11031", "d": "10/2017"}, {"title": "loosen type requirements event handlers", "body": "want request feature report bug feature current behavior adding event handlers common practice something like fine react reports warning technically correct expected listener function instead got value type however forces use verbose variant expected behavior think makes sense allow addition function types event handlers anything falsy although may much ask definitely understand rationale type safety perspective make less pragmatic personally huge fan js evaluates reduces amount boilerplate needed conditionally wire handlers versions react browser os affected issue work previous versions react react browsers emit warning react", "num": "11027", "d": "10/2017"}, {"title": "create pr eg createreactclass module", "body": "lots react modules listed repository would like create prs createreactclass reactdomfactories code repo somewhere", "num": "11024", "d": "10/2017"}, {"title": "feature request disable unrecognized tag warning react specific tags", "body": "want request feature report bug feature current behavior firefox element implemented use polyfill able support everything works well react warns element unrecognized page load quite useless specific case would like possibility disable warning elements utility warning remains developer mistype component name expected behavior specified tag acceptednormal react warn specified unrecognized tags versions react browser os affected issue work previous versions react react firefox previous versions warning clear enough need information cheers", "num": "11023", "d": "10/2017"}, {"title": "error error info logged wrong order firefox", "body": "react component throws error development mode error referenceerror x defined additional info error occurred component logged firefox happens wrong order error actually works fine google chrome firefox version macos react reproduce open browser console component throw error like javascript const helloworld gt hello world x reactdomrender documentgetelementbyid root", "num": "11022", "d": "10/2017"}, {"title": "leading zeros controlled input integer value", "body": "want request feature report bug bug current behavior text input see leading zeros pass digit value current behavior bug please provide steps reproduce possible minimal demo problem via similar template reason ca nt reproduce bug jsfiddle codepen moreover react works fine steps create controlled text input add listener saves input value integer pass value input write input value equal value input expected behavior value input state without leading zeros versions react browser os affected issue work previous versions react cra react chrome ie firefox understand low amount information happy provide need know else would useful", "num": "11021", "d": "10/2017"}, {"title": "deprecate remove testutilsmockcomponent", "body": "jestism nt open source package people using jest implement similar pattern directly", "num": "11019", "d": "10/2017"}, {"title": "old fiddles broken new domainwebsite", "body": "longer works causes old fiddles like break fix", "num": "11018", "d": "10/2017"}, {"title": "fiber render documentfragmentshadowroot", "body": "want request feature report bug bug current behavior react able render within documentfragmentshadowroot possible fiber anymore demo js import react component react import render reactdom class mycomponent extends component render return hello react class myelement extends htmlelement static myelement constructor super const shadowroot thisattachshadow mode open try fails render shadowroot catch e consoleerror e shadowrootinnerhtml connectedcallback consolelog myelement mounted customelementsdefine myelementis myelement related expected behavior able render shadow root like previous versions react versions react browser os affected issue work previous versions react react chrome", "num": "11017", "d": "10/2017"}, {"title": "hoistnonreactmethods", "body": "know discussed various places past specifically requesting gaearon add redux iirc know reasoning behind using something like somewhat sound topic nt really perfect solution time drawbacks guys think package utilizing hoc way previously nt work fiber recently rewrite bit move logic use ref child rather component prototype appears job well enough want make sure forgetting something significant especially fiber works obviously using heavily would nt good idea case hoc largely invisible implementation simply injecting prop changing passing refs works simply nt seem appropriate solution implementation would look something like obviously nt ideal trying consider best way implement transparent way handling far real problem see implementation would methods present child time mounting think acceptable drawback would think would nt hard adjust situation well though", "num": "11016", "d": "10/2017"}, {"title": "reactjsorg website displays empty page cookies disabled firefox", "body": "using firefox cookie whitelist plugin enabled preventing cookie storage loading flashes page content removes content body producing empty white page following content loading page content initially loads flashes security exception thrown console content removed page cookie whitelist set allow temporary cookies page loads normally", "num": "11015", "d": "10/2017"}, {"title": "warn unexpected html inside svg", "body": "react reactdom versions js const createelement h require react const rendertostaticmarkup require reactdomserver rendertostaticmarkup h div null h svg null h span nt mixed browser console guess programmer responsibility avoid case understand performance nt check", "num": "11013", "d": "10/2017"}, {"title": "reset select ignores defaultvalue", "body": "want request feature report bug report bug current behavior resetting form contains select defaultvalue selected option becomes first option element list one valuedefaultvalue current behavior bug please provide steps reproduce possible minimal demo problem via similar template put piece code click reset button formreset form expected behavior expect select select option valuedefaultvalue like applying formreset versions react browser os affected issue work previous versions react reactdom seems browser independent tried chromium firefox fedora nt try prior version react", "num": "11010", "d": "10/2017"}, {"title": "announcement page broken adblocker", "body": "announcement page broken using chrome mac", "num": "11008", "d": "10/2017"}, {"title": "question buildscripts sources", "body": "build scripts tirelessly typed fb exist fancy versions somewhere import statements object rest spread await lightly transpiled actually typed using unpleasant ecmascript offers direct untranspiled execution recent nodejs nice one search unique wordings one without finding anything", "num": "11005", "d": "10/2017"}, {"title": "website online ide documentation", "body": "continuing conversation twitter think would beneficial beginners use codesandboxstackblitzwebpackbin start learning react environment like local code editor means user already gets familiar feel code editor user nt install tooling start immediately also whenever want continue offline easily click downloadexport get cra version application work think agree would beneficial question approach without confusing user would great discussion", "num": "10996", "d": "9/2017"}, {"title": "website yarn dev throwing error node", "body": "website docs list nodejs version greater requirement however tried run using version got following error pretty sure caused fact nodejs support trailing commas function parameters couple file maybe good idea change required version node website docs either remove trailing commas error unhandled exception error syntaxerror unexpected token require runapi www gatsby www gatsby www gatsby async replenish let know solution prefer gladly open pr", "num": "10995", "d": "9/2017"}, {"title": "link download html file working page", "body": "want request feature report bug bug current behavior link download file downloading anything current behavior bug please provide steps reproduce possible minimal demo problem via similar template click link page download html file download mac chrome browser click link downloads something says file open appears like nothing downloaded expected behavior able download html file versions react browser os affected issue work previous versions react mac os chrome version react irrelevant open file version", "num": "10994", "d": "9/2017"}, {"title": "react fails rehydrate noscripts", "body": "want request feature report bug bug current behavior react properly rehydrated equivalent code works react current behavior bug please provide steps reproduce possible minimal demo problem via similar template consider following serverside code js const react require react const reactdomserver require reactdomserver class main extends reactcomponent function createapp return reactcreateelement main null consolelog reactdomserverrendertostring createapp react contents hello hello react contents hello hello consider following application jsbin html hello class main extends reactcomponent render const contents lt strong gt hello lt strong gt consolelog contents contents return reactcreateelement noscript dangerouslysetinnerhtml html contents null function createapp return reactcreateelement main null reactdomhydrate reactdomrender createapp documentgetelementbyid target consolelog initialized react displays following console swap comment blocks html react used code works fine warnings true regardless whether change contents react output react output error message confuses states server output consistent output serverside code neither contents final markup emitted html entities please note important breaks known workaround believe may specific one replaces occurrences example works fine react expected behavior rendering component rehydrating component verbatim yield error versions react browser os affected issue work previous versions react regression tested chrome", "num": "10993", "d": "9/2017"}, {"title": "website restructure docs provide paths guidance", "body": "per dan recent comments lot people still seem complaints way docs structured might worth trying restructure docs kind like choose adventure book different paths based know far want accomplish suggestions reference hypothetical paths example looking want see ready learn react know first links page discussing common js prerequisite knowledge want try react right without installing anything links page points codepen codesandbox stackblitz online playgrounds also gives copypaste html snippet links cdn libs user save edit locally want learn basic ideas react nothing new involved links page describes components rendering syntax without using jsx want learn recommended way use react links page talks createreactapp jsx syntax understand basics learn think react build something probably links current tutorial section trying build application solve realworld problems react links page addresses topics like routing state management etc like guides discussed looking advanced react usage patterns help reuse code better links page covers topics like hocs render props context etc another related idea would code samples docs multiple syntax variations could viewed switching tabs global option across site like plain syntax jsx syntax syntax", "num": "10991", "d": "9/2017"}, {"title": "webpack building react reactdom packages version", "body": "want request feature report bug would call bug webpack building react reactdom packages using version running command tells hidden modules keeping everything else works fine app launching correctly using version react reactdom running tells hidden modules machine ubuntu packagejson webpackconfigjs file running show hidden modules version gives running version gives", "num": "10990", "d": "9/2017"}, {"title": "nt work", "body": "see original report problem svg case sensitive na\u00efvely setting relying insensitivity wo nt work good news seems like valid svg attribute problem missed applies html svg think fix add back whitelist", "num": "10987", "d": "9/2017"}, {"title": "website buttons live code sections bad styling", "body": "new site button todo example looks strange nonstandard generally happens border styling overridden nice styling applied button appears case removing fixes styling", "num": "10986", "d": "9/2017"}, {"title": "website upon scroll active item side navigation remains", "body": "would call bug click sidenav items page goes part page sidenav item get active state correctly blue span front link text scroll manually parts sidenav nt refresh active state items tested browsers macos see screenshot interactive component active", "num": "10984", "d": "9/2017"}, {"title": "reduce function", "body": "change", "num": "10983", "d": "9/2017"}, {"title": "new docs site add section headers navigation element", "body": "new reactjsorg docs nav different pages makes difficult quickly find jump part docs care change would accepted create pr example life cycle events react closest thing nav quick start gt state lifecycle navigating page reading seconds becomes clear tutorial list lifecycle events sure scan whole page nt look like maybe missed repeating process scrolling entire pages time consuming instead google react lifecycle events end finding someone independent blog post", "num": "10980", "d": "9/2017"}, {"title": "rss feed", "body": "intentionally drop assume reported twitter", "num": "10978", "d": "9/2017"}, {"title": "reactorg enable tab live jsx editor", "body": "current reactorg default behavior keyboard users get code sections live editor get stuck someone configure ignoretabkey makes editor ignore tab key presses keyboard users tab past editor without getting stuck chrome windows atm edit submit fix sorry", "num": "10976", "d": "9/2017"}, {"title": "recommend using componentwillmount instead using constructor", "body": "want request feature report bug feature current behavior docs recommended use constructor componentwillmount current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior recommend using componentwillmount constructor classes react provide lifecycle hook mounting since constructors already defined however constructors generally confusing considering ways defining things react take following example tutorial written componentwillmount would look like following weird pass super props happens constructors nowhere else react also setting state different constructor nowhere else react using componentwillmount extract props like normally would method react class also setting state exactly every method react class feel like consistency componentwillmount better even though classes provide constructor componentwillmount also supports server rendering benefits performance wise using constructor componentwillmount thanks versions react browser os affected issue work previous versions react react", "num": "10972", "d": "9/2017"}, {"title": "datareactroot attribute missing", "body": "want request feature report bug bug current behavior versions prior react added datareactroot attribute generated div wrapping render rely attribute order select div css case make height fills container eg root gt datareactroot height version attribute longer appears ca nt easily select div css hack javascript lot cleaner datareactroot attribute version version", "num": "10971", "d": "9/2017"}, {"title": "website defer loading babel needed", "body": "currently load babel via cdn nice load page nice load pages actually use eg pages use", "num": "10969", "d": "9/2017"}, {"title": "website gracefully recover ad block prevents babel loading", "body": "seen reports certain ad blockers eg fair adblocker prevent babel loading causes script error breaks docs site robustly handle case probably showing error codepreview side would show script errors", "num": "10968", "d": "9/2017"}, {"title": "website docsearch improvements", "body": "current behavior docsearch new page changed design two features different previous version cursor longer separate colour visible use arrow keys select result longer algolia logo mention expected behavior slightly different background colour cursor mention search algolia logo required free plan happy open pr issues whatever colour solution choose cc bvaughn gaearon", "num": "10965", "d": "9/2017"}, {"title": "github pages", "body": "seems", "num": "10964", "d": "9/2017"}, {"title": "react summit showing conferences page", "body": "successfully added second react summit ng page via pr summit showing list please missing anything get appear conferences page", "num": "10963", "d": "9/2017"}, {"title": "detecting outside events using logic portals", "body": "surprised pleasantly read events bubble portals component tree rather dom tree obviously means detect clicks occur within component child components without worry whether happen portal hosted however another fairly common thing may want detect whether event occurred outside component child components plenty libraries afaik use dom tree nt behaviour curious whether anything new unadvertised react help part puzzle", "num": "10962", "d": "9/2017"}, {"title": "reactdom createportal behavior rendersubtreeintocontainer", "body": "want request feature report bug nt know bug feature last function reactdomunstablerendersubtreeintocontainer works like reading html code new feature reactdomcreateportal behavior bud may understand new feature create portal minimal demo problem demo reactdomcreateportal demo reactdomunstablerendersubtreeintocontainer jsx class container extends reactcomponent constructor props super props thisstate show false show consolelog show thissetstate show true close consolelog close thissetstate show false render const show thisstate class portal extends reactcomponent constructor props super props thisnode documentcreateelement div documentbodyappendchild thisnode render return reactdomcreateportal thispropschildren thisnode reactdomrender documentgetelementbyid body rendered sourcecode html click show portal content state visible close portal expected behavior portal render content body want close portal click close button trigger show action problem shadowdom rendered html container portal separate close portal child container versions react browser os affected issue work previous versions react react reactdom chrome version", "num": "10960", "d": "9/2017"}, {"title": "react bug warning update mounted mounting component", "body": "trying run snippet causes warning noticed triggers hook react hooks consoled next order previous version component mounting twice behavior also bit strange comes without data fetching everything works fine", "num": "10959", "d": "9/2017"}, {"title": "reactdom exist error", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react react reactdom reactdomdevelopmentjs line commits show measurement per method name avoid stretch commit phase measurement overhead var labelsincurrentcommit new set lt undefined var formatmarkname function markname return reactemoji markname var formatlabel function label warning var prefix warning warningemoji reactemoji var suffix warning warning warning return prefix label suffix var beginmark function markname performancemark formatmarkname markname var clearmark function markname performanceclearmarks formatmarkname markname set undefined", "num": "10958", "d": "9/2017"}, {"title": "website tutorial warning showing moves", "body": "running code locally using going well hit section see grabbed current code link get warning code typed manually text talks warning seeing", "num": "10957", "d": "9/2017"}, {"title": "reactrouter work react", "body": "baseroutersjs", "num": "10956", "d": "9/2017"}, {"title": "svg tag unrecognized react", "body": "element code similar svg paths rendered get error console right way render svg never got message like react", "num": "10955", "d": "9/2017"}, {"title": "website maintain scroll position mobile menus", "body": "going quickly pages mobile really nice scroll long menus eg docs navigating next page returning menu previous scroll position maintainedrestored could done rendering menu layout component isnt unmounted page changes storing menu scroll position layout passing page component render", "num": "10952", "d": "9/2017"}, {"title": "correct callback custom renderer repainttick", "body": "previous discussions gather way render whole tree ready eg flushsync updatecontainer however nt see way get callback completed possible via one builtin functions way dealing make sure root node higher order component put callback logic seems work far would better could little closer metal yet still entire tree definitively reconciled previous renders finished thanks", "num": "10950", "d": "9/2017"}, {"title": "correct way return custom components renderer", "body": "renderer basically working woooo way creating components nt seem way done current examples basically renderer returns nonreact objects correct seems work basic tree updates far eg going wanted make sure right", "num": "10949", "d": "9/2017"}, {"title": "react devtools update highlight screenshots", "body": "react react", "num": "10948", "d": "9/2017"}, {"title": "upgraded using units without px shows warnings like", "body": "want request feature report bug feature current behavior div style width component changing accord input like version versions effects nt add px value like warning like version took time realize react needed add unites change css fly example states inputs message react warnings react simply div dont change new width code import react component react export default class testcolors extends component constructor props super props thishandleinputchange thishandleinputchangebind thisstate width handleinputchange event render const style backgroundcolor orange width thisstatewidth", "num": "10947", "d": "9/2017"}, {"title": "production check reacttestrenderer", "body": "upgrading reacttestrenderer started failing tests message test renderer available production mode fact running unit tests using renderer production build trying understand restriction introduced saw change made could nt find explanation pull request documentation production mode disallowed renderer thanks alex", "num": "10938", "d": "9/2017"}, {"title": "reactjs generating pdf using phpwkhtmltopdf", "body": "hi new reactjs created component generate report pulling node module php application created smarty template tpl using mainversionjs mainversioncss files build passing required data component data attributes able view report problem generate pdf click print hyper link browser using wkhtmltopdf converter using able merge different pdfs generating single pdf getting blank page give text working fine working react component content failing react component please guide right direction", "num": "10937", "d": "9/2017"}, {"title": "okay use reactdomhydrate always", "body": "regarding use hydrate nextjs use render code base render initial ssred version client side generated renders user clicked link question okay use cases assume fallback hydrate sure solution see makes sense check pr", "num": "10934", "d": "9/2017"}, {"title": "add react summit nigeria conferences list", "body": "facebook developers circle lagos nigeria organizing react summit nigeria love know event added list ie guideline regard would appreciated", "num": "10932", "d": "9/2017"}, {"title": "mobile web upgrade react automation input box sendkeys got failure ios simulator", "body": "protractor seleniumwebdriver test device saucelabs iphone simulator ios mobile web build react mobile web input box build react controlled input upgrade react automation test got failure submit input box value backend used saucelabs execute automatino testing saucelabs recording video see input value presented used webdriver sendkeys function insert value input box element click submit button check backend log input box value empty try manual simulator saucelabs use soft keyboard type value click submit works also try use android emulator run test works seems sendkeys function nt trigger react properly event react component think input value nt changed saw react changelog noticed upgrade include input improvment anyone face issue know hope fix workaround thanks charles", "num": "10930", "d": "9/2017"}, {"title": "website increase contrast result headers homepage", "body": "want request feature report bug accessibility issue home page new docsite current behavior word result interactive code samples nt enough contrast background current behavior bug please provide steps reproduce possible minimal demo problem via similar template running axe accessibility audit flag issue expected behavior lowcontrast issue also look cool", "num": "10929", "d": "9/2017"}, {"title": "website highlighted lines code snippets nt enough contrast", "body": "want request feature report bug accessibility issue new documentation website clearcut problem solution pretty open ended ill defined might difficult could use design creativity current behavior using prismjs syntax highlighting styles code snippets also sometimes want highlight certain line lighten background line lighter background many font colors nt provide enough contrast current behavior bug please provide steps reproduce possible minimal demo problem via similar template verify running axe audit page expected behavior need way highlight line without losing much contrast choosing different hue without making lighter looks bad opinion would rather fiddle various font colors used syntax highlighting either collaborate prism project add highlight option enough contrast find another librarysystem use syntax highlighting", "num": "10925", "d": "9/2017"}, {"title": "website add twitter timeline support docs", "body": "want request feature report bug bug docs introduced migration gatsby current behavior empty link community gt get support page bottom past twitter timeline rendered expected behavior see twitter timeline see old version looks like script added pr script nt loaded think adding gatsby twitter plugin would fix probably need tweak gatsby twitter plugin", "num": "10924", "d": "9/2017"}, {"title": "prevent react modifying elements manipulated external code", "body": "new york times rebuilding website using react currently isomorphic app server clientside renders question best way include nonreact interactive graphic maps charts visualizations created custom code within fully react page ideal scenario serverside react renders initial html graphic using part react page clientside react never touches elements even component mounting thought react might solve method still removes nodes nt expect nodes generated clientside code none options integrating libraries seem exact match either classic use case graphic map serverside html includes text placeholder map well map js page load map immediately drawn gets erased react mounts clientside nodes included serverside output often vary based viewport device etc trivial example showing react removing clientcreated nodes one second mobile devices loading react library potentially dependencies could take seconds simplest solution think function could return false rest react components page would mount leave interactive graphic part alone probably solutions constraints need use dangerouslysetinnerhtml need deploy graphics outside site releases need render initial html serverside performance simplicity use iframes everything flexible enough rerender reattach elements causes many problems css animations restart media playback interrupted input cursors text selections lost etc guidance appreciated cc gaearon leeb", "num": "10923", "d": "9/2017"}, {"title": "document error boundaries", "body": "nt think either toplevel doc reference yet cc chantastic", "num": "10922", "d": "9/2017"}, {"title": "bla", "body": "bla github bug", "num": "10913", "d": "9/2017"}, {"title": "umd production builds define global variables", "body": "want request feature report bug bug current behavior umd production build linked announcement define global variables reactdom current behavior bug please provide steps reproduce possible minimal demo problem via similar template use build app defined function variable loaded react expected behavior react builds define global symbols versions react browser os affected issue work previous versions react worked fine betas", "num": "10909", "d": "9/2017"}, {"title": "reactos please read respond final request", "body": "issue seems closed without input noted responded strongly suggest read final post suggest new location discussion aware reactos project community reaching please nt ignore", "num": "10908", "d": "9/2017"}, {"title": "react breaks webpackhotmiddleware", "body": "output updating react seems like webpackhotmiddleware relies internal created issue webpackhotmiddleware repo", "num": "10907", "d": "9/2017"}, {"title": "react onmouseenter triggered extra time entering new child", "body": "react reactdom \u7ed9\u7236\u7ea7\u522b\u7ed1\u5b9a onmouseenter onmouseenter js import react component react class demo extends component constructor prop super prop thisenter thisenterbind thisstate flag false enter event consolelog eventnativeevent consolelog enter click thissetstate flag thisstateflag render let old height width border solid let aa height width border solid red let content border solid black display flex padding return thisstateflag amp amp", "num": "10906", "d": "9/2017"}, {"title": "return value type prepareupdate", "body": "official renderers seem generally return prepareupdate example tutorial suggests return nature return type affect", "num": "10904", "d": "9/2017"}, {"title": "schedule callbacks renderer", "body": "looking early implementation custom fiber renderer seems callback official renderers additionally callback official renderers tutorialexample lastly referenced guide begs question custom renderers meant implement best practices general sense custom renderers relationship setting proritylevels affecting scheduler", "num": "10903", "d": "9/2017"}, {"title": "website overlapping headers", "body": "cc joecritch", "num": "10901", "d": "9/2017"}, {"title": "feature request global didupdate", "body": "currently easy write global logic executes react rerendered lifecycle method works great logic isolated component found recently wanting global hook baked react simple example useful want isolated function perhaps keyboard shortcut creates element screen focuses notion written custom logic makes upgrading react difficult unstable think would useful others particularly use redux building complicated ui interactions", "num": "10900", "d": "9/2017"}, {"title": "website footer links reset scroll top", "body": "open scroll bottom click link footer eg resources gt conferences new page load scroll position remain bottom obvious new page loaded", "num": "10898", "d": "9/2017"}, {"title": "website add flow types website source www", "body": "replace flow types components make sure checks types protect regressions", "num": "10897", "d": "9/2017"}, {"title": "renamemove docs examples license files github clearly shows mit license top navigation bar", "body": "want request feature report bug feature current behavior nt show license react github repository multiple license files examples docs keep links docs examples licenses readme root directory github correctly detects mit license react current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior make even obvious project uses mit license versions react browser os affected issue work previous versions react react", "num": "10889", "d": "9/2017"}, {"title": "website side nav sometimes shows incorrect current highlight", "body": "bug active navbar item incorrect sometimes reproduction steps navigate observe synthetic event highlighted expected behavior highlighted", "num": "10888", "d": "9/2017"}, {"title": "reactcomponent render fragments docs typo example jsx tag closed prematurely", "body": "want request feature report bug bug current behavior render fragments example jsx tag closed prematurely current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react react documentation website chrome android previously array fragments nt supported", "num": "10883", "d": "9/2017"}, {"title": "tutorial text challenge unclear", "body": "want request feature report bug bug current behavior first challenge end tutorial says suggests already displaying locations moves nt specify move locations displayed either makes challenge unclear expected behavior change text challenge something similar versions react browser os affected issue work previous versions react", "num": "10880", "d": "9/2017"}, {"title": "expect server html contain text node due whitespace react", "body": "updated react application everything seems work fine instead fact error appears using reactdomhydrate app completely ssr ready found old issue stackoverflow someone wrote could problem markup send server client far see html code without markup problem", "num": "10879", "d": "9/2017"}, {"title": "detect reconciliation completed", "body": "reading fiber architecture renderers general quite sure tell reconciliation completed particularly important rendering animation targeting something dom let consider example ticker root node pushes changes children setting state every requestanimationframe react finished reconciliation quickly cascade mountain pending updates therefore reasonable strategy would skip frames set state reconciliation definitively finished naively tried practical level simply waiting root node using gate assuming called children finished render cycles children ultimately update canvas render though sure relevant sure successful simple way measure practically ideally even scenario children set state way tell whether tree whole finished reconciliation perhaps even particular node", "num": "10878", "d": "9/2017"}, {"title": "update implementation notes documentation", "body": "implementation notes still describes stack reconciler currently using resources would great updated description fiber part official docs", "num": "10877", "d": "9/2017"}, {"title": "multiple onfocus events fired single focus safari", "body": "like report possible bug brief description onfocus synthetic event fired multiple times single focus occurrence safari expected behaviour fired per focus live demo minimal steps reproduce install createreactapp create example application edit application file add input onfocus event handler javascript import react component react import logo logosvg import appcss class app extends component handleonfocus evt gt consolelog handleonfocus evt render return welcome react get started edit save reload input export default app start application open safari click input field developer console opened notice focus event fired multiple times additional info issue found following environment macos sierra version also tested found high sierra safari also tested found safari safari seems work latest safari mobile chrome firefox react js also tested found react example steps reproduce generated createreactapp version observations might come handy issue seems behave randomly extent event usually fired twice changing focus input input first click input fires two events consequential fire one changing focus different input field fires twice additional interesting behavior happens multiple input fields instance input fields first focus input generates two events onfocus input focus input sometimes generates three events onfocus input input input targets", "num": "10871", "d": "9/2017"}, {"title": "thinking react example filter correctly", "body": "want request feature report bug bug current behavior type bas nt get hits baseball basketball current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior get basketball baseball type bas versions react browser os affected issue work previous versions react version", "num": "10869", "d": "9/2017"}, {"title": "grammar mistake portals docs", "body": "want request feature report bug bug current behavior current text open browser devtools observe button child div onclick handler note child div onclick handler missing word current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior open browser devtools observe button direct child div onclick handler versions react browser os affected issue work previous versions react react", "num": "10868", "d": "9/2017"}, {"title": "async render function", "body": "since fiber react team even consider render functions like obviously changing core ways react working consequences approach every render needs promise backcompatible tho require figuring loading state shown imagine whole new way could write apps rely async api think", "num": "10867", "d": "9/2017"}, {"title": "react fiber batched updates ignores arguments", "body": "want request feature report bug bug current behavior calling reactdomunstablebatchedupdates fn b eventaully calls fn ignoring third argument current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react bug worked possible workaround", "num": "10866", "d": "9/2017"}, {"title": "documentimplementationcreatehtmldocument api requires title argument specified", "body": "want request feature report bug bug current behavior react interactivity lost react crash current behavior bug please provide steps reproduce possible minimal demo problem via similar template run reactdomdevelopmentjs sure exactly exact repo steps fix attempted simply pass empty string var normalizehtml function parent html testdocument testdocument documentimplementationcreatehtmldocument fix var testelement parentnamespaceuri htmlnamespace testdocumentcreateelement parenttagname testdocumentcreateelementns parentnamespaceuri parenttagname testelementinnerhtml html return testelementinnerhtml source mdn docs expected behavior well react crash dev mode interactively continues work versions react browser os affected issue work previous versions react", "num": "10865", "d": "9/2017"}, {"title": "unpkg latest working", "body": "following links ceased work last day top one returns find module distreactjs package react", "num": "10864", "d": "9/2017"}, {"title": "react lowercase html attributes generated html", "body": "want request feature report bug bug current behavior reactdomserver generates camelcased markup attributes example pen believe attributes canonically lowercased lowercase attributes jsx react warns using right names expected behavior attribute names would rendered lowercase versions react browser os affected issue work previous versions react prior versions react stripped attributes", "num": "10863", "d": "9/2017"}, {"title": "use returned string src tag", "body": "want request feature report bug feature want use new feature react returning string use string current behavior well render component see string displayed screen see attached screenshot goal use string code component returns strings class mycomponent extends component render switch thispropstype case text return thispropsjsondata thispropskey break case image return thispropsjsondata thispropskey break default return null break const usercomponent props gt return displays string page parent component class app extends component constructor props super props thisstate json fetching data api componentdidmount fetch response gt responsejson json gt thissetstate json json render return export default app achieve current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior want use returned string inside versions react browser os affected issue work previous versions react react browser chrome version official build work previous versions react new feature react", "num": "10859", "d": "9/2017"}, {"title": "bug eventistrusted always true onfocus event handler", "body": "want request feature report bug bug current behavior triggering focus element onfocus handler receives eventistrusted true current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior eventistrusted false focus triggered programatically versions react browser os affected issue work previous versions react far reproduced react chrome", "num": "10858", "d": "9/2017"}, {"title": "tostring classname", "body": "react used call tostring non string objects would receive packages working anymore far tell likely reason specifically anything using similar might something add docs breaking change ca nt figure else components suddenly throwing errors dont styles", "num": "10857", "d": "9/2017"}, {"title": "update authors", "body": "seems like nt run script", "num": "10854", "d": "9/2017"}, {"title": "broken links new docs", "body": "root footer inside installation inside tab react used setting production build process learn integrating react existing code links creating production build better error handling experience inside next section inside next section encapsulated stateful components inside discuss next sections next section inside one previous sections mentioned inside see syntheticevent reference create stateful component called embed expressions jsx extract component inside inside inside inside simply refer react docs inside inside inside inside inside inside inside inside inside inside inside inside inside inside inside inside none soft links work incorrect capitalization inside inside inside inside inside note nt go blog posts", "num": "10852", "d": "9/2017"}, {"title": "suggestion remove misleading docs code new react portals", "body": "want request feature report bug want suggest docs optimization mislead core idea new react portals current behavior currently docs example code uses jscreated div element referenced object thisel property used componentdidmount componentwillunmount render modal class component current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior point view mentioned implementations represent misleadingunnecessary docs boilerplate might lead confusion especially beginning new feature probably denied good possible working fork showing core idea feature nothing else versions react browser os affected issue case agree open pull request", "num": "10850", "d": "9/2017"}, {"title": "use reactos logo project name", "body": "project seems subsumed almost name logo reactos project seems rather disengenuous reactos logo close spinning atom logo globe middle project name reactos reactjs seems best confusing worst looks project treading coattails reactos edit name correction", "num": "10849", "d": "9/2017"}, {"title": "error decoder website displaying messages error codes", "body": "want request feature report bug bug current behavior visiting show error message current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react macos chrome", "num": "10838", "d": "9/2017"}, {"title": "react release checklist", "body": "ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions x x x x ping someone team ensure react fresh x ensure x x master green ci check recent commits x check local output matches commit list x run repo root ensure runtime dependencies match users would get x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x run x might change lockfile change x commit changes local sanity checks repo root x run repo root x run repo root x run repo root stable release update error codes x run repo root x changes maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master stable release write changelog x open add release notes format earlier x make sure changes easy understand friendly oneliners better pr titles x make sure contributors credited like x verify markup messed previewing online editor update version x update root x update export x update x x x x x x see packages update list x run verify changes x build x run repo root run fast packaging smoke test x open browser smoke test x say hello world run slow packaging smoke test x go run x x go repo root run x open verify every iframe shows hello world release x run x run x go x every subfolder nonstable versions run subfolder x stable versions run subfolder x run verify things published expect fixme really automate part currently atomic stable release create github release x open new release page github x choose tag version pushed dropdown says existing tag x paste new release notes x attach files except release x press publish release stable release update version reported website x open x change newly published version x maybe still separate branch docs reading need cherrypick commit branch makes sure website knows updated config ideally change docs serve master stable release update bower x clone bower repo outside main repo x make sure x delete js files bower repo copy react repo x bower repo x bower repo miss x bower repo stable release try x x x x stable release reach dom team x reach dom team nhunzaker jquense aweary case would like go dom fixtures block release", "num": "10833", "d": "9/2017"}, {"title": "warning stateless function components given refs attempts access ref failnull updating react", "body": "want request feature report bug bug current behavior page load throws console error expected behavior console error least way trace stateless component causing issue versions react browser os affected issue work previous versions react error started appear upgrading react", "num": "10831", "d": "9/2017"}, {"title": "safari input invoke callback input nonnumeric character", "body": "want request feature report bug bug current behavior safari invoke callback input keyboard nonnumeric character ie invoked input invoked input current behavior bug please provide steps reproduce possible minimal demo problem via similar template please see relevant jsfiddle expected behavior callback invoked input affects contents field versions react browser os affected issue work previous versions react reproducible safari version macos react version", "num": "10829", "d": "9/2017"}, {"title": "prevent portal unmounting using reactdomcreateportal", "body": "previous comment use implements portal control portal unmount seems impossible use parent component unmount portal unmount react", "num": "10826", "d": "9/2017"}, {"title": "write react component life cycle methods using arrowfunction syntax", "body": "hello react community getting familiar react question would like clarify react component life cycle method particularly see documents react implement react component life cycle methods example render method use syntax question problem unknown sideeffect change method use functional style method follows hope receive reply soon would like appreciate advance detailed explanation issue thank", "num": "10810", "d": "9/2017"}, {"title": "reactnative mit license week", "body": "heard react relicensing mit reason choose react reactnative reactnative mit license week", "num": "10809", "d": "9/2017"}, {"title": "update thinking react example filter products filterableproducttable component", "body": "step thinking react example component filters displays array products based user input unsure code filtering products component component question previously raised issue think responsible filtering products would improve example two reasons allow used outside better separate concerns filtering products displaying products updated example happy submit pr something changed", "num": "10808", "d": "9/2017"}, {"title": "installationmd content update", "body": "want request feature report bug bug current behavior line installatinmd file saying current behavior bug please provide steps reproduce possible minimal demo problem via similar template line installationmd file say expected behavior line installationmd file say since latest installation createreactapp using yarn versions react browser os affected issue work previous versions react na", "num": "10806", "d": "9/2017"}, {"title": "", "body": "", "num": "10801", "d": "9/2017"}, {"title": "component unmounts constructor state sets componentwillmount fire", "body": "current behavior component unmounts constructor state sets componentwillmount fire expected behavior constructor state sets componentwillmount must probably fire right correct versions react browser os affected issue work previous versions react sure", "num": "10790", "d": "9/2017"}, {"title": "thank relicensing react jest flow immutablejs", "body": "thousands developer love react really great amazing framework many company baidualibabatencentzhihu using react building products millons upon millons people thank brilliant great work thank generous noble spirit", "num": "10789", "d": "9/2017"}, {"title": "react mit license next week", "body": "days age boss asked stop react cause react bsdpatent grant license plan develop stopped choose new framework learn reat best framework heard fb relicenseing react mit license next week true till want use react also need learn framework news true make decision back react", "num": "10788", "d": "9/2017"}, {"title": "learning react problem", "body": "every time decide want learn react google find tutorial seemingly reputable sources try things google go stackoverflow quickly realize syntax different different websites api keeps changing nt know looking old tutorial new one way determining stackoverflow question going apply version react using think needed kind master list based era api talking semver lowlevel talking something like first react came things every one happy came silver age react things following way took put see thing old golden age hit bronze era split everything tiny pieces specific blah blah blah serve cheatsheet anyone new make sense going kinda similar look piece c could say yeah oh looks thanks listening", "num": "10784", "d": "9/2017"}, {"title": "webpack bundle react react dom output large file", "body": "question everyone test react reactdom preact preactcompat using js file generate bundle using different frameworks output react bundle reactdom large preact find lot difference know light version reactdom need optimization webpack big difference anyone seen talked output using preact project using react thank", "num": "10780", "d": "9/2017"}, {"title": "error component causes error thrown twice", "body": "want request feature report bug bug current behavior component throws render example click handler error thrown twice instead error boundaries stop double reporting handle errors thrown render errors handlers etc current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior one error thrown versions react browser os affected issue work previous versions react", "num": "10779", "d": "9/2017"}, {"title": "react cloudflare html minification causes isomorphic react app crash", "body": "think bug compatibility issue react serversided html rendered function contains comment tags represent null components instead tags like react really neat unfortunately app served cloudflare html minification enabled automatically removes comment tags including ones generated react behavior causes client app crash throws error x number usually null component reactid problem solved disabling html minification cloudflare question possible earn benefit html minification keep app running well reactreactdom version node version", "num": "10778", "d": "9/2017"}, {"title": "webdriver input gets partial value upgrading reactdom", "body": "want request feature report bug bug current behavior use webdriverio saucelabs run tests found automation cases consistently failed inputing strings textbox upgrade reactdom input value set partially try input input times javascript webdriverio code browsersetvalue textboxselector current behavior bug please provide steps reproduce possible minimal demo problem via similar template sure could see video expected behavior versions react browser os affected issue work previous versions react happens reactdom works reactdom", "num": "10776", "d": "9/2017"}, {"title": "testutilssimulate appear work reactcloneelement", "body": "want request feature report bug bug current behavior reacttestutilssimulate events fire dynamic children components current behavior bug please provide steps reproduce possible minimal demo problem via similar template class like class keyboardsupport extends reactcomponent render return reactcloneelement reactchildrenonly thispropschildren onkeydown thisdosomething dosomething something use within another component like class foo extends reactcomponent render return handlefocus consolelog called browser called test indicated invoked user focuses component browser attempt use something like never called expected behavior cloned element still fire synthetic focus event versions react browser os affected issue work previous versions react works expected using deprecated package react appear work using", "num": "10774", "d": "9/2017"}, {"title": "unexpected ssr difference warning svg primitives", "body": "want request feature report bug bug current behavior started recieving warning svgs using fegaussianblur expected behavior warnings difference versions react browser os affected issue work previous versions react behavior started right updating never happened", "num": "10772", "d": "9/2017"}, {"title": "toggle menu external button", "body": "different components related manner one button second one menu want openclose menu component click button inside way add class directly without setting redux state", "num": "10770", "d": "9/2017"}, {"title": "warning using development build production", "body": "hi seeing error react developer tools saying use build js file using browserify also tried luck red warning nt disappear", "num": "10768", "d": "9/2017"}, {"title": "think remove girhub star form project bacause reat license", "body": "think remove girhub start form project bacause reat license think remove girhub start form project bacause reat license think remove girhub start form project bacause reat license", "num": "10767", "d": "9/2017"}, {"title": "proptypes definition default value definition", "body": "want request feature report bug feature current behavior defining optional type components make us define well expected behavior set default value proptypes definition property required internally might generated fly based versions react browser os affected issue work previous versions react na cheers", "num": "10765", "d": "9/2017"}, {"title": "bug state updating calling setstate state variable used hidden component display none", "body": "want request feature report bug bug current behavior call setstate update state variable used prop component renders modal modal hidden display none state variable nt update modal displayed state variable update neither componentdidupdate componentwillupdate get triggered current behavior bug please provide steps reproduce possible minimal demo problem via similar template snippet code comments point issue likeuser userid event let itisamatch false let users thisstateuserstomatch let index usersfindindex user gt return useruserid userid let userfirstname users index firstname index gt full code part private repo happy share access would assist investigating issue expected behavior regardless whether modal dialog displayed state variable update versions react browser os affected issue work previous versions react react chrome windows home", "num": "10763", "d": "9/2017"}, {"title": "feature request create components componentcreate", "body": "propose function module added member constructor using syntax following confusion points eliminated vs developers wo nt need add inside components deal vs developers wo nt need remember special case assign use initialising state done inside method developers wo nt manually bind methods vs developers wo nt use syntaxes defining components stateless components transpiled function declarations better performance moreover transitioning stateless component stateful one painless", "num": "10757", "d": "9/2017"}, {"title": "react classname bemcn like libraries", "body": "hello really love new features architecture fiber new behavior nonevent attributes function values react warns ignores got issue jsx const fn gt null fntostring gt foo const render gt would nt add classname even override method object works jsx const obj tostring gt foo const render gt think ok behavior function object feature needed bemcn like library write instead", "num": "10756", "d": "9/2017"}, {"title": "typeerror undefined object evaluating sgetcall input onchange react reactdom safari", "body": "want request feature report bug bug current behavior onchange onkeyup onkeydown causes typeerror undefined object evaluating sgetcall safari current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior component get eventtargetvalue update state turn rerenders new state values versions react browser os affected issue work previous versions react works react", "num": "10755", "d": "9/2017"}, {"title": "typeerror read property createelement undefined", "body": "typeerror read property createelement undefined", "num": "10753", "d": "9/2017"}, {"title": "sorry continue make noise people really love react forced abandon", "body": "patent licence change clearly explain good morning see tomorrow thank", "num": "10748", "d": "9/2017"}, {"title": "tools", "body": "according patent patent aim protect facebook avoid legal risk think patent clearly explain means could using react make damage tools facebook could make competitive product imsoftaisoft post issue love react nt want abandon react really want using react building useful things humans", "num": "10747", "d": "9/2017"}, {"title": "change bsd licensepatent licence please", "body": "baidu already baned using react licence brings extreamly negative effects long term development hurted people love react one post issue everyday change", "num": "10744", "d": "9/2017"}, {"title": "give react cause licensed", "body": "react great framework native give react cause bsdparent licensed react keep using bsdparent licensed people give iv choose new framework project good bye", "num": "10742", "d": "9/2017"}, {"title": "add official react faq docs", "body": "wrote redux faq last year pretty helpful answering actual frequently asked questions great could add similar faq directly react docs tim arney already standalone react faq site would great starting point lot material reactredux links list also useful source info general opening place discuss possible formatting react faq well possible topics volunteers help write", "num": "10740", "d": "9/2017"}, {"title": "recent radio input onchange changes break expected behavior", "body": "background see issue thread recent changes pushed mind broken expected behavior comes firing events group radio button inputs aware conversation problem describing exactly far tell note problem describe occur react lt expectations would expect individual radio button fire two conditions among others radio input clicked state changes label radio input clicked causing indeed native elements work precisely way click radio buttons observe console output see event firing expected desired input state changed something new codepen example react expectations following react component work expected react inputs component work expect native dom elements work codepen shows working properly event seems fire another codepen showing nt work imported course entirely possible something incorrectly couple years breaking change components came recent updates", "num": "10739", "d": "9/2017"}, {"title": "adding letter e input field type number cause onchange handler fire", "body": "want request feature report bug report bug current behavior adding letter e input field type number cause onchange handler fire current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior fire event value least maybe versions react browser os affected issue work previous versions react nt know", "num": "10738", "d": "9/2017"}, {"title": "attach thirdparty tools monitor component state updates", "body": "want request feature report bug feature exists previous releases react current behavior feature implemented versions react browser os affected issue work previous versions react react worked previous versions hey would really like able use reactinstrumentation fiber found gaearon pull request work stopped would like know pick implement also asked pull request figured might get ignored since closed pull request omer", "num": "10736", "d": "9/2017"}, {"title": "rendering nan dom attribute", "body": "blog post states values ignored dom attributes tests case rendered created codesandbox using react demonstrate", "num": "10733", "d": "9/2017"}, {"title": "render list message html new line", "body": "hi new react came problem using rendering array strings html array one two three want render new line seems adding br n nt work use tag eg p start new line method using block tag hoping advice thanks", "num": "10731", "d": "9/2017"}, {"title": "trigger duplicate calls miss others", "body": "bug know deferredupdates unstable maybe known problem one tricky trigger spamming inside lot end update happening multiple times calls skipped entirely example code result mouse wheel real fast red area see console output would expect number output console unique sequence incremented every time closure captures inside new version", "num": "10729", "d": "9/2017"}, {"title": "component returns undefined outside render function", "body": "want request feature report bug bug current behavior react component imported file exports components one place returns outside function container component path components folder resolved webpack config option file structure file content js ui components export checkbox uicheckbox container file component js import react component react import checkbox components gt undefined import checkbox componentsuicheckbox gt component function returns imported indexjs file components folder returns component function imported directly folder consolelog checkbox update returns component function cases settimeout gt consolelog checkbox export default class container render returns component function cases consolelog checkbox expected behavior described code versions react browser os affected issue work previous versions react react os macos browser google chrome", "num": "10725", "d": "9/2017"}, {"title": "update react license faqupdate license", "body": "read previous discussions regarding react facebook oss license particular agree clarificatory remarks esp gaearon amp sebmarkbage facebook nt intend use license offensively however today announcement automattic wordpresscom calypso wordpress core gutenberg longer using react believe facebook efforts clarifying react license clearly fallen short least faqs need extended explained much greater detail ideally recent announcement cause facebook rework license altogether said issue tracker place discussion believe untrue though apologize causing noise growing apprehension use react undoubtedly effects line regarding react ecosystem buy wordpress core community would huge benefit react think maybe wrong issue track license issue greatest exposure perhaps automattic post implies problem license perception license problem issue react issue get worse without addressed genuinely know developers ca nt hope something done concerns funneled proper channels", "num": "10719", "d": "9/2017"}, {"title": "scrolltop changed chrome loading page", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template tried make minimal example could tried create proxy trap change scrolltop could nt figure make proxy document body tried look react source find scrolltop changed nt find anything set saved quickly click buy rent page scrolls little quickly click preferences page jumps top expected behavior quickly click buy rent page scrolls little quickly click preferences page scroll change versions react browser os affected issue work previous versions react chrome linux chrome android firefox linux test previous versions react", "num": "10717", "d": "9/2017"}, {"title": "portals container child managed react", "body": "want request feature report bug bug current behavior appends rendered component target instead replacing contents target current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior replace contents target new rendered component versions react browser os affected issue work previous versions react react reactdom note might completely misunderstood portals work gaearon encouraged open issue", "num": "10713", "d": "9/2017"}, {"title": "support string targets isomorphic createportal", "body": "proposal api addition nodes support strings second argument container could pave declarative way achieve order server side rendering js createportal container nodestring server could render portals children inplace clientside hydration process move right location clientside using container string", "num": "10711", "d": "9/2017"}, {"title": "react rc", "body": "copy pasting checklist going ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions x x x x ping someone team ensure react fresh x ensure x x master green ci check recent commits x check local output matches commit list x run repo root ensure runtime dependencies match users would get x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x run x might change lockfile change x commit changes local sanity checks repo root x run repo root x run repo root x run repo root stable release update error codes x run repo root x changes x maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master stable release write changelog open add release notes format earlier make sure changes easy understand friendly oneliners better pr titles make sure contributors credited like verify markup messed previewing online editor update version x update root x update export x update x x x x x see packages update list x run verify changes x build x run repo root run fast packaging smoke test x open browser smoke test x say hello world run slow packaging smoke test x go run x x go repo root run x open verify every iframe shows hello world release x run x run x go x every subfolder x nonstable versions run subfolder stable versions run subfolder x run verify things published expect fixme really automate part currently atomic stable release create github release open new release page github choose tag version pushed dropdown says existing tag paste new release notes attach files except release press publish release stable release update version reported website open change newly published version maybe still separate branch docs reading need cherrypick commit branch makes sure website knows updated config ideally change docs serve master stable release update bower clone bower repo outside main repo make sure delete js files bower repo copy react repo bower repo bower repo miss bower repo stable release try stable release reach dom team reach dom team nhunzaker jquense aweary case would like go dom fixtures block release", "num": "10710", "d": "9/2017"}, {"title": "question setstate", "body": "hi came doubt using react eg jsx getinitialstate return instrument row isselected false name mayday method thisstateinstrumentrowtrue thissetstate thisstate method thissetstate objectassign instrument row isselected true instrument object want change nested key value isselected method better prefer second sure works nested object method better change key value", "num": "10708", "d": "9/2017"}, {"title": "use react css framework", "body": "project bulma css done team going redesign bootstrap framework flow old screens continue use bulma new screens use bootstrap implement one one screens pages move create new mainlayout import css still affect whole pages question react", "num": "10706", "d": "9/2017"}, {"title": "faster diff algorithm", "body": "invitation discussion react pretty freaking awesome used quite bit one thing unfortunately react strong performance gave roots inferno preact although generally nonissue desktop mobile might bottleneck know many members team working improving bundle size believe rollup support talk heard asynchronous scheduling etc also aware trueadm creator inferno joined react team working improving point want bring library petitdom uses diff algorithm links explain provided readme seems score incredibly vdom performance tests fact beat technologies vanillajs surplusjs per benchmark snapshot petitdom beats inferno preact mithril vue angular etc course proper js framework however point trying make far faster major difference frameworks seems diff algorithm realize would mean rewrite good portion reactdom simply discussion unfeasible simply going wrong targetbottleneck let know discussion", "num": "10703", "d": "9/2017"}, {"title": "fetch htttp parameter increment timer setinterval", "body": "want function timer get number pages whenever timer runs parameter page code constructor super thisstate data page myfunc gt let myfetchoptions method get componentwillmount setinterval thismyfunc", "num": "10700", "d": "9/2017"}, {"title": "use javascript control router go", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10693", "d": "9/2017"}, {"title": "warn available", "body": "imo warn foo option probably also warn specified empty option either one could also argue change handler called value yes component renders first option selected instead invalidnonexisting one", "num": "10691", "d": "9/2017"}, {"title": "click submit form", "body": "want request feature report bug bug current behavior click edit submit form expected behavior click edit submit form versions react browser os affected issue work previous versions react mac os chrome react tried also issue", "num": "10690", "d": "9/2017"}, {"title": "input value setstate onchange giving odd bug specified value f valid number value must match following regu", "body": "onchange handler settingstate react component changes state console giving errorwarning specified value ffffsaadf valid number value must match following regular expression dddd ee seen instances online people gotten similar error context errors appears different makes debugging difficult error happens adding input onchange function really appreciate insight component looks like import react component react class addmovie extends component constructor props super props handleonchange event gt const name value eventtarget thissetstate name value handleonsubmit event gt eventpreventdefault render return title export default addmovie", "num": "10689", "d": "9/2017"}, {"title": "incorrect function reference adding ref dom element example", "body": "want request feature report bug bug current behavior documentation appears incorrect first example button uses function reference function described example submit example change current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react na", "num": "10688", "d": "9/2017"}, {"title": "react greater safari onchange fire input boxes using sendkeys test automation framework selenium", "body": "want request feature report bug believe bug introduced version also exists latest tagged version current behavior running functional tests using selenium safari web driver using sendkeys method nt trigger onchange event input field appears safari however tested chrome safari result app nt see text form input fields case ca nt log running automation tests username field thinks empty even though text appears field current behavior bug please provide steps reproduce possible minimal demo problem via similar template rather complicated setup process nt already selenium working assuming selenium test set simple reproduce create clean react app edit appjs file include add method render function run selenium test types new input field notice console logs mention ontextchanged edit packagesjson file use react remove nodemodules folder rerun yarn install yarn start notice expected behavior notice console log instance ontextchanged character typed input field versions react browser os affected issue work previous versions react mentioned chrome effected issue issue appears introduced version reverting app back allows automation tests run could fixed would great wo nt upgrading resolved please let know provide useful information", "num": "10687", "d": "9/2017"}, {"title": "reactdom vs benchmark difference", "body": "want request feature report bug hey work got discussion fastest render cycle would namely functional components render functional components children would faster classbased component renders private function members class set prove simple na\u00efve way used benchmarkjs run reactdomrender components render output different existing domnodes current behavior tested react results tests cases relatively close terms opssec however react amount opssec varied heavily wanted know approach taken problem shows flaw reactdom suggesting anything wrong however results varied widely thought share since maybe someone would accurate numbers better way testing would actually highlight perf dev build reactdom results reacdom results production build reactdom results reactdom results current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react chrome node", "num": "10686", "d": "9/2017"}, {"title": "meta creation serverreact npm", "body": "hi react team creator npm website main goal library simplify nodejs development think modern middleware included default fullon plugins soon want one first ones based react like simplicity want make plugin similar functionality without needing cli something like getting started js load main library installed plugins automatically loaded const server require server const render serverreply render request using appjsx server ctx gt render appjsx user francisco running without library make react work local proof concept works great want implement react implementing first proof concept today event tokyo questions think think users might find easy use similarly would like invite react dev interested much little want keeping tabs actively helping develop plugin anyone interested", "num": "10678", "d": "9/2017"}, {"title": "wrong ssr diff warning due non lowercase attributes", "body": "want request feature report bug bug current behavior got warning client side hydratation react tree contains mixed case attributes svg ones expected behavior warnings difference server client attributes versions react browser os affected issue work previous versions react react worked seems happen attribute name put lowercase set set removal done lowercased attribute stays set got wrongly previous warning", "num": "10672", "d": "9/2017"}, {"title": "build indexhtml point static static", "body": "build indexhtml gets css js files root forward slash srchref running indexhtml local remote server nt work app root folder throws error required files correct path relative way project sub folder app grab folder content true react", "num": "10668", "d": "9/2017"}, {"title": "multiple modules names differ casing", "body": "version react rc install react cra", "num": "10667", "d": "9/2017"}, {"title": "find information react", "body": "gaearon want know beta", "num": "10663", "d": "9/2017"}, {"title": "difference yarn npm", "body": "", "num": "10662", "d": "9/2017"}, {"title": "react nt correctly rerender dynamically created components added via state", "body": "want request feature report bug believe reporting bug current behavior dynamic tag named const element attributes parsed correctly tag name wo nt resolved way react component thus wo nt rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template click svg box tag appears svg dom attributes looking like html dashes instead camelcase expected behavior change shapetag circle things work intended another circle appears versions react browser os affected issue work previous versions react bash ubuntu windows chrome", "num": "10659", "d": "9/2017"}, {"title": "bfcache ssr form elements", "body": "want request feature report bug bug current behavior let say start filling form input type text select element click link press back button browser backforward cache kick change initial value form elements get value back however react nt account component controlled tried reproducing behavior jsfiddle react latest react next luck bfcache nt kick without ssr expected behavior expect react triggering event replicate actual form value versions react browser os affected issue work previous versions react react chrome using following hack materialui comes issues instead tried simulating change event suggested stackoverflow nt work anymore going disable bfcache", "num": "10657", "d": "9/2017"}, {"title": "set property nexteffect undefined", "body": "want request feature report bug bug current behavior loading page produces error set property nexteffect undefined current behavior bug please provide steps reproduce possible minimal demo problem via similar template unable replicate bug isolation however seen live page clear without knowing react internals uses tried using etc please advise plausible test case scenario create test expected behavior error versions react browser os affected issue work previous versions react react chrome note important google chrome works otherwise fetch google work either ie pages indexed eg see discussion", "num": "10656", "d": "9/2017"}, {"title": "picture srcset error", "body": "hi idea fix error triggered srcset picture attribute component jsx import react react import link reactrouterdom import observer inject mobxreact import lpimgxlarge assetsimagesexamplejpg import assetsimagesexample inject store observer class extends reactcomponent render return lpimgxlarge alt react json react reactdom reactrouter reactrouterconfig reactrouterdom help", "num": "10651", "d": "9/2017"}, {"title": "reactchildfibercoerceref like undefined ref component", "body": "want request feature report bug bug current behavior coerceref reactchildfiber accepts refnull component typeof ref undefined borks expected ref function string current behavior bug please provide steps reproduce possible minimal demo problem via similar template could fixed either coercing ref null undefined also testing undefined expected behavior treat typeof ref undefined ref null versions react browser os affected issue work previous versions react", "num": "10649", "d": "9/2017"}, {"title": "interactive documentation jsx", "body": "interactive version jsx depth article got nice traction today hacker news interactive snippets powered klipse plugin author plugin evaluation done client side server involved would consider trying klipse plugin official react documentation", "num": "10646", "d": "9/2017"}, {"title": "eifjccgigekurdbfdijghgfbdhbhticgjvcfkjhfjcbj", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10639", "d": "9/2017"}, {"title": "remove performwithpriority scheduler", "body": "nt actually use anywhere let remove", "num": "10637", "d": "9/2017"}, {"title": "question state object setstate", "body": "suppose objects maps different dom components following coding practice helps react setstate save work practice thisstate allobj one true two true three false four true updatestate val key var tmpobjthisstateallobj tmpobj key val thissetstate allobj tmpobj practice thisstate one true two true three false four true updatestateone val thissetstate one val updatestatetwo val thissetstate two val", "num": "10636", "d": "9/2017"}, {"title": "setstate", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10635", "d": "9/2017"}, {"title": "warnings use consolewarn", "body": "want request feature report bug bug feature current behavior warnings logged consoleerror current behavior bug please provide steps reproduce possible minimal demo problem via similar template using react rc behavior come every warning react logged far expected behavior warnings logged consolewarn way actually filter output console distinguish real errors warnings versions react browser os affected issue work previous versions react react rc chrome", "num": "10633", "d": "9/2017"}, {"title": "pattern parent initiated fetch child data", "body": "performance reasons child element whose data stored state state instead passed hierarchal chain using callbacks passed props comes time action parent element dictates need data correct pattern fetching child use refs call childfetchdata method via saved reference change prop flag causing child call prop callback data", "num": "10632", "d": "9/2017"}, {"title": "update use new package", "body": "want request feature report bug stop throwing warnings used recent react nt tested manually seems like throw using old style getting react directly also package listing dependency current behavior probably throws warning least models outofdate syntax wo nt work deprecate current behavior bug please provide steps reproduce possible minimal demo problem via similar template todo expected behavior uses package shown docs versions react browser os affected issue work previous versions react react betarc", "num": "10625", "d": "9/2017"}, {"title": "release checklist rc", "body": "ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions x x x x ping someone team ensure react fresh x ensure x x master green ci check recent commits x check local output matches commit list x run repo root ensure runtime dependencies match users would get x x look version range root x ensure depending specify range x run repo root miss caret x x look version range root x ensure depending specify range x run repo root miss caret x x look version range root x ensure depending specify range x run repo root miss caret x might change lockfile change x commit changes see x edit broken branch nt block rc fixed asap sophiebits flarnie local sanity checks repo root x run repo root x run repo root x run repo root stable release update error codes x run repo root x changes x maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master see update version x update export x update x x x x x see packages update list x run verify changes x build x run repo root run fast packaging smoke test x open browser smoke test x say hello world run slow packaging smoke test x go run x x go repo root run x open verify every iframe shows hello world release x run x run x go x every subfolder x nonstable versions run subfolder x stable versions run subfolder bonus try", "num": "10623", "d": "9/2017"}, {"title": "new release checklist", "body": "current release process convoluted think agreed maintaining branches release master means breaking changes land behind flag issue documenting new masterbased release process intended exhaustive let know something missing agree deleting existing documentation point issue instead issue checklist format copypasteable specific release issues ht flarnie tip ideally automate parts potentially fixing rrm work model want cut release ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions ping someone team ensure react fresh ensure master green ci check recent commits check local output matches commit list run repo root ensure runtime dependencies match users would get look version range root ensure depending specify range look version range root ensure depending specify range look version range root ensure depending specify range run might change lockfile change commit changes local sanity checks repo root run repo root run repo root run repo root stable release update error codes run repo root changes maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master stable release write changelog open add release notes format earlier make sure changes easy understand friendly oneliners better pr titles make sure contributors credited like verify markup messed previewing online editor update version update root update export update react version see packages update list run verify changes build run repo root run fast packaging smoke test open browser smoke test say hello world run slow packaging smoke test go run go repo root run open verify every iframe shows hello world release run run go every subfolder nonstable versions run subfolder stable versions run subfolder run verify things published expect fixme really automate part currently atomic stable release create github release open new release page github choose tag version pushed dropdown says existing tag paste new release notes attach files except release press publish release stable release update version reported website open change newly published version maybe still separate branch docs reading need cherrypick commit branch makes sure website knows updated config ideally change docs serve master stable release update bower clone bower repo outside main repo make sure delete js files bower repo copy react repo bower repo bower repo miss bower repo stable release try stable release reach dom team reach dom team nhunzaker jquense aweary case would like go dom fixtures block release", "num": "10620", "d": "9/2017"}, {"title": "browser version requirements", "body": "react list supported browser version could find browser version requirements", "num": "10618", "d": "9/2017"}, {"title": "tests totree rendered array", "body": "nt know bug wrong component render returns array fiber rendered returns first element javascript const wrap children gt children describe test gt current behavior log first element expected behavior think array elements versions react browser os affected issue work previous versions react react", "num": "10616", "d": "9/2017"}, {"title": "remove cacheinvalidating codehack", "body": "want request feature report bug bug current behavior output code building hack code includes time compilation causes whole file modified codesplitting bad caching relevant output code see lastbuild current behavior bug please provide steps reproduce possible minimal demo problem via similar template build project react reactdom development production check diff two supposedly identical builds expected behavior two builds outputs identical modifications made versions react browser os affected issue work previous versions react", "num": "10615", "d": "9/2017"}, {"title": "add module build npm package", "body": "followup tweet unpkg unpkg module support fun try using inside", "num": "10613", "d": "9/2017"}, {"title": "ambiguous documentation purecomponent component", "body": "want request feature report bug bug ambiguous documentation well feature documentation update request current behavior currently documentation purecomponent says reactpurecomponent exactly like reactcomponent implements shouldcomponentupdate shallow prop state comparison note states furthermore reactpurecomponent shouldcomponentupdate skips prop updates whole component subtree make sure children components also pure question circumstances skip prop updates whole component subtree also implicitly say implement behaviour different example returns props propagation wo nt stopped word make sure children componetns also pure would handy documentation component shouldcomponentupdate says default behavior rerender every state change props returning false prevent child components rerendering state changes prevents prop propagation effectively stops rerender cycle child components sentence sounds like two events may related implemented way prevent rerender rewording something like component state changed called rerender cycle initiated regardless parrental scu returning false point past understand correctly component rerender receives new props parent component component also rerender state gets changed component change state receives new props calling outside component expected behavior expected find explicit documentation currently sentences look like apply expected find explicit mention behaviour exactly happen return articles react components found web reformulate official rules way extends ambiguity versions react browser os affected issue work previous versions react", "num": "10610", "d": "9/2017"}, {"title": "htmldivelement nt placeholder type", "body": "edit content div contenteditablebut typereact placeholder support tsx", "num": "10609", "d": "9/2017"}, {"title": "facebook", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10607", "d": "9/2017"}, {"title": "facebook", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10606", "d": "9/2017"}, {"title": "support importscripts web worker", "body": "hello could explain importscripts supported web worker added replace importscripts thank", "num": "10604", "d": "9/2017"}, {"title": "proptypes validation", "body": "want request feature report bug feature current behavior proptypes checking type parameters whatever component receiving parent component current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior proptypes also check values type data receiving validation feature useful specification values also want restrict component get particular values versions react browser os affected issue work previous versions react", "num": "10603", "d": "9/2017"}, {"title": "request twoway binding helpers article improved", "body": "want request feature report bug documentation update current behavior describes deprecated feature expected behavior ideally provide reader documentation nondeprecated feature least provide explanation feature heavily discusses deprecated article provide good deal informative information twoway bindings useful react works focuses heavily nowdeprecated feature requesting page top result google uk searching react twoway binding without quotes", "num": "10602", "d": "9/2017"}, {"title": "uncaught error element type invalid", "body": "loginjs import react react import link reactrouter export default class login extends reactcomponent mainjs import react react import reactdom reactdom import browserrouter router route indexroute reactrouterdom import login componentsloginjs import registration componentsregistrationjs reactdomrender documentgetelementbyid app versions react browser os affected issue work previous versions react", "num": "10601", "d": "9/2017"}, {"title": "docs better documentation purecomponent", "body": "want request feature report bug doc update current behavior currently little section current behavior bug please provide steps reproduce possible minimal demo problem via similar template lacks indepth information using refer blogposts get sense implications using expected behavior would really better reference documentation like following example usage specifically points functionality possible override clearer explanation change reference results rerender note inline functions event handlers might rerender pure components nice info history wrt problem note prevents children depending info rerender versions react browser os affected issue work previous versions react part react happy work pr change yall think issue valid", "num": "10600", "d": "9/2017"}, {"title": "returning plain string component renders collapsed text nodes server", "body": "observed react js import react react import rendertostring reactdomserver const b gt b consolelog rendertostring c renders try hydrate get error text content match server bc client b", "num": "10598", "d": "9/2017"}, {"title": "bringing reasonreact reducers reactjs", "body": "awesome reactjs reducers similar reasonreact recently introduced also decided iterate reasonreact instead core react partially reason users partially reasonreact nature new amp less used allow us iterate exciting new apis without legacy concerns since could nt find previous talk assuming discussed internally great chat open iterate core react state management reasonreact reducers example reason type actions bumpcount toggledialog bool type state count int showdialog bool let component reasonreactreducercomponent mycomponent let make classname children gt component initialstate fun gt count showdialog false reducer fun action state gt switch action bumpcount gt reasonreactupdate state count statecount toggledialog show gt reasonreactupdate state showdialog show render fun state reduce gt let message clicked stringofint statecount time stateshowdialog reasonreactnullelement", "num": "10596", "d": "9/2017"}, {"title": "document ca nt rely react ssr patching differences", "body": "ssr loaded client side various wrong behaviors server html differs client html minimal example created repository code snippet example render css background color red server green client force difference server client html property react everything works expected server renders red background client corrects green react however background stays text changes expected probably similar behaviors example found bug conditionally rendering complete component like becomes even weird additional jsx conditional rendering would render additional jsx inside becomes server side client side see behavior website open chrome dev tools lower width get mobile view reload page see list wrapped inside another component", "num": "10591", "d": "9/2017"}, {"title": "warn unknown nonlowercase attributes", "body": "seems problematic allow arbitary nonlowercase attribute html nodes server ability keep case sensitive html nt end different client probably warn attribute known one lowercase", "num": "10590", "d": "9/2017"}, {"title": "make onoff yesno boolean attributes work", "body": "pass boolean attributes eg nt work correctly actually want specific string think also attributes want let make work could use special flagwhitelist similarly probably make valid turn currently think works master", "num": "10589", "d": "9/2017"}, {"title": "proptypes amp createclass warnings echo using", "body": "want request feature report bug bug current behavior simple script throws following warnings expected behavior expect deprecation warnings throw syntax recommended flowtype causing issues end users several libraries author see eg issue versions react browser os affected issue work previous versions react react", "num": "10583", "d": "8/2017"}, {"title": "typeerror syntheticeventcall function development mode webkit browser", "body": "want request feature report bug bug current behavior using webpack built react based app app runs two modes desktop aka runtime mode opens webkit browser server mode opens browsers chrome firefox etc getting error app built using webpack development flag enabled works fine production mode current behavior bug please provide steps reproduce possible minimal demo problem via similar template since app run webkit browser possible provide test environment however anyone wants build using steps provided readme blog post expected behavior react base app run without error dev mode versions react browser os affected issue work previous versions react react os mac os x yosemite browser annulen browser qt version please let know need details", "num": "10582", "d": "8/2017"}, {"title": "accept ref objects refs", "body": "reason react uses first class ocaml refs store mutable values instead instances basically object mutable property updated callback refs would nice convenience feature builtin could also make first class objects isomorphic react basically implementation would something needs implemented core runtime part particular component api since refs cross boundary cc adamjernst", "num": "10581", "d": "8/2017"}, {"title": "implement silent updates state update queue", "body": "reason react silent updates meaning normal update state queue reverted difference nt need rerender props changed rerender unclear expose existing classcomponent api make feature new apis", "num": "10580", "d": "8/2017"}, {"title": "wrong warning", "body": "want request feature report bug bug current behavior shows warning following react documentation using classes validate items array shows warning current behavior bug please provide steps reproduce looking jsfiddle warning shown expected behavior warning shown code follows react documentation proptypes versions react browser os affected issue work previous versions react chrome version official build macos sierra", "num": "10577", "d": "8/2017"}, {"title": "apparent slow bytes per render memory leak react reactdom", "body": "want request feature report bug bug current behavior longrunning react application finding slow memory leak looks bytes per render eliminate virtually everything wrote simplest possible examples end issue test methodology note also disabled chrome extensions testing ran production build createreactapp eliminate possible source leaks pause execution early force multiple garbage collections using dev gt performance record starting javascript memory live using google chrome task manager run execution iterations pause record memory start memory end difference eliminate browser ran test simple loop also end issue memory start memory end difference note really account maybe consolelog current behavior bug please provide steps reproduce possible minimal demo problem via similar template see code snippets bottom wanted eliminate sources leaks use jsfiddle expected behavior expect memory usage simple test loop really memory growth cleaned garbage collection versions react browser os affected issue work previous versions react browser chrome version official build linux react reactdom createreactapp reactscripts sure previous versions react sample react application import react component react import reactdom reactdom class app extends component componentdidmount windowsetinterval gt thissetstate test test render windowconsolelog test return test sample baseline application", "num": "10576", "d": "8/2017"}, {"title": "reacttestrenderer renders attributes value undefined", "body": "want request feature report bug bug current behavior appears render attributes way inconsistent react browser rendering react attributes value truthy omitted render attribute value still renders current behaviour bug please provide steps reproduce possible minimal demo problem via similar template component like rendering react rendering react expected behavior would expect behaviour react browser case undefined attribute would rendered versions react browser os affected issue work previous versions react using version react chrome macbook testing jest snapshots version", "num": "10573", "d": "8/2017"}, {"title": "performance issue react", "body": "currently using reactjs version web application one feature need keep pooling information continuously seconds receive response list object items list update show react web application problem time application becomes unresponsive takes much time operation profiling found render batch updates dispatch event react takes longest time recommended way get away performance issue react feature needs refreshed every seconds list size items time performance issue observed ie chrome browser", "num": "10566", "d": "8/2017"}, {"title": "react performs insertbefore operations move one item list", "body": "list contains items move one item bottom top react performs insertbefore operations sucks take look infernojs example perform one insertbefore operation one move cases", "num": "10565", "d": "8/2017"}, {"title": "bug", "body": "hi use reactrouterdom npmyarn package different routes use react component show route changing component nt rerender bug", "num": "10557", "d": "8/2017"}, {"title": "typeerror read property currentelement null", "body": "want request feature report bug bug version error", "num": "10556", "d": "8/2017"}, {"title": "import external lib error", "body": "import thirdparty javascript library reactjs searched lot internet think downloaded free theme however author makes custom settings js file would like include file component effects work thank current behavior undefined typeof jquery throw new error bootstrap javascript requires jquery function error bootstrap javascript requires jquery expected behavior", "num": "10555", "d": "8/2017"}, {"title": "documentation add reference oninvalid form event", "body": "want request feature report bug bug current behavior react form event nt documented current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior added list form events versions react browser os affected issue work previous versions react documentation error around since event added", "num": "10553", "d": "8/2017"}, {"title": "bad effect company", "body": "consider relicensing al rocksdb done forgive ask", "num": "10552", "d": "8/2017"}, {"title": "question using nextstate shouldcomponentupdate", "body": "consider following shouldcomponentupdate nextprops nextstate return thisstatevalue nextstatevalue nextprops wasted used way use shouldcomponentupdate nextstate comes argument shouldcomponentupdate", "num": "10551", "d": "8/2017"}, {"title": "reacttestrenderer mock react native animated", "body": "want request feature report bug bug current behavior animated mocked using implement component make snapshot test return log error const wrapper thisenvironmentrunscript transformedfilescript typeerror read property object null runtimeexecmodule runtimerequiremodule runtimerequiremoduleormock functionbezier ease timinganimationeasing timinganimationonupdate ontimeout tryontimeout timerlistontimeout expected behavior mock properly like components nt break", "num": "10542", "d": "8/2017"}, {"title": "reactjs aspnet core", "body": "hello could anyone link good template start hacking react aspnet interested jsx tsx thanks", "num": "10541", "d": "8/2017"}, {"title": "inforamtion internet react", "body": "hi know user internet conection react js native javascipt windowaddeventlistener online gt alert navigatoronline use react", "num": "10540", "d": "8/2017"}, {"title": "buggy controlled number input", "body": "want request feature report bug bug current behavior following code example works well input type allows inputs like entered using input type line always runs shows right value app state also correct checked react developer tools controlled input controlled somehow class app extends component constructor super thisstate value handlechange e gt const value etargetvalue const num parseint value consolelog num thissetstate value isnan num num render return present latest create react app jsfiddle present jsfiddle expected behavior input reflect state thus allowing strings like etc displayed versions react browser os affected issue work previous versions react latest react reactdom reactscripts browser chrome os x present latest create react app jsfiddle present jsfiddle", "num": "10539", "d": "8/2017"}, {"title": "descriptive error null proptype", "body": "want request feature report bug feature current behavior specify invalid proptype common mistakes misspelling instead get error one bothered expected behavior useful error message could", "num": "10538", "d": "8/2017"}, {"title": "add topics categorize react repository make discoverable", "body": "want request feature report bug feature current behavior topics repo current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior popular frameworks github page topics though really popular project would nt better add topics make discoverable versions react browser os affected issue work previous versions react", "num": "10537", "d": "8/2017"}, {"title": "redux", "body": "objects valid react child found object keys counter meant render collection children use array instead wrap object using createfragment object react addons check render method", "num": "10534", "d": "8/2017"}, {"title": "avoiding finddomnode", "body": "read comments potentially dropped least usage strongly discouraged curious alternative ones seen nowhere near flexible let say funky wrapper component adds context menu component jsx class contextmenu extends reactcomponent render const children menu thisprops const child reactchildrenonly children const childwithevents reactcloneelement child oncontextmenu gt someapitoopenmenu menu return childwithevents right click menu far good except needs child dom element prop assign handler inner dom element wo nt work jsx const mylabel children gt children right click menu unless intentionally forward event props mylabel span must ensure props using alternatively wrap children adding element unnecessarily use inline element wrapped block element hand work anything eventually renders dom element matter deep whether components forward props nt see downsides apart impurity poking around dom see workarounds using none good actually using", "num": "10532", "d": "8/2017"}, {"title": "react expects global document object breaks parallel dom testing", "body": "want request feature report bug feature current behavior react expectes document global variable current behavior bug please provide steps reproduce possible minimal demo problem via similar template run enzymejest tests parallel using parallel test runner avajs together jsdom node javascript dom implementations headless browsers expected behavior react allow pass dom instance constructor initial render initialization versions react browser os affected issue work previous versions react windows", "num": "10525", "d": "8/2017"}, {"title": "bug argument eventtargetdispatchevent implement interface event", "body": "applyed event onmousedown element firefox osx catch error title debug see occurs function execute code react reactdom os details os x yousemite version processor ghz intel core memory gb mhz graphics intel iris pro mb", "num": "10523", "d": "8/2017"}, {"title": "decide desired behavior boolean value passed unknown prop", "body": "moving discussion comments issue", "num": "10521", "d": "8/2017"}, {"title": "onmousemove outside window mousedown", "body": "syntheticevent onmousemove stop triggering mouse moved outside window instead browser event chrome continue trigger mousemove mousedown active behavior implemented syntheticevent", "num": "10519", "d": "8/2017"}, {"title": "fiber calling reactnativefindnodehandle render crashes dev", "body": "found working see details know fixed whole story even fixed stackassuming call still ca nt put arbitrary fields fiber reference work around problem reactdom", "num": "10518", "d": "8/2017"}, {"title": "rendering elements inside dynamic parent without child remounting", "body": "possible change element parent element moved current parent new using code parentrenderer children changed parent rerendered perfect change parent actually changed new children children componentwillmount updating store sets required parent happen old children unmounting new children mounting old parent unmounting current children unmounting new parent mounting current children mounting simplest way solve see change children parent time would like know options changing children parent time breaking app also lack information internet similar cases googling skills broken", "num": "10516", "d": "8/2017"}, {"title": "ctrl enter keypress works firefox", "body": "nt work chrome ie edge chrome ubuntu browsers report charcode event dispatcher dismisses made pull request unobtrusive fix", "num": "10515", "d": "8/2017"}, {"title": "reliable way measure painted dom elements", "body": "apologize know frequent question struggling find proper way accomplish trying creating menu simple animated underline transition selected element list requires knowing width element positioning underline div selected element click currently getting width componentdidmount way refs finddomnode works initial load get slightly incorrect measurement refreshing correct every time open page new tab see incorrect behavior componentdidmount code something fundamentally wrong good way know dom fully painted measurements things like far way able get work nesting within requestanimationframe nested within settimeout seems wrong thanks help", "num": "10513", "d": "8/2017"}, {"title": "warn remove known attribute dom component receives symbol value", "body": "want request feature report bug possibly incorrect corner case correct finalizing new behavior unknown attributes see context changes behavior unknown attributes happens unknown attributes want warn remove attribute behavior consistent known unknown attributes current behavior currently throw generic error symbol passed known attribute expects string current behavior bug please provide steps reproduce possible minimal demo problem via similar template example also happens spreading objects props expected behavior warn remove attribute since valid value versions react browser os affected issue work previous versions react recent react well", "num": "10512", "d": "8/2017"}, {"title": "confuse reactdomserver doc", "body": "load react tag toplevel apis available global mean use tag node server", "num": "10508", "d": "8/2017"}, {"title": "consider happens xss surface area whitelist", "body": "consider case let say fix special casing use symbol consider url event name current future gets passed plain old string xss vulnerability tricky part one plain old strings potentially infinite long list since also includes future event names think safe strategy might hard blacklist meaning nt get added dom attribute starts cover everything cc nhunzaker", "num": "10507", "d": "8/2017"}, {"title": "symbol tagging dangerouslysetinnerhtml help prevent xss", "body": "spreading props user provided source xss eg js var data jsonparse decodeuri locationsearchsubstr function foo props return propscontent reactdomrender container already true today url xss hole uncommon many different ways screw getting user data however also spreading unusual decided react add extra layer protection types mistakes one much uncommon one though already pretty centralized way sanitizing objects seems adding symbol object nt big deal though either", "num": "10506", "d": "8/2017"}, {"title": "issue functional components classical components", "body": "problems functional components classical components detail code follow jsbin part problem code js function usergreeting props return welcome back function guestgreeting props return please sign js class usergreeting extends reactcomponent render return welcome back class guestgreeting extends reactcomponent render return please sign also run page jsbin classical component nt feature function component simple ca nt run report error please tell wrong whatever newer", "num": "10503", "d": "8/2017"}, {"title": "packaging js big", "body": "webpack packagedjavascript original javascript contain idea packaging js big packagejson webpackconfigjs javascript var webpack require webpack var path require path var publicdir pathresolve dirname srcclientbuild var appdir pathresolve dirname srcclientapp var config entry appdir indexjs output path publicdir filename indexjs module loaders test js loader babelloader exclude pathresolve dirname nodemodules include pathresolve dirname src query presets react test use urlloader amp nameimg name ext imgloader resolve extensions js jsx modules pathresolve dirname appdir nodemodules moduleexports config javascript name helloworld version description des private true dependencies babelcore babelloader babelpresetreact htmlwithimgloader materialui proptypes react reactdom reactrouter reacttapeventplugin reacttimer webpack whatwgfetch devdependencies cssloader fileloader imgloader styleloader urlloader scripts test echo error test specified amp amp exit dev webpack watch author yanlj license mit new webpack could give routine configuration", "num": "10502", "d": "8/2017"}, {"title": "react component rendering ie rendering properly chrome mozilla", "body": "react components rendering ie rendering properly chrome mozilla using ie showing error access denied ie browser browserminjs reactjs image", "num": "10501", "d": "8/2017"}, {"title": "patent issue raised patent react", "body": "hey guys first thank great framework started learning react mindblowing comparing frameworks like maybe angular raised yesterday gt bsd patents essentially means code open everyone see use always copyrighted facebook grant patent license long nice never suing facebook patent infringement instant sue facebook patent rights react facebook open source technology happen use automatically revoked far understand example started startup maybe next facebook makes sense used react coding part frontend development startup got popular became next competitor facebook somehow got problem facebook inc doesnt anything react open source matter sue facebook due reasons even dont anything codes license react revoked ca nt use react trouble one example time post avoid react startup building startup assuming investors hoping land milliondollar worth exit point right want keep door open acquirers especially large ones apple microsoft google amazon etc companies likely hold patent arsenals facebook even want surrender rights sue facebook time came product built react acquiring means losing rights something probably prepared", "num": "10500", "d": "8/2017"}, {"title": "keep discussion patent clause going", "body": "biggest issue patent clause closed statement close let keep broader discussion going yet link suggestion discussion might take place puts users react position weakness since central place articulate issuesproblems clause thus would like ask either always keep one issue topic open people speak provide maintained link discussion thread platform understand best place discussions topic important users businesses work single place continue discussion interpreted unfortunately silencing tactic edit far understand actually close issue still leave open adding comments yet adding comments issue patent clause turned sebmarkbage could elaborate necessary since leave comments option closed issues relates let keep broader discussion going", "num": "10497", "d": "8/2017"}, {"title": "npm packages could able use reactnative project", "body": "new reactnative project created new react native project reactnative init sample tried adding npm package npm install save isreachable installation tried run react native project reactnative runios got error like unable resolve module os followed steps mentioned still facing issue reactnative version cli versions react browser os affected issue work previous versions react", "num": "10496", "d": "8/2017"}, {"title": "input element type isnumber meet expectations", "body": "example chrome type nonnumber character safari firefox type nonnumber character moment value change empty string solve problem", "num": "10489", "d": "8/2017"}, {"title": "element variables nt work codepen", "body": "want request feature report bug bug current behavior code nt work current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior displaying result nothing showed versions react browser os affected issue work previous versions react browser version official build os ubuntu react codepen uses follows", "num": "10486", "d": "8/2017"}, {"title": "image loading failure", "body": "", "num": "10485", "d": "8/2017"}, {"title": "componentwillreceiveprops called twice renders", "body": "want request feature report bug bug current behavior componentwillreceiveprops called twice row without render call shouldcomponentupdate importantly value calls object passed different specifically code like noticed redux action xhr request performed twice calls also calls defined second call also passed results first xhr call stored redux store passed component via reactreduxconnect also confirmed called second time versions react browser os affected issue work previous versions react react google chrome windows", "num": "10482", "d": "8/2017"}, {"title": "solve reactdom defined react webpack", "body": "download react devtools use http server instead file url better development experience appjs uncaught referenceerror reactdom defined eval appjs object webpackrequire anonymous appjs anonymous webpackrequire anonymous anonymous react reactdom", "num": "10480", "d": "8/2017"}, {"title": "window object virtual dom", "body": "hi question use javascript window object jsx file dom manipulation changing virtual dom best place use window object jsx file", "num": "10479", "d": "8/2017"}, {"title": "remove old disttags", "body": "want request feature report bug bug guess current behavior tags npm think used anymore see registry current behavior bug please provide steps reproduce possible minimal demo problem via similar template tags removed see docs expected behavior supported tags existing versions react browser os affected issue work previous versions react", "num": "10478", "d": "8/2017"}, {"title": "object spreads nested children gives unwanted key error", "body": "believe following case result key error would like know correct behaviour bug produced following case render component spreads attributes top element children children nested least one child object spread situation produces following key error warning child array iterator unique key prop check render method passed child parent component see information reproduction added basic code reproduce issue jsfiddle however nt see key error displayed jsfiddle component renders children spreads attributes top element render component nested children least one object spread function component children return function app return foo variations first nested child given component component component receives object spread key warning also thrown object spread removed inside component key warning thrown object spread remove first nested child given component key warning thrown expectation would expect key errors arrays children rendered background build react reactdom started getting problem since started using airbnbreactwithstyles aphrodite styling generates objects possibly style classname properties spread jsx elements however issue persists reactwithstyles used behaviour seems come react correct behaviour", "num": "10477", "d": "8/2017"}, {"title": "circular reference bound method", "body": "want request feature report bug unclear lean towards bug current behavior certain bound functions create circular reference makes traversing objects problematic current behavior bug please provide steps reproduce possible minimal demo problem via similar template sure produce small test case issue expected behavior unsure versions react browser os affected issue work previous versions react react react native jest happening test attempt use jsonpath query results see link attempted address circular reference jsonpath library problem persists managed track circular property defined apparently still used native components snippet code function bindautobindmethod component method var boundmethod methodbind component boundmethodreactboundcontext component boundmethodreactboundmethod method boundmethodreactboundarguments null unfortunately yet narrow precise place occurs source method definition repeated several modules however confirm issue case isolated single file circular reference particular value example changing line regular enumerable property one defined nonenumerable issue goes away eg function bindautobindmethod component method var boundmethod methodbind component objectdefineproperty boundmethod reactboundcontext value component boundmethodreactboundmethod method boundmethodreactboundarguments null value contains circular reference components reference value becomes problem traversing object tree based keys key enumerated see attempt avoiding circular references however unfortunately still nt addressing issue particular property perhaps fix naive otherwise missing case yet reproduce isolation thank much hard work attention particularly gritty issue must apologize anything said nt make clear sense beginning get familiar js development", "num": "10476", "d": "8/2017"}, {"title": "fake event trick rethrowing errors dev fires unexpected global error handlers makes testing harder", "body": "trying make use componentdidcatch react beta already global window error handler working fine unexpectedly catches errors would expect componentdidcatch handled componentlocal errors treated windowglobal errors dev builds problem seems stem think entire block code problematic stated rational misguided pausing exceptions pause uncaught exceptions however makes exceptions caught rather switching prod vs dev using trycatch prod window error handler dev react always use trycatch rethrow reach root without hitting componentdidcatch handler would preserve correct pause uncaught exceptions behavior without messing global error handlers", "num": "10474", "d": "8/2017"}, {"title": "react synthetic mouseenter event fires dom mouseleave event", "body": "want request feature report bug bug think current behavior two elements next two mouse moves element element registered event listeners mouseenter gt mouseleave gt mouseenter gt mouseleave gt see mouseleave event always fired mouse enter event true react component follows mouse enter events fire mouse leave events elements sharing boundary however mix events use synthetic react events mouse enter dom events mouse leave find mouse enter event handler triggered mouse leave event handler elements sharing boundary current behavior bug please provide steps reproduce possible minimal demo problem via similar template codepen expected behavior mouse enter always fire mouse leave even using mixture synthetic dom events versions react browser os affected issue work previous versions react react os windows broken chrome ie", "num": "10471", "d": "8/2017"}, {"title": "excessive duplicative variable assignments commonjs build", "body": "followup looks like commonjs build saving short variable name references long property names however bunch places net output larger build referenced names like duplicated quite bit example umd build tokens cjs build nt crush names either later build things like duplicates lot look cjs build something along lines dhostnode shows like places true tokens beautified version reference", "num": "10469", "d": "8/2017"}, {"title": "dom fixture form coverage restored state autofill", "body": "follow presently nt manual fixture ensures form state captured browser provides input behalf user restored form state autocomplete state notes reference point like find documentation around restored state works think might using wrong search terms anyone link handy", "num": "10468", "d": "8/2017"}, {"title": "reactdomminjs unpkg cdn returning", "body": "want request feature report bug bug current behavior requests returning found redirect current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior minimized version reactdom success versions react browser os affected issue work previous versions react unpkg nt seem status page also unminified version returns message response occurs less second though", "num": "10465", "d": "8/2017"}, {"title": "react website code textareas broken", "body": "want request feature report bug bug current behavior code react website seem broken inspection reveals url used website current behavior bug please provide steps reproduce possible minimal demo problem via similar template visit react website expected behavior code inputs function expected", "num": "10464", "d": "8/2017"}, {"title": "componentdidcatch document amp decompose info parameter", "body": "quick googling nt show explanation parameter key object seen far useful already composed want custom rendering information parse love see become general string broken array frames something like", "num": "10461", "d": "8/2017"}, {"title": "looking clarification deprecation warnings reactdomfactories", "body": "hello looks use mandatory versions use information correct also wondering going deprecation warnings use versions thanks lot", "num": "10460", "d": "8/2017"}, {"title": "sname", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10459", "d": "8/2017"}, {"title": "license headers missing built bundles", "body": "built files missing license headers cjs headers umd headers identifying bundle name license license headers similar likely need change code getbanner scriptsrollupbuildjs test running looking buildpackages cc trueadm", "num": "10458", "d": "8/2017"}, {"title": "distreactdomserverminjs bug", "body": "think bug use reactdomserver like typeerror read property reactcurrentowner undefined occurs find reason reactdomdistreactdomserverminjs requires react like moduleexportse require react shoule moduleexportse require reactdistreactminjs try works react version reactdom version", "num": "10455", "d": "8/2017"}, {"title": "doc handling events gt binding event class", "body": "tutorial nt binding yet written careful meaning jsx callbacks javascript class methods bound default forget bind thishandleclick pass onclick undefined function actually called additionally example comments code pertaining bind", "num": "10454", "d": "8/2017"}, {"title": "error reactperf failed execute measure performance mark unmount exist", "body": "want request feature report bug bug current behavior hi using reactperf getting error seems crash render domexception failed execute measure performance mark unmount exist markend webpack nodemodulesreactdomlibreactdebugtooljs objectonunmountcomponent webpack nodemodulesreactdomlibreactdebugtooljs eval webpack nodemodulesreactdomlibreactserverrenderingjs reactserverrenderingtransactionperform webpack nodemodulesreactdomlibtransactionjs rendertostringimpl webpack nodemodulesreactdomlibreactserverrenderingjs rendertostring webpack nodemodulesreactdomlibreactserverrenderingjs modify get errors per page refresh however flame graph looks working current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior error versions react browser os affected issue work previous versions react chrome react reactdom", "num": "10450", "d": "8/2017"}, {"title": "error beta undefined function evaluating ownergetname", "body": "line wrong fiber crashes changed use getcomponentname owner", "num": "10443", "d": "8/2017"}, {"title": "componentdidcatch nt work react rendertostring", "body": "tried simple test case new error handling code react ssr following code javascript import react react import rendertostring reactdomserver class errorboundary extends reactcomponent constructor props super props thisstate haserror false componentdidcatch error info display fallback ui consolelog componentdidcatch thissetstate haserror true render thisstatehaserror render custom fallback ui return something went wrong return thispropschildren class throwingcomponent extends reactcomponent render throw new error ooooops consolelog rendertostring result users throw new error ooooops error ooooops throwingcomponentrender users resolve users reactdomserverrendererrender users reactdomserverrendererread users rendertostring users object users modulecompile loader users objectrequireextensions anonymous function js users moduleload far tell code throw rather output afraid maybe nt add new server renderer", "num": "10442", "d": "8/2017"}, {"title": "crossorigin error passed componentdidcatch incorrectly", "body": "tl dr react passing crossorigin error thrown crossorigin scripts see discussion thread repro case able confirm behavior quick look showed null", "num": "10441", "d": "8/2017"}, {"title": "love react way beautiful designed", "body": "", "num": "10440", "d": "8/2017"}, {"title": "callback lifecycle", "body": "react good templating engine making animation sometime horrible use greensock animation library animation since react animation library like impressed solve design task nt problem need animation unlike animation apply hack last situation example wrapping component extends react lifecycle another hack general want ask possible add callback lifecycle easily animate components", "num": "10439", "d": "8/2017"}, {"title": "reactcomponent docs displayname", "body": "following statement displayname string used debugging messages jsx sets value automatically see jsx depth almost sure incorrect neither react jsx sets automatically another error docs jsx depth nt even mention maybe could change something like displayname string used debugging messages usually nt need set explicitly inferred function class name creates component might want set explicitly want display different name debugging purposes create higherorder component see wrap display name easy debugging details makes sense", "num": "10438", "d": "8/2017"}, {"title": "reactdom docs confusing sentence", "body": "following statement reactdomrender modify container node modifies children container may possible insert component existing dom node without overwriting existing children think replaced wrong", "num": "10435", "d": "8/2017"}, {"title": "tutorial nonsense sentence run", "body": "want request feature report bug bug current behavior note onclick dom component special meaning react could called onclick prop square handleclick board something else current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior verb handleclick board part part first clause versions react browser os affected issue work previous versions react", "num": "10433", "d": "8/2017"}, {"title": "referencing within defined", "body": "nt necessarily bug feature asking implemented currently inside component undefined however defined value within realize point different instances demonstrating difference example javascript class example extends reactcomponent render consolelog thiskey undefined return reactchildrenmap thispropschildren child gt consolelog childkey defined return child expect readablewriteable within however seems counterintuitive idea undefined within component", "num": "10432", "d": "8/2017"}, {"title": "change reactcreatclass property getdefaultprops callback object like proptypes", "body": "think proptypes object getdefaultprops callback uncomfortable change know", "num": "10423", "d": "8/2017"}, {"title": "events registered inside shadow dom", "body": "want request feature report bug bug current behavior render react component inside shadow dom events dispatched react ie something like javascript alert clicked gt foo bar nothing happens someone investigated already got bottom wrote work around current behavior bug please provide steps reproduce possible minimal demo problem following official docs expected behavior events dispatched even react app rendered shadow dom versions react browser os affected issue work previous versions react browsers tested react", "num": "10422", "d": "8/2017"}, {"title": "onchange event fires incorrect selectedindex value", "body": "want request feature report bug report bug current behavior element event fired incorrect like nt actually changed happens element rendered another react dom root see example link current behavior bug please provide steps reproduce possible minimal demo problem expected behavior callback handlers receive events values user actually selected test case example choosing two expect following console output versions react browser os affected issue work previous versions react bug observed packages version latest stable version works fine", "num": "10420", "d": "8/2017"}, {"title": "dynamic names snapshot files jest", "body": "hi using snapshot testing application application theme based parameter passed component theme changes look n feel app adding classes elements want generate snapshots components themes want duplicate code keep two separate testspec files way generate snapshot files based theme passed one spec file expected behaviour two theme values dark light one componentspecjs file generate componentdarkspecjssnap componentlightspecjssnap based theme passed way separate separate snapshots based theme one source spec file", "num": "10419", "d": "8/2017"}, {"title": "documentation style numeric values treated pixels missing", "body": "used exist react documentation tips section mentions support missing entirely old documentation page removed commit", "num": "10418", "d": "8/2017"}, {"title": "server side rendering warning using uppercase html always use lowercase html tags react", "body": "want request feature report bug report bug current behavior whenever render svg elements camel cased eg server side get following warning expected behavior warnings consistent client side rendering possible case expect warning since using camel cased svg element names pretty standard client side rendering seems check current namespace server side rendering seems currently check place versions react browser os affected issue work previous versions react hitting hitting version previously thanks advance", "num": "10415", "d": "8/2017"}, {"title": "unexpected rerender different nodeenv", "body": "hi want request feature report bug reporting bug gets crazy current behavior found strange behavior development version production one nt know production build redirect happens entire tree switch component rerendered scratch nodeenv development nodeenv production noticed production env keys generated every time route changes opened issue reactrouter repos also tried also nt minify anything result someone knows happening may causing versions react browser os affected issue work previous versions react react reactrouterdom os macos sierra version browser google chrome version official build", "num": "10413", "d": "8/2017"}, {"title": "two steps server side rendering", "body": "want request feature report bug feature current behavior imagine component triggers api request method updates internal state want render version component operation call twice expected behavior many ways achieve static methods component etc way seem tricks proper api would better", "num": "10411", "d": "8/2017"}, {"title": "broken date inputs test dom fixture", "body": "open date inputs test harness click little x clear input rangeerror invalid time value fixture broken beta", "num": "10408", "d": "8/2017"}, {"title": "warn early event listener function", "body": "used throw event listener function stack fiber silently ignores think throw would let us add support objects eg passive listener configuration want minor rather major", "num": "10407", "d": "8/2017"}, {"title": "show better message react loaded", "body": "currently react loaded reactdom shows throw nicer error message entry point think", "num": "10406", "d": "8/2017"}, {"title": "reactdom removes server rendered content rendering", "body": "want request feature report bug bug current behavior react reactdom removes server rendered content rendering tested applications big component tree perceivable user current behavior bug please provide steps reproduce possible minimal demo problem reproduced bug tiny app box component rendered server sent client client loads bundlejs contains component added debugger box component show open dev tools react react code expected behavior reactdom perform reconciliation without removing content react behavior versions react browser os affected issue work previous versions react browser chrome current version previous version", "num": "10405", "d": "8/2017"}, {"title": "outstanding work custom attributes pr", "body": "final work land x add attributes need boolean values back whitelist x data aria attributes accept booleans x warn nan x test coverage unknown booleans done sufficient x aria camel casing verify nt regressions existing attribute support manual test page x need pass objects warn otherwise warn html x missing warning bad type second use attribute x change warning wrong casing specific", "num": "10404", "d": "8/2017"}, {"title": "add tests gt transition", "body": "deleted testing public api hard say tested path code actually took either add similar test public api equivalent test manual fixtures see details", "num": "10401", "d": "8/2017"}, {"title": "noshade attribute working element", "body": "want request feature report bug bug current behavior passing element nt work current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior attribute added rendered dom versions react browser os affected issue work previous versions react", "num": "10400", "d": "8/2017"}, {"title": "rfc plan attributes react", "body": "note final plan changed refer details ends react formal conclusion discussion mostly yet fully implemented meant address wrote doc mostly based discussion nhunzaker decided write attempt formalize behavior want bugs refer back current behavior react lets use approved camelcase properties look organic javascript js warning gt gt gt warns gt gt gt two downsides problem custom attributes pass custom nonstandard libraryspecific notyetstandardized attributes popular feature request problem maintaining whitelist currently maintain whitelist allowed attributes use even production build permissive drop reactdom size postmingzip without changes app code guiding principles change current behavior existing principles want preserve code behave identically development production one pretty obvious constraints whitelist existing applications keep working okay getting permissive passing attributes dom want change react dom apis point one obviously valid way supply property component example allowing would ambiguous confusing component authors maintain spirit javascriptcentric api users already bought idea important props consistent used javascript match htmlsvg specs want change think compromise lets us solve problems without deviating principles proposed behavior overview drop large part whitelist make behavior less strict used ignored due wrong casing passed instead omitted emit warning however still pass attributes differ casing react version lets us drop reactdom bundle size keep whitelist development proposed behavior depth let say attribute name use react name htmlsvg specs whitelist map react might look like proposed changes whitelist remove attributes special behavior words delete attributes work regular html get size savings still keep full attribute whitelist dev mode warnings proposed changes algorithm let say attribute user jsx follow steps step check exists whitelist equal match use corresponding name whitelist exit example matches behavior match continue step check exists whitelist trying determine user using dom version attribute sufficiently different one suggested react casing case render anything warn exit far matches behavior note catch cases sufficiently similar excluded whitelist example keep whitelist anymore hit case continue step value type valid write dom warning deviates react canonical api deviate reached stage render dom anyway may may successful render strings numbers value different type skip warn numbers also warn still render value coerced string success depends whether dom accepts attribute however still warn words warn canonical react api differs casing cases step also captures new requirement completely unknown attributes happily pass considerations aria data attributes still pass validation aria attributes moved developmentonly allow warn unexpected aria attributes attributes seem like aria attributes eg minor deviation pass everything approach seems sensible handling custom element attributes changed handling special attributes eg changed note approach adding support new dom attribute still possible minor version long different casing people would get warning new canonical name least old name might using would still work unlike case completely disallow second name known attributes allow custom attributes general", "num": "10399", "d": "8/2017"}, {"title": "reactnativefbsdk setup", "body": "bug report trying setup reactnativefbsdk fails followed steps given link get following error want installation go successfully currently using version react trying first time way found reactnativefbsdk raise issue hence raising please help", "num": "10398", "d": "8/2017"}, {"title": "onmouseleave strange behaver disabled child element", "body": "bug report demo contains disabled button react trigger correctly div trigger mouse button move div tried amp chrome issue sure whether appear", "num": "10396", "d": "8/2017"}, {"title": "nonissue need advise adding authentication react app", "body": "fact would like integrate facebook authentication react app save user credentials database along additional data used authenticate api idea handle authentication authorization react app went books none touched aspect point book tutorial link whatever think point right direction thanks advance", "num": "10395", "d": "8/2017"}, {"title": "issue", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10392", "d": "8/2017"}, {"title": "request exports htmldompropertyconfig svgdompropertyconfig ariadompropertyconfig", "body": "feature request react htmldompropertyconfig svgdompropertyconfig ariadompropertyconfig available directly eg however longer available think public parts reactdom inevitable implement library build react dom html text see use", "num": "10391", "d": "8/2017"}, {"title": "reacttestrenderer shallow api mismatch", "body": "want request feature report bug feature currently different apis reason would helpful switching shallow supported put together pr interest reacttestrenderer javascript import testrenderer reacttestrenderer renders gt const result testrenderercreate expect result tomatchsnapshot shallow javascript import shallowrenderer reacttestrenderershallow renders gt const renderer new shallowrenderer const result rendererrender expect result tomatchsnapshot", "num": "10390", "d": "8/2017"}, {"title": "attribute needed guaranteed react", "body": "gaearon mentioned react guarantee attribute set probably bug understand well react ensure property set anyway current behaviour react renders html element without attribute explicitly passed demo time pen made simple example setting element obtaining result actually property set well since original medial file audio track pen result muted point think specific need expected behaviour functionality pov absolutely ok component renders muted requested browsers policies specifically related issue webkit new policies ios updated one year ago interesting changes element part interested elements also allowed autoplay without user gesture specific need explicit tell browser video could ed similar issue", "num": "10389", "d": "8/2017"}, {"title": "consider renaming rendertostream rendertonodestream", "body": "checkin code render stream looks like import rendertostream reactdomserver rendertostream text pipe response great however little concerned taking word node mix thinking may eventually want render browser streams really neat feature used concert serviceworkerside rendering would propose renaming would give room future make pr would chance accepted cc gaearon amp sebmarkbage", "num": "10388", "d": "8/2017"}, {"title": "unhandled error displayed twice", "body": "bit weird look last log notice internal error supposed give error boundary said uncaught wonder nt look like intentional", "num": "10384", "d": "8/2017"}, {"title": "array length read", "body": "hello new react trying run piece code following function use iterrate array run gives error uncaught typeerror read property length undefined someone help understand wrong thanks movimentionclick function idselected var itemsel null", "num": "10383", "d": "8/2017"}, {"title": "much unnecessary updates child element moved front", "body": "want request feature report bug sure bug accepted behavior affect performance situations even break expectations others eg animating moved elements ie simple moves current behavior child element moves end list front react actually moves elements movedlast element instead simply inserting moved element front list also stated generally element block elements moving backward significant shift current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo shows dom operations performed dom nodes moves amp insertions reconciliation reproduce issue type input field click type move last x front click output instead moving x front react actually moves elements x note demo uses mutationobserver api find operations also verify behavior directly commenting code activates dom observer componentdidmount watch dom operations manually devtools element inspector expected behavior react perform minimal number operations know minimum vary situation trivial infer general case common cases like one feasible info use case handled virtual dom libs like preact snabbdom inferno remarkable case always infer minimum number operations uses algorithm find longest increasing subsequence array containing indexes old elements found behavior working demo find vdom libs rearrange nodes children reconciliation example output libs demo versions react browser os affected issue work previous versions react demo uses version tried behavior", "num": "10382", "d": "8/2017"}, {"title": "better explanation component nt imported", "body": "want request feature report bug feature current behavior console expected behavior", "num": "10381", "d": "8/2017"}, {"title": "dispatch blur event siblings", "body": "two elements level onblur handler one element loses focus callback try dispatch blur event second element maximum call stack size exceeded error console try example jsfiddle click second element press tab button lose focus example link version", "num": "10380", "d": "8/2017"}, {"title": "\u7ec4\u4ef6\u5b9e\u4f8b\u5316\u7684\u95ee\u9898", "body": "", "num": "10379", "d": "8/2017"}, {"title": "number input firing onchange", "body": "know bug feature since put input type number two minuses stop calling callback value inside input change react browser version official build", "num": "10370", "d": "8/2017"}, {"title": "dynamically created element unable load dangerouslysetinnerhtml", "body": "dangerouslysetinnerhtml getting loaded component rerenders sample declaration dynamic component sample usage", "num": "10367", "d": "8/2017"}, {"title": "async toplevel hook commit", "body": "nt needed think missing toplevel api want integrate nonreact code around async way probably parents around always case want show parents react done maybe hide show callback time however would better could start building tree async react get callback trigger lifecycles insert tree actual dom whatever manipulation need trigger lifecycles way css layout information available virtue document already see two possible routes call hook commit immediately b invoke callback pass another function function invoked actual commit approach precedence dom append async offscreen canvas second option probably preferable efficiently cleanly", "num": "10366", "d": "8/2017"}, {"title": "make google chrome devtool play well reactjs", "body": "hi usually difficult debug reactjs site know react redux work many projects nt follow official document write bunch code customize make project difficult understand easiest way know whole working flow follow debugging chrome devtool nt play well reactjs example breakpoint nt hit print nt hit breakpoint want know error come find familiar node package need debug lines ca nt set breakpoint wrong scope see scope shows googled nothing helpfuli really want working debug solution would help much", "num": "10365", "d": "8/2017"}, {"title": "adding image tag inside react component throws error", "body": "working app trying use image tag thought something setup stripped everything zero indexhtml indexjs import react react import reactdom reactdom reactdomrender documentgetelementbyid app image renders properly get error console reads digging source error thrown following function inside given dom node return closest reactdomcomponent reactdomtextcomponent instance ancestor function getclosestinstancefromnode node node internalinstancekey return node internalinstancekey walk tree find ancestor whose instance cached var parents node internalinstancekey parentspush node nodeparentnode node nodeparentnode else top tree node must part react tree unmounted potentially return null var closest var inst node amp amp inst node internalinstancekey node parentspop closest inst parentslength precachechildnodes inst node return closest nt matter put image inside component surrounded divs siblings alone nothing gets rid error", "num": "10363", "d": "8/2017"}, {"title": "throw host component function child", "body": "surprised throw neither stack fiber always indicative mistake", "num": "10360", "d": "8/2017"}, {"title": "reactdomfactories peerdep", "body": "want request feature report bug bug current behavior reactdomfactories peerdep react seems though work react current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior reactdomfactories works react versions react browser os affected issue work previous versions react react", "num": "10358", "d": "8/2017"}, {"title": "react shallow renderer batched updates discussion", "body": "react comes new completely rewritten shallow renderer new renderer nt currently provide method issue discussion whether implement method cc flarnie lelandrichardson recently discussed wrt potential impact enzyme cc initially added integration enzyme also provided example implementation", "num": "10355", "d": "8/2017"}, {"title": "docs add note checkboxesradios preventdefault", "body": "want request feature report bug add note docs preventdefault causing issues change handlers checkboxesradios current behavior note issue docs made pr merged got lost removed new docs helping someone exact issue asked nt covered docs expected behavior explanatory note docs", "num": "10354", "d": "8/2017"}, {"title": "wrong child key prop warning babelplugintransformreactinlineelements", "body": "want request feature report bug feature bug current behavior warning seems say inside inside component incorrect key props actual fact element inside inside component causing problem looking things add key prop warning disappears warning also disappears remove ref string know deprecated nt get warnings seems like string refs key prop warnings might combining somehow another reason confusing component array inside children iterate anything think keys actually really required component looks like svganimation looking things expected behavior targeted warning either problem key props problem string refs clearly separated also targeted correct element case instead versions react browser os affected issue work previous versions react react", "num": "10352", "d": "8/2017"}, {"title": "onchange event nt fire trying type value input using appium ios", "body": "want request feature report bug bug current behavior onchange event nt fire trying type value input using appium type value programmatically current behavior bug please provide steps reproduce possible minimal demo problem via similar template also tried android work fine relates ios expected behavior onchange event fired trying type value input using appium versions react browser os affected issue work previous versions react react since works fine iphone ios appium", "num": "10347", "d": "8/2017"}, {"title": "permissive rehydration logic", "body": "last little pursuing idea called react snapshot instead running code node environment generate static html run virtual browser jsdom chrome headless take snapshot dom particularly moment time host snapshots like static file technique also known prerendering tossing around different api choices order handle components async data fetching requirements already starting see real promise approach snapshot environment similar client one far fewer changes needed get performance amp accessibility benefits serving real html users example react snapshot async api make component snapshottable diff import snapshot reactsnapshot class home extends reactcomponent state quotes null componentwillmount snapshot gt fetch apiquotes response gt responsejson quotes gt thissetstate quotes render const quotes thisstate return quotes amp amp quotesmap quote gt idea async parts app wrapped call caches responses rehydrates client however hit walls think means need changes react take logical conclusion hence wanted start discussion whether changes would compatible react future direction rehydration far tell experimentation reading code two criteria reusing existing dom elements prerendered html page hash initial clientrendered markup match present instance render tree needs match dom element two criteria enforced structure content dom kinda see checksum cheapest way confirm structure id element needed actually wire everything also attribute could calculated something longer present html however generating exact right checksum way existing ssr api turns pretty difficult htmlescaping woes hit problem rendering react app like normal taking root container passing addchecksumtomarkup getting checksum first realised needed add element along way nt hard still nt working figured due escapetextcontentforbrowser converting things like meaning content appears rendered precise string therefore checksum rehydration takes place understand reading code react always sanitises html content generating markup server client fact injected dom nt resanitise things like quotes nt technically need discussed issue changed particular problem would disappear may well nt hit yet real issue needing content byteforbyte equivalent rather functionally structurally equivalent interim solution moment realised easier boot app entirety wait async processes take place effectively reboot app using splice markup place sideeffects relying like css injection meta tags head affect dom outside react app preserved markup checksum reactrendered html guaranteed correct works ideal still understand components running two different modes run different lifecycle methods one generates final snapshot think adds unreasonable conceptual burden much way serverrendering really problem see status quo started looking problem first place snapshotserver rendering requires much overhead people wo nt exactly createreactapp nt include none options simple enough broad enough applicability official react router docs warn agains combining serverrendering codesplitting serverrendering boilerplates include fairly specific webpack hacks provide environment server client etc result people ever clientrendering serve blank page amp render everything clientside code splitting service worker caching offer useful advantages imo enough snapshot rendering could solution offer big benefits small changes application code dream solution architecturally like arbitrary react app launched one browser executed ready async resources complete snapshotted serialised html resumed another browser snapshots would generated cached edge cdn deployment periodically depending often content changes practically think would require two changes react architecture first weaker check fingerprint hash escaped html method snapshot indicate react reuse much existing dom possible second would parts tree rehydrated rather whole thing component sideeffect say snapshotted html would include result sideeffect app boots client side render method generate initial behaviour moment react would replace rendered might preferable leave dom unchanged first render wire things later nt know exact specifics solution know enough internals react become wanted start discussion see interest react team amp wider community use case direction look forward hearing thoughts", "num": "10338", "d": "8/2017"}, {"title": "delete raf reactdomframescheduling", "body": "nt use raf scheduling anything anymore yet still enable reactdomframescheduling probably simplified bit exposing", "num": "10336", "d": "8/2017"}, {"title": "move benchmark dependencies main packagejson", "body": "nt require working react let move similar take time space regular installs", "num": "10335", "d": "8/2017"}, {"title": "use sri documentation links umd builds", "body": "seems may bit confusion loading react via sri unpkg cdn happy submit pr appropriate values tags wanted see yall interested first feel free close", "num": "10332", "d": "7/2017"}, {"title": "reacttestutilsrenderintodocument resources clean documentation", "body": "want request feature report bug featuredocumentation current behavior almost none documentation actually use method ca nt find find answers questions website know facebook either render component dom test destroyed clean tools use get container pass additional component trees like popovers best ways test nt parts left component unmounted current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior nice see information people met memory leaks tests also help establish good practices writing tests versions react browser os affected issue work previous versions react", "num": "10330", "d": "7/2017"}, {"title": "invariant messages nt extracted", "body": "sure see messages beta bundles like understand", "num": "10328", "d": "7/2017"}, {"title": "prevent extension synthetic event", "body": "based discussion support putting custom data synthetic events maybe make clearer", "num": "10327", "d": "7/2017"}, {"title": "dynamic create child element classname update correct", "body": "code like var myapp reactcreateclass getinitialstate function return ch b c onclick function thissetstate ch c function thisrefsaclassnamewuwu thisrefsavalue render function return thisstatechmap function obj index consolelog haha wuwu return reactdomrender documentgetelementbyid main first click change button change second child classname click redux button formitem one child classname must haha classname think may bug vdomrender fix problem", "num": "10326", "d": "7/2017"}, {"title": "exportimport components state components", "body": "hello yrs old new react native trying export component interact another component exactly sytanx according rules also want share state component another export component well thanks", "num": "10325", "d": "7/2017"}, {"title": "documentation add version information", "body": "please list need node gt machine description npm install g createreactapp creating new application document want know required version running command", "num": "10324", "d": "7/2017"}, {"title": "documentation improve tutorial example code write", "body": "tried tutorial delete files src folder new project think good example code example misunderstanding remove src directory thank", "num": "10323", "d": "7/2017"}, {"title": "custom field event cleaned", "body": "want request feature report bug bug current behavior custom field event clean data appear event fired current behavior bug please provide steps reproduce possible minimal demo problem via similar template current behaviour reload click yellow area alert hello click green area alert hello reload click green area alert undefined expected behavior expect clicking yellow area always alert hello clicking green area always alert undefined versions react browser os affected issue work previous versions react got problem sure affect earlier version", "num": "10322", "d": "7/2017"}, {"title": "error null captured error warning due crossorigin issues", "body": "three points discussion due environments like codesandbox show react caught error warning let consider skipping useful look like bug looks like separate error draws attention away real error case probably print js stack related issue pass error boundary caught seems error boundaries intuitively something like read break falsy values like proposal always wrap primitives objects pass boundary", "num": "10321", "d": "7/2017"}, {"title": "uncaught typeerror thisupdaterenqueuecallback function using setstate callback", "body": "want request feature report bug bug beta version current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template component used pretty simple piece code js dosomemore gt stuff dosomething value gt thissetstate value thisdosomemore firing dosomething causes error expected behavior expect thisdosomemore function called thissetstate thisdosomething versions react browser os affected issue work previous versions react version react tested several versions confirm bug also appears bug appear", "num": "10320", "d": "7/2017"}, {"title": "dangerouslysetinnerhtml bug", "body": "hi guys found bug copied pasted image custom textarea got difference thisstatetext innerhtml values correct nt know fix reproduce chrome version official build ubuntu lts", "num": "10319", "d": "7/2017"}, {"title": "using instead still experimental means", "body": "documentation page using arrow function instead marked experimental still considered experimental", "num": "10318", "d": "7/2017"}, {"title": "finesse signature componentdidcatch react", "body": "want request feature report bug improvement new feature current behaviour believe proposed name little confusing expected behavior nutshell proposal changing signature naming conventions often halfjokingly labelled one difficult things computer science think could easily tweak signature componentdidcatch lifecycle method introduced react heavily inspired principles covered famous clean code book robert c martin particularly like idea solid naming conventions basically guess function sort variable dealing literally reading names yes every software developer world associate term catch trycatch construct first question came mind came across something along lines catch think could avoid confusion make new method bit intuitive renamed either renamed second argument something would better indicate expecting string eg find term info used recent blog post little vague immediately obvious whether meant string maybe object forget actual functionality new method seems great ca nt wait opportunity implement projects versions react browser os affected issue work previous versions react react", "num": "10317", "d": "7/2017"}, {"title": "react unstablerendersubtreeintocontainer always return instance", "body": "want request feature report bug bug current behavior using reactmodal library tested react beta throws error try close modal reason calls expects instance back sometimes null closing trying read state get null reference error use api like works component never tries read use like get error tries read current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior always return instance modal librarly works close versions react browser os affected issue work previous versions react react beta works previous versions", "num": "10310", "d": "7/2017"}, {"title": "reactdomrender unstablerenderintocontainer nt return instance called update", "body": "want request feature report bug bug current behavior reactdomrender reactdomunstablerendersubtreeintocontainer longer return created react component instances current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior steps thiscomponentref instance created null react beta entirely possible something different clear versions react browser os affected issue work previous versions react react beta chrome osx thanks", "num": "10309", "d": "7/2017"}, {"title": "server rendering warnings vague", "body": "want request feature report bug feature current behavior server rendering react dom hydrating different structure react rightly warns inconsistencies first saw warnings sure exactly going wrong warnings receiving warning find matching warning find matching warning expect server html contain last error catch problem serverrendering inconsistencies client render intentional moment testing things unpure render functions expected behavior explicit rendering inconsistency server client versions react browser os affected issue work previous versions react react", "num": "10307", "d": "7/2017"}, {"title": "serverrendered html polluted empty datareactid attributes", "body": "want request feature report bug bug feature current behavior using new react serverrendering using regular package method html dom output created root element attribute elements attribute every single html element ends consuming lot bytes large pages seems like potentially might necessary new client rehydration could least reduced size since appears serve real purpose besides binary marker point quote beta release notes server rendering use markup validation anymore instead tries best attach existing dom warning inconsistencies see new streaming serverrenderer well nt managed take look yet expect two methods rendering output versions react browser os affected issue work previous versions react nodejs react edit quickly illustrate talking better extra characters html element rendered react small example app characters", "num": "10306", "d": "7/2017"}, {"title": "react build deploy firebase error", "body": "want request feature report bug report bug current behavior deploy build firebase get error current behavior bug please provide steps reproduce possible minimal demo problem via similar template get error uncaught syntaxerror unexpected token lt deploy react build firebase createreactapp project npm firebase firebase init npm run build work get firebase deploy first deploy work try change code appjs npm run build get new firebase deploy open browser chrome firefox ie get error uncaught syntaxerror unexpected token lt fixed issue expected behavior get right mainjs deploy firebase versions react browser os affected issue work previous versions react error ie chrome firefox", "num": "10304", "d": "7/2017"}, {"title": "uncaught typeerror read property func undefined", "body": "bug webpack nodemodulesreactrouterlibinternalproptypesjs code var react require react var func reactproptypesfunc var object reactproptypesobject var arrayof reactproptypesarrayof var oneoftype reactproptypesoneoftype var element reactproptypeselement var shape reactproptypesshape var string reactproptypesstring uncaught typeerror read property func undefined react object contains proptypes dependencies babelplugintransformobjectassign babelpolyfill babelruntime bootstrap chartjs cheerio createreactclass enzyme eventsourcepolyfill hardsourcewebpackplugin imgloader immutable jquery jszip mixpanelbrowser moment mssignalrclient proptypes react reactaddonstestutils reactcookie reactdaypicker reactdom reactdropzone reactflexslick reactmixpanel reactredux reactresizedetector reactrouter reactrouterredux reactslick reactsmooth reactsortablehoc reactstockcharts reacttooltip reactvirtualized recharts redboxreact redux reduxdevtoolsextension reduxthunk sassloader slickcarousel superagent toastr webpackdevmiddleware devdependencies babelcli babelcore babelloader babelpluginreactdisplayname babelplugintransformobjectassign babelplugintransformruntime babelpresetreact babelpresetreacthmre babelregister bundleloader chartjs cheerio cleanwebpackplugin colors compression compressionwebpackplugin copywebpackplugin crossenv cssloader enzyme eslint eslintpluginimport eslintpluginreact eslintwatch eventsourcepolyfill expect exposeloader express extracttextwebpackplugin fileloader jsdom jsonloader mocha nock nodesass npmrunall oneskyutils open reactaddonstestutils reduximmutablestateinvariant reduxmockstore rimraf sassloader styleloader urlloader webpack webpackcleanobsoletechunks webpackdevmiddleware webpackhotmiddleware", "num": "10302", "d": "7/2017"}, {"title": "react server renderer breaks style object prod mode", "body": "bug react beta server renderer reported react beta thread renderer throws exception included nodeenv given file indexjs const react require react const reactserver require reactdomserver const reactcreateelement div classname signlink id signlayoutlink style position absolute consolelog reactserverrendertostring run get weirdly dev mode throw error", "num": "10299", "d": "7/2017"}, {"title": "react keep report error component found", "body": "want request feature report bug report bug current behavior component notfound react keep report error current behavior bug please provide steps reproduce possible minimal demo problem via similar template import react react export default function app return hello expected behavior report error versions react browser os affected issue work previous versions react react", "num": "10298", "d": "7/2017"}, {"title": "react rc", "body": "third react rc available public testing installation instructions rc published npm tag next regular npm installs continue use release install rc use react mean react first release ships rewrite react core previously codenamed fiber rewrite goals remove old internal abstractions age well hindered internal changes let us ship requested features like returning arrays render recovering component errors readable component stack traces every error enable us start experimenting asynchronous rendering components better perceived performance initial react release mostly focused compatibility existing apps enable asynchronous rendering yet introduce optin async mode later react expect react make apps significantly faster slower love know see improvements regressions javascript environment requirements react depends collection types map set support older browsers devices may yet provide natively eg corejs babelpolyfill polyfilled environment react using corejs support older browsers might look like js import import import react react import reactdom reactdom reactdomrender hello world documentgetelementbyid root react also depends even test environments simple shim testing environments would points interest complete rewrite react expect work existing code fixed deprecation warnings introduced beta work third party libraries relied deprecated unsupported apis may need updates work correctly new release good time file issues libraries problems tell us broke something particularly interested hearing performance differences notice nt expect massive changes would love know improvements regressions please report server renderer completely rewritten offers streaming mode reactdomserverrendertonodestream reactdomserverrendertostaticnodestream server rendering use markup validation anymore instead tries best attach existing dom warning inconsistencies anymore server renderer code still new likely issues please report hydrating server rendered container explicit api use instead reviving server rendered html keep using clientside rendering react native follows different release cycle update beta future release already using alpha release yet using fiber breaking changes error handling previously runtime errors used put react broken state produce cryptic errors react fixes introducing special kind components called error boundaries error boundaries catch runtime errors component tree log display fallback ui instead uncaught error component error boundary tree whole component tree unmounted helps avoid nasty bugs ui corrupted due error means need add error boundaries app handle errors gracefully react limited undocumented support error boundaries different method name used called renamed learn new error handling behavior scheduling lifecycle return called inside lifecycle method work around either use new portal api refs calling null longer triggers update allows decide updater function want rerender calling directly render always causes update previously case regardless calling setstate render callback second argument fires immediately instead components rendered replacing always happens previously could fire first cases previously changing ref component would always detach ref component render called change ref later applying changes dom safe rerender container modified something react worked previously cases never supported emit warning case instead clean component trees using see example lifecycle longer receives param see shallow renderer longer calls dom refs available also makes consistent get called previous versions either shallow renderer implement anymore packaging anymore even commonjs environments react reactdom precompiled single files flat bundles previously relied undocumented react internals work anymore let us know specific case issue try figure migration strategy build anymore compatible addons published separately npm singlefile browser versions need deprecations introduced removed core package available shallow renderer see blog posts instructions migrating code automated codemods names paths singlefile browser builds changed emphasize difference development production builds example js known issues server renderer crashes production inline styles fixed fixed server renderer nt yet support returning arrays strings components fixed server renderer still renders somewhat unnecessarily fixed shallow renderer pass fixed fixed issue older browsers fixed cases reported instead real error fixed report google crawler render page using link fixed popular third party libraries work yet eg enzyme please report issues thread updates released july released july fix crash server rendering released august fix strictmode function scope problem better error log messaging crossorigin handling shallow renderer improvements edgecase context bugfix single point entry server rendering etc released august warn unresolved function child remove datareactid datareactchecksum whitelist new test renderer api features disabled via feature flag minor updates slightly reduce bundle size release fix bugs related unmounting error boundaries enable new fiber reacttestrenderer api methods previously disabled behind feature flag released september fix error fxfactorial bvaughn improve error message reactdom loads without react aweary warn nesting subtree inside sophiebits nt warn casing ssr nonhtml ns sophiebits throw error warn mistaken loading prod dev react bundles flarnie reset instance vars calling commit phase lifecycles acdlite warn event listener function aweary fix bug react roots would cause error acdlite allow passing unknown attributes dom components nhunzaker others fix bug elements defaulted first option even disabled aweary nhunzaker released september fix bug react npm packages would throw exception startup browsers supporting natively sophiebits released september report bad dead code elimination react devtools gaearon fix false positive warning hydrating svg ssr gaearon add warning nonlowercase custom attributes gaearon fix memory leak gaearon remove deprecated entry point shallow renderer gaearon remove undocumented methods gaearon add official api without unstable prefix gaearon repeat polyfill twice gaearon", "num": "10294", "d": "7/2017"}, {"title": "document non interaction native synthetic events", "body": "trying find react event handlers able prevent event handlers document hours searching experimenting stumbled across issue explains unfortunately documentation gives impression react events work exactly like native events apart wrapping synthetic events could therefore interact please document case", "num": "10284", "d": "7/2017"}, {"title": "asyncawait lifecycle functions need executed order", "body": "request feature current behavior expected behavior asyncawait lifecycle functions need executed order need executed still pending chrome", "num": "10278", "d": "7/2017"}, {"title": "unable fix proptypes moved separate package", "body": "one modules use reactnativespinkit started throwing error updated rn went file causing error nodemodulesreactnativespinkitindexjs made changes described migrating reactproptypes even tried automatically applying changes jscodeshift ran however still getting warning want help project use wrong code code", "num": "10277", "d": "7/2017"}, {"title": "update docs example babel jsx allows elements attribute values", "body": "resolved via babel work example added react documentation would jsx depth appropriate", "num": "10276", "d": "7/2017"}, {"title": "pass classname classnames module", "body": "hi usually situation write code like seems simple elements need dynamic classes gets tedious pretty hard read propose following thing attribute evaluated running classnames rendering html means attribute allow types would become much simpler write code guys think", "num": "10271", "d": "7/2017"}, {"title": "reactdomrender callback return top level element", "body": "nt see way obtain top level element new async previously would return top level component third argument callback pass rendered component callback think bug top level component returned callback", "num": "10266", "d": "7/2017"}, {"title": "invalid unknown prop warnings ssr", "body": "run fixturesssr test harness terminal following warning logged ssr behavior match clientside behavior warn valid attribute", "num": "10265", "d": "7/2017"}, {"title": "safari instanceof checks fail", "body": "see bug safari instanceof checks incorrectly fail rendering player component internal renders jsx video tag result safari constructor correct instanceof checks fail expected behaviour first two return true tips work around safely breaking component third party library instanceof check video element", "num": "10263", "d": "7/2017"}, {"title": "getting reference component instance snapshot testing", "body": "app currently stacked provider followed parent appcontainer component followed actual component using snapshot testing load component call methods gives instance provider component get instance mycomponent able call methods tried js const tree renderer create gives error able resolve context see way pass context help", "num": "10261", "d": "7/2017"}, {"title": "change data obj array use setstate", "body": "obj like want change g idea", "num": "10260", "d": "7/2017"}, {"title": "setstate change obj k v", "body": "obj k v thisstate obj want change k use setstate thissetstate thx", "num": "10251", "d": "7/2017"}, {"title": "html input tag maxlength bug", "body": "met problem follow want render input tag value react component mounted set maxlength attribute input confusing value length maxlength display without split see demo anyone help", "num": "10250", "d": "7/2017"}, {"title": "implement new feature flexible component attr definition", "body": "want request feature report bug want feature current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react latest", "num": "10246", "d": "7/2017"}, {"title": "doubts getfielddecorator form", "body": "", "num": "10243", "d": "7/2017"}, {"title": "visit home page styles project load", "body": "routes import export default class extends reactcomponent import export default class extends reactcomponent like code visit homepage load still visit normal", "num": "10242", "d": "7/2017"}, {"title": "babelreactoptimize still value react", "body": "occasionally found plugin says things optimize react want get answer confirmation react team whether optimization still valuable example transformreactpureclasstofunction would definitely write purecomponent instead function could react team clarification thanks lot", "num": "10240", "d": "7/2017"}, {"title": "integrating jquery plugin webuipopover dom events firing due unable change state component", "body": "trying add plugin react component click event button written following code enable popover openpopover webuipopover url popovercontent trigger manual closeable true openpopover webuipopover show popover opening content showing inside popover content react components events firing due unable change state particular component someone please give suggestion thanks", "num": "10233", "d": "7/2017"}, {"title": "cursor input element onfocus uses stoppropagation firefox", "body": "want request feature report bug bug current behavior onfocus event handler element calls stoppropagation cursor element well selection shown firefox bit steps reproduce create element call stoppropation onfocus event handler jsfiddle expected behavior expected cursor selection text visible element seen chrome edge versions react browser os affected issue work previous versions react seen issue react firefox windows", "num": "10232", "d": "7/2017"}, {"title": "question keep single setstate call", "body": "guaranteed calling trigger single rerender better practise pass keep single call", "num": "10231", "d": "7/2017"}, {"title": "fr allow refs sfcs", "body": "want request feature report bug feature current behavior refs sfc currently work expected behavior taking ref sfc equivalent calling simply return highest dom node rendered output", "num": "10230", "d": "7/2017"}, {"title": "element unrecognized", "body": "want request feature report bug bug current behavior tag incorrectly reported invalid html element chrome version current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior similar react tag valid html element versions react browser os affected issue work previous versions react react report error", "num": "10226", "d": "7/2017"}, {"title": "changing local copy state method automatically changes state well", "body": "want report bug least think assigned value state say x local variable method making change variable calling setstate change value state say changes value x well exactly change local variable using setstate change value x using change value yet x changes well exactly way changed local variable earlier initialised using x demo problem clicking button changes numbers rendered using state test clicking button invokes method value x stored variable arr whose first indexed spliced setstate called passing object changing value state temp test updated well value arr using react version chromium running ubuntu lts", "num": "10220", "d": "7/2017"}, {"title": "enable set fontfamily press start", "body": "want request feature report bug bug current behavior setting fontfamily press start fontfamily style property set current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior would like see fontfamily property set press start chrome debugger versions react browser os affected issue work previous versions react last react version chrome mac nt know worked", "num": "10218", "d": "7/2017"}, {"title": "incorrect data compositionend event typing korean", "body": "reproduce go open developer console switch microsoft korean ime standard settings switch korean input put cursor contenteditable div type qwerty keyboard typed input field result developer console list composition events contents data attribute logged however data first event wrong \uc5ec \uc5ec\ub974 see screenshot see wrong trying thing seen screenshot plain nonreact input field emits event proper data occurs latest version react also seen behaviour older versions example causes problems draft js", "num": "10217", "d": "7/2017"}, {"title": "automatic passing html attributes classname id etc props composed component", "body": "want request feature report bug feature current behavior consuming react component libraries frustrating creators specifically handle html attributes passed props outermost container given component regard specific problem best libraries consistent interface applying custom components mediocre libraries provide hardcoded components support custom worst libraries provide neither hardcoded support custom categorizations certainly meant indicator usefulness quality library whole plenty libraries find extremely useful wellmade lack simple interface contrary plenty libraries passed due poor design areas support nice way example minimal example initial render popular infinite list view anonymized avoid fingerpointing jsx resulting html html notice nowhere found component honor passed container really need wrap component resulting additional markup places jsx jsx resulting html html makes total sense disallow arbitrary props automatically applied resulting container however html attributes seems extremely counterproductive automatically current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior na\u00efve approach would automatically apply html attribute composed component outermost container probably ideal better solution would automatic prop passthrough default allow developers override specific see fit benefits twofold libraries lack interfaces like would immediately improved without developer needing anything would still allow prescient developers curate interface way choosing conclusion admittedly nt great solution mind also first time opening react issue hope provokes thoughtful discussion feels like constructive happy provide additional examples problem curious people similardifferent thoughts thanks versions react browser os affected issue work previous versions react versions", "num": "10216", "d": "7/2017"}, {"title": "catch errors render methods", "body": "want request feature report bug feature current behavior component render method throws error leaves react inconsistent state subsequent renders attempt update inconsistent component result errors like read property gethostnode null proposed behavior react could catch error render method set inconsistent state flag rethrow afterwards react update previously rendered component flag set could discard unmount existing component perform fresh render container empty versions react browser os affected issue encountered inconsistent state problems", "num": "10215", "d": "7/2017"}, {"title": "reactdomserver rendertostring fails array type children", "body": "react alpha allows returning array render function server renderer expects children always react elements source fiddle react", "num": "10212", "d": "7/2017"}, {"title": "split svg property configs separate module", "body": "instead supporting directly require people write const svg require reactdomsvg could avoid sending svgdompropertyconfig maybe files unknown upfront would good investigate potential benefits cc sebmarkbage acdlite gaearon nhunzaker jquense aweary", "num": "10209", "d": "7/2017"}, {"title": "renderintodocument render document", "body": "render document whatsoever creates lot issues components listen global events document would great revert behavior function add additional function render isolated div needed", "num": "10206", "d": "7/2017"}, {"title": "unmountcomponentatnode trigger componentwillunmount components mounted unstablerendersubtreeintocontainer", "body": "want request feature report bug sure intended behavior like feature current behavior componentwillunmount get called portal element mounted unstablerendersubtreeintocontainer unmountcomponentatnode called current behavior bug please provide steps reproduce possible minimal demo problem via similar template please check example expected behavior example expect componentwillunmount called interval timeout cleared versions react browser os affected issue work previous versions react google chrome official build cohort stable tried react version", "num": "10205", "d": "7/2017"}, {"title": "components rendering order", "body": "composite component like javascript const const b const c return b c wonder ok write like hope render correct order embed thanks", "num": "10204", "d": "7/2017"}, {"title": "time upgrade license mit", "body": "reference apache foundation bans use facebook bsdpatents licensed libraries like reactjs", "num": "10203", "d": "7/2017"}, {"title": "implement additional async apis preparation", "body": "x similar currently call except updates batched flushed end batch regardless whether nested inside x optin subtree async mode x static flag class components x component type items considering minor releases decided ship commit phase version fires even deep set state subtree replaces global host configs passive versions", "num": "10202", "d": "7/2017"}, {"title": "feature request deferred async shouldcomponentupdate", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10199", "d": "7/2017"}, {"title": "uncontrolled radio fix breaking master", "body": "sure seems caused issues production us need either revert find way fix forward right master broken sync fixing break things", "num": "10196", "d": "7/2017"}, {"title": "update codepen examples use latest react", "body": "iirc currently probably leave using since breaks update anyway", "num": "10193", "d": "7/2017"}, {"title": "react codepen found show loading", "body": "help example codepen working show loading", "num": "10192", "d": "7/2017"}, {"title": "consider relicensing al rocksdb done", "body": "hi apache software foundation legal affairs committee announced socalled facebook bsdpatents license longer allowed used direct dependency apache projects lead lot upset frustration apache community especially projects requiring similarlylicensed code direct dependencies chief rocksdb however apache software foundation received word rocksdb relicensing code dual apache license gpl licenses user reactjs asf toplevel project apache couchdb please consider relicensing reactjs similar terms otherwise many asf projects stop relying building react previous bug suggested mention lacker issue asking licensing questions thank kindly consideration", "num": "10191", "d": "7/2017"}, {"title": "settle heuristicapi choosing hydration", "body": "used either purely clientside content serverside rendered content clientside empty container first render serverside hydrate currently use datareactid determine hydrate clear could theory hydrate patch safe current hydration model initial dom call intending clientside render hydration end nt patch attributes see four possible solutions always patch attributes differ would really slow hydrate normal hydration mode slow initial render nonssr tree continue use heuristic hydrating kind extra meta data html present add serverrenderer change one meta data needed one per element comment attribute introduce explicit api hydrate ssr hydration callsites updated introduce option keep option warning one major version make nonbreaking change allows people incrementally upgrade leisure", "num": "10189", "d": "7/2017"}, {"title": "make uses reactdebugcurrentframegetcurrentstack reentrant", "body": "realized refactor use reactdebugcurrentframe decoupled stack frame error messages reentrant fiber reentrant renderers might synchronous server renderer atm add tests warnings renderers calling serverrender within client render update setreset callsites use pushpop instead account", "num": "10188", "d": "7/2017"}, {"title": "cloneelement children ref dom gt dom dom null componentdidmount", "body": "want request feature report bug report bug current behavior cloneelement children ref dom gt dom dom null componentdidmount js class app extends reactcomponent render return class test extends reactcomponent componentdidmount consolelog thisdom console show null const children content gt return content reactdomrender documentgetelementbyid container however replace gets dom node correctly current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior component instance dom node instance imo versions react browser os affected issue work previous versions react using react", "num": "10183", "d": "7/2017"}, {"title": "firefox error permission denied access property target", "body": "want request feature report bug bug current behavior certain events firefox trigger following error note raven wrapping call nt think relevant specific line code happens suggests could due iframe crossorigin issues iframes embedded although nt able reproduce error current behavior bug please provide steps reproduce possible minimal demo problem via similar template unfortunately able reproduce though happened separate users since firefox upgrade june helps reported similar error ago ravenjs fixed using trycatch expected behavior errors versions react browser os affected issue work previous versions react react firefox windows osx think issue new firefox new behavior react", "num": "10181", "d": "7/2017"}, {"title": "unknown prop tag", "body": "want request feature report bug bug current behavior notice document ontouchforcechange valid event div however get warning logged console unknown prop tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior warning versions react browser os affected issue work previous versions react chome macos", "num": "10177", "d": "7/2017"}, {"title": "devonly requires fb bundles", "body": "see starts js var invariant require fbjslibinvariant eventlistener require fbjslibeventlistener react require react warning require fbjslibwarning executionenvironment require fbjslibexecutionenvironment require fbjslibcamelizestylename var hyphenatestylename require fbjslibhyphenatestylename memoizestringonly require fbjslibmemoizestringonly require proptypes var emptyfunction require fbjslibemptyfunction containsnode require fbjslibcontainsnode focusnode require fbjslibfocusnode getactiveelement require fbjslibgetactiveelement shallowequal require fbjslibshallowequal require proptypescheckproptypes notice nt probably use prod need mechanism express module pure side effects rollup dce", "num": "10176", "d": "7/2017"}, {"title": "server renderer nt include event code", "body": "since currently share injection server renderer includes lot unnecessary clientonly code cut", "num": "10172", "d": "7/2017"}, {"title": "npm like repository free react component created shared community nonissue", "body": "sorry starting react npm like repository free react components created shared community", "num": "10170", "d": "7/2017"}, {"title": "bug radio button fires onchange event one time", "body": "want request feature report bug bug current behavior radio button fires onchange event option current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo code expected behavior radio button fire onchange event whenever value changed versions react browser os affected issue work previous versions react current latest version", "num": "10168", "d": "7/2017"}, {"title": "reactchildrenmap want add key", "body": "use reactcssmodules use key components added let use key first look key components added something extra", "num": "10166", "d": "7/2017"}, {"title": "testutilssimulate event compositeinstance throw early", "body": "help found bug exception typeerror read property reactinternalinstance undefined function getclosestinstancefromnode node node internalinstancekey return node internalinstancekey testing undefined variables also calling function initially reported trying find wrong backtrace promise using react react dom", "num": "10165", "d": "7/2017"}, {"title": "feature suggestion publish react also code", "body": "want request feature report bug feature current behavior react published npm code expected behavior publish react also entry point packagejson motivation performance leverage targeted client native es features part angular package format", "num": "10164", "d": "7/2017"}, {"title": "use amd module react", "body": "project use html css js project modules defined amd like image need rewrite project react sure use module directly react use like using require xxx image important problem one help", "num": "10159", "d": "7/2017"}, {"title": "import amd module react project", "body": "project use html css js project modules defined amd like image need rewrite project react sure use module directly react use like using require xxx image important problem one help", "num": "10158", "d": "7/2017"}, {"title": "incomplete documentation creating web components", "body": "hey documentation creating web components react quite cool works really nice html however component created way unstyled documentation cover add css web component using css end mainhashcss file selectors components create web component css must encapsulated component components dom lives shadow root stylable outside would cool could show way account", "num": "10155", "d": "7/2017"}, {"title": "request build", "body": "entirely sure whether correct place request apologies wasting time integrating react large legacy webclient jumping hoops render comment nodes great joy noticed merged allows us remove hacks however merged latest alpha build created love get alpha build published", "num": "10152", "d": "7/2017"}, {"title": "tutorial concepts without", "body": "tutorials exception advanced guides assume react without tutorial still uses jsx react without jsx tutorial still uses would simple react demo look like compare vue introduction starts simple examples drop webpage", "num": "10147", "d": "7/2017"}, {"title": "hoc onclick nt work without adding new element", "body": "want request feature report bug bug current behavior button clicked wo nt alert current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo link expected behavior onclick event hoc triggered add element event moved element work perfectly javascript const hoc wrappedcomponent gt return class abc extends reactcomponent render return nt want add element component versions react browser os affected issue work previous versions react react", "num": "10146", "d": "7/2017"}, {"title": "remove unstablerenderintocontainer", "body": "hunch want remove accomplishes thing remember adding bunch complexity would nice get rid committing support another release cycle", "num": "10143", "d": "7/2017"}, {"title": "problem solve itplease help", "body": "write function href another web function openpage windowlocationhref function useful wrong npm run build window defined dont know", "num": "10141", "d": "7/2017"}, {"title": "fiber infinite recursion mounting lifecycle", "body": "app intentionally bug app app component returns calls componentdidmount componentwillreceiveprops nt bad user code issue raises regression behaviour react compared react renders directly get react nothing renders app never loads browser spinning forever think react stuck infinite recursion presume fiber nature async fact things never ends makes hard investigate isolate source problem large codebase sort maximum call stack fiber context migrated app latest react native recently weird freezing case app completely unresponsive button works could still native actions like scroll scrollview however even rn devtool menu action working like inspector probably involves js react stuck recursion loop case issue calling lifecycle wrong logic reason code used work past creates recursion loop", "num": "10140", "d": "7/2017"}, {"title": "unknown dom property autocomplete spec says htmlinputelementautocomplete autofocus", "body": "want request feature report bug bug current behavior get warning unknown dom property autocomplete mean autocomplete use works fine misleading name dom property react implies dom property named differently really current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior accepts rejects error message claim name dom property see mention dom property called idl documentation htmlinputelement see mention claim react property name mapped onto differentlynamed dom property use wording good coming wordings js typeof documentcreateelement input autocomplete string typeof documentcreateelement input autocomplete undefined versions react browser os affected issue work previous versions react issue exists least", "num": "10139", "d": "7/2017"}, {"title": "fiber infinite loop error thrown render", "body": "want request feature report bug bug current behavior using react alpha recent versions iirc whenever error thrown inside render react fiber goes infinite loop screenshot current behavior bug please provide steps reproduce possible minimal demo problem via similar template unfortunately minimal repro case yet wanted flag goes beta nt think anything special weird recursive calls similar tried stepping within loop inside fiber internals user code involved expected behavior react throws error stops versions react browser os affected issue work previous versions react repros works fine react", "num": "10137", "d": "7/2017"}, {"title": "base component context overriden child context", "body": "want request feature report bug bug might feature current behavior base component defines context type extending component also defines context base component context overriden child context current behavior bug please provide steps reproduce possible minimal demo expected behavior component defined context versions react browser os affected issue work previous versions react tested amp versions nt test", "num": "10136", "d": "7/2017"}, {"title": "dispatchevent inputtextarea ignored", "body": "want request feature report bug bug current behavior method effect inputtextarea elements current behavior bug please provide steps reproduce possible minimal demo problem via similar template v working v working expected behavior method results event handled versions react browser os affected issue work previous versions react using latest chrome browser worked stopped working still working usecase old tests happily remove support", "num": "10135", "d": "7/2017"}, {"title": "animationdelay applying", "body": "using react style appear applying specific working trying debug problem jsx import react component react import pageloadingindicatorcss export default class pageloadingindicator extends component render let points let duration seconds let durationperbit duration points let bitwidth points let height return bitwidth width animationdelay animation upon inspection rendered html looks like html", "num": "10134", "d": "7/2017"}, {"title": "support inheritance", "body": "recall discussing supporting inheritance react components unfortunately ca nt find discussion github search know react repository owners functional programming lovers respect people think functional programming good many usecases best approach every use case please nt ask use case try handle way prefer code way fine never problems scalabilityreadabilitymaintainabilityextendibility code past years least never chose php building web servers try change php even though websites much smaller facebook another thing open source great library like react considering huge user base also take responsibility users relation work respect people nt force things expect politicians follow rule also follow place make decisions affect many others hate politicians use media brainwash people raise votes populistic methods strongly believe react developers unconsciously excitement thing advertising functional programming things like redux wonder make poll today ask many agree support basics oo wo nt vote another thing framework forces specific coding style may good framework one nt force coding style avoids forcing much possible much better another thing agree problems described inheritance usecases none problems apply natural thing using inheritance ca nt believe trouble went past year react nt support inheritance many many times reached point stop frontend project till js supports compiling python c browsers run people communities still projects oo come write good frameworks frontend developers bet reading tempted respond please describe usecase tell without inheritance stop complaining believe avoid asking questions wanted ask composition ask know composition nt make sense much inheritance ask please support inheritance react remember dirty full parentheses code people writing add support classes react said improve code readability ok lets support inheritance bring readability codes written react default values set class inherited subclasses still changeable subclasses done passing props component compose render method sometimes makes sense simply inherit sometimes passing callback props taking care extra work gain disclaimer like many many others appreciate good things react aggression natural reaction passive aggression forcing others things way prefer explain problem tell solve way responses troubles adopt patterns patterns force framework btw took time wrote improve reactjs", "num": "10130", "d": "7/2017"}, {"title": "ca nt scroll top", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10128", "d": "7/2017"}, {"title": "node allowed due devengines setting packagejson", "body": "want request feature report bug featureupdate current behavior currently following node versions allowed value executing script error expected behavior unless reason allowing version yet could update", "num": "10127", "d": "7/2017"}, {"title": "let stop attribute blocking", "body": "write jsx html get react prevents attributes appearing dom means react always play nice elements whose behaviors defined jquery angular etc apis whose routines read dom example could use jquery angular define routines observe attributes render webgl scene separate canvas author wants animate sphere able angular jquery routine find required attributes please uplift limitation nt limit web", "num": "10126", "d": "7/2017"}, {"title": "curried onblur handler triggered anymore using production mode", "body": "want request feature report bug bug current behavior switching mode examples defined curried handler suddenly stops working seems something number arguments current behavior bug please provide steps reproduce possible minimal demo problem via similar template react partially working react fully working react fully working also works fine mode react partially working expected behavior whatever correct usage handler function might end least behavior stay across different build modes versions react browser os affected issue work previous versions react working fine", "num": "10125", "d": "7/2017"}, {"title": "consistency parameter names comment", "body": "comment named componentinstance function parameter different name wrapperinstance mounts component inserts dom param reactcomponent componentinstance instance mount param domelement container dom element mount param reactreconciletransaction transaction param boolean shouldreusemarkup true insert markup function mountcomponentintonode wrapperinstance container transaction shouldreusemarkup context", "num": "10121", "d": "7/2017"}, {"title": "using native dom events react events", "body": "react element inner inside outer click event handlers outer react element inner html js documentgetelementbyid outer addeventlistener click function consolelog outer click class inner extends reactcomponent handleclick consolelog inner click render return reactrender documentgetelementbyid outer click react element inner expect inner element click handler triggered first outer element click handler happens reverse direction ie outer element click handler gets triggered first inner element click handler gets triggered know react event system native dom events propagate react events triggered propagate correct way achieve expected behavior note code example working large code base please keep mind answering", "num": "10120", "d": "7/2017"}, {"title": "tic tac toe tutorial", "body": "hi middle tutorial found naming variable xisnext clear x next supposed display instead x thank", "num": "10119", "d": "7/2017"}, {"title": "fr support style string set via csstext", "body": "want request feature report bug feature current behavior style prop must always object expected behavior style prop could optionally accept css string would set hood via", "num": "10118", "d": "7/2017"}, {"title": "error stops components rendering without error message console feedback", "body": "feels like bug faulty code trying bind undefined function forgot pass parent however error thrown well took figure problem past minutes tried reproducing error different data without luck even copied minimal amount source files another project error thrown nt know else want investigate setup branch described behavior observed home root provide information since nt really spent time trying replicate success expected behavior would throwing error obviously idea previous versions react encounter nt updated react meantime version shown using latest chrome windows", "num": "10117", "d": "7/2017"}, {"title": "multiple clicks needed nonanchor element onclick padding safari", "body": "want request feature report bug bug current behavior mobile safari versions desktop safari nonanchor element requires two click trigger element contains multiple commenttext nodes clicks second later text nodes either element padding element set natively element thanks malash worked around either padding element ensuring element contains one text node adding single top level element inside element multiple text nodes within instead eg instead current behavior bug please provide steps reproduce possible minimal demo problem via similar template seen fiddle first yea span one text node one click works second yea first text node span padding one click works nah second text node span padding needs two clicks third fourth yeah markup span multiple text nodes padding one click works note need zoom make sure hitting nah mobile reproduce behaviour sensitive exact area hit note desktop ensure clicking text seeing cursor nah items seeing cursor work expected behavior text nodes trigger click handler first click versions react browser os affected issue work previous versions react current react desktop safari mobile safari ios use agent thanks scottlyttle stellah", "num": "10116", "d": "7/2017"}, {"title": "runtime issue typeerror internalinstance null may need refresh page", "body": "bug due version incompatibility react reactdom certain versions managed fix issue using compatible react reactdom versions react reactdom current behavior react codebase work years recently encountered run time typeerror internal instance null errors cachebuster help would point generic windowonerror function following error message browser following error occurred typeerror internalinstance null may need refresh page file line number expected behavior runtime errors versions react browser os affected issue work previous versions react version encountered issues react reactdom", "num": "10112", "d": "7/2017"}, {"title": "render gets date state set componentwillreceiveprops using updater function", "body": "either bug documentation implementation according setstate doc need refer previous state one must use updater function problem updater function used change state state updated function called result gets new props old state called state really updated illustrates problem observed problem react", "num": "10111", "d": "7/2017"}, {"title": "tutorial starter code", "body": "starter code tutorial linked final code codepen starter code", "num": "10110", "d": "7/2017"}, {"title": "mouseenter event triggered cursor moves disabled button", "body": "bug mouseenter event triggered cursor moves disabled button see example expected behavior trigger mouseenter event react latest chrome macos", "num": "10109", "d": "7/2017"}, {"title": "reactdom error messages cryptic", "body": "reactdom throws error jest tests using testutils error messages cryptic makes harder us developers understand problem example one typeerror read property reactinternalinstance undefined ca nt put something readable instead like parent node tag name etc would extremely useful using test code btw js oncancel fired done gt const component testutilsrenderintodocument", "num": "10108", "d": "7/2017"}, {"title": "react server render error hard debug", "body": "want request feature report bug feature current behavior like using react server render error occurs like using document window object node environment error log hard find line broken error info like picture current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior server render error occurs error message see line broken versions react browser os affected issue work previous versions react react", "num": "10104", "d": "7/2017"}, {"title": "improve error forgotten extend reactcomponent", "body": "forget extend get following error example would nice dev could check exists provide better warning along lines believe would happen reactcompositecomponentjs", "num": "10103", "d": "7/2017"}, {"title": "would reordering slow passed index key prop", "body": "already question issue havent answered ps already read documentation bondarewicz said bit indistinct", "num": "10102", "d": "7/2017"}, {"title": "setstate callback called null instead undefined", "body": "want request feature report bug bug current behavior react callback function optional parameter function called passed value null previously react function called value undefined change breaks default parameters feature javascript discovered behavior working react native project hence example using view amp text current behavior bug please provide steps reproduce possible minimal demo problem via similar template import react component react export default class mycomp extends component componentdidmount thissetstate val gt consolelog val expected behavior callback function called undefined versions react browser os affected issue work previous versions react broken behavior observed react alpha react native replicated issue react react native working expected", "num": "10100", "d": "7/2017"}, {"title": "add default property modules", "body": "want request feature report bug feature current behavior code causes deprecation warnings works babel use babel works synthetic import support babel using use typescript work unless set true tsconfigjson packages work fine react deprecated warnings get tripped babel copies object expected behavior work without needing set done providing property possibly adding versions react browser os affected issue work previous versions react react chrome os x node work previous versions since deprecation warning added", "num": "10098", "d": "7/2017"}, {"title": "propstypes nt show kind warning error wrong props windows running app osx everything works fantasticwhy", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10093", "d": "7/2017"}, {"title": "reacttestrenderershallow setstate callback never called", "body": "want request feature report bug bug following current behavior callback second argument never called current behavior bug please provide steps reproduce possible minimal demo problem via similar template js import shallowrenderer reacttestrenderershallow const renderer new shallowrenderer rendererrender const instance renderergetmountedinstance instancemethodthatcallssetstate gt callback passed setstate second argument within methodthatcallssetstate never called shallow renderer code follows js updaterprototypeenqueuesetstate function enqueuesetstate publicinstance partialstate callback callername typeof partialstate function partialstate partialstate publicinstancestate publicinstanceprops thisrenderernewstate extends publicinstancestate partialstate thisrendererrender thisrendererelement thisrenderercontext see callback ignored deep renderer callback used expected behavior callback called versions react browser os affected issue work previous versions react react nt know worked", "num": "10089", "d": "7/2017"}, {"title": "failed compile error line num variable defined noundef", "body": "bug compile code react version steps reproduce create component load dynamically js file introduces new variable hc try use variable compile see error line num hc defined noundef problem define variable global component party script init hc compile due error way skip compile checks know object exists regards", "num": "10087", "d": "7/2017"}, {"title": "build unpkgcom broken", "body": "totally sure whether reported issue project see currently bad build redirects ends like version looks fine", "num": "10086", "d": "7/2017"}, {"title": "nicer formatting ssr validation", "body": "new validation issues warn first difference found html hydration scenario ideally instead queue differences end commit issue single warning nicely formatted diff instead warning add warn calls global buffer array map set whatever inside prepareforcommit issue currently batched warnings single message format message terms jsx diff nicely formatted way relevant nodes parent child changes irrelevant child content replaced ellipsis eg strategy wo nt yield perfect results asynchronously hydrating gets interrupted another tree flush warning actual hydrating particular tree flushed might show partial diff case probably warning", "num": "10085", "d": "7/2017"}, {"title": "possible make reactcomponent reactstatecomponent", "body": "feature would like represent application state state validation using jsx instead defining contextredux state using reducers would nice possible create components result data render render descriptive name mean represent ui mostly interested using react lifecycle methods recursive update setstate currently setstate called reactcomponent renders instant troublesome example case possible make components render recursively setstate gets called next line code gets executed avoid situation represented needing document render whole issue use span display none get around issue rendering invalid elements dom", "num": "10082", "d": "6/2017"}, {"title": "react variables scope defined", "body": "mostly security question react store javascript variablesstate way window object access variable defined inside react lets say also using redux store sensitive data variable state way attacker able perform successful xss attack could something like", "num": "10080", "d": "6/2017"}, {"title": "input typeradio incorrectly trigger onchange handler", "body": "bug put several input type radio name jsfiddle example onchange handler triggered individual input mouse click input happen example try click different radio inputs several times next clicks consolelog output expect trigger onchange every time click nonselected radio input bug reproduces several latest versions react least os ubuntu try latest chrome latest firefox", "num": "10078", "d": "6/2017"}, {"title": "bootstrap checkbox button triggered react", "body": "want request feature report bug bug current behavior onchange event triggered click button current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior click button binded onchange event supposed triggered versions react browser os affected issue work previous versions react sure version", "num": "10075", "d": "6/2017"}, {"title": "invalid authentication token present redirect user authentication page stage", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10074", "d": "6/2017"}, {"title": "missing return lists keys documentation", "body": "want request feature report bug reporting bug current behavior keyword missing documentation", "num": "10073", "d": "6/2017"}, {"title": "feature request warnings hook", "body": "want request feature report bug want request feature current behavior warning code hardcoded call makes hard integrate warnings tools workaround could use webpack alias fork displays onscreen use case similar another use case integrate react warnings testing infrastructure helps us better see warning belongs test expected behavior react allows library user override default warnings behavior versions react browser os affected issue work previous versions react workaround works react still work react flat bundles means still hook probably breaks flat bundles stopped", "num": "10072", "d": "6/2017"}, {"title": "react amp reactdom bundle size expand", "body": "try bundle react amp reactdom using browserify code results follows results see tbundlejs commented something js cat nodemodulesreactindexjs use strict processenvnodeenv production moduleexports require cjsreactproductionminjs else moduleexports require cjsreactdevelopmentjs bundled react reactdom bundled react next reactdom next something wrong", "num": "10071", "d": "6/2017"}, {"title": "nt convert attributes dom elements strings custom elements", "body": "want request feature report bug feature current behavior react converts values strings passing native methods dom elements expected behavior custom elements landing browsers possible custom elements extend least chrome custom things input values passing onto means custom element authors accept values strings bring performance benefits example imagine custom elements designed rendering webgl using imperatively overhead strings avoided example suppose class react converts values strings ever passing custom element authors allow end users benefit performance improvements browsers allow anything passed react custom element nt extend native super class string conversion anyways react nt case would awesome could pass numberbased values webglrendering custom elements propagate directly webgl without convert strings numbers every tick hundreds thousands webgl objects versions react browser os affected issue work previous versions react", "num": "10070", "d": "6/2017"}, {"title": "element type invalid thrown nested functional component", "body": "want request feature report bug think bug current behavior trying render child imported exports function function b elsewhere reference fine note purely functional think tracked issue w stack trace right info added ready thrown mounting element recognized mean recognized react component alright instantiatereactcomponent instantiatereactcomponentjs instantiatechild reactchildreconcilerjs anonymous reactchildreconcilerjs traverseallchildrenimpl traverseallchildrenjs traverseallchildrenimpl traverseallchildrenjs current behavior bug please provide steps reproduce possible minimal demo problem via similar template could reproduce jsfiddle coz involves module though expected behavior element recognized mounted alright versions react browser os affected issue work previous versions react react google chrome os x strangely happens built linux already ruled upperlowercasing issue tested mounted alone working alright nt tested w previous version react", "num": "10069", "d": "6/2017"}, {"title": "enhance feature request hope provide render props state", "body": "hope provide js class app extends component use", "num": "10067", "d": "6/2017"}, {"title": "react release", "body": "react release", "num": "10066", "d": "6/2017"}, {"title": "feature request support serverside rendering nonstandard dom attribute names eg amp prop value", "body": "want request feature report bug request feature working project build amp page react server side rendering issue add custom attribute builtin amp element order able use ampbind need able output bindings special attributes form eg amp carousel example work ampbind current behavior parsing error unexpected token fatal versions react browser os affected issue work previous versions react information read discussion pr", "num": "10064", "d": "6/2017"}, {"title": "read react source code amp find dir special component function reactpurecomponent", "body": "read react source code find dir path special component function defined confused nested dirs amp folders", "num": "10062", "d": "6/2017"}, {"title": "displayname questioning still needed", "body": "used error messages dev tools hocs would argue valuable mode even comes error messages think never seen production log containing sure though never valuable dev mode shouldnt ditch adding write ditching transformcodemod inferred functionsclassesvariables anyway remaining use case would using hocs im wrong let know would however fix minor problems smaller build outputs slightly remove problem unintentionally preventing treeshaking sfcs flat bundles read", "num": "10060", "d": "6/2017"}, {"title": "ff mobile duplicated characters controlled component", "body": "want request feature report bug bug current behavior go modified version controlled components docmentation page put chars upper case type input get type b get aab expected behavior ab versions react browser os affected issue work previous versions react codepen uses react bug occurs firefox mobile desktop version tested bug occurs change case", "num": "10059", "d": "6/2017"}, {"title": "installation warnings errors ubuntu", "body": "want request feature report bug report bug current behavior receiving errors warnings executing command current behavior bug please provide steps reproduce possible minimal demo problem via similar template creating new app node received following benjamin thor myapps createreactapp myfirstreactapp creating new react app homebenjaminmyappsmyfirstreactapp installing packages might take couple minutes installing react reactdom reactscripts fsevents install homebenjaminmyappsmyfirstreactappnodemodulesfsevents nodepregyp install fallbacktobuild nodepregyp info worked ends ok nodepregyp verb cli nodepregyp verb cli homebenjaminmyappsmyfirstreactappnodemodulesfseventsnodemodulesbinnodepregyp nodepregyp verb cli install nodepregyp verb cli fallbacktobuild nodepregyp info using nodepregyp nodepregyp info using node linux nodepregyp verb command install nodepregyp info check checked found nodepregyp http get nodepregyp http nodepregyp err tried download nodepregyp err prebuilt binaries found fsevents node abi falling back source compile nodegyp nodepregyp http status code downloading tarball nodepregyp verb command build rebuild gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror gyp warn download nvmnodejsorgmirror deprecated removed nodegyp please use nodejsorgmirror make entering directory homebenjaminmyappsmyfirstreactappnodemodulesfseventsbuild solinkmodule target releaseobjtargetnode copy releasenode make leaving directory homebenjaminmyappsmyfirstreactappnodemodulesfseventsbuild nodepregyp info ok npm notice created lockfile packagelockjson commit file react reactdom reactscripts added packages expected behavior create app without warnings versions react browser os affected issue work previous versions react react version latest operating system distributor id ubuntu description ubuntu lts release codename xenial browser used yet node nix", "num": "10058", "d": "6/2017"}, {"title": "document process deprecating api react", "body": "split process making decision communicate release support folks updating syntax included deprecation warning", "num": "10057", "d": "6/2017"}, {"title": "componentdidmount getting invoked phantomjs", "body": "componentdidmount getting invoked opening page phantomjs workaround need automation stuff also ca nt change code move somewhere else componentdidmount help appreciated node version phantom version latest reactjs version latest", "num": "10052", "d": "6/2017"}, {"title": "include canary tests community packages part release process", "body": "cc gaearon general lots little utilities helpful standalone packages one example ideal react team maintain package primarily would guaranteed either break new react version released updated work upcoming version prior release interests react team signing maintain package requests might come would possible make part release process ensure compatible versions community packages exist happy create package example know community would love guarantee enzyme would always work official react version release prior release", "num": "10051", "d": "6/2017"}, {"title": "render callbacks fire even though error happened", "body": "think something like throws prints success means safe wrap promise like example throws error silenced promise already resolved hit serverintegrationtest", "num": "10049", "d": "6/2017"}, {"title": "guccccccgekfbfghhkkfrcincttgkceeknidjtdijklvlt", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10047", "d": "6/2017"}, {"title": "style object columns shorthand property wrong expansion", "body": "want request feature report bug report bug current behavior adding style object element shorthand property expand wrong way left untouched expand totally different behaviour see current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react latest", "num": "10043", "d": "6/2017"}, {"title": "caret standard controlled input immediately disappears", "body": "bug ca nt type standard controlled works fine update okay know problem lies something chetonreactsortable input talking inside deactivate input focus caret works controlled component proper weird thing input lose focus seen still white border css active caret simply immediately disappears even weird parent node onclick basically works caret shows type fine directly clicking input caret immediately disappears please check video anyone ever experience already tried removing blur keydown whatever handlers input nothing changed basically simple controlled input handler sidenote save state rather client meteor minimongo database works fine browser including nt get recent react version vm macos", "num": "10042", "d": "6/2017"}, {"title": "react umbrella", "body": "umbrella issue fixes need included next patch release commits x changeeventpluginjs ie detection broken chromesafariff etc pr error element ref created another elements constructor dev environment pr x treat columns property unitless number x move augmentclass definition syntheticevent proxy replacement x use closure bind argument callback reacterrorutils x fix uncontrolled radios x add controllist dom property whitelist documentation changelog documentation misc update lockfile version bump bower", "num": "10040", "d": "6/2017"}, {"title": "force react hit server route instead staying within spa", "body": "hello facing problem quite time none solutions found google worked basically trying make react app go spa hit server route express eg appget authsteam however tried using reactrouter link redirect still stayed within spa found reactrouter internal navigation tried using anchor tag supposedly forces app hit server route still stays within react page gives component weird thing hard refresh cmd shift r mac hits server route redirects website login page case steam login finish logging callback url authsteamreturn shows component hard refresh everything supposed redirects homepage set redirect also requser available know gave example trying user authentication think question specific trying react question wanted use another server route something else appget exampleurl would face problem basically question force react hit server route instead staying within spa", "num": "10034", "d": "6/2017"}, {"title": "refsroot breaks", "body": "bug report rely saved ref component layout formatting excel addin used property component save reference functionality broke longer defined react version browser reproduced safari chrome macos chrome windows codepen reproducing behavior thanks nick", "num": "10031", "d": "6/2017"}, {"title": "changeeventpluginjs ie detection broken chromesafariff etc", "body": "bug current behavior website include number scripts parties via segment etc one seems modifying inadvertently combination release reactdom broken website completely code changeeventpluginjs error written console every time try click input box specifically line causing issues party library actually setting enough break line even though undefined exists key means browsers reactdom believes running ie current behavior bug please provide steps reproduce possible minimal demo problem via similar template reproduce app uses reactdom includes input boxes add following top head tag executes immediately documentdocumentmode undefined example found expected behavior previous versions branch reactdom code works fine allow load relevant party libraries without experiencing issues reached vendor fix issue side sure long take versions react browser os affected issue work previous versions react nt work react dom works looking history code seems gone back forth two different ways checking documentmode commit changed back code causes error", "num": "10030", "d": "6/2017"}, {"title": "react getting installed windows", "body": "hello trying install react windows system entering npm install createreactapp command giving error attaching npmdebuglog info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli install verbose cli createreactapp info using npm info using node silly loadcurrenttree starting silly install loadcurrenttree silly install readlocalpackagedata silly fetchpackagemetadata createreactapp silly fetchnamedpackagedata createreactapp silly maptoregistry name createreactapp silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry data result silly maptoregistry raw createreactapp silly maptoregistry scope null silly maptoregistry escapedname createreactapp silly maptoregistry name createreactapp silly maptoregistry rawspec silly maptoregistry spec latest silly maptoregistry type tag silly maptoregistry uri verbose request uri verbose request auth needed info attempt registry request try pm verbose request id http request get info retry retry error last attempt error connect econnrefused info attempt registry request try pm http request get info retry retry error last attempt error connect econnrefused info attempt registry request try pm http request get silly fetchpackagemetadata error connect econnrefused silly fetchpackagemetadata objectexportserrnoexception silly fetchpackagemetadata exportsexceptionwithhostport silly fetchpackagemetadata tcpconnectwrapafterconnect oncomplete silly fetchpackagemetadata error createreactapp error connect econnrefused silly fetchpackagemetadata objectexportserrnoexception silly fetchpackagemetadata exportsexceptionwithhostport silly fetchpackagemetadata tcpconnectwrapafterconnect oncomplete silly fetchpackagemetadata code econnrefused silly fetchpackagemetadata errno econnrefused silly fetchpackagemetadata syscall connect silly fetchpackagemetadata address silly fetchpackagemetadata port silly rollbackfailedoptional starting silly rollbackfailedoptional finishing silly runtoplevellifecycles finishing silly install printinstalled verbose stack error connect econnrefused verbose stack objectexportserrnoexception verbose stack exportsexceptionwithhostport verbose stack tcpconnectwrapafterconnect oncomplete verbose cwd c usersaniruddhreact error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install createreactapp error node error npm error code econnrefused error errno econnrefused error syscall connect error error connect econnrefused error objectexportserrnoexception error exportsexceptionwithhostport error tcpconnectwrapafterconnect oncomplete error error connect econnrefused error objectexportserrnoexception error exportsexceptionwithhostport error tcpconnectwrapafterconnect oncomplete error code econnrefused error errno econnrefused error syscall connect error address error port error behind proxy please make sure error proxy config set properly see npm help config verbose exit true", "num": "10023", "d": "6/2017"}, {"title": "input type number reformats already valid numbers", "body": "like report bug current behavior using input type number shave trailing behind seperator see eg state starts number input shows expected behavior number input show least provide way specify tofixed used n numbers behind seperator versions react browser os affected issue work previous versions react tested ff goes wrong lines", "num": "10022", "d": "6/2017"}, {"title": "feature request add module entry packagejson export version react", "body": "want request feature report bug request feature current behavior react ecosystem promoting classes modules since many packages like reactrouter redux es folder npm package source code modules unless missing something strange react offer option current behavior bug please provide steps reproduce possible minimal demo problem via similar template install react try import browser native modules enabled expected behavior es folder npm package modules source code like react ecosystem projects allow import react native modules make developer workflow simple versions react browser os affected issue work previous versions react versions", "num": "10021", "d": "6/2017"}, {"title": "feature request rendertypes", "body": "want request feature report bug request feature per discussion today tomocchino thejameskyle like nonflow mechanism annotate type elements component expects render examples flow types comparison realize may currently checked flow yet jsx function foo yes return yes foorendertypes bar div class bar extends reactcomponent static rendertypes button render return jsx function foo yes reactelement return yes class bar extends reactcomponent render reactelement return inside airbnb lots use cases container components separate package say intentionally restrictive proptypes prop allow also package however app consumes component library package dev may want create turn renders however unable pass proptype warnings fail tests even though conceptually permitted would allow us widen proptype allow either anything renders helps us maintain separation concerns package nt know accept well maintain strictness package nt allow wacky element inside imagine implementation render called sfc invoked async rendering component resolves suppose development exists component evaluate equivalent elementtype like proptypes log error one returned cc spicyj", "num": "10020", "d": "6/2017"}, {"title": "feature request need ability debug checksum mismatch production environment", "body": "want request feature report bug feature current behavior currently checksum mismatch happens mounting react tree server rendered markup get markup difference dev environment reality mismatches happen production env much bigger variety user contexts trigger mismatch hard reproduce mismatch scenarios dev environment without knowing markup difference expected behavior proposing provide apps way obtain markup difference even production environment diffs reported back developers debugging mismatch root cause fiber would probably change checksum works ready still need ability debug issue production env trying something like works probably best approach idea simple though provide way application control react tree report markup diff upon checksum mismatch application might care mismatch subset react trees mounted would concerns markup normalization cost using data attribute container node best approach since container also document node thought two alternative ways neither perfect add option signature add prop like element rendered allow application collect markup diff even production environment setting markup difference value data attribute container node please share thoughts ideas raising pr implement ideal approach thanks", "num": "10016", "d": "6/2017"}, {"title": "suggested words get appended currently typed word writing comment fb using virtual keyboard windows", "body": "reproes soft keyboard used repro navigate facebookcom front page type select wonder list suggestions expected replaced wonder actual appends wonder making wonwonder", "num": "10014", "d": "6/2017"}, {"title": "dangerouslysetinnerhtml svg elements", "body": "want request feature report bug bug current behavior using svg elements dom nodes previous render nt removed current behavior bug please provide steps reproduce possible minimal demo problem via similar template see fiddle expected behavior dom contain last rendered value versions react browser os affected issue work previous versions react react browser work previous versions react sure digging around found made think happening line looks like call never remove previous nodes add new ones guess", "num": "10013", "d": "6/2017"}, {"title": "react component using reactnoopupdatequeue dev build preventing state updates", "body": "want request feature report bug reporting bug facing really strange issue every app stops working running via webpack hot dev server issue presents struggle get work even cleaning everything stashing git changes resetting yarnlock etc production builds noticed issue never occurs simple component renders two fields hostname port maintains field values component essentially expected behavior expect basic case able update form fields without issue enter text field triggers field event turn invokes updating value field gets rerendered actual behavior observe expected behaviour every time production time development idea sometimes rebuilding certain modules see issue occur able change value either fields instead see following error electron console environment react operating system windows browser version electron chromium browser additional details notice development production builds react component pass react updater superclass constructor react base class uses two places assigned breakpoint neither dev production build see anything except getting assigned field yet production builds state updates work expected step code production find magically replaced real update queue magic sometimes nt happen dev builds state changes fail noop get warning messages shown reference excerpt react component code js export default class connectionpane extends reactcomponent constructor props iconnectionpaneprops super props private get ishostnamevalid boolean private get isportvalid boolean private get areconnectionsettingsvalid boolean public render return hostname port private sethostname event thissetstate hostname eventtargetvalue private setport event const port eventtargetvalue private onsubmit event eventpreventdefault", "num": "10012", "d": "6/2017"}, {"title": "syntheticeventaugmentclass undefined qtwebkit browsers", "body": "want request feature report bug bug current behavior everything seems terrible certain webkit browser page pulls bundled script nt seem finish loading console errors augmentclass undefined build details ing using babelloader presets current behavior bug please provide steps reproduce possible minimal demo problem via similar template building use qtwebkit test browser visit offending page expected behavior see complaints syntheticevent console versions react browser os affected issue work previous versions react react reactdom qtwebkit", "num": "10010", "d": "6/2017"}, {"title": "warning unsupported style prop webkitoverflowscrolling", "body": "potential bug warning unsupported vendorprefixed style property webkitoverflowscrolling mean webkitoverflowscrolling check render method warning nt used come tried remedy using different style lib using radium tried instead warning still shows yet properly styled browser warning seems obsolete mac os chrome react", "num": "10009", "d": "6/2017"}, {"title": "minified version react cdn throws errors unminified cdn works fine", "body": "using react official cdns minified version throws uncaught typeerror unminified dev version cdns used code results unminified version works without errors minified version results following error uncaught typeerror selfpropssearchcallback function error react official minified cdn version", "num": "10005", "d": "6/2017"}, {"title": "react input value tracking incompatible zombiejs", "body": "react backports input value handling fixes new input value tracking nt work zombiejs problem react wraps property zombiejs assigns property functions eg confuses value tracking loses track value change definitely debatable whether react bug zombiejs bug find behaviour react bit strange let assume controlled react zombiejs test fills initially empty text field value somevalue zombie implements using internal steps happens try running example test test calls field focused triggers setter reactdom tracker longer original value new value somevalue input event fired eventually end reactdom function tracker compares containing somevalue raw value dom node containing somevalue change event sent whatever controlling propsstate thinks value react dom node agree somevalue react lose change events zombiejs react works fine", "num": "10003", "d": "6/2017"}, {"title": "react dung vue beautify", "body": "use reactjs timebut framework design look like designed threeyears child shit fuck every developerbut vue maked chinexe save hell vue fresh freedom air methis freedom sweet pointer someone deliberatelymy meaning everyone designed except", "num": "10002", "d": "6/2017"}, {"title": "clear entire call stack browser certain function gets executed", "body": "want clear entire call stack browser certain function gets executed react js code", "num": "10001", "d": "6/2017"}, {"title": "false positive getdefaultprops warning mixing development production versions", "body": "migrating rewrite original react components however warning really transferring classic definition would like ask warning appropriate depreciation sames level migrating ooops get ticket", "num": "9999", "d": "6/2017"}, {"title": "createreactclassintegrationtest fails", "body": "want request feature report bug bug current behavior running npm test master branch createreactclassintegrationtest fails current behavior bug please provide steps reproduce possible minimal demo problem via similar template installed repo cloning ran npm install npm test expected behavior test pass versions react browser os affected issue work previous versions react latest version commit", "num": "9997", "d": "6/2017"}, {"title": "detect empty selection", "body": "component uses get user selected files user cancels file selection popup callback never called since change nonsense since expected action callback gets called null empty array implement nt find related event listen", "num": "9996", "d": "6/2017"}, {"title": "error info removes app", "body": "feature really hard track runtime errors eg none code stacktrace swallowed react", "num": "9995", "d": "6/2017"}, {"title": "set initial state undefined", "body": "want request feature report bug feature current behavior initial state null expected behavior initial state undefined manually set state undefined class would make sense box would allow destructuring without errors version react reactdom sorry suggested", "num": "9991", "d": "6/2017"}, {"title": "regression onchange nt fire defaultchecked radio inputs", "body": "want request feature report bug bug current behavior react behaviour changed fires change event reliably need console open get debugger statement first change fires subsequent changes fire changes fire versions react browser os affected issue work previous versions react react vs react chrome latest stable", "num": "9988", "d": "6/2017"}, {"title": "proper compatibale version react reactaddonstestutils reactdom", "body": "tried various package version still getting error run causing issue file looks like update getting error may know causing issue dependency issue nt know", "num": "9986", "d": "6/2017"}, {"title": "setvalueforproperty throwing untraceableunpausable error", "body": "hey getting following error many time console tried setting pause exceptions true nt seem pause error actual error message unhelpful debugging underlying issue many places component rendering svg path help tracking component actually causing error would greatly appreciated thanks", "num": "9984", "d": "6/2017"}, {"title": "compatible version found createreactclass lt", "body": "env package npm actually missing want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior npm install problem versions react browser os affected issue work previous versions react", "num": "9981", "d": "6/2017"}, {"title": "ensure npm command results expected result", "body": "creating issue track thread currently tools nt properly dce npm bundle branching need combine dev prod bundle one file", "num": "9980", "d": "6/2017"}, {"title": "bug fontfamily wraps font names nested doublequotes chrome", "body": "bug current behavior fontfamily declaration used react multiword fonts wrapped doublequotes chrome nested double quotes valid html attributes react nt creating style attribute way steps reproduce open react fiddle chrome inspect text rendered react result pane notice style declaration words times new roman double quotes results nested double quotes ie style fontfamily georgia times new roman serif really valid original fontfamily declaration quotes open react fiddle safari firefox notice nested double quotes happen fontfamily declaration left asis evidence open simple fiddle chrome inspect text rendered result pane notice chrome add nested double quotes around times new roman nt seem browser seems react used expected behavior would expect one two things happen multiword fonts would left asis ie style fontfamily georgia times new roman serif multiword fonts would wrapped single quote instead double ie style fontfamily georgia times new roman serif react versions seeing react version know working previous versions react", "num": "9979", "d": "6/2017"}, {"title": "modules react reactdom", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react analyze bundle file webpack came across serval modules exist react reactdom guess files ignored files listed reactprodinvariantjs keyescapeutilsjs traverseallchildrenjs reactelementsymboljs reactproptypessecretjs getiteratorfnjs", "num": "9975", "d": "6/2017"}, {"title": "error addcomponentasrefto class", "body": "react bit complicated report dont super isolated use case application extremely complex ca nt confirm latest react ca nt confirm react fault thats unacceptable feel free close general layout things exports bunch javascript including react via webpack private repo loads code extends imports things like react windowreact using webpack external feature attempting use reactcompnent provide base class complex functionality worked fine using reactcreateclass fairly confident two copies react loading page really hard understand webpack internals loading react comes windowreact investigated per webpack compiled output however odd referencing internally happens specifying attribute static html specific html also specific reference error unrelated generated output exists elsewhere parent element generated children first core issue case output tooltip raw html everything works fine change return result stripped errors dump consolelog version text generatehtmlviareactdomserver get true output domserver still receive ref error literally baffled point going might something obvious debugging last hours avail sentry exports sentryio externals config originally thought might related bootstrap tooltips since thats removed anything relevant still triggered full source component though clearly wo nt work jsx import react react import reactdom reactdom import reactdomserver reactdomserver import jquery jquery import displaynumber getslot utilsbilling import utils sentry import moment moment let guttersize let leftgutter let graphpadding class usagechart extends reactcomponent constructor props super props bar line onclick onlinedrag onlinerelease onlineselect onresize tooltip foreach n gt n n bind thisstate width height componentdidmount windowaddeventlistener resize thisonresize thisonresize thisattachtooltips componentwillunmount windowremoveeventlistener resize thisonresize thisremovetooltips jquery reactdomfinddomnode unbind attachtooltips jquery reactdomfinddomnode tooltip container body selector tip removetooltips jquery reactdomfinddomnode tooltip destroy destroy tooltips parent find tip tooltip destroy descendents tallestthing throw new error implemented scale return thisstateheight guttersize thistallestthing flip h return thisstateheight guttersize h distance b return mathabs b onresize thisrefssvgelement return thissetstate width thisrefssvgelementgetboundingclientrect width onlineselect e onlinerelease e onlinedrag e onclick e tooltip point let projected totals ts point let otherdropped totalsdroppedtotal totalsdroppedoverquota totalsdroppedspikeprotection return reactdomserverrendertostaticmarkup moment ts format projected projected events totalstotaltolocalestring accepted totalsacceptedtolocalestring dropped totalsdroppedtotaltolocalestring quota totalsdroppedoverquotatolocalestring spike protection totalsdroppedspikeprotectiontolocalestring otherdroppedtolocalestring getbars point throw new error implemented bar point todo max disabled lt wide zoom screwyness let zoom windowmatchmedia maxwidth matches zoom return null getlines return lines return thisgetlines map l gt lquota gt throw new error invalid line return thisline name lname quota lquota height lquota thisscale demandheight ldemand thisscale drop ldrop canselect lcanselect false line props let classname line line propsname propsname let cursor propscanselect nsresize inherit slotsrules let tt thistallestthing getlegenditems throw new error implemented legend props let size let r let items thisgetlegenditems let sum let offsets itemsmap n gt let last sum sum nlength size return last bars let usagedata thispropsusagedata let totals total accepted dropped total overquota spikeprotection filtered return usagedata map p gt totalstotal ptotal totalsaccepted paccepted totalsdroppedtotal pdroppedtotal totalsdroppedoverquota pdroppedoverquota totalsdroppedspikeprotection pdroppedspikeprotection totalsfiltered pfiltered return p totals totals dropped totalsdropped ts pts map thisbar renderchart let usagedata thispropsusagedata render try return thisrenderchart catch ex utilslogginglogexception ex return un oh hit error trying render usage chart nt worry sentry let us know usagechartproptypes usagedata reactproptypesarrayof reactproptypesshape accepted reactproptypesnumberisrequired total reactproptypesnumberisrequired ts reactproptypesanyisrequired dropped reactproptypesshape total reactproptypesnumberisrequired overquota reactproptypesnumberisrequired spikeprotection reactproptypesnumberisrequired isrequired trialend reactproptypesstring slots reactproptypesarrayof reactproptypesobject usagechartdefaultprops usagedata export default usagechart", "num": "9974", "d": "6/2017"}, {"title": "expose shouldcomponentupdate purecomponent", "body": "nice following api", "num": "9972", "d": "6/2017"}, {"title": "bug style undefined setvalueforstyles", "body": "appears possible style property node undefined setvalueforstyles method csspropertyoperationsjs using unknown able get state stack trace typeerror style undefined style csspropertyoperations internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler internalinstance reactreconciler", "num": "9970", "d": "6/2017"}, {"title": "error addcomponentasrefto", "body": "started getting error right upgrading error addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded details", "num": "9967", "d": "6/2017"}, {"title": "add units css custom properties", "body": "want request feature report bug bug current behavior js html current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior leave values passed versions react browser os affected issue work previous versions react react", "num": "9963", "d": "6/2017"}, {"title": "string refs without owner fail gracefully", "body": "occurs fiber multiple instances react package ca nt share current owner", "num": "9962", "d": "6/2017"}, {"title": "undefined object evaluating ugetcall since", "body": "since updating started uncaught exception pinned version back problem gone away per rollbar problem seems mostly ios safari sometimes osx safari unable repo users clearly experiencing user agents stacktraces", "num": "9961", "d": "6/2017"}, {"title": "bug version working ios inputvaluetrackingjs", "body": "appears version work older ios devices ios tested affected root cause appears broken versions simply return method used inside causes react break causing nothing rendered error message stack trace affected code javascript track function inst gettracker inst return var node reactdomcomponenttreegetnodefrominstance inst var valuefield ischeckable node checked value var descriptor objectgetownpropertydescriptor nodeconstructorprototype valuefield var currentvalue node valuefield someone already defined value bail nt track value cause reporting changes better hard failure needed certain tests spyon input values nodehasownproperty valuefield return objectdefineproperty node valuefield enumerable descriptorenumerable configurable true get function return descriptorgetcall set function value currentvalue value descriptorsetcall value", "num": "9959", "d": "6/2017"}, {"title": "onclick onchange nt fire radio buttons ios", "body": "want request feature report bug bug current behavior onclick onchange nt fire radio buttons ios typeerror undefined object evaluating descriptorgetcall current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior onclick onchange fire versions react browser os affected issue work previous versions react react ios working", "num": "9956", "d": "6/2017"}, {"title": "run unit tests compiled bundles", "body": "lot tests using public apis number growing soon delete stack reconciler code remove feature flags partly responsible nonpublic api calls well stackspecific tests still tests operate directly files position opt specific test files hopefully growing count running compiled development production bundles ci nt compromise local iteration speed already separation use today telling warning failures use future telling whether expectation skipped prod bundle could use help building initial proof concept running tests ci bundles converting tests use public apis search source find good starting points tests might better written public apis always possible try bit openended probably requires prior knowledge test things generally feeling comfortable repo contributed good issue dive", "num": "9955", "d": "6/2017"}, {"title": "safe react native react alpha", "body": "currently react native since released stable around corner rn uses react march saw release rn started using react series completely skipped version prevented updating react native waiting official stable release react mid june official stable release react appears version entering version still alpha react world using react reactnative world using react anyone know react skipped safe use version react native production deal react anyway even mentioned list react releases", "num": "9948", "d": "6/2017"}, {"title": "fix fixture branch", "body": "want request feature report bug kind bug either react fixture current behavior open error console react load current behavior bug please provide steps reproduce possible minimal demo problem via similar template step check yarn install amp amp yarn buildfixturessystemjshtml expected behavior see hello world appear versions react browser os affected issue work previous versions react also present last release react still present react", "num": "9947", "d": "6/2017"}, {"title": "refs working properly componentdidmount", "body": "want request feature report bug bug user failure current behavior thisinputclick happens one child component rendered fails first one current behavior bug please provide steps reproduce expected behavior first component open dialog box versions react browser os affected issue work previous versions react chrome macos react reactdom application comes deeply nested component times dialog box shows component actually unmounts weird thing still works older version application", "num": "9944", "d": "6/2017"}, {"title": "stateless react components controlled input", "body": "asked question stackoverflow get response trying luck currently make controlled inputs work inside stateless react components wrapping stateless component inside sate full component example js const inputcomponent props gt return class app extends reactcomponent constructor props super props thisstate name tekeste thishandlechange thishandlechangebind handlechange event thissetstate name eventtargetvalue render return would like know couple things good pattern achieve goal ie controlled inputs inside stateless components", "num": "9930", "d": "6/2017"}, {"title": "wrong javascript heap memory", "body": "edit sorry wrong project meant post reactnative", "num": "9927", "d": "6/2017"}, {"title": "inconsistencies among documentation", "body": "hi trying figure whether adopting react would safe risky choice important able draw boundaries ie able define node elements managed react ones pretty important able integrate well nonreact components trying understand guarantees get using react noticed two sections documentation nt seem compatible prevent react touching dom mounting return empty lt div render method element properties children react reason update leaving jquery plugin free manage part dom suggests using mountunmount hooks order initialize destroy thirdparty components however enough guarantee integration succeed get later important remember reconciliation algorithm implementation detail react could rerender whole app every action end result would currently shouldcomponentupdate returns false componentwillupdate render componentdidupdate invoked note future react may treat shouldcomponentupdate hint rather strict directive returning false may still result rerendering component problem ca nt really rely reconciliation algorithm touch elements react supposed manage guarantees would possible integrate react thirdparty components future big concern let give example illustrate suppose want integrate lightweight multioptions autocomplete component provides public apis constructor desctructor onchange hook stateful component nt direct access state restore destroying recreating opens menu several items containing checkbox item label click items checking checkbox onchange would triggered could use change state ancestor component managed react responding state change event react simply decides rerender ancestor component without respecting ignoring diff algorithm means would probably call autocomplete component wrapper would able destroy component would able initialize component would lost state like scroll position currently selected items words means react would nt able play nice thirdparty components order guarantee need guarantees react reconciliation algorithm nt implementation detail without guarantees nt considered hint otherwise supposed wrap thirdlibrary components reliable way really scared start migrating application use react unless feel confident always able integrate thirdparty stateful components could please review statements documentation", "num": "9926", "d": "6/2017"}, {"title": "reactcsstransitiongroup children text ie edge false effect", "body": "want request feature report bug think may ie sure current behavior reactcsstransitiongroup children text text ie edge false like text ok versions react browser os affected issue work previous versions react os react", "num": "9925", "d": "6/2017"}, {"title": "nonshouldcomponentupdate state prop updates", "body": "want request feature report bug feature current behavior renderindependent lifecycle hook called state prop updates expected behavior certain cases currently makes sense run code whenever state props update even render wo nt happen eg contextproviding component needs update child subscribers even best rerender immediate child due frequency updates using state case rerendering component passed children component renders instance shallow child component passed props based internal state passed nt want update since would rerendering potentially large component tree reason still want notify context subscribers state changed workable use lifecycle method eta maybe similar called state updates called may updated allowed", "num": "9922", "d": "6/2017"}, {"title": "urgent nt support latest builds reactnative react", "body": "possible use latest builds reactnative react related reactnative works already builds reactdom nt support app crashes", "num": "9915", "d": "6/2017"}, {"title": "reactaddonsupdate uses objectassign", "body": "want request feature report bug undocumented breaking change current behavior starting package changed depending internal file package actually include full implementation internal implementation depended polyfill external one actually calls directly breaking support ie reactaddonsupdate react reactaddonsupdate requires users support polyfill mentioned release blog post react current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior add mention release blog post versions react browser os affected issue work previous versions react react worked fine react", "num": "9913", "d": "6/2017"}, {"title": "possible delay proptypes isrequired validation constructor got called", "body": "want request feature report bug feature current behavior element wrapped like following child receive waring understand expected behavior however warning really annoying expected behavior delay proptypes validation till avoid unnecessary warnings maybe got called since wrapped use merge render prop merged wo nt see lot unnecessary warnings keep mark childproptypes versions react browser os affected issue work previous versions react react", "num": "9904", "d": "6/2017"}, {"title": "mouseleave events fire unexpectedly mousing descendant node different react root", "body": "want request feature report bug bug current behavior mousing descendant dom node different react root mouseleave event parent react dom component fired unexpectedly current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open console see logs printed mouse parent normal child back note fire mouse parent portal child rendered embedding new react root note fire mouse back note fires sometimes fires multiple times enterexit step expected behavior fire enteringexiting portal child since descendant node parent versions react browser os affected issue work previous versions react tested following issue reproducible cases react latest chrome firefox safari", "num": "9901", "d": "6/2017"}, {"title": "get fixtures working branch", "body": "multiple errors thrown trying build fixtures branches need fixtures working order manual testing addon fixes", "num": "9900", "d": "6/2017"}, {"title": "eventhandler react component without implementing component side", "body": "want request feature report bug feature current behavior add event handler components outer layer implemented inside component well like without ca nt add event handlers parent something like work opinion example export default class somecomponent extends reactcomponent render nt event handler logic return content nt working opinion shouldcould well render return working yet think last way would cleaner render return sum request event handler props added component would pass outer layer component", "num": "9898", "d": "6/2017"}, {"title": "cursor jumps end controlled component", "body": "want request feature report bug bug per current behavior typing inside controlled input component cursor jump end value modified current behavior bug please provide steps reproduce possible minimal demo problem via similar template modified controlled components example described documentation see fork codepen type transformed automatically place cursor follows insert lower case character observe cursor jumps end cursor jumps end lower case character inserted modification cursor remains presumably value nt overwritten react expected behavior cursor remain current position versions react browser os affected issue work previous versions react react browser chrome os win", "num": "9894", "d": "6/2017"}, {"title": "trigger change event radio value", "body": "want request feature report bug bug current behavior selecting value twice row results triggering change event twice value current behavior bug please provide steps reproduce possible minimal demo problem via similar template open click twice option result see console change event triggered time even changed value equal previous one comparison may check native html implementation expected behavior change event trigger value versions react browser os affected issue work previous versions react macos sierra safari", "num": "9893", "d": "6/2017"}, {"title": "javascript responsible rendering html issue", "body": "question related binding html javascript making javascript responsible creating dom hiding resources browser blocked javascript lead opting html optimization browser like background parsing html separate thread bind html javascript bind code understand react dom manipulation well", "num": "9892", "d": "6/2017"}, {"title": "lost setnativeprop others methods create personal component child nodes", "body": "hi creating custom component inside mycomponent loop childs refs next code try use setnativeprop inside component setnativeprop undefined using next code reach child inside method another way tried putting refs text lost refs also way draw nodes without loss properties form rebuiltcreate node characteristics inside", "num": "9890", "d": "6/2017"}, {"title": "numberisnan", "body": "supported internet explorer code sample lifting state documentation used specifically writing conversion functions section see function following quick start guide using visual code editor createreactapp using internet explorer test component completing lifting state section getting following error typeerror object nt support property method isnan fixed using reguler doc updated use", "num": "9888", "d": "6/2017"}, {"title": "viewbox inline svg sometimes rendered viewbox", "body": "reactjs nt seem consistently rendering camelcased instead rendered sample code works chrome firefox ideas version", "num": "9885", "d": "6/2017"}, {"title": "input type number initial value value changes empty string value update", "body": "example bug best guess maybe react truthiness checking thinks updating value component", "num": "9884", "d": "6/2017"}, {"title": "rendering array jsx components", "body": "build something tree table folder subfolders elements one folder keeps inside subfolders informations rendering correctly react ignoring part code folder component subfolder component element structure looks like subfolder next row folder row contains table inside really important later need able manipulate tables inside subfolders element rows another subfolder know subfolders key also major problem react completely ignore inside subfolder td element using another table props children try use way works fine parse api response function push element inside array return end need create chunk jsx render end check type object api response push different component array main problem react completely ignore tables inside td elements render regular table expecting something like know easiest way build normal string later use dangerouslysetinnerhtml method want avoid sure bug react nt understand rendering array looks like", "num": "9880", "d": "6/2017"}, {"title": "add export html props react package since react already using validation", "body": "want request feature report bug feature current behavior react package provide list acceptable props html node div span etc sometimes packages pass props like reactredux passing provided pop error saying unknown prop tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior since react using list props validation react package also provide allow react users make sure pass normal props versions react browser os affected issue work previous versions react", "num": "9878", "d": "6/2017"}, {"title": "unstablehandleerror read property listeners null", "body": "want request feature report bug bug current behavior typeerror read property listeners null current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior renders error text versions react browser os affected issue work previous versions react", "num": "9877", "d": "6/2017"}, {"title": "order linting prettier contributing docs", "body": "want request feature report bug documentation discussion current behavior currently contributing guide lists lint step running prettier example says current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior think would make sense run prettier first since automatically get rid certain lint errors like singlequotes commadangle firsttime contributor following steps order might waste time fixing things manually lint step proceeding formatting step versions react browser os affected issue work previous versions react na", "num": "9876", "d": "6/2017"}, {"title": "remove streaming renderer fb builds", "body": "nt get fb builds correct wrong", "num": "9868", "d": "6/2017"}, {"title": "add cases server rendering fixture", "body": "server rendering lot quirks easy break fixture set fixturesssr could expanded stuff things fixture test controlled uncontrolled types inputs including dates numbers etc children single stringnumber children array multiple stringnumbers children interleaved nodes stringnumbers event handlers hydrated nodes something useful clicked reused event handlers multiple different nodes etc onload event handlers special properties nt map directly attribute names like subtrees subtrees hidden attribute set tests deprioritization probably need onscreen options turn onoff things test suite test conditions server client differences turn flag makes server client differ minor ways async hydration use fiber async features hydrate tree defer hydration time useful test slow loading conditions user may changed state form controls hydration combined async make async rendering artificially slow reveal issues patching event handlers attached early commit phase ok start small nt", "num": "9866", "d": "6/2017"}, {"title": "component lifecycle error handling", "body": "greetings react team let start saying big fan work team keep good work said one major disadvantages react sort throws exception thrown one lifecycle methods ie null undefined reference although ultimately developer ensure proper error handling wondering would consider adding additional component lifecycle method catching unhandled exceptions ie componentdidfail developer perspective would make life much easier really help improve quality applications produce matt", "num": "9865", "d": "6/2017"}, {"title": "investigate ci got broken master pr passed", "body": "see pr passed ci pr merged master test failure later fixed wonder missing check prs", "num": "9864", "d": "6/2017"}, {"title": "reactfiberreconciler become public api implementing party renderers", "body": "investigating using react drawing custom native uis fall outside scope reactnative reactwindowsnative seems like sensible place start assuming fibers start getting used mainline relatively soon seems reasonably likely certainly seems easy get proof concept running using least far recommended entry point party renders use", "num": "9862", "d": "6/2017"}, {"title": "fully translated latest version react docs chinese", "body": "see chinese docs react docs chinese translated docs directly modified original markdown files hard pull request merge official docs plans add feature jekyll doc website", "num": "9860", "d": "6/2017"}, {"title": "reactplayer autoplay muted video mobile", "body": "ca nt manage autoplay video mobile browser dont audio code thisvideowrapper el gt inspect page see", "num": "9855", "d": "6/2017"}, {"title": "question use arrow functions bind manually classes performance difference", "body": "terms performance difference using arrow functions bind manually using classes using arrow functions methods class prototype class instance using bind attach methods class prototype sounds like bind manually better performance mean consider using bind instead arrow functions class methods suggestions comments really appreciated terms performance would recommend using javascript class mycomponent extends reactcomponent constructor props super props methoda gt javascript class mycomponent extends reactcomponent constructor props super props thismethoda thismethodabind methoda", "num": "9851", "d": "6/2017"}, {"title": "browser compatibility issue jquery version", "body": "report bug need confirm current behavior getting following error console using jquery min js line var icfnremove dcbrowsermozilla amp amp parsefloat cbrowserversion lt uncaught typeerror read property remove undefined", "num": "9848", "d": "6/2017"}, {"title": "error using immutable data structures section docs", "body": "want request feature report bug report bug current behavior optimizing performance section docs subsection called using immutable data structures end sentence case since new reference returned mutating x safely assume x changed sentence read assumption correct safely assume x changed current behavior bug please provide steps reproduce possible minimal demo problem via similar template doc question posted expected behavior described safely assume x changed versions react browser os affected issue work previous versions react na", "num": "9844", "d": "6/2017"}, {"title": "rfc resilient nodenormalize", "body": "debate support nodenormalize case summary mostly supported stack inserted comment nodes everything important used innerhtml generate html client preserve everything important anymore new hydration resilient however happens already active client tree possible consecutive text nodes merged single one something calls nodenormalize whole subtree merges consecutive text nodes possible extensions might even magic context think idea automatic recovery phase would nt impact hot paths would nt normally need anything however would add small nontrivial amount code edge case almost never happens also bit awkward since adds dom specific case hostconfig api every renderer consider afaik bugs related fb regard extensions anything else find breaks things outside fb without shipping broken version", "num": "9836", "d": "6/2017"}, {"title": "add reactchildrenfind", "body": "think method would really useful situations need iterate children find one satisfies particular condition running situation often react code examples react router component iterates children figure matches url component use training workshops need iterate figure label show select box wonder would interest others seeing something like", "num": "9834", "d": "6/2017"}, {"title": "error provided production build", "body": "currently transform enabled together production build indicators poorly performant configuration even already check existence source field reuse check issue something prod mode exists problem nt warning module prod unclear would get attention even considered spammy prod could throw might extreme since misconfiguration would kill site could also use set flag object icon devtools extension could use indicate misconfigured build", "num": "9832", "d": "6/2017"}, {"title": "possible false positive getdefaultprops warning createreactclass production environment", "body": "want request feature report bug potential bug current behavior dependency using using get past deprecation warning still defined class definition still getting following warning current behavior bug please provide steps reproduce possible minimal demo problem via similar template ca nt use jsfiddle createreactclass appears cdn version try create minimal amount code properly reproduce tonight expected behavior exactly sure supposed trigger warning using versions react browser os affected issue work previous versions react react os windows browser chrome", "num": "9831", "d": "6/2017"}, {"title": "first bug cra throws", "body": "looks like something createreactclass removal correctly cherrypicked steps reproduce create new cra project update version react run get error", "num": "9830", "d": "6/2017"}, {"title": "na", "body": "issue intended another repo accidentally posted mistake", "num": "9829", "d": "6/2017"}, {"title": "keys children really improve performance", "body": "originally try use react perf tool prove theory write code experiment found opposite result someone explain correct testing wrong way", "num": "9826", "d": "6/2017"}, {"title": "unable get property gethostnode undefined null reference built react application accessed ie", "body": "getting error ie moreover react application works fine ie used standalone webpack dev server built js file using webpack babel fails navigate used inside jsp file inside application build application works fine mozilla chrome read replies topic talks promise raising unhandled exception case application coz home page nt promise calls understand component error syntax error since application working fine mozilla chrome able find exact issue built react application testing along chrome recently started testing ie using versions libraries react reactredux reactrouter reactrouterredux webpack webpackdevserver babelcore babelloader babelruntime babelpolyfill", "num": "9822", "d": "5/2017"}, {"title": "children foreach filters functions", "body": "react unexpected behaviour silently filters functions current behavior expected behavior childrenforeach throw invariant error function type child met childrenforeach nt filter function type children", "num": "9821", "d": "5/2017"}, {"title": "componentdidmount triggered initial render", "body": "code facing issue life cycle method using electrode js framework make render server side facing random behaviour life cycle methods time triggered time class bannerslist extends reactcomponent constructor props super props thiscreatetable thiscreatetablebind thisonchangepage thisonchangepagebind thisstate skip limit componentdidmount thisonchangepage onchangepage page let skip page thisstatelimit thispropssetbanner endpointsadminbanner skip thisstatelimit thissetstate currentpage page skip skip createtable row index return rowtitle rowtitle na rowdisplaysection rowdisplaysection na moment rowcreatedat x format ddmmyyyy render let data thispropsgetbanners amp amp thispropsgetbannersdata amp amp thispropsgetbannersdataitems amp amp thispropsgetbannersdataitemslength gt amp amp thispropsgetbannersdataitemsmap thiscreatetable", "num": "9820", "d": "5/2017"}, {"title": "optimize defaultprops proptypes", "body": "want request feature report bug feature proptypesstring default string current behavior two statics representing thing kind trivial sometimes people write useless code design ca nt tell author wanted expected behavior make defaultprops work proptypes one static two statics much easier hoc developers customize modify remove", "num": "9818", "d": "5/2017"}, {"title": "fix function arity issues", "body": "flow supports verifying number arguments passed function enabling feature updating flow master results arity errors x pr reduces errors fix remaining errors", "num": "9817", "d": "5/2017"}, {"title": "returns undefined question thispropsformgetfieldsvalue", "body": "antd chrome window use thispropsformgetfieldsvalue take value form code follows result expect use thispropsformgetfieldsvalue take value form actual result versions react browser os affected issue work previous versions react", "num": "9810", "d": "5/2017"}, {"title": "touchstart preventdefault prevent click event", "body": "want request feature report bug bug current behavior calling synthetic event fails prevent click event also tried nt make difference current behavior bug please provide steps reproduce possible minimal demo problem via similar template div supposed handle hover case process click first time tapped via touch click desktop fine however tapping touch mobile device using dev tools touch emulation trigger immediately jsfiddle touchstartpreventdefault allowed mobile touchaction none class somebutton extends reactcomponent constructor props super props render return however move listener use normal dom api everything works jsfiddle javascript class somebutton extends reactcomponent constructor props componentdidmount thiselemaddeventlistener touchstart e gt thisstatehover epreventdefault works thissetstate hover true render return gt expected behavior first time processed treat hover wait process event next pointer mouse events processed versions react browser os affected issue work previous versions react react sure previous react versions chrome android chrome mac emulating touch firefox mac emulating touch", "num": "9809", "d": "5/2017"}, {"title": "problem unstablerendersubtreeintocontainer refs", "body": "want request feature report bug report bug current behavior use usual technique portals unstablerendersubtreeintocontainer also need control portal children using legacy syntax know problem async called refs used undefined due async nature current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open browser console press add button got error causes according logs called callback expected behavior needed defined general case completely completed render know pattern using callback preferred solution quite complex combination two libraries nt access callback someone interested libs reactautocomplete reacttether may way avoiding rerender saving refs first render versions react browser os affected issue work previous versions react using", "num": "9808", "d": "5/2017"}, {"title": "fiber ref instance cause error", "body": "want request feature report bug sure maybe bug current behavior debugger find versions react browser os affected issue work previous versions react use", "num": "9807", "d": "5/2017"}, {"title": "react ignores css grid properties style attribute", "body": "want request feature report bug bug current behavior using css grid properties element style attribute work react ignores current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior react include css grid properties css properties rendered dom react intends support subset css made clear documentation supported properties enumerated nothing suggest certain properties work others wo nt without error message warning indicating ignored versions react browser os affected issue work previous versions react react", "num": "9805", "d": "5/2017"}, {"title": "react wo nt work behind proxy basic authentication", "body": "hello react application running local intranet apps run behind web proxy basic authentication userpassword checked ad server accessing react app directly via unauthenticated proxy everything works fine access app proxy authentication enabled manage fetch first page every request performed using fetch fails unauthorized basically authorization header hashed credentials passed fetch request works seamlessly", "num": "9804", "d": "5/2017"}, {"title": "reactchildrenmap children child index gt got childtypename undefined ie browser", "body": "title want get child element tag name success chrome browser failed ie browser", "num": "9803", "d": "5/2017"}, {"title": "arraymap render", "body": "code screen console show problem please thanks", "num": "9802", "d": "5/2017"}, {"title": "nonsensical code official react blog post submit pr official react blog", "body": "hey guys back came across post official react blog contained code example made sense implement intent expressed blog post cancel promise componentwillmount setstate invoked component mounted ignored back remembered saw tweet today topic gaearon blog post question nonsensicalnonworking code js use promises may need wrap promise order make cancelable const cancelablepromise makecancelable new promise r gt componentsetstate cancelablepromise promise gt consolelog resolved catch reason gt consolelog iscanceled reasoniscanceled cancelablepromisecancel cancel promise makecancelable defined istarkov const makecancelable promise gt let hascanceled false const wrappedpromise new promise resolve reject gt promisethen val gt hascanceled reject iscanceled true resolve val promisecatch error gt hascanceled reject iscanceled true reject error return promise wrappedpromise cancel hascanceled true try blog post even referenced stackoverflow answer given points pretty ridiculous nonworking nonsensical example code afaik using schemes rely promiserace limitationsissues see way cancel promises afaik cancellable promise es proposal withdrawn right way promise cancellation userland promise implementations recommend bluebird promise library details see", "num": "9801", "d": "5/2017"}, {"title": "componentwillreceiveprops bug", "body": "subj jsbin example jsx class child extends component componentwillreceiveprops props consolelog thispropsdatalength consolelog propsdatalength render return null class parent extends component constructor props super props thisspeed componentdidmount render return", "num": "9800", "d": "5/2017"}, {"title": "different behaviour different devices", "body": "first react app must admit however app works perfectly fine chrome access safari safari mobile bit lazy function link returns array content rendered component based props father state get called every time user changes filters yet safari rendering happens less regularly function returns right object safari render method lazy safari check adding removing coding filter produce changes safari code repo", "num": "9799", "d": "5/2017"}, {"title": "conditional rendering working react native", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9794", "d": "5/2017"}, {"title": "reactchildrenisvalidchildren similar reactisvalidelement", "body": "want request feature report bug feature current behavior method available expected behavior returns true passed opaque children object", "num": "9791", "d": "5/2017"}, {"title": "chrome scroll position preserved", "body": "want request feature report bug bug possibly react google chrome current behavior scroll position preserved children element list change order bug seems apply react keys child elements unchanged current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo available broken case resize demo window scrollable already scroll bottom window click refresh button left window scroll automatically expected behavior window keep scroll position working case resize demo window scrollable already scroll bottom window click refresh button right window scroll expected behavior versions react browser os affected issue work previous versions react tested react version older versions tested affected browsers osx google chrome official build osx beta google chrome official build beta affected osx beta firefox osx beta safari version", "num": "9789", "d": "5/2017"}, {"title": "two things nt like react", "body": "want request feature report bug feature css love react ca nt help notice vue components one thing better writing css way css looks syntax importantly access css properties looks elegant simple create module css ca nt react feature every solution knows invented syntax walkaround recently learned nt obvious bind event handler argument performant time seems natural way pass arguments event handler way create new function every time component renders possibly damage performance alternative know seems less apparent supposed bind way try pass arguments ways good way solve", "num": "9787", "d": "5/2017"}, {"title": "synthetic eventphase nt reflect synthetic phase", "body": "want request feature report bug bug current behavior called bubbling phase current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo shows event phase react incorrect bubbling must capturing moreover also shows bubbling phase probably reason syntethic event expected behavior calls capturing phase calls bubbling phase versions react browser os affected issue work previous versions react react version os work", "num": "9783", "d": "5/2017"}, {"title": "orphaned doc page", "body": "found page linked anywhere else online docs far tell old page needs removed new page somehow nt added properly", "num": "9782", "d": "5/2017"}, {"title": "question make table date scheduler previous next button react", "body": "", "num": "9774", "d": "5/2017"}, {"title": "make date scheduler week previous next button html table", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9773", "d": "5/2017"}, {"title": "paste event handler invoked focus applied element programmatically", "body": "want request feature report bug bug current behavior clicking element set focus allows onpaste handler invoked expected apply focus element using htmlelementfocus method onpaste handler invoked current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle open console jsfiddle click yellow div focus use keyboard ctrlcmdv edit menu fire paste event notice paste event logged console expected click input element focus press arrow key set focus yellow div programmatically use keyboard ctrlcmdv edit menu fire paste event notice paste event logged console double check paste event firing using dev tools expected behavior expect event handler invoked regardless focus applied element versions react browser os affected issue work previous versions react react react tested macos w chrome v", "num": "9769", "d": "5/2017"}, {"title": "example documentation working", "body": "want request feature report bug bug current behavior example documentation working macos chrome current behavior bug please provide steps reproduce possible minimal demo problem go try filter things entering data input textbox expected behavior filter content versions react browser os affected issue work previous versions react nt know", "num": "9767", "d": "5/2017"}, {"title": "set react dependency amd builds addons", "body": "right react undefined addons may depend createclass documented createfragment reactlinkedinput problem running amd environment without react defined globally lead dependency found probably solved follows manually edit unminified version making work like test modify requirejs systemjs fixtures oneoffs test specifically nt need committed submit pr react core maintainer rebuild minified version process intended repeat automated easy way reproduce tag flarnie andor gaearon ideally making changes code worth someone wants work happy review prs otherwise pick next couple days", "num": "9765", "d": "5/2017"}, {"title": "improve react reactnative sync scripts", "body": "followup work pr sync react www changes current process syncing react facebook www involves running script within www repo would nice relocate script react repo since coupled react build process shims anyway point could better share code eg autogenerated change log react native sync script react sync script updateadd documentation new sync process sync reactnative fbsource changes possible sync react reactnative simultaneously update reactnative sync script autogenerate change log based commits master since last sync something react sync script currently script moved react github share code remove script fbsource react reactnative synced fbsource way react synced www using new central sync scripts updateadd documentation new sync process secondary goals syncing www fbsource similar possible avoid confusion would nice easy noncoreteam members run sync scripts also", "num": "9763", "d": "5/2017"}, {"title": "facing issue load local images react js", "body": "posted issue please check", "num": "9762", "d": "5/2017"}, {"title": "seems legal stuff making things difficult", "body": "hi please make legal language easier understand user friendly anyone use without worry", "num": "9760", "d": "5/2017"}, {"title": "reactlink still using reactproptypes", "body": "want request feature report bug bug current behavior react using reactproptypes even though states going deprecated current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior use proptypes package versions react browser os affected issue work previous versions react", "num": "9755", "d": "5/2017"}, {"title": "createreactclass compiled latest google closure compiler", "body": "trying compile createreactclass latest closure compiler compiler complains related createreactclass npm package needs republished react code ticket spun", "num": "9750", "d": "5/2017"}, {"title": "bug createreactclass work amd environment", "body": "want request feature report bug report bug current behavior unable require module bug seems similar uses without proper calls javascript copied var factory require factory hack grab noopupdatequeue isomorphic react var reactnoopupdatequeue new reactcomponent updater current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle errors jsfiddle expected behavior able load createreactclass without problem versions react browser os affected issue work previous versions react react createreactclass", "num": "9749", "d": "5/2017"}, {"title": "convert elements test objects tomatchobject jest", "body": "want request feature report bug request guidance add feature testing especially jest enzyme current behavior get benefit descriptive jsx must pay cost irrelevant details snapshot tests cause unnecessary updates risk incorrect decisions proposed behavior goal balance effort write tests initially update tests correctly components change replace elements relevant subset props therefore issue convert expected react elements directly test objects especially shallow rendering new deepeventshallowtest pattern see tablec example information see overview status proposed able import string sentinel value ignore children absence children received object given react element return unrendered element test object enumerable see omitted properties including omitted think clearer names willing contribute guidance draft code expects object expect array elements components render react think test cases examples tests enzyme although pending via reacttestrenderer reacttestrenderershallow", "num": "9747", "d": "5/2017"}, {"title": "question listen user events syntheticevents", "body": "hello smile question react synthetic events listen events parent component want track user activity want handle mouse events wheel events etc possible listen event yes yes listen window document events ca nt localize component make event maybe possible localize component using eventtarget thanks", "num": "9746", "d": "5/2017"}, {"title": "reactdomserverrendertostaticmarkup trigger componentwillmount serverside bug avoid", "body": "react reactdom reactrouter calling reactdomserverrendertostaticmarkup serverside trigger componentwillmount one component strange behavior happen components server rendering using recommended way reactrouter routes defining fetchdata attribute call static function component component define static function use react life cycle hooks render client reproduce behavior clone repo visit see server side rendering logs see reducer run means ssr job initialstate build everything fine visit see fetcharticlesrequest fetcharticlerequest note plural see blogarticle component retrigger second time meaning global state affected see object article loading true state initialstate time client receive get error client behavious quite strange componentwillmount call nested route blogarticle blog wondering bug react", "num": "9745", "d": "5/2017"}, {"title": "reactproxy served restrictive csp policy server without throwing error firefox", "body": "want request feature report bug feature current behavior firefox throws error running react application using csp header scriptsrc set self case error looks like content security policy page settings blocked loading resource self scriptsrc set self keyword scriptsrc error message translated error message ff links following row react bundle file reactproxymodulescreateclassproxyjs get rid error ff allowing unsafeeval csp policy dont want current behavior bug please provide steps reproduce possible minimal demo problem via similar template run react application ff browser csp policy scriptsrc set self check console errors expected behavior error handling source code event execution environment allow dynamic evaluation still shows error ff versions react browser os affected issue work previous versions react name reactproxy version firefox version ubuntu", "num": "9744", "d": "5/2017"}, {"title": "android app hangs production mode", "body": "hi currently android app production hangs specific screen touch button even hardware back button works correctly debug mode anyone spot possible problems source quite large nt post code tried show alert hangs enter error screen hangs timeout show alert still able press alert close button alert close app still hangs react version react reactnative", "num": "9743", "d": "5/2017"}, {"title": "question question regarding best practice", "body": "apologies nonestandard git issue nt quite sure else ask working another developer react project using wondering anything wrong bad practice using fat arrow functions hoisted parameters hoisted component class nt set within constructor example class mycomponent extends reactcomponent constructor props super props state name setname e gt thissetstate name etargetvalue colleagues approach class mycomponent extends reactcomponent constructor props super props thisstate name setname e thissetstate name etargetvalue reason use approach automatically scopes within function nt need write additional line bind method within constructor figured ultimately preference worth identically told way first example bad practice thanks advance", "num": "9739", "d": "5/2017"}, {"title": "docs visual realign", "body": "hi folks shot visual realign react docs goals create conservative realign nt controversial still opens opportunity future expansion features heading towards design system avoid major architectural changes best handled separate pr future inspiration graphqlorg gridded sites process mockups minute receive go ahead would work rest elements amp viewport sizes write css scratch thoughts notes moved sidebar right hand side improve readability collapsed noncurrent docs nav categories add intro paragraph first para docs page baseline grid column grid proxima nova current site footer layout would tightened screenshot current one atm fire away comments cc gaearon", "num": "9728", "d": "5/2017"}, {"title": "warning missing key prop array arrays", "body": "believe following bug array div elements without key props correctly result warning array length arrays containing div elements result warning example believe correct behavior array arrays div elements also result warning react firefox", "num": "9727", "d": "5/2017"}, {"title": "react without virtually impossible", "body": "thing like react still use micro apps small portions website need user interaction declarative uis still simplify development lot without setup whole build environment use cases looks definitely overkill know may sound like grumpy grandpa worried true anymore react deprecation need external modules sure need bundle modules browser expose globals ca nt load react cdn write code anymore also using warnings still issued like getdefaultprops used classic reactcreateclass definitions use static property named instead maybe fact bug possibly issues wrong stick react maybe start making react builds specifically environments bundling needed external modules etc", "num": "9721", "d": "5/2017"}, {"title": "passing children propschildren works documented", "body": "either raw react jsx seems children passed property props object instead documented methods separate parameter reactcreateelement enclosed component tags jsx encountered syntax book rather confused book provided explanation syntax find mentioned anywhere react documentation intuitively expected work documented children available propery props object documented reverse possible well passing children propschildren actually supported perhaps explicitly mentioned docs deprecated feature something also asked stack overflow", "num": "9718", "d": "5/2017"}, {"title": "licensing faq suggestion adding links remove ambigity", "body": "referring specifically termination additional patent grant facebook bsdpatents license cause copyright license also terminate unclear copyright license referred quote would directly linking words additional patent grant words copyright license appropriate document possiblepermissible facebook legal team editing note link would facebook oss wide versions react specific licenses", "num": "9716", "d": "5/2017"}, {"title": "add license faq handling patent grant redistribution", "body": "could please add clarification license faq describes rights obligations concerning patent grant redistributing reactjs eg something like redistribute reactjs third party form eg fork modify incorporate product allowed choose bsd license license drop additional patent grant guess yes redistribute reactjs third party form eg fork modify incorporate product possible also transfer additional patent grant receivers derived work guess patent grant license facebook direct receivers formally delete patent grant third party receive license react upstream project facebook license compatible guess yes since patents grant addition", "num": "9715", "d": "5/2017"}, {"title": "bug input type number", "body": "example original value need format take javascript class test extends reactcomponent state value changevalue gt alert thissetstate value render return reactdomrender mountnode", "num": "9712", "d": "5/2017"}, {"title": "rendertostring different result normal render", "body": "used react render entire page server side got errors like one trying render component document using server rendering checksum invalid usually means rendered different component type props client one server render methods impure react handle case due crossbrowser quirks rendering document root look environment dependent code components ensure props client server side client datareactid server datareactid problem ending tags elements rendered using react server rendertostring client render using app component server client", "num": "9708", "d": "5/2017"}, {"title": "object shorthand props", "body": "hi find wanting feature lot name const find pass like would love able use shorthand notation object creation assumes passed component would work like anyone else find worthwhile change", "num": "9707", "d": "5/2017"}, {"title": "bug reactdom still contains reference reactproptypes", "body": "react sends deprecation warning using reactproptypes stack trace points reactdom webpack config im sure surrounding lines code see onchange key", "num": "9704", "d": "5/2017"}, {"title": "functional setstate default docs tutorials first steps guides", "body": "", "num": "9703", "d": "5/2017"}, {"title": "debugid may empty", "body": "want request feature report bug bug current behavior tests sporadically logging warning fail tests log warnings causing flakiness current behavior bug please provide steps reproduce unable consistently reproduce seeing roughly failure rate test suite nt seem patterns around tests fail error expected behavior expect tests either log warning consistently something wrong log warning versions react browser os affected issue work previous versions react appearance warning correlates pretty closely migration node node", "num": "9698", "d": "5/2017"}, {"title": "foo foo shorthand jsx", "body": "want request feature report bug want request feature current behavior currently shorthand jsx props boolean default attributes spread however writing jsx many cases could better shorthand syntax example", "num": "9696", "d": "5/2017"}, {"title": "warn dispatching redux actions componentwillupdate runtime docs", "body": "want request feature report bug feature current behavior component dispatching redux action causing things blow confusing ways instance causing different component get called second time got called led various npes reconciliation process expected behavior would nice anything would trigger update call component would immediately error dev mode even causing different component update case triggering ancestor container update would possible versions react browser os affected issue work previous versions react seeing react chrome macos ca nt say sure code caused bugs previous versions react blame rests code anyway", "num": "9693", "d": "5/2017"}, {"title": "needed simplified chinese documentation", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9692", "d": "5/2017"}, {"title": "better approach", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9690", "d": "5/2017"}, {"title": "createreactclass umd module work amd environment", "body": "undefined", "num": "9689", "d": "5/2017"}, {"title": "postpatch", "body": "basic post changed patch test", "num": "9688", "d": "5/2017"}, {"title": "new test post", "body": "basic post test post", "num": "9687", "d": "5/2017"}, {"title": "new test post", "body": "basic post test going fail", "num": "9686", "d": "5/2017"}, {"title": "document pass args event handlers", "body": "inside loop common want pass param event handler would good thing add doc page also pass args without triggering rerender child component ie creating new function every time", "num": "9685", "d": "5/2017"}, {"title": "reactcomponent undocumented templated class", "body": "see used three template parameters documented nowhere simply could nt find docs able deduce second third types respectively however coud nt figure first template parameter documented anywhere please", "num": "9684", "d": "5/2017"}, {"title": "error document optimizing performance", "body": "reconciliation algorithm react uses diff one tree another determine parts need changed found define reconciliationin opinion reconciliation contains two part diff element tree update actual dom node think picture need reconciliation color red", "num": "9682", "d": "5/2017"}, {"title": "difference clientserver side react rendering latter even", "body": "good day honest fellows fairly new react single page apps really ca nt wrap head around something server routing section stated send indexhtml despite accessing different routes guess ok send file since almost empty usually div tag os something way react injecting html sent server already client side right building different html file sorts clientside routing handled caveats either questions sorry lot difference clientserver side react rendering server side react rendering even would one want clientside routing major one client accesses data via api different route instance redux reducers would kind work right help understand please", "num": "9681", "d": "5/2017"}, {"title": "scrolling gets jammed specific condittions", "body": "see fiddle using chrome bug small problem occurs specific conditions fiddle shows scrollable box halfway color box changed solid color semitransparent color scrolling see seems get little stuck way becomes much apparent using page key scroll colorchange point even repeated pushes page page going semitransparent color solid color works fine expected behavior scrolling nt hitch colorchanging point pushing page supposed scroll box way recreating bug container must positioned absolute relative must zindex set problem occurs going solid color rgba color alpha nt enviorment tested fedoralinux windows behavior seems occur chrome firefox works fine react version", "num": "9680", "d": "5/2017"}, {"title": "onclick unexpected behaviour text selections", "body": "bug current behavior text selection component handler react fires onclick steps reproduce expected behavior onclick fires text selection double click events versions react browser os react latest os macos latest browser chrome latest", "num": "9678", "d": "5/2017"}, {"title": "tutorial", "body": "hi couple questionsrequests regarding tutorial board render function snippets question show later removed winner status make use thisstate value instead thisprop value understand removed later trying follow along understand code seemed inconsistent jumpto function game class discussion reads set xisnext true index move number even number code given reads line read set xisnext true index move number odd number thank", "num": "9677", "d": "5/2017"}, {"title": "error boundaries rendertostring typeerror read property listeners null rendertostring", "body": "want request feature report bug report bug current behavior seeing errors kibana across userbase rendering nodejs current behavior bug please provide steps reproduce possible minimal demo problem via similar template happens react internals nt able reproduce issue struggling create minimal repro searched issue able find gaearonreacthotloader nt exactly helpful nt use react hot loader someone maybe explain type behavior would cause based dig bit expected behavior error versions react browser os affected issue work previous versions react packages react reactdom update could coincided upgrade server node", "num": "9674", "d": "5/2017"}, {"title": "cantt mount text node components", "body": "cantt mount text node components child window edge jsx const somecomponent gt displayed displayed text node break mounting displayed mounting stopped class popoutwindow extends reactcomponent constructor props super props thisstate openedwindow null componentdidmount var win container openedwindow componentdidupdate thisstateopenedwindowupdate thispropschildren render return reactdomrender container throws following error debugging stack trace noticed fragment creation line resulting malformed fragment later trying append malformed fragment dom line fails throws error tried replace fragment span element specific case child window worked could solution", "num": "9667", "d": "5/2017"}, {"title": "react github wiki security issue", "body": "browsing react github wiki noticed following get anyone edit wiki without reviewed edit linked main wiki page", "num": "9666", "d": "5/2017"}, {"title": "dynamically loading scripts components", "body": "access object dynamically loading scripts components class appcomponent extends reactcomponent componentwillmount newprops consolelog new script loadscript consolelog windowgoogle render export default appcomponent dynamic loading google maps script export default class loadscript constructor loadscript gt", "num": "9664", "d": "5/2017"}, {"title": "concern rendering nested array", "body": "find warning given render array nested another case debugging react find used validate children keys function used check child node checked checking nesting array eg objects property named function never called warning message never thrown bug react acquiesce case giving warning message better maybe", "num": "9662", "d": "5/2017"}, {"title": "libjscso segment error android application running low probability", "body": "idebug idebug idebug sl fp idebug ip sp lr pc fffffffe cpsr idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug scr idebug pc fffffffe idebug pc idebug pc idebug idebug fffffffb idebug idebug fffffffb idebug fffffffc idebug fffffffb idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug ffffffff idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffb idebug idebug fffffffb idebug idebug fffffffb idebug idebug idebug fffffffb idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug fffffffc idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffff ffffffff idebug fffffffb fffffffc idebug fffffffc fffffffc idebug ffffffff fffffffc idebug fffffffb idebug fffffffb fffffffb idebug fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffc idebug idebug idebug idebug idebug idebug fffffffa idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffff ffffffff idebug fffffffb fffffffc idebug fffffffc fffffffc idebug ffffffff fffffffc idebug fffffffb idebug fffffffb fffffffb idebug fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffb fffffffc idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug fffffffb idebug fffffffb idebug fffffffb idebug fffffffb idebug idebug idebug fffffffb idebug idebug idebug fffffffb idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug ffffffff ffffffff ffffffff ffffffff idebug idebug ffffffff idebug idebug idebug fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffb idebug fffffffb fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffc idebug fffffffc fffffffb idebug fffffffc idebug fffffffb fffffffb idebug fffffffb idebug ffffffdc ffffffff ffffffff ffffffff ffffffff idebug ffffffec ffffffff ffffffff ffffffff ffffffff idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug idebug rx vectors idebug map address idebug map", "num": "9660", "d": "5/2017"}, {"title": "rfc onchange oninput nt polyfill oninput uncontrolled components", "body": "nicer name fact propagated highlevel components default name much nicer high level event name generally helpful many newcomers react nt know dom well lot inverse however nt change fact confusing people familiar unfortunately changing would cause confusion everyone already knows react reason like change like get away polyfilling uncontrolled components use case filled kinds imperative code leads edge cases eg readingsetting readingsetting use controlled components nt need touch imperatively therefore wo nt hit edge cases ideally get away reading instead pass directly event handler proposal controlled components polyfilled works like today allowed overfire many events even nothing changed may special fiber rules regarding synchronous flushing optional pass second arg works like one version warns deprecated suggests switching next version works like browser still warns tells use forever optional add gettersetter dom development mode warn used directly uncontrolled components polyfilled works however browser works warns browser differences nt also specify andor warnings suggests implementing listeners cover edge cases switch controlled component polyfilled works however browser works", "num": "9657", "d": "5/2017"}, {"title": "onresize event missing", "body": "get unknown prop warning warning unknown prop tag best tell actually something expected work since browsers support also found post someone discussing behavior looked spec cursory glance apparently tells might actually supported many elements also tells event bit complicated work work looking workaround indeed bug expect would rather fix work around", "num": "9655", "d": "5/2017"}, {"title": "typeerror read property updater undefined", "body": "want request feature report bug bug report current behavior typeerror read property updater undefined reproduce js import react component react import logo logosvg import appcss import axios axios class app extends component constructor super thisstate colors thisonfilechange thisonfilechangebind onfilechange e const setstate render return welcome react thisstatecolorsmap function c const styles height width backgroundcolor chex return export default app cant provide url post guess doesnt matter versions react browser os affected issue work previous versions react chrome version react reactdom", "num": "9654", "d": "5/2017"}, {"title": "reactnative snapshot tests failing locally master branch", "body": "want request feature report bug probably kind bug tests current behavior run two failing snapshot tests failures escape characters seem missing generated snapshot see screenshot current behavior bug please provide steps reproduce possible minimal demo problem via similar template machine latest master branch expected behavior snapshot tests pass passing circleci", "num": "9653", "d": "5/2017"}, {"title": "class comparison works nodeenv production", "body": "would like report bug react typeclass comparison seems work nodeenv set production created repo illustrate bug expect typeclass comparison work regardless nodeenv set", "num": "9652", "d": "5/2017"}, {"title": "testutils documentation missing", "body": "hey ca nt find link testutils documentation anywhere react website going updates omer", "num": "9651", "d": "5/2017"}, {"title": "fiber custom reactfiberreconciler renderer receives old props commitupdate setstate parent component", "body": "hi sure bug probably something wrong want make sure trying create paperjs bridge react based reactartfiber running ubuntu chrome version using hacked version react export know import mean time anyway code app app component method triggers rerender function receives old value btw questions would best place ask learn fiber apart source code import react component react import proptypes proptypes import invariant fbjslibinvariant import emptyobject fbjslibemptyobject import reactfiberreconciler reactdom import paper paper const colors red black green orange brown violet const types layer layer path path circle circle group group tool tool const segments const const layer typeslayer const path typespath const circle typescircle const group typesgroup const tool typestool function getrandomint min max return mathfloor mathrandom max min min class app extends component constructor props super props thisstate strokecolor colors activetool move width height zoom circles id center radius strokecolor black strokescaling false id center radius strokecolor red strokescaling false id center radius strokecolor green strokescaling false addcircle gt const circles height width thisstate const newcircles circles id circleslength center getrandomint width getrandomint height radius getrandomint strokecolor colors getrandomint strokescaling false thissetstate circles newcircles changepathcolor gt const strokecolor thisstate const index colorsindexof strokecolor const nextcolor colors colors thissetstate strokecolor nextcolor gt lt lt lt lt lt lt lt lt lt change strokecolor consolelog strokecolor nextcolor onwheel e gt const activetool zoom thisstate activetool move const delta ewheeldelta edeltay const newzoom delta gt zoom zoom thissetstate zoom newzoom onmovemousedown e scope gt thispoint epoint onmovemousedrag e gt todo thissetstate center etoolviewscrollby thispointsubtract epoint onmovemouseup e gt thispoint null onpenmousedown e gt thispath thispathselected false thispath new paperpath segments epoint strokecolor black fullyselected true onpenmousedrag e gt thispathadd epoint onpenmouseup e gt thispathsimplify thispathfullyselected true render const activetool circles strokecolor height width zoom thisstate const paperprops activetool strokecolor height width zoom onwheel thisonwheel return app tools active tool activetool color circlesmap circle gt class paper extends component componentdidmount const activetool children height width zoom thisprops componentdidupdate prevprops prevstate const activetool children height width zoom thisprops componentwillunmount paperrendererupdatecontainer null thismountnode render consolelog thispropsstrokecolor const height onwheel width thisprops const canvasprops ref ref gt thiscanvas ref height onwheel width return function applylayerprops instance props prevprops todo function applytoolprops tool props prevprops todo function applygroupprops tool props prevprops todo function applycircleprops instance props prevprops propscenter prevpropscenter instancecenter new paperpoint propscenter propsstrokecolor prevpropsstrokecolor instancestrokecolor propsstrokecolor propsstrokewidth prevpropsstrokewidth instancestrokewidth propsstrokewidth propsfillcolor prevpropsfillcolor instancefillcolor propsfillcolor function applypathprops instance props prevprops consolelog applypathprops propsstrokecolor lt lt lt lt lt lt lt lt strokecolor change propsstrokecolor prevpropsstrokecolor instancestrokecolor propsstrokecolor propsstrokewidth prevpropsstrokewidth instancestrokewidth propsstrokewidth const paperrenderer reactfiberreconciler appendchild parentinstance child childparentnode parentinstance childremove appendinitialchild parentinstance child typeof child string noop string children text eg foo bar invariant false text children already flattened return committextupdate textinstance oldtext newtext noop commitmount instance type newprops noop commitupdate instance type oldprops newprops consolelog commitupdate instance type newprops instanceapplyprops instance newprops oldprops createinstance type props internalinstancehandle consolelog createinstance type props const children paperprops props let instance createtextinstance text rootcontainerinstance internalinstancehandle return text finalizeinitialchildren domelement type props return false insertbefore parentinstance child beforechild invariant child beforechild paperreact insert node prepareforcommit noop prepareupdate domelement type oldprops newprops return true removechild parentinstance child destroyeventlisteners child resetaftercommit noop resettextcontent domelement noop getroothostcontext return emptyobject getchildhostcontext return emptyobject scheduleanimationcallback windowrequestanimationframe scheduledeferredcallback windowrequestidlecallback shouldsettextcontent props return typeof propschildren string typeof propschildren number usesyncscheduling true export default app", "num": "9648", "d": "5/2017"}, {"title": "use localstorage componentwillmount", "body": "learning react js want check authentication token set localstorage component renders currently trying inside componentwillmount method gives warning localstorage defined access localstorage", "num": "9647", "d": "5/2017"}, {"title": "page state changed case nt use setstate", "body": "create class message messagejsx file component testinput behind export default class message extends reactcomponent constructor props super props thisstate text thisshowtext thisshowtextbind showtext consolelog thisstatetext render return class testinput extends reactcomponent constructor props super props thisstate text componentwillmount thissetstate text thispropstext componentwillreceiveprops nextprops thissetstate text nextpropstext testinputproptypes text proptypesarray click click button testinput component push click string state click show click result button message page console state click use setstate method message use react version ps maybe issue like could someone close mine", "num": "9646", "d": "5/2017"}, {"title": "need know react get released", "body": "bug feature search lot internet find release date react please mention tried check raise question forum questions raising thanks kalpana", "num": "9645", "d": "5/2017"}, {"title": "external packages transforming", "body": "want request feature report bug bug current behavior checks shipped browser expected behavior react browserify transform converts actual environment variable react packages x proptypes x createreactclass x reactaddonscreatefragment x reacttransitiongroup", "num": "9641", "d": "5/2017"}, {"title": "rename reacteventlistener reactdomeventlistener", "body": "currently reacteventlistener domspecific module generic sounding name confusing contributors ie confusing let rename reactdomeventlistener pretty easy rename file update resort imports philippspiess working task", "num": "9639", "d": "5/2017"}, {"title": "error element ref created another elements constructor dev environment", "body": "creating element ref inside constructor error thrown production mode dev mode minimal sample error reactowner refs happen dev production modes happening react", "num": "9635", "d": "5/2017"}, {"title": "warning message zindex", "body": "want request feature report bug report bug current behavior warning message current behavior bug please provide steps reproduce possible minimal demo problem via similar template setting css style property zindex numerical value warning displayed warning tag owner passed numeric string value css property value treated unitless number future version react expected behavior warning zindex according css mdn versions react browser os affected issue work previous versions react", "num": "9633", "d": "5/2017"}, {"title": "featurerequest make writing css easy", "body": "react need external apis write css quite difficult like event handling react component support css pseudo selectors missing like static block style styles classname pseudo style pathtofilecss component class component", "num": "9632", "d": "5/2017"}, {"title": "react djnogo", "body": "hello use reactdjnogo develop web system meet upload picture use form tag input tag put tags react render function know problem need help thanks much", "num": "9631", "d": "5/2017"}, {"title": "persistant event", "body": "want request feature report bug bug current behavior persistent event broken console prints different values async operation current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior console print value async operation versions react browser os affected issue work previous versions react using react chrome os mac", "num": "9630", "d": "5/2017"}, {"title": "reactinputselection typeerror", "body": "got automated error report sentry relating reactinputselection thought would notify case interest unfortunately know user happened windows nt reactdom", "num": "9628", "d": "5/2017"}, {"title": "ismounted behavior different", "body": "want request feature report bug bug current behavior calling prior versions would return returns believe untested behavior new tests added may check wrong value changing line test exhibit behavior fix would defer setting flag mixins method called component versions react browser os affected issue work previous versions react anything using broken working correctly", "num": "9627", "d": "5/2017"}, {"title": "reactpatents suck", "body": "wrong people puts sort indirect limitation open source project started use react love earth nt right words facebook breaks rules break projects lowest thing ever done facebook maybe code related developer potential abuse", "num": "9623", "d": "5/2017"}, {"title": "proper explanation ref vs controlled input use case state variable react", "body": "went docs react controlled uncontrolled components created simple use case want enforce user enter uppercase values input field first case used ref onchange achieve global object property capture dom node code second case used value property state onchange code docs says controlled component every state mutation associated handler function makes straightforward modify validate user input example wanted enforce names written uppercase letters could write handlechange well validate user input even using state syncing value prop state done first example definitely validating user input done without using state explain one approach better exactly single source truth means important cases using global variable component object accessed throughout component also unnecessarily use value thisstateinput example would call render every keystroke whereas case render called nt performance case better also docs write uncontrolled component instead writing event handler every state update use ref get form values dom well need write event handler like onchange even using ref validate user input run time done case using event handler ref normal use case state variable understanding case option use state variable need update view dynamically thissetstate calls render every time run code grateful someone could clarify three examples enhance understanding concepts", "num": "9621", "d": "5/2017"}, {"title": "warn class function", "body": "want request feature report bug bug current behavior class testwrongproptypes extends component static proptypes return children proptypesstring missing proptypesstringisrequired example react silently skip checking default props setting component current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior know order work proptypes definition like warning like proptypesdefaultprops function either property getter prevent errors versions react browser os affected issue work previous versions react discovered react probably behavior also earlier versions", "num": "9620", "d": "5/2017"}, {"title": "reactdomcomponent get compiled reactdomserverdevelopment reactdomdevelopment", "body": "wrong place ask please let know put line like run search build directory appears", "num": "9618", "d": "5/2017"}, {"title": "react webpack socketio", "body": "hi working personal project want use webpackdevserver hot loader dev ssr production reactrouter finding way make things work together anyone already problem try build something like", "num": "9617", "d": "5/2017"}, {"title": "get proptype info component even built", "body": "want request feature report bug feature current behavior unknown current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior would nice something like proptypesgetproptypes component would accept component return proptype definitions work anything including default html element types something like even better would worked elements well seems like could hit element prototype currently ca nt find good way extension retain prop types default component andor way get prop types html elements versions react browser os affected issue work previous versions react reactdom", "num": "9614", "d": "5/2017"}, {"title": "possibility catch startstop pulltorefresh gesture event refreshcontrol component", "body": "want request feature report bug feature current behavior possibility catch startstop pulltorefresh gesture event refreshcontrol component expected behavior would great something like onpullstart onpullend event know moment startstop pulltorefresh gesture related question stackoverflow", "num": "9612", "d": "5/2017"}, {"title": "remove warnings unminified file", "body": "warning accessing proptypes via main react package deprecated use proptypes package npm instead warning lazyrenderbox reactcreateclass deprecated removed version use plain javascript classes instead yet ready migrate createreactclass available npm dropin replacement", "num": "9611", "d": "5/2017"}, {"title": "suggestion return promise", "body": "would nice could return promise resolves component render function return value stateless functional component might complex components need rerender promises get cached resolve", "num": "9610", "d": "5/2017"}, {"title": "onload working tags", "body": "seems attribute nt work tags tags could add support", "num": "9607", "d": "5/2017"}, {"title": "need better warning message proptypes deprication", "body": "problem removal proptypes main react package import lot packages warning message could help track culprit right helpful warning accessing proptypes via main react package deprecated use proptypes package npm instead", "num": "9605", "d": "5/2017"}, {"title": "docs update profiling components chrome timeline", "body": "google chrome dropped shiny new performance tab instead old timeline tab devtools read really much read except timeline panel renamed performance panel better reflect purpose result docs needs updated reflect new changes tested profiling component react app work seems work really matter updating docs submit pr update", "num": "9601", "d": "5/2017"}, {"title": "justificationexplanation immutable props docs", "body": "would nice react docs good concise explanation decided make props immutable developer friends using angular regularly make use technique child mutates data structure owned parent think great docs great job explaining ca nt react way dealing passing callbacks would nice see tangible specific examples exactly problem solved making props immutable", "num": "9599", "d": "5/2017"}, {"title": "setselectionrange function", "body": "want request feature report bug report bug current behavior trying move cursor contenteditable div calling setselectionrange div throws typeerror example code expected behavior caret moved setselectionrange function environments tested react chrome safari macos sierra", "num": "9596", "d": "5/2017"}, {"title": "add support controllist api controllist attribute", "body": "version chrome shipped support htmlmediaelement controllist api extension controllist attribute elements like attribute looks practice react lt support attribute strips warning console could add support new attribute nt pressing issue possible set attribute via javascript ie setting component lifecycle event would nice recognized valid attribute", "num": "9594", "d": "5/2017"}, {"title": "possible component listen events nondescendent elements", "body": "want request feature report bug feature current behavior components attach event listeners eg onclick descendent dom elements way component listen events originating elements descedents use case mind bunch components marked pink borders screenshot control state want state change click happens anywhere purple region could solve moving state parent component renders purple div seems consequence fact eventlistening tree tied render tree components state actually interact", "num": "9593", "d": "5/2017"}, {"title": "really strage error pressing", "body": "work company converting previous server side website react rest services started making components press get following error console exception thrown hook handling onsetchildren invariant violation expected onmountcomponent fire child parent includes onsetchildren also browser jumps completly different url use container components solutions", "num": "9591", "d": "5/2017"}, {"title": "uncaught typeerror super expression must either null function undefined", "body": "error uncaught typeerror super expression must either null function undefined really want know thanks much", "num": "9590", "d": "5/2017"}, {"title": "ensure flat bundles nt duplicate code weak minifiers", "body": "minifier nt eliminate constant expressions like uglify way flat bundles currently work would ship two bundles warn prominently case would effectively ship double bundle production", "num": "9589", "d": "5/2017"}, {"title": "ui tracking react", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9588", "d": "5/2017"}, {"title": "input type number decimal number support", "body": "need suggestions probably bug tried using tried step step work tried react posted first bug suggestion", "num": "9585", "d": "5/2017"}, {"title": "examples articles wiki outdatedunmaintained", "body": "referring example came page link example broken look first point react starter kit includes several examples view online github repository", "num": "9583", "d": "5/2017"}, {"title": "uncaught typeerror super expression must either null function undefined", "body": "use project show error chrome console thanks everyone", "num": "9581", "d": "5/2017"}, {"title": "fiber returning functions render throw", "body": "jsx class foo extends reactcomponent render return foo class app extends reactcomponent render return foo returns instead accidentally fiber catch", "num": "9577", "d": "5/2017"}, {"title": "bug ref function gets called twice update first mount first call null value", "body": "gaearon arguing functions need called twice due internal implementation details insignificant respect end users use react end user nt care ref functions called work honestly called twice strange perspective enduser knows nothing react internal implementation nt stated end users actually need guard values duplicate calls ref functions complicates enduser code would urge internal implementation modified stop calling ref functions twice", "num": "9574", "d": "5/2017"}, {"title": "error boundary text clear", "body": "error text enhancement request current behavior exception thrown something like printed react caught error thrown fix error code consider adding error boundary tree customize error handling behavior typeerror undefined object evaluating flags error located editor created connect editor connect editor created routercontext div created app app created connect app connect app created routercontext routercontext created router router provider error thrown clear error boundary would great link docs page describes googled react error boundary ended clear answers top hits", "num": "9571", "d": "5/2017"}, {"title": "add dev flag", "body": "want check whether react dev mode would work previous versions react", "num": "9569", "d": "5/2017"}, {"title": "react changed behaviour onchange behave exactly like oninput already oninput available", "body": "official docs say onchange onchange event behaves would expect whenever form field changed event fired intentionally use existing browser behaviour onchange misnomer behaviour react relies event handle user input real time already event fires every keystroke ie oninput nt understand react changed behaviour onchange behave oninput also docs everywhere onchange used specific reason two completely interchangeable react event behaviour actual onchange react intend correct future code", "num": "9567", "d": "5/2017"}, {"title": "getting warning strokelinecap value", "body": "want request feature report bug bug current behavior shows warning strokelinecap value butt nt part spec link current behavior bug please provide steps reproduce possible minimal demo problem via similar template create path strokelinecap pass butt value show warning expected behavior nt show warning versions react browser os affected issue work previous versions react react", "num": "9566", "d": "5/2017"}, {"title": "presedence given child component props", "body": "want request feature report bug feature current behavior button colours defined ones passed ones given definition expected behavior want first button colour blue rest green nt happen idea create group colour parent default could needed specifying colours component afterwards needed", "num": "9564", "d": "4/2017"}, {"title": "question determine parentchild relationship react host amp composite components", "body": "want request feature report bug feature current behavior nt seem anyway able access react tree current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior way able see elements nested parentchild relationship versions react browser os affected issue work previous versions react sure right place inquire sort functionalityfeature appreciate point right direction need able know child nodes associated parents able reference example js hello world one two see inherent tree structure components composite host like able know minimum nested throughout entire react application tried naive solution following js hello world one two obviously optimal approach user would define entire tree structure addition order components mount dom linear would hard reconstruct tree able perform logic relationship one another ideas go thank time assistance", "num": "9563", "d": "4/2017"}, {"title": "controlled input allows dot", "body": "want request feature report bug bug current behavior react allows dot controlled input nt allow changing value value set prop number string issue present current behavior bug please provide steps reproduce possible minimal demo problem via similar template example first input allows dot even though code nt allow changes second input nt allow dot expected behavior dot nt allowed versions react browser os affected issue work previous versions react version chrome firefox see jsfiddle example", "num": "9561", "d": "4/2017"}, {"title": "warn purecomponent renders impure ones children", "body": "want request feature report bug feature current behavior purecomponent renders impure one child warning console devtool expected behavior could better get warning message cases may related since react disallow purecomponent custom implement pure component customized efficient method must inherit base class add property order prevent warning message appear versions react browser os affected issue work previous versions react", "num": "9559", "d": "4/2017"}, {"title": "provide better error error objects valid react child found object keys", "body": "want request feature report bug bug current behavior currently mistake pass js object jsx instead string get following error error objects valid react child found object keys current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior show better error helps solve issue like solution versions react browser os affected issue work previous versions react", "num": "9552", "d": "4/2017"}, {"title": "using node module react native", "body": "mentioned modules pure javascript run within nodejsiojs perfectly ok run reactnative need resize crop image react native trying nodejs sharp image processing library think work reactnative pure node working io things installing throws errors fix whats missing also stackoverflow", "num": "9551", "d": "4/2017"}, {"title": "react examples accessible screen reader", "body": "hello would like start using react concerned examples seeing would like use react interact lots data screen reader user facebook put lots articles react accessibility great strangely examples read react developers put accessible tutorial several problems first codepen accessible seeing examples really difficult second huge number buttons text tictactoe game third seem use table remember correctly tictactoe board square set table boxes would really help making beautiful layout screen reader users datatable table think table div elements css says table make accessible one needs use table tag th tag tr tag td tag fantastic article make html tables really scary developers looking examples learning code learning code inaccessible manor mean learn use react official tutorial developer goes official tutorial exposed app supposed model apps look like apps look like tutorial basically able use app made react best practices really confused react actual rendering rendered elements perfect html accessibility use api fact accessibility api makes things difficult everyone adding complexity something super easy best way making screen reader accessible apps using html tags including div span react done amazing thing controlling html rendering needs done make renderer output proper html accessible facebook developers writing accessible apps default think reinforcement good coding practices could warning button missing text opening closing tags could warning images alt text could warning links text opening closing tags could app throw error input boxes coupled label element could errors warnings please given react app follow good coding practices would help react team make accessible examples help insure accessible web screen reader users world please let know help thank", "num": "9549", "d": "4/2017"}, {"title": "hostcontainerinfo always null edge", "body": "react application working perfectly fine browsers except react application wo nt even load reactdomlibreactdomcomponentjs line hostcontainerinfo always null chrome firefox always gets proper value hostcontainerinfo error getting versions used reactreactdom tried downgrading react upgrading problem still exists guidance approach problem would helpful thanks", "num": "9546", "d": "4/2017"}, {"title": "react app compatible facebook browser", "body": "shared react site facebook link work facebook mobile app works nonfacebook browser though safari chrome etc error says ca nt connect link working proper og meta tags og url og title og image etc something wrong site configuration ideas thanks lot knowledgeable group would appreciate insight", "num": "9543", "d": "4/2017"}, {"title": "marking external rollup nt include unused modules", "body": "see details", "num": "9542", "d": "4/2017"}, {"title": "demand", "body": "want request feature report bug bug current behavior react warns add even child options also enough current behavior bug please provide steps reproduce possible minimal demo problem expected behavior following warning warning failed form proptype provided prop form field without handler render readonly field field mutable use otherwise set either check render method versions react browser os affected issue work previous versions react observed assuming versions react affected", "num": "9541", "d": "4/2017"}, {"title": "ca nt contribute react windows", "body": "want request feature report bug sure maybe question current behavior fork lasted master branch react execute root directorybut get errors webstormworkspacereact npm run build reactbuild build webstormworkspacereact npm run versioncheck amp amp node scriptsrollupbuildjs reactbuild build webstormworkspacereact npm run versioncheck amp amp node scriptsrollupbuildjs reactbuild versioncheck webstormworkspacereact node scriptstasksversioncheckjs starting reactdevelopmentjs umddev parseerror undefined unterminated string constant file webstormworkspacereactsrcisomorphicreactjs line column undefined npm err windowsnt npm err argv nodejsnodeexe nodejsnodemodulesnpmbinnpmclijs run build npm err node npm err npm npm err code elifecycle npm err reactbuild build npm err exit status npm err npm err failed reactbuild build script npm run versioncheck amp amp node scriptsrollupbuildjs npm err make sure latest version nodejs npm installed npm err likely problem reactbuild package npm err npm npm err tell author fails system npm err npm run versioncheck amp amp node scriptsrollupbuildjs npm err get information open issue project npm err npm bugs reactbuild npm err nt available get info via npm err npm owner ls reactbuild npm err likely additional logging output npm err please include following file support request npm err webstormworkspacereactnpmdebuglog current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior build successfully versions react browser os affected issue work previous versions react windowsi sure whether fine previous versions react first build", "num": "9540", "d": "4/2017"}, {"title": "nodehaste status", "body": "codebase overview still reference haste however see elsewhere unsupportedarchived several months already migrated commonjs es modules like pick open issue wanted validate first thanks", "num": "9535", "d": "4/2017"}, {"title": "child component render sync", "body": "wrote tree component parent node child node array parent node update child node shouldcomponentupdate compute sync cost total way compute shouldcomponentupdate asyc avoid waste time", "num": "9533", "d": "4/2017"}, {"title": "doc state lifecycle", "body": "doc state lifecycle class class clock extends reactcomponent constructor props super props thisstate date new date componentdidmount thistimerid setinterval gt thistick componentwillunmount clearinterval thistimerid tick thissetstate date new date render return hello world thisstatedatetolocaletimestring reactdomrender documentgetelementbyid root question since setstate asynch ca nt happen calls setstate inside tick function get pending state example three seconds update wo nt applied state case could get three seconds missing ui nt applied delay wrong", "num": "9529", "d": "4/2017"}, {"title": "add unreleased section changelog", "body": "let make releases bit fastereasier keeping changelog updated incrementally whoever release new react version must manually read recent git history write changelog update incrementally add changelog unreleased header make prs release new version updating unreleased new version number adding blank section unreleased see info idea", "num": "9527", "d": "4/2017"}, {"title": "total time mean console log total time less sum time print printinclude function", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9524", "d": "4/2017"}, {"title": "wrong repo", "body": "wrong repo", "num": "9522", "d": "4/2017"}, {"title": "question close reactjs widget outside click", "body": "search widget website standalone react component user puts script site box rendered see search performed eg test results shown right input box want close search results user clicks outside widget anywhere else page nt know achieve react component nt know anything rest page also hide div jquery right ruin react virtual dom mechanism", "num": "9521", "d": "4/2017"}, {"title": "provide different value keyword onchange event handler event handlers like onblur onclick etc", "body": "react binds keyword event handler functions null explicitly noticed calls function associated onchange event undefined events onclick onblur value bound null usual extra call make undefined associated handler function could reason bug although null undefined use developer bind explicitly link code jsfiddle", "num": "9520", "d": "4/2017"}, {"title": "remove shouldcomponentupdate property functional components", "body": "want request feature report bug feature current behavior shouldcomponentupdate functional components feature already implemented fiber alpha release comment written removed final release current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior allow optional shouldcomponentupdate property functional component versions react browser os affected issue react work previous versions react today planning add shouldcomponentupdate property functional component open issue github adding shouldcomponentupdate send patch saw shouldcomponentupdate already implemented functional components comment written code todo disable release since part public api use testing compare relative overhead classes typeof fnshouldcomponentupdate function amp amp fnshouldcomponentupdate memoizedprops nextprops think useful feature part public api nt need use class based pure component idea going final release", "num": "9513", "d": "4/2017"}, {"title": "updaterenderedcomponent error rendered child components repeatedly throw", "body": "apologies advance already reported best thoroughly search existing issues posting could find something specific happy moveclose needed hopefully nuanced issue render method threw react blew mostly encountered want request feature report bug bug minimal test cases uncaught typeerror read property currentelement null uncaught typeerror read property getnativenode null current behavior child component throws method attempts rendered react throws uncaught error inside internal method depending context error either let say problematic component renders throws runtime error parent component renders first render see error threw rendering expected userland error attempt render parent therefore render get different exception see react one referring difference exceptions happens component render happens component swapped second render another component also happens throw rendering latter likely move loaded error handler view error view may unfortunately also throw would render broken twice well consider something simple js class apploaded extends reactcomponent render throw new error throw supposed gracefully render error happens throw class gracefulerror extends reactcomponent render throw new error dang also throw class main extends reactcomponent constructor props ctx super props ctx thisstate loaded false error null componentdidmount async work note living inside promise vital reproduction originally caused go path discovering issue see minimal test cases examples wo promises return promiseresolve async work gt thissetstate loaded true yes really valid scenarios code like exist demonstrate issue see explanations catch err gt thissetstate error true render thisstateerror return thisstateloaded return return loading led discovery bug promise handling technically incorrect since really meant use nt implicitly catch synchronous render errors caused call callback however believe valid scenarios occurs manually handling render error recovering component rendered place also unfortunately throws consequently leads untraceable error expected behavior react blow internaluntraceable error second render even sure possible minimum like better understand occurs versions react browser os affected issue work previous versions react browser google chrome version react versions tested evidence works versions posted worked previous version knowledge thank advance help", "num": "9511", "d": "4/2017"}, {"title": "debug issue reactnative android app crash befor landing activity", "body": "using reactnativecli reactnative two issues reactnative app launch work properly befor landing screen paypal app got crash try debug app give error", "num": "9509", "d": "4/2017"}, {"title": "possible alias routes reactrouter like way done vuejs", "body": "want request feature alias routes example const router new vuerouter routes path component alias b vuejs say path application understands internally one link components using browser perspective one hit b resolves internally asked react", "num": "9507", "d": "4/2017"}, {"title": "rfc add traversal utility reacttestutils matching totree shape", "body": "problem supports new api totree returns easily traversed tree representing internal state instance rendered nodes existing solution traverses root lets provide test function call reduce tree based predicate predicate function passed public instance node issue makes predicate function polymorphic requires every consuming utility check passed component instance dom node solution propose implement new api similar calls predicate function result calling internal instance instead public instance would mean predicate function always called data structure tree node thirdparty traversal utilities shared since would operate tree structure could actually assert functional components currently instance call predicate new api could pure traversal utility leaving consumer accumulate results implementation brief review looks like could export function currently inlined provide way change cc gaearon bvaughn lelandrichardson", "num": "9505", "d": "4/2017"}, {"title": "reacttestutils event dispatched workinprogress statenode set", "body": "following using latest alpha js const reacttestutils require reactdomtestutils const foo gt reactcreateelement div null reactcreateelement img src foojpg reacttestutilsrenderintodocument reactcreateelement foo following error thrown issue completework calls finalizeinitialchildren sets statenode eventually calls image tag sets property causes jsdom trigger event top level event listener grabs instance eventually triggers error likely used frequently jsdom think important support something addressed fiber", "num": "9504", "d": "4/2017"}, {"title": "keys working element loses css transition", "body": "swap position two react elements positioned css transition triggered elements rendered order change order render position swap still renders css transition triggered looks like react deleting dom element recreating even react keys set called simple jsfiddle problem", "num": "9501", "d": "4/2017"}, {"title": "yarn prettier runs long command os windows", "body": "cli return error long command problem windows os checked windows cli cmd", "num": "9500", "d": "4/2017"}, {"title": "documentaddeventlistener callback update component", "body": "may bug simple reactapp inside component however callback event listener update component even calling inside confirm indeed callback fired update component bug would work around", "num": "9498", "d": "4/2017"}, {"title": "class app extends reactcomponent render return hello thispropsname reactdomrender documentgetelementbyid container", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9496", "d": "4/2017"}, {"title": "props register name", "body": "fetchdata let data method post body jsonstringify token languageid headers accept applicationjson contenttype applicationjson fetch data reactdemoreactsupplementlist thissetstate datasource thisstatedatasourceclonewithrows reactdemo loaded true render return back gt cart gt click reactdemoquantity appears error msg like", "num": "9492", "d": "4/2017"}, {"title": "feature request dangerouslysetinnerhtml return value", "body": "fully thought yet hoping feedback whether viable breaks many assumptions goal create escape hatch would support rendering conditional comments alternative method web components unknown probably bad ideas something along lines reactdomserverrendertostring lte ie gt lt endif lt dangerouscomment gt first example one interested point time benefit could work dom server renderer without userland hacks like ref replacement client believe couple initial problems see may may solvableavoidable slight tweaks returning arbitrary object supported unmounting work alternative proposal introduce new domrenderer primitive follow similar approach clearly indicating caveats come rendering comments alternative solution solves conditional comment issue", "num": "9483", "d": "4/2017"}, {"title": "change github issue labeling show issues already claimed", "body": "issue react workflow issue github issue tracking workflow example plenty issues labeled looking issues many already claimed someone work many cases pr already submitted digging half dozen issues like one tends give would helpful able see issues still truly looking contributors", "num": "9482", "d": "4/2017"}, {"title": "calling function another component", "body": "hi need call method component another component code need call toggle method different component onclick tried finding solution successful suggestions thank js class extends reactcomponent constructor super render const toggle gt return thissetstate", "num": "9481", "d": "4/2017"}, {"title": "resolve defaultprops reactcreateelement", "body": "hi want request feature report bug feature request guess current behavior currently component resolved super early called makes shallow rendering purposes snapshot tests see problematic component appear snapshots components use component makes testing fragile every change affect tests component currently affect many tests example component uses without props would expect snapshot getting expected behavior resolve defaultprops later stage actually needed snapshots appear actually passed props appreciate feedback thoughts workarounds possible alternative solutions great day everyone", "num": "9480", "d": "4/2017"}, {"title": "prettyprint error react website", "body": "noticed since switched babel compile error ugly make mistake interactive examples fix preserve newlines easy fix need follow instructions folder get running figure fix send pr please comment plan work two people work thing update tsriram looking", "num": "9479", "d": "4/2017"}, {"title": "reordering arrays proper keys triggers rerender dom", "body": "hi ran across weird behavior implementing autoplaying video recent project video part array modules array reordered video would stop safari mac rendered eventually able reproduce resetting behaviour consistently browsers css animations transitions simple example shows issue quite well numbers animation runs animates element right back see page loads animation never replayed unless completely misunderstood something number also set key buttons reorders array clicking resets animation clicking resets animation happening expect behaviour never reset animation otherwise cause browser remove element insert new one pointers chrome dom inspector dragging one element node reset animation changing items react component logging unmount proves unmounting seems outside component lifecycle first encountered issue react fiddle using thanks reading looking forward hear thoughts learn something ps amazed every browser besides safari able continue video behaviour suspect something safari using quicktime", "num": "9478", "d": "4/2017"}, {"title": "implement setting unknown attributes", "body": "currently warning unknown properties dom example render going see warning react actually turn dom people wanted support custom attributes since forever actually warning whole release think good time flip behavior set unknown attributes dom instead skipping goal would actually see dom one caveat still nt updated fb callsites fix warning ideally want stay synced open source version react nt want react delayed want delaying change react think bite bullet introduce internal feature flag differ fb builds enable new behavior open source version time react finish updating code remove conditional code path think anybody team time work right love community contribution requirements see introduce new feature flag something like set keep warning unknown dom props enable make sure tests still cover case override feature flag existing tests concerning feature flags add new behavior falling back unknown properties rather skipping like add tests tests need touch feature flag since new default behavior make sure works svg html make sure fiber tests pass create pr instructions running might affect server rendering test suite previously added aickin might need change tests verify new behavior fine verify new behavior flag set since use server rendering good point syranide still warn known attributes miscapitalized fine different warning message one behind flag send pr please let know like take could turn little complicated lot guidance us probably coach completely new contributor task sent pr two react able update nhunzaker already started pr back might able rebase let discuss plan specifics", "num": "9477", "d": "4/2017"}, {"title": "seb deprecation wishlist umbrella", "body": "list breaking changes like see think strictly necessary features often replaced apis existence makes implementations constrained even used list meant anything planning actively drop point add things think shallow freeze object make property nonconfigurablenonwritable first call enables inliningresolution defaults statically treat separate namespace jsx meaning objects spread onto jsx nt transfer enables inlining props object even spread type unknown eg drop support string refs drop support slower fiber requires tree materializedstatefulintrospectable arbitrary timesthreads even know ever get called less automatic cleanup could possibly alternative api works like refs however ref forwarding probably solves legit use cases better make private ca nt introspected like bound functionsclosures makes optimizations like automatic making components asynchronoussynchronous safe inlining components several levels deep", "num": "9475", "d": "4/2017"}, {"title": "react multi threading issues nashorn", "body": "want request feature report bug bug sure react current behavior using react nashorn engine jdk request threads per second throws errors saying error error transactioncloseall close transaction none open reactdomfbjslibinvariantjs error error transactionperform initialize transaction already outstanding transaction reactdomfbjslibinvariantjs current behavior bug please provide steps reproduce possible minimal demo problem via similar template sure bug expected behavior requests fails server side rendering versions react browser os affected issue work previous versions react tried amp basically server ride rendering fails multiple thread scenario java attached exception trace", "num": "9470", "d": "4/2017"}, {"title": "feature better warningerror message attempting require export", "body": "want request feature report bug feature current behavior converted old component however forgot change including component received following error source expected behavior love see helpful error message possible error provided line super helpful amp would awesome replicate likely forgot export component file defined versions react browser os affected issue work previous versions react react tested chrome mac", "num": "9469", "d": "4/2017"}, {"title": "render object custom tostring", "body": "implementing library would like render object custom tostring like got error uncaught error objects valid react child found xxx meant render collection children use array instead wrap object using createfragment object react addons check render method invariant anyone know method", "num": "9468", "d": "4/2017"}, {"title": "add proptypes docs back", "body": "proptypes doc live confusing still react object inaccessible website search table contents let either reinstantiate move fully standalone repo also confusing deprecating createclass still lives docs react without whereas moving proptypes gone docs", "num": "9467", "d": "4/2017"}, {"title": "supporting without warnings", "body": "coming twitters behest gaearon meant discussion really counts breaking change interpret semver instead want share usecase situation hasis causing pain using react situation app stuck unknown dom prop warning yes old yes upgrade nt always time bandwidth business case spend time quieting warnings everyone updating libraries apps use instead problem nt work get nt call proptypes warnings two issues perspective situation app author options chose warning want flooding console unknown prop nt call pts libraries nt considering change major bump reasonable feature patch updates getting rolled fix avoid warnings need pin react component libraries miss bug fixes deal warnaggedon bandwidth upgrade everything react latest library maintainer covered length pressure fix deprecation warnings libraries immediately real stressful case upgrade path super easy thanks codemod release without realizing though actually upped minimal required peer library since anything gt warn forever tough spot swap dep breaking change changing minimal react version required feels like one even nt know hard problem tho think reasonable rule thumb might library using public apis able support entire major version react without unfixable deprecation warnings react major versions happened faster introduce warnings major bumps remove next major bump reactbootstrap annoying impatient strategy worked well users system feels fair one gets new warnings introduced accidentally fresh npm install thanks ya overall warnings great always appreciated much care time react takes tell going need fix", "num": "9466", "d": "4/2017"}, {"title": "reactfiber officially released", "body": "want start new project poc month choice frameworks chose react building application plan officially releasing reactfiber dont want doomed", "num": "9463", "d": "4/2017"}, {"title": "default props set multiple inheritance", "body": "belongs somewhere else like babel issues close repost want request feature report bug possible bug current behavior extending class extends default props set ie causing party components throw errors case made using specific issue one props set default object error thrown setting prop manually empty object fixes error link line default props set javascript import react react import select reactselect import tethercomponent reacttether select component created reactcreateclass export class tetherselect extends select also tried without expected behavior default props set versions react browser os affected issue work previous versions react tested react effects ie lt would ideally working ie", "num": "9460", "d": "4/2017"}, {"title": "react proptypes warnings", "body": "hey getting errors migrating react chance add indication error comes file name maybe cleaned entire project reactproptypes use proptype validators thanks", "num": "9450", "d": "4/2017"}, {"title": "audio src attribute updates recognized", "body": "want request feature report bug bug searched issues could nt find anything discussing using tags within tags think browser problem react problem updates dom fine thought discussion solutionsnext steps current behavior source example audio example browser recognising changes react makes prop change prop directly tag browser rerendersresets audio tag expected expected behavior source example match behaviour audio example happens browsers", "num": "9447", "d": "4/2017"}, {"title": "show warning value provided checkbox input", "body": "want request feature report bug feature current behavior checkbox input prop likely ignored expected behavior think throw warning user provides instead", "num": "9446", "d": "4/2017"}, {"title": "tag update docs", "body": "looks like git tags missed followup releases website still says latest case things happen days let handle", "num": "9443", "d": "4/2017"}, {"title": "spitball help tutorial", "body": "talking new react user irc trouble understanding docs think using docs good idea giving reader ability understand code concept maybe take text babel guide modify bit fit surrounding content could done across site important tutorial", "num": "9440", "d": "4/2017"}, {"title": "clear setstate case works", "body": "docs nt make following clear imagine thissetstate thissetstate prevstate props gt consolelog prevstatecounter thissetstate thissetstate prevstate props gt consolelog prevstatecounter output also case output", "num": "9439", "d": "4/2017"}, {"title": "change rendered html component outside component", "body": "method override rendered html component outside component class", "num": "9438", "d": "4/2017"}, {"title": "beginner guide exploring source code", "body": "using react want able contribute project ca nt seem figure start file read first etc great could incorporate beginner guide right issue could later sent docs special section docs", "num": "9430", "d": "4/2017"}, {"title": "server use function rendertostring images link changedhow resolve", "body": "use server rendering output string image befor link changed hash link source client source js import logoenblack distimgtextlogoblackpng html string different hope someone problem already resolved tell resolve bug thanks", "num": "9428", "d": "4/2017"}, {"title": "docs new tabs installation page nt work link", "body": "opening link displays try react tab", "num": "9421", "d": "4/2017"}, {"title": "please stay proptypes lib", "body": "subj vary many packages use many dependencies create symlink lib proptypes package", "num": "9418", "d": "4/2017"}, {"title": "event plugins names mungled closure compiler advanced optimizations", "body": "want request feature report bug bug current behavior react compiled closure compiler advanced optimizations names injected event plugins mungled current behavior bug please provide steps reproduce possible minimal demo problem via similar template compile react closure compiler directly npm expected behavior names injected event plugins mungled versions react browser os affected issue work previous versions react react nt work previous versions react closure compiler renames object properties unless strings explicitly happens way event plugins injected later used", "num": "9417", "d": "4/2017"}, {"title": "releases changelogs andor tags patches", "body": "currently see releases github changelog entries tags major minor version bumps curious developer also like see changes patch versions npm nt know see", "num": "9413", "d": "4/2017"}, {"title": "make context formal find alternative", "body": "moving react surprised zero change context remains experimental possibly break future libraries like reactredux reactrouter heavily depends using context experimental shouldcompomentupdate purecomponent check context causes extra work done make reactrouter working reactredux like wrap every component withrouter map context props beautiful formally accept context solution let api take consideration find better solution next version react", "num": "9411", "d": "4/2017"}, {"title": "get ci passing branch", "body": "important get docs updated", "num": "9410", "d": "4/2017"}, {"title": "comments reactjs", "body": "use many way comments code js file run comment code website still see comments code show code like text see comment website", "num": "9405", "d": "4/2017"}, {"title": "number input always left pad though parsefloat value onchange", "body": "want request feature report bug bug current behavior number input defalut value onchange function parse value float avoid invalid input always get left pad input ui previouse version code works current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior left pad versions react browser os affected issue work previous versions react react browser os works", "num": "9402", "d": "4/2017"}, {"title": "infinite loop dispatching event event listener", "body": "want request feature report bug bug current behavior normally event dispatched place fakenode created event attached node event dispatched removed happen synchronously goes event listener eventlistener removed fakenode second event dispatched within event listener get stuck infinite loop time dispatch called event listeners get called first one dispatches second event goes specifically bubblestrue though nt fully able understand current behavior bug please provide steps reproduce possible minimal demo problem via similar template click hello world look console expected behavior infinite loop versions react browser os affected issue work previous versions react sure previous versions version use repro jsfiddle problem well", "num": "9400", "d": "4/2017"}, {"title": "react umbrella", "body": "update shipped amp still ongoing x fixes release modules x followup work fixes x create build step umd builds addons x update deprecation proptypes library check addons deprecation warnings release new versions transitiongroup deprecation warning let add forgot make sure wording says moved since moving happened note point specific version separate module make futureproof api changes transition group modules fixed x update addon versions master branches x fix fixed x merge x x release new versions addons x cherrypick changes related items document process deprecating api react moved x remove junk code proptypes prod build nt use bundlecollapser ships method names eg fbjslibinvariant fixable add p bundlecollapserplugin browserify call additionally seems junk invariant code easy fix turn inlined error x make sure deprecations master followup issues find solution merge unblocks adding tests depend inputvaluetracking improvements react warnings general specifically adress steps went react preparing rc done rc released x write proper changelog releases x cherrypick reactcreatemixin deprecation cherrypick x maybe cherrypick needs confirmation right way x cherrypick merged x cherrypick fix x cherrypick deduplicate unknown dom property warning people nt stay react see discussion reached consensus instead revisit whole warning system future x make sure using rather inlining like x deprecate reactdom factories merge cherrypick x include codemod x mergecherrypick x downgrade deprecation notices x create deprecation warning helper x update deprecation warnings master branch sync master branch flarnie moved prepping final release section update deprecation proptypes library check addons deprecation warnings release new versions flarnie moved addons section x update deprecation warnings branch update addon versions master branches flarnie moved addons section x add specific version numbers deprecation messages react x add link warning messages make clear broken code something removed react link dedicated page gist blog post gists nice comments make sure page touches common confusion points x lib maintainers dependency peer x mean context api x warning firing code dependency know x exactly happen react x automatically migrate code x encouraging people stop using createclass proptypes deprecating bad nope moving yes make clearer x use fbme links like always deprecations lets us update links future x cherrypick x verify changes landed also cherrypicked cherrypick fix gaearon nt think need make sure deprecations master flarnie moved prepping final release section x change package named consistently avoid x cherry pick double check nhunzaker x release npm testing rc done react x inspect umd builds x share rc proposed release date library authors several weeks advance x publish release notes early preparing final release done react x update x share rc library authors get folks try x post target date release x triage issues reported rc x x sync master branch test deprecation downgrade internally fb release x release monthur day", "num": "9398", "d": "4/2017"}, {"title": "stub component methods use property initializer syntax", "body": "finally updating components reactcreateclass classes seeing deprecations first error seeing tests running calls failing component methods property initializer syntax ie question stub using new syntax tests looks like longer works assuming nt prototype anymore imagine standard method syntax bunch calls constructor would trick fan approach love know solution syntax thanks ps posted stackoverflow seems like lots discussion happening days sorry xpost", "num": "9396", "d": "4/2017"}, {"title": "deprecation warnings use consolewarn instead consoleerror", "body": "historically react logged warnings rather believe done variety reasons certain types warnings may indicate serious problem even always fatal past stack trace available calls deprecation warnings intended provide users headsup features changingbreaking next major release also logged warnings makes noticeable comes cost potentially overemphasizing urgency addressing eg address upgrading next major nt need address potentially causing ci test failures certain runners treat unexpected calls fatal discussion react team decided replace calls deprecation warnings intend release change upcoming release", "num": "9395", "d": "4/2017"}, {"title": "caret misplaced preventdefault onbeforeinput", "body": "want request feature report bug bug current behavior using epreventdefault omit emoji input macos emoji picker caret still moving character already input current behavior bug please provide steps reproduce possible minimal demo problem see gif prevent everything onbeforeinput trying insert emoji using macos emoji picker caret moved wrong position issue happen contenteditable element also apply input element well expected behavior caret stay still input blocked onbeforeinput versions react browser os affected issue work previous versions react tested react chrome macos affected", "num": "9390", "d": "4/2017"}, {"title": "addon bugs", "body": "release bit rocky keeping track known issues fix together next patch x expose shallow renderer needed enzyme x create fragment commonjs entry point messed x crc package misses dependency x commonjs addons inline fbjs unnecessary x umd files contain shim x umd files nt envified x linkedinput umd broken x release x proptypes missing license patent file x fix release tagging acdlite add rest us regarding add docs link main docs currently says documentation wip add peer deps react callback issue currently peer deps dev deps release update npm", "num": "9384", "d": "4/2017"}, {"title": "incorrect export reactaddonscreatefragment package", "body": "reactaddonscreatefragment npm package exporting function intended instead exporting function returns reproduce javascript var createfragment require reactaddonscreatefragment var hello reactcreateclass var fragment createfragment hello hello world world render function return fragment reactdomrender documentgetelementbyid container actual render expected render helloworld reactaddonscreatefragmentreactwithaddonsjs working expected bug affects npm package", "num": "9381", "d": "4/2017"}, {"title": "bug render componentdidmount", "body": "reproduce chrome source ubuntu chrome react", "num": "9380", "d": "4/2017"}, {"title": "question proptype deprecation warning", "body": "want request feature report bug saw package proptypes newsfeed morning package required shut warning way disable using proptypes initial render component designed received following warning current behavior versions react browser os affected issue work previous versions react", "num": "9379", "d": "4/2017"}, {"title": "reactdomrender asynchronous catch exceptions", "body": "want request feature report bug want request feature current behavior callback called nt pass error one occurred expected behavior error occurs rendering would want handle error callback right using jsx return new promise resolve gt const routerprops routes history onupdate would like use jsx return new promise resolve gt const routerprops routes history onupdate versions react browser os affected issue work previous versions react using major version checked versions", "num": "9378", "d": "4/2017"}, {"title": "facebookmessenger", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9377", "d": "4/2017"}, {"title": "find module reactreconciletransaction reactshallowrendererjs", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template js componenttestjs const reactshallowrenderer require reacttestrenderershallow find module error expected behavior module included package versions react browser os affected issue work previous versions react something relatively simple would nt mind making first pr react given nudge right direction looked already grunt tasks building packages nothing stood", "num": "9372", "d": "4/2017"}, {"title": "package declare dep peer dep", "body": "per dependency however list either makes implicit dependency one whose version compatibility unchecked could add peer dependency ideally entire range react versions works particularly interested works want react peer dep example acdlite kentcdodds", "num": "9371", "d": "4/2017"}, {"title": "proptypes", "body": "want request feature report bug bug proptypes contains untranspiled sure code lives", "num": "9370", "d": "4/2017"}, {"title": "onclick handler default parameter value set proxy", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9367", "d": "4/2017"}, {"title": "componentwillreceiveprops work", "body": "trying create apps app function like maps app google app scene first scene mapview search input top scene user click search input app navigate second scene search scene second scene implemented module reactnativegoogleplacesautocomplete user input text component give suggestion autocomplete place get place info description coordinate pass props actionspop method reactnativerouterflux get props trigger componentwillreceiveprops update region object mapview component first scene seemly componentwillreceiveprops work stuck know solve know way please help first scene code mapview componet import react component react import appregistry dimensions stylesheet text textinput touchablehighlight image view reactnative import actions reactnativerouterflux import mapview reactnativemaps var googleplacesautocomplete require reactnativegoogleplacesautocomplete const width height dimensionsget window const aspectratio width height const latitude const longitude const latitudedelta const longitudedelta latitudedelta aspectratio export default class hub extends component constructor props super props thisstate textquery searh place region markers mapstyle null componentwillmount thisinitial initial navigatorgeolocationgetcurrentposition position gt consolelog position thissetstate region latitude positioncoordslatitude longitude positioncoordslongitude latitudedelta latitudedelta longitudedelta longitudedelta error gt consolelog error thissetstate region latitude latitude longitude longitude latitudedelta latitudedelta longitudedelta longitudedelta componentwillreceiveprops nextprops thisupdateplace updateplace props thisprops gt something props consolelog running thissetstate textquery propsaddress region latitude propslatitude longitude propslongitude latitudedelta latitudedelta longitudedelta longitudedelta onregionchange region gt thissetstate region render import react component react import appregistry stylesheet text view reactnative import actions reactnativerouterflux var googleplacesautocomplete require reactnativegoogleplacesautocomplete export default class placesearch extends component constructor props super props thisstate setlocation data details var da var da data var details actionspop latitude dgeometrylocationlat longitude dgeometrylocationlng address dadescription render return", "num": "9362", "d": "4/2017"}, {"title": "react bundle correctly project using rollup", "body": "want request feature report bug bug current behavior using rollup project imports latest react bundle ends containing file size unnecessarily large guess happening entry point react changed recently rollup apparently eliminate exports dead branches even replacing production uglify also remove dead code rollup seems hoist stuff top level online demo try building using tool uses rollup report package sizes compare searching current behavior bug please provide steps reproduce possible minimal demo problem steps reproduce import react project uses rollup bundle use rolluppluginreplace replace production use plugins rollup understands commonjs exports minifies stuff check bundle size expected behavior size much smaller versions react browser os affected issue work previous versions react size fine using entry point reads js use strict moduleexports require libreact", "num": "9361", "d": "4/2017"}, {"title": "link web components docs", "body": "bottom web components docs page link", "num": "9357", "d": "4/2017"}, {"title": "avoid adding inlined styles unnecessary", "body": "want request feature report bug sounds like feature causing problem server side generated html payload pass htmlminifier current behavior stated serialization function properties ended current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior properties ended except last one versions react browser os affected issue work previous versions react na referenced issue", "num": "9353", "d": "4/2017"}, {"title": "get parent dom attributes children refs", "body": "want add event listener parent resize push state pass prop childanimated want give parent parent document getelementbyid queryselector want get refs example jsx import react react import finddomnode reactdom import reacttransitiongroup reactaddonstransitiongroup class parent extends reactcomponent state ismounted false componentdidmount thissetstate ismounted true activechild false render const childarr b c f j return child index onclick e gt thissetstate activechild index gt child class childanimated extends reactcomponent componentwillappear callback componentdidmount const parent child thispropsnode consolelog parent child console return parent div child null render return", "num": "9352", "d": "4/2017"}, {"title": "typeerror read property firstchild null precachechildnodes", "body": "get", "num": "9351", "d": "4/2017"}, {"title": "build error found fbjslibwarning", "body": "npm run build reactbuild build githubreact npm run versioncheck amp amp node scriptsrollupbuildjs reactbuild versioncheck githubreact node scriptstasksversioncheckjs starting reactdevelopmentjs umddev error could load githubreactnodemodulesfbjslibwarning imported githubreactsrcisomorphicmodernclassreactnoopupdatequeuejs enoent file directory open githubreactnodemodulesfbjslibwarning found package nodemodules", "num": "9350", "d": "4/2017"}, {"title": "ref passed hoc", "body": "want request feature report bug feature current behavior parent component child component wrapped hoc assign ref attribute child component ref attribute instead refers hoc order parent component reference child component must use popular workarounds onref prop innerref prop getinstance func expected behavior accordance decorator pattern child wrapped hoc less accessible child wrapped hoc expected ref attribute pass hoc", "num": "9348", "d": "4/2017"}, {"title": "offer opinionated helper hoc creation authors", "body": "hocs great think agree great however react opinion people implement hocs users authors alike guideline comes implementing consistent api using multiple hocs especially hocs get chained think opportunity make lives developers work react well hoc maintainers make sure hocs work variety code bases easier react slightly opinionated write hoc describe problem right established way ask hoc component class es put established way access real element hoc wraps hoc either settle bad users invent api many gone second route fair different ways access implemented different hocs fix like suggest establishing best practice guided react adding mechanism corresponding next version react users authors longer need guess apis suggestion would reacthoc class define constructor takes arbitrary number component classes getclasses function returns list component class es passed getinstances function returns list element hoc actually builds knows access based component class names example following code public domain unfortunately need point unable sign cla necessary file prs ca nt file pr conjunction issue following code lacks much implementation possible allow prs others class hoc extends component constructor componentclasses thiscomponentclasses componentclasses getclasses passed component might hocs function needs perform iteration check build valid list contained classes getinstances holds order make work naming convention needs declared around refs use reacthoc name refs component class pushed lets react solve problem standardizing barebones functionality users authors able rely work without interfering hocs currently work dictating people write hocs keep writing hocs plain components wrap one components extending hoc offers zeroeffort option impart functionality free users appreciate interesting suggestion instead relies rebinding might good enough would also expose refs used hoc internal purposes user able fiddle anyway mostly issue filed get ball rolling much standardizing hocs made feels like react stay unopinionated react offer helping opinion one way write hoc promise using means compatible hoc uses suggestion", "num": "9345", "d": "4/2017"}, {"title": "post form proper json", "body": "possible automatically transform html form proper json document react contrast old fashion form encoded data would wishful get whole json document unchecked booleans false etc finally files could included aswell base string would great bonus", "num": "9343", "d": "4/2017"}, {"title": "expanding render method behaviour", "body": "regular method behaviour everytime render component place within elementwrapper let say element css class import react component react class rregularrenderbehaviour extends component render return hi hi hi extended method behaviour maybe better pass method two parametres element wrap jsx code returned css class assigned elementwrapper example trying say method didnt receive parametres wrap jsx code default think enhancement save time bit dont worry u didnt wrap jsx code", "num": "9338", "d": "4/2017"}, {"title": "bug value change null input show value change", "body": "demo set value null input keep last value rather show empty value", "num": "9335", "d": "4/2017"}, {"title": "bug ref function gets called twice update first mount first call null value", "body": "want request feature report bug bug current behavior functions get called twice update first mount current behavior bug please provide steps reproduce possible minimal demo problem via similar template code like jsx render const frames frameslength thispropstotalframes let lframeslength thisframes return framesmap frame gt verify contains however length double first half items means subsequent calls first first passing function element followed correct nonnull values example observe jsx componentdidmount consolelog thisframes output div div div componentdidupdate consolelog thisframes output null null null div div div always twice expected expected behavior array contain null values divs note called setting new array inside shows double length first half values seems like react calling ref functions one time many frame element first call value second call expected value versions react browser os affected issue work previous versions react react workaround workaround simply consistently null values interacting array", "num": "9328", "d": "4/2017"}, {"title": "change state one component affect component", "body": "hi problem using multiple component one reducer action trying reuse data grid modal sample originally data grid behind record showed modal data grid pass data data grid behind data also selectcheck item data grid modal also selectcheck one using react reactredux please help thanks lot", "num": "9326", "d": "4/2017"}, {"title": "remove usage pooledclass", "body": "pooledclassjs static poolers based number arguments amp comment specifies questions issue using arguments noticed using place reference going reduce duplicate code ca nt use spread syntax like", "num": "9325", "d": "4/2017"}, {"title": "unable find element id", "body": "trying use jquery datatable creating react component force rerender component using componentobjectforceupdate getting error unable find element id jquery datatable create three div reactid want know get rid error moduleexports jtable reactcreateclass getinitialstate function props props props thisprops return columns propscolumns data propsdata moduleexports dttable reactcreateclass render function return moduleexports dttablehead reactcreateclass render function var content thispropscolumnsmap function column return moduleexports dttablebody reactcreateclass render function way make work error sorting function working", "num": "9322", "d": "4/2017"}, {"title": "flat bundle followup umbrella", "body": "flat bundles mostly done separating followup work separate issue x isomorphic package x fully work update file still seeing sync console spam rebuilds x happens user forgets envify webpack use dead code elimination would bundle bundles sounds like even worse happens would user see warnings x wrap commonjs bundles conditions x add way see bundle size change x address internal fb issue think wanted ignored used verbatim x figure rn rollout strategy x go fiber switch flat bundles x see possible workaround circular injection x flat reactnative bundle would require flat react bundle shipped npm x make sure error codes transform still works x add fixture reactart x make final decision bundle server renderer x remove source x maybe reduce duplication umd bundles eg put react internals x convert source modules x update release documentation extract shared state npm package x use named imports places eg event system x figure static injection mechanism www rn investigate mangling gcc optimizations figure share build process third party renderers eg art starters simplify default build process run fb bundle builds come better strategy fb builds maybe", "num": "9321", "d": "4/2017"}, {"title": "filtering valid mathml properties", "body": "want request feature report bug bug current behavior react filtering attributes valid mathml elements current behavior bug please provide steps reproduce possible minimal demo problem via similar template open firefox full mathml support see attributes filtered although valid mathml expected behavior html rendered mathvariant notation linebreak versions react browser os affected issue work previous versions react firefox supposed support mathml websites running mathjax also affected", "num": "9320", "d": "4/2017"}, {"title": "async event handlder ca nt use preventdefault well", "body": "create jsfiddle demo class app extends reactcomponent constructor props super props work fine handleclick event eventpreventdefault work bad still trigger page refresh means default behaviour nt prevented handleclick event eventpersist make sure get event async function render return mean maybe sometimes need encapsulate handler encapsulation transparent user responsibility ca nt advance adding like first way abovebut second way ca nt work apparentlyof course add options encapsulation provide user looks like perfect way want ask good way solve thanks", "num": "9319", "d": "4/2017"}, {"title": "improving doc", "body": "says beware pattern effectively forks props lead bugs nice would better docs explains bugs lead", "num": "9317", "d": "4/2017"}, {"title": "reactaddonscreatefragment destructuring assignment remains distributed code", "body": "want request feature report bug bug current behavior running get following error creating optimized production build failed compile uglifyjs syntaxerror name expected error command failed exit code info visit documentation command line destructuring assignment think code distributable current behavior bug please provide steps reproduce possible minimal demo problem via similar template using createreactapp create app add materialui import drawer expected behavior build properly versions react browser os affected issue work previous versions react unknown", "num": "9315", "d": "4/2017"}, {"title": "lookup translate", "body": "please recommendation using lookup translate react app type file use", "num": "9310", "d": "3/2017"}, {"title": "guidance tutorial", "body": "apologies first appears already issue going check pr detailing hi followed tutorial fine storing history confused telling change function inside component needs changing change rest completed section somewhere honest struggled documentation hit losing interest help greatly appreciated", "num": "9308", "d": "3/2017"}, {"title": "thisprops undefined", "body": "sidebardemo class sidebardemo extends reactcomponent constructor props context super props context render return app static createdefaultgraph thispropslayout hierarchial something render consolelog thispropslayout return use consolelog thispropslayout app able get value layout calling thispropslayout createdefaultgraph method gives typeerror read property layout undefined", "num": "9307", "d": "3/2017"}, {"title": "thisprops undefined", "body": "sidebardemo class sidebardemo extends reactcomponent render return app static createdefaultgraph thispropslayout hierarchial something render consolelog thispropslayout return use consolelog thispropslayout app able get value layout calling thispropslayout createdefaultgraph method gives typeerror read property layout undefined", "num": "9305", "d": "3/2017"}, {"title": "maybe could use accurate description componentwillmount", "body": "current doc componentwillmount says called render therefore setting state method trigger rerendering thinks would better say called render therefore setting state directly method trigger rerendering batch setting state indirectlyasynchronous trigger rerendering", "num": "9304", "d": "3/2017"}, {"title": "define specific browser support guidelines", "body": "stands real solid guideline browser support support many outdated browser versions unreasonable support worry would useful specific guidelines browsers target safari ios matter firefox get idea welldocumented range browser version know work would make lot easier run dom fixtures browserstack know safe maybe internal core team work internally analytics see browsers facebook needs support work forward cc gaearon nhunzaker", "num": "9301", "d": "3/2017"}, {"title": "bug updating style ignores", "body": "current behavior react component rendering styles user via interface changes background url background size style longer applied fiddle demonstrates issue note clicking image container causes grid become twice large size ignored also causes large background start tiling ignored look generated dom see value longer composite backgroundbackgroundsize declarations first render reflects background value expected behavior would expect react reactdom combine two style rules consistent way following two render calls versions react browser os affected issue work previous versions react happening react fiddle tested safari chrome verified nt browser issue", "num": "9295", "d": "3/2017"}, {"title": "ca nt use async function", "body": "shows uncaught promise referenceerror defined avoid using async", "num": "9286", "d": "3/2017"}, {"title": "reactcomponenttreehook undefined", "body": "want request feature report bug current behavior throws error codes shown follows bundlejs used webpack entry versions react browser os affected issue work previous versions react chrome macos", "num": "9282", "d": "3/2017"}, {"title": "confusingly structured installation section", "body": "hey guys want bring issue docs install section happened one colleagues guess others may get confused example want use createreactapp approach installing react means need follow section right colleague followed thought follow things like words installation docs nt say follow first link gave example following second link necessary createreactapp includes babel example nt think doc mention approach either use section etc", "num": "9275", "d": "3/2017"}, {"title": "stop masking context", "body": "feature return contextprops available via wildcard prop would helpful want comparisons props state context possible solutions", "num": "9266", "d": "3/2017"}, {"title": "bring classnames library core react", "body": "want request feature report bug new feature current behavior expected behavior renders classname string wrapped object classnames versions react browser os affected issue work previous versions react nt know anyone would using current behaviour benefit trivial thing add yet provides great value every react developer know understand react tries light possible ca nt help wonderis worth extra trouble deferring trivial thing react ecosystem worth extra http request worth extra npm dependency whole function like lines long consensus react community best way transform objects classnames yes npm react downloaded million times last month classnames million times seems like comfortable majority uses classnames library already maybe let add core pretty please", "num": "9263", "d": "3/2017"}, {"title": "document happens keys used", "body": "would nice doc explicitly stated happens one nt use keys performance issue", "num": "9260", "d": "3/2017"}, {"title": "add helper", "body": "created component roughly like serving wrap behavior svg element add sophisticated handling string imagine something similar generating simple tags key point taken prop assigned locally makes assumption string split however reactchildren docs discuss dealing thispropschildren opaque data structure emphasis mine technically code assumption could break future would propose helper would guarantee stable behavior code specifically children represents single text node return string value otherwise throw assertion error would behave much like reactchildrenonlychild logic invariant check expecting rather see also", "num": "9255", "d": "3/2017"}, {"title": "unstablehandleerror seems work initial render", "body": "component error boundary seems invoked error occurs initial render subsequent renders example following code visible component rendered initially recovers renders component javascript const triggererror gt return b class innercontainer extends reactcomponent constructor props super props unstablehandleerror e consolelog unstablehandleerror consolelog continuing render thisstateerror return error reactdomrender reactcreateelement innercontainer documentgetelementbyid root however triggererror component rendered delay unstablehandleerror never gets invoked component never recovers javascript const triggererror gt return b class innercontainer extends reactcomponent constructor props super props componentwillmount settimeout gt thissetstate triggererror true unstablehandleerror e consolelog unstablehandleerror consolelog continuing render thisstateerror return error reactdomrender reactcreateelement innercontainer documentgetelementbyid root", "num": "9253", "d": "3/2017"}, {"title": "flat badge facebook", "body": "repository making badges acceptable documenting hope flat badge used awesome project", "num": "9250", "d": "3/2017"}, {"title": "uncaught invariant violation element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined", "body": "want request feature report bug think probably bug uncaught invariant violation element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined ever exported component properly formsjs mainjs", "num": "9249", "d": "3/2017"}, {"title": "add jest tic tac toe tutorial", "body": "want request feature report bug would interest adding jest section tic tac toe tutorial doc currently working tutorial based eric code figured ask beyond scope react docs could also added another bullet point wrapping section", "num": "9248", "d": "3/2017"}, {"title": "rfc throw commonjs entry points nodeenv development test production", "body": "whether best way fact rely checks tell production environment catches people surprise default build react development one often ship slow large development bundles production gives advantage libraries ship without development mode could however think would net loss ecosystem way differentiate debug release builds possible every native platform find way preserve distinction web ux vs dx compromise false unnecessary choice case since react commonjs entry points rely distinction propose nt allow empty custom values nether throw hard error might best solution long term least consistent treating flag could add reactspecific aliases reactenv finer grained configuration people use nodeenv different purposes still opinion default need pick environment working error would link page provides exhaustive list configure different environments well possible workarounds use right umd build umd builds rename distinction useful people inexperienced build systems start anyway think hurt beginners know probably going controversial believe explicit opting either mode right decision undoubtedly annoy people think update perhaps better go reactenv instead everyone", "num": "9245", "d": "3/2017"}, {"title": "refs reacttestrenderer typeerror read property ownerdocument null", "body": "want request feature report bug bug snapshots current behavior seems problem snapshots use libraries like antd snapshot launch mock library snapshot almost empty current behavior bug please provide steps reproduce either replit demo minimal repository github download example github account find step step full proccess besides opened issue yesmeck said problem jestreacttestrenderer opened issue time thymikee confirmed yesmeck said problem reacttestrenderer expected behavior expect snapshot full html code json format sense snapshots fail library use works use please provide exact configuration mention jest node yarnnpm version operating system use dependencies os ubuntu", "num": "9244", "d": "3/2017"}, {"title": "unable render images android device", "body": "using react cordova build hybrid mobile application images rendering inspect browser actual device tried following approach render image import redcar redcarpng var redcar require redcarpng copied image androidassets folder tried indexhtml way rendering image son device giving background image css file need read image paths json ca nt use approach backgroundimage url redcarpng also tried changing webpack output publicpath assets making use urlloader fileloader could nt get right images supposed render device react version", "num": "9243", "d": "3/2017"}, {"title": "event handler react component invoked react component rendered inside web component", "body": "want request feature report bug bug current behavior react component event handler example onclick rendered inside web component component clicked event receive react component specified callback invoked current behavior bug please provide steps reproduce possible minimal demo problem via similar template reproduce web component example contained react repository replace element button add example onclick event handler find modified version web component example based codebase expected behavior event handler called testing modified return target property instead original addition works event handler called find modified version also gist versions react browser os affected issue work previous versions react tested chrome firefox safari nt know works previous versions react nt think", "num": "9242", "d": "3/2017"}, {"title": "reactjs rendering", "body": "", "num": "9241", "d": "3/2017"}, {"title": "warn dev shouldcomponentupdate defined purecomponent", "body": "currently define nothing bad happens acts like probably warn dev since defaults point", "num": "9239", "d": "3/2017"}, {"title": "odd behavior installed react bower", "body": "reporting seems bug installed react project using bower inside sailsjs sits top nodejs wanted bring attention effecting nt tried use react anyway yet using current version react safari things using conjunction mostly fyi", "num": "9237", "d": "3/2017"}, {"title": "feature request improved suggestion invalid element type", "body": "feature request current behavior called using component name declared later file resulting error suggests component nt exported file defined element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined example code suggestion inappropriate javascript var mountnode documentgetelementbyid mountnode reactdomrender mountnode oops class hellomessage extends reactcomponent render return hello thispropsname expected behavior suggestion help instance would helpful error message also suggested reactdomrender may called early example element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined tried render component declared current file experienced developer new react finished tictactoe tutorial attempting apply learned one web sites made mistake since mistake plausible made someone getting started especially taking tutorial code starting point new would useful suggest alternate possible fix might help beginners ok send pr asap thank consideration latest version react affect environments thank", "num": "9231", "d": "3/2017"}, {"title": "boolean attributes web components", "body": "setting boolean attributes web components get rendered attributevalue pairs instead causes problems amp components eg attribute gets rendered results non valid amp content developers crying blood tears keyboards attribute resizable tag ampiframe set invalid value true see reason current behaviour changing break something else", "num": "9230", "d": "3/2017"}, {"title": "reactdom fails load latest nodejs missing dependencies clean install travisci", "body": "want request feature report bug bug current behavior reactdom successfully required node current behavior bug please provide steps reproduce possible minimal demo problem via similar template reproduction travisci build expected behavior reactdom successfully required node versions react browser os affected issue work previous versions react nt know install latest version react latest version nodejs travisci", "num": "9229", "d": "3/2017"}, {"title": "react app triggers ie", "body": "hi react based product developed works fine browsers comes ie times error occurs responsive page page already loaded whole page buttons text field etc hung error occurs frequently connections http direct connections connected local host machine using ip error frequency low error output console time however since browser dev tool also hangs way dig deep problem possibility kind condition occur due way react implemented workaround overcome", "num": "9228", "d": "3/2017"}, {"title": "obscure errors react webpack generated static site", "body": "spent lot time battling two errors today project setup kinda complicated trying put together minimal working example said trying anything weird generated webpack bundle requires react reactdom staticsitegeneratorwebpackplugin meantime wanted put check whether anyone knows possible reasons obscure errors import reactdom importing react import react reactdom", "num": "9227", "d": "3/2017"}, {"title": "create new jsfiddle issue template", "body": "right current jsfiddle pain use nt syntax highlighting defaults using almost every case people going reproducing issues", "num": "9224", "d": "3/2017"}, {"title": "compiler optimization umbrella", "body": "spinoff wanted create umbrella task start working compiler level optimizations tag open fairly primitive optimizations want able go nt think start project immediately soon fiber stuff place compiler infra baseline crossmodule full javascript aot compiler compiler infra structure fits well existing tooling fb webpack rollup based ecosysem etc support parallelism incremental builds solve things like npm ecosystem compile publishing probably optimizations enable multiple levels host instances dom elements managed single fiber think probably key requirement many optimizations sure fiber children single placement point parent get inserted could multiple insertion points manually insertion children later would work optimizing pure hostdom elements string components reasoned core compiler level inlining pure functional components result reasoned flat component basic constant folding static configuration optimizing across component boundaries without inlining optimizing stateful functional components runtime optimizations deadcode elimination library code nt needed particular application certain events controlled components complex attributes stretch goals computing delta updates code changes lets service workers update based come", "num": "9223", "d": "3/2017"}, {"title": "feature request new lifecycle behavior allow components delay unmounting", "body": "sort animation right component unmounts currently difficult able delay unmounting adding callback componentwillunmount like react transition group componentwillleave adding new lifecycle method functionality componentisreadytounmount would helpful use case come list item button clicking button dispatches redux action causes async work done instead right component success item removed list removed like give feedback action successful showing checkmark button second ideally logic would live button component making really easy reuse anywhere button order work button component needs able delay unmounting ideally something like js buttonjs componentisreadytounmount callback thispropsissuccessful settimeout gt callback else callback currently done preventing parents button unmounted also current implementation handles redux delaying state updates caused async work logic purely display purposes though nt really belong also makes hard replicate behavior across different types lists also looked react transition group also works transition group element unmounted would make hard keep around object like button deeply nested inside element removed recognize misuse feature would lead confusinghard debug behavior poor performance think risk worth considering way kind behavior currently needs implemented think risk could also mitigated useful development mode warnings one example could warning logged component holds unmounting x seconds x could globally configurable somehow sensible default", "num": "9222", "d": "3/2017"}, {"title": "document react treats different attributes", "body": "quite lot tests html boolean properties tags according tests html properties get rendered empty strings set eg render render look tests similar things render means take property value know result issue react currently clearlydefined documented way handle props could docs updated specify type prop result eg number gets parsed string using numbertostring object gets stringified using key val booleans toggle property short bugsundocumented featurescontradictions tests expect happen plus expectations gets parsed prop prop true select properties expected either per checkedchecked html standard gets parsed prop expected might get parsed either prop prop prop even expected gt prop prop foo expected gt prop false expected gt prop handtested automatic test available expected gt prop prop foo bar baz handtested automatic test available expected per style object transform hacky showcase features bugs bugs work going done props value parsing following might nice addition gt render keys disregard keys like classnames", "num": "9220", "d": "3/2017"}, {"title": "feature granular forceupdate", "body": "called long list least whole list must traversed example following list push reconciler go elements add end list suggestion add support following forceupdate signature passed integer start index number items traverse similar works function encounters number argument changes start index start reconciling components children argument set changes end index end traversal components children mentioned example wanted optimize reconciliation process append updates could following target update middle list items allow precise updates know ahead time data change possible counterpart js setstate functionobject b functionnumber c number usage setstate arr thisstatearrlength", "num": "9218", "d": "3/2017"}, {"title": "ref replace reactdomfinddomnode", "body": "notice react deprecated encourage developers use insteadi agree cases works finebut think something like class extends reactcomponent render return content class b extends reactcomponent render return cars example want know ca nt add ref instance containerb dom node use course add use add method called pass imo make app complexwhat thoughts", "num": "9217", "d": "3/2017"}, {"title": "documentation addons incorrect prev next links", "body": "articles addons incorrect prev next links example first prev link actually fourth prev next links think easiest way remove prev next links addons articles allow addupdateremove articles without need update prevnext links think", "num": "9216", "d": "3/2017"}, {"title": "browser back button working reactrouter react", "body": "want request feature report bug bug current behavior installing react next fiber clicking new page inside domain app clicking back button nt move page back works correctly react current behavior bug please provide steps reproduce possible minimal demo problem via similar template see expected behavior clicking back button move back previous location versions react browser os affected issue work previous versions react react chrome osx sierra works correctly react reactrouter", "num": "9214", "d": "3/2017"}, {"title": "feature request proptypeselement", "body": "currently checking required prop within passed children need implemented props validator function less ideal would suggest following another idea vein would extend current proptypesinstanceof", "num": "9213", "d": "3/2017"}, {"title": "inconsistent behavior keyed select options value", "body": "current behavior component composed multiple select elements tied different variables state settimeout changes one select value causes select values changed steps reproduce webpack bin instance works expected chrome safari firefox issue firefox value select elements ones set inside reverts back first value instead previously set one react version os mac browser affected change firefox please feel free close issue bug known bug firefox something wrong tried searching issues related firefox select elements could nt find looked similar", "num": "9212", "d": "3/2017"}, {"title": "bad debugging spread errors", "body": "bug spread operator missused compiler goes crazy nt give developper hint something went wrong inside react class trying render array jsx elements follow class modal extends component render let actions let label action thispropsactions actionspush actions already know written got incredible load errors filled terminal babel compiler first error message recognize object type jsxspreadchild objectgetfieldnames would expect error message telling missused spread operator using react npm babelruntime meteor", "num": "9211", "d": "3/2017"}, {"title": "chrome optimized optimized many times updatedomproperties unmountchildren", "body": "react chrome profiling chrome render performance components noticed couple deoptimizations react message chrome reports optimized optimized many times apparently happens optimizes function running found reason deopt happened setting currently set information clicking profile looks like time perhaps spent line sure clue deopt might case might worth spending time digging sure still relevant react", "num": "9208", "d": "3/2017"}, {"title": "plan addons react", "body": "outline think addons react tldr done poor job supporting pose significant maintenance burden due repo build process set going release final versions maintaining plan anything reactaddonsperf internal dependencies break plan anything plan releasing package right migration path planned fiber works differently instead would use browser timeline integration polyfill environment may later reintroduce something like renderers however like took us figure work take us figure better alternative would compatible fiber plan fix forget reactaddonscreatefragment internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonslinkedstatemixin internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonspurerendermixin internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonsshallowcompare internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonsupdate internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever readme mention maintained alternative plan releasing package nevertheless version keep working indefinitely reactlinkedinput internal dependencies break plan copy internal dependencies package make sure works standalone release without peer dependency restriction forget forever extra step exposed plan releasing package nevertheless version keep working indefinitely plan deprecate forget reactaddonscsstransitiongroup internal dependencies break plan deprecate maintain suggest using instead work maintainers ensure umd build instructions readme plan releasing package reactaddonstransitiongroup internal dependencies break plan deprecate maintain suggest using instead work maintainers ensure umd build instructions readme plan releasing package plan undecided reactaddonstestutils internal dependencies break plan one yet technically still going coupled package technically two completely different things thin wrapper around introspection shallow renderer perhaps would make sense completely move except shallow renderer could published", "num": "9207", "d": "3/2017"}, {"title": "react value setter overwrite lib value setter", "body": "bug react value setter overwrite lib value setter save call old setter ie react", "num": "9206", "d": "3/2017"}, {"title": "need ui automation help react ui application", "body": "hi guys developing ui application project using react read css selectors supported earlier ui automation using coded ui c css selectors anyone please guide right approach continuous integration testing ui application thanks tarun babbar varian medical systems pune", "num": "9205", "d": "3/2017"}, {"title": "missing proptypes warning calling proptypes directly spread operator", "body": "want request feature report bug bug current behavior according react throw warning proptypes called directly however nt use spread operator validation function current behavior bug please provide steps reproduce possible minimal demo problem via similar template minimal demo expected behavior components example throw warning versions react browser os affected issue work previous versions react see issue version chrome nt think browser related nt know worked past", "num": "9204", "d": "3/2017"}, {"title": "use react component lifecycle methods", "body": "equal getinitialstate return liked false", "num": "9203", "d": "3/2017"}, {"title": "old props state render function", "body": "want request feature report bug feature current behavior render function returns would result current state properties expected behavior old properties state previous render parameter example would useful trigger animations reactmotion currently something similar checkboxes checked state changes ripple animation started", "num": "9198", "d": "3/2017"}, {"title": "fiber infinite loop caused rendering error", "body": "want request feature report bug bug current behavior component returns something valid react element throws infinitely renderblocking freezes window current behavior bug please provide steps reproduce possible minimal demo problem via similar template happened creating providertype component rendered children directly specifically eg js class provider extends reactcomponent render return thispropschildren throw elsewhere works correctly freaks codepen fiddle etc somewhere use demonstrate expected behavior throw freeze browser versions react browser os affected issue work previous versions react react yes see ps know alpha version", "num": "9193", "d": "3/2017"}, {"title": "equivalent mountcomponent fiber", "body": "extjsreactor use react internal methods like mountcomponent unmountcomponent receivecomponent well reactmultichild mixin defer rendering ext js interface helpful anyone looking make generic js component libraries work react opposed built specifically react equivalentalternative way control mounting component new fiber architecture helps code references react internal methods", "num": "9192", "d": "3/2017"}, {"title": "n scroll", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9191", "d": "3/2017"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9190", "d": "3/2017"}, {"title": "expose devmode warnings devtools ui", "body": "react made recent developer experience improvements lifecycle error handling logging errors thrown render recovered using errors thrown lifecycle methods also automatically logged console component stack location make easier identify see team discussed similar improvements warnings using yellow box approach make warnings stand developer mode see prs pushback though idea react modifying dom warning purposes see issue sure play yet meanwhile could improve least use cases making better use devtools example react exposed new api allowed associating warning one components devtools panel eg method called recorded current component stack notified devtools present react could use things like missing nonunique keys party libraries may also benefit eg reactvirtualized could use warn missing incomplete positioning styles cells rough outline features components warnings could highlighted emphasized way eg yellow background devtools make easier spot new toolbar option could added show warnings eg filter tree view show components warnings warning message could shown inline settings panel selected component rough mockup limitations everyone uses devtools would help lot people would address issues like using development mode react production sites thoughts ideas suggestions", "num": "9189", "d": "3/2017"}, {"title": "feature request new proptype check prop valid react component fed createelement", "body": "proptype check whether prop valid react component prop could supplied first argument would nice feature composable component user could supply different components maninthemiddle component creates elements supplied component feeds props example edit clarification work", "num": "9186", "d": "3/2017"}, {"title": "working", "body": "want request feature report bug bug current behavior react nt work documentation says react supports popular browsers including internet explorer shows blank page versions react browser os affected issue work previous versions react react phone nokia lumia ps instagram also nt works phone shows blank page know instagram also uses react", "num": "9183", "d": "3/2017"}, {"title": "finding whether event true synthetic event html element", "body": "want request feature report bug requesting feature far knowledge sorry wrong currently ca nt able find whether event valid synthetic event html dom element example onchange valid event would helpful api check whether given method valid synthetic event html element use case lets say write component child would like pass synthetic event props parent component child component would loop see prop valid synthetic element attach props child element nt attach html element parent component child component render validsyntheticeventscallback include props valid synthetic events help making parent components generic write also logic included parent component current behavior currently need manually assign every event dom versions react browser os affected issue work previous versions react related browser os version issue", "num": "9182", "d": "3/2017"}, {"title": "proptypesoneof relies upon stringification using symbols", "body": "want request feature report bug bug current behavior prints less helpful error message passed symbol target value set current behavior bug please provide steps reproduce possible minimal demo problem via similar expected behavior prints similar helpful error message primitive types get versions react browser os affected issue work previous versions react react macos safari chrome never worked", "num": "9181", "d": "3/2017"}, {"title": "featureissue throw warning defaultprop set isrequired proptype", "body": "want request feature report bug feature current behavior currently declare declare go ahead use component without declaring title prop error thrown like supposed happen using isrequired based documentation states proptypes typechecking happens defaultprops resolved typechecking also apply defaultprops expected behavior think user using least warning change proptype typechecking optional also love try fix could get pointers would much appreciated never contributed react versions react browser os affected issue work previous versions react react version running chrome mac os x el capitan v", "num": "9180", "d": "3/2017"}, {"title": "simulateclick nt call click handler click handler passed via state component", "body": "hi component like import react proptypes react import drawer materialuidrawer import muithemeprovider materialuistylesmuithemeprovider import injecttapeventplugin reacttapeventplugin import list listitem materialuilist import divider materialuidivider import settings materialuisvgiconsactionsettings import helpoutline materialuisvgiconsactionhelpoutline import speakernotes materialuisvgiconsactionspeakernotes import exittoapp materialuisvgiconsactionexittoapp import close materialuisvgiconsnavigationclose import badge materialuibadge import rightmenubutton rightmenubutton require stylecss injecttapeventplugin const badgestyle top right width height backgroundcolor class rightmenu extends reactcomponent constructor props super props thisstate open false directionleft true componentwillreceiveprops props thissetstate width propswidth directionlefttoright propsdirectionlefttoright onconfigclick propsonconfigclick onhelpclick propsonhelpclick onnotificationsclick propsonnotificationsclick onsignoutclick propsonsignoutclick handletoggle thissetstate open thisstateopen handleclose thissetstate open false render const closebuttonstyle thisstatedirectionlefttoright float left float right return onclick thisstateonconfigclick onclick thisstateonhelpclick onclick thisstateonnotificationsclick gt onclick thisstateonsignoutclick rightmenudefaultprops width directionlefttoright false onconfigclick null onhelpclick null onnotificationsclick null onsignoutclick null rightmenuproptypes width proptypesnumber directionlefttoright proptypesbool onconfigclick proptypesfunc onhelpclick proptypesfunc onnotificationsclick proptypesfunc onsignoutclick proptypesfunc export default rightmenu trying implement unit test codes testing import react react import reactdom reactdom import testutils reactaddonstestutils import listitem materialuilist import rightmenu srccomponentsrightmenu describe rightmenu gt let onconfigclickhandler let onhelpclickhadler let onnotificationsclickhadler let onsignoutclickhadler let view let menuitems let configbutton beforeeach gt onconfigclickhandler jestfn onhelpclickhadler jestfn onnotificationsclickhadler jestfn onsignoutclickhadler jestfn view testutilsrenderintodocument call click handler clicked gt menuitems testutilsscryrenderedcomponentswithtype view listitem configbutton reactdomfinddomnode menuitems children however test fails change component way passed handler starts work handler called expected anyone explain works thanks advance", "num": "9175", "d": "3/2017"}, {"title": "validatechildkeys fails nested arrays", "body": "want request feature report bug bug current behavior pass children component nested array check nt throw warningerror missing properties eg asked problem stackoverflow user pointed problem current behavior bug please provide steps reproduce possible minimal demo problem expected behavior react warn missing even nested arrays versions react browser os affected issue work previous versions react latest version affected think browsers affected nt know worked previous react versions", "num": "9174", "d": "3/2017"}, {"title": "happens encounter custom properties supported react", "body": "need use attributes react support properties", "num": "9173", "d": "3/2017"}, {"title": "setstate update mounted component warning", "body": "getting following warning console snippet component causing warning setting state tried making jsfiddle many dependencies error logged increment resize nt always happen", "num": "9171", "d": "3/2017"}, {"title": "componentconstructed life cycle step", "body": "want request feature report bug feature current behavior life cycle component creation constructor componentwillmount render componentdidmount expected behavior new method like constructor componentconstructed componentwillmount render componentdidmount cases high order component needs prepare child instance gets created replacing child constructor trivial using work needs extra logic prevent multiple initialization called updates name suggested method important idea might better options", "num": "9169", "d": "3/2017"}, {"title": "possible issue warning element nt explicit key assigned", "body": "want request feature report bug bug current behavior think might issue warning element nt explicit key assigned following component javascript const data first second third const mycomponent gt data reactdomrender documentgetelementbyid root dev mode triggers console warning expected behavior course warning child array iterator unique key prop however nested array warning gone javascript const data first second third const mycomponent gt data reactdomrender documentgetelementbyid root warning current behavior bug please provide steps reproduce possible minimal demo problem demo expected behavior understand well way keys work would expect get warning nested array like one flat array since cases attributes set versions react browser os affected issue work previous versions react spot react tested chrome firefox safari macos sierra", "num": "9168", "d": "3/2017"}, {"title": "coffeescript react fiber", "body": "could little bit early got confused usage coffeescript react fiber read comment watching react conf moving another package removing wonder able wrote react released best approach use coffeescript react react require react div reactdom view reactcreateclass displayname hello render gt div classname hello hello react moduleexports reactcreatefactory view thanks", "num": "9167", "d": "3/2017"}, {"title": "concatenated prefixed css properties nt work react", "body": "want request feature report bug bug current behavior react nt set property display string display webkitbox display webkitflex display msflexbox display flex omit properties contains concatenated strings like webkitlineargradient top rgba rgba background mozlineargradient top rgba rgba background lineargradient top rgba rgba mentioned current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior expected root div property display display webkitbox display webkitflex display msflexbox display flex like react versions react browser os affected issue work previous versions react react cromium calculate linux yes worked previous versions react", "num": "9166", "d": "3/2017"}, {"title": "warn overwriting react component instance property", "body": "want request feature report bug feature current behavior react component silently overwrites instance property expected behavior would useful raise warning dev mode case versions react browser os affected issue work previous versions react react work previous versions react yes", "num": "9164", "d": "3/2017"}, {"title": "tutorialmd tictactoe example", "body": "think react tutorial significant problems question maintainers whether appetite overhaul take effort think one big problem separate tictactoe example overall conceptual discussion adding disparate nonrunnable examples muddles focus tutorial split opinion tictactoe example many structural design issues probably glaring repetition render function board class etc hint one could use programmatic approach another issue use everywhere often makes things harder interpret introduces bugs always etc think version fewer arrow functions andor something meant react tutorial example tutorial many people familiar lot syntax also bit tendency er overuse arrow functions tictactoe example useful know one teach flooding student many concepts current example site current versions connect option plus jsx think plus jsx", "num": "9162", "d": "3/2017"}, {"title": "define create assign use engineer otherwise use either props property state class component button", "body": "want request feature report bug answer current behavior foot high level frustration relieved reading different articles doc articles pluralsight courses stack overflow answers many useless leads code provided js class firstcomponent extends component render return first component export default firstcomponent class button extends component constructor props super props consolelog handleclick thisstate counter export default button expected behavior something works good plain html maybe using react chrome browser edge ff windows works previous versions react using var foo reactcreateclass able get work new class version ca nt find examples work trying well week need start migrating react modules telling give move react may fast pita start update knowledge glorified docs nt help", "num": "9156", "d": "3/2017"}, {"title": "serializing html much js necessary", "body": "sort feature request mostly nt able make current react tooling need massively huge article consists single page reactmanaged content bulk passive html content paragraphs headings kind stuff however also active components js interaction bindings trying figure way turn article reactmanaged client thin ui managed client reactbuilt offline solution look reactdomserverrendertostaticmarkup generates html nicely also loses js bindings necessary keep ui working article counting static assets images top notion first loading plain markup content loading react bundle top hook preloaded markup would terrible experience people slightlylesswealthy parts world way would sense developing way render react content html much possible preserving react management interactive ui components essentially solution prevent much data duplication pregenerated html react application seems heavy payload bytes certainly clientside processing well incurred using fully reactmanaged bundle could relieved significantly content guaranteed passive regular html could serialized html react hooking back code elements require active management idea much work would pretty sure would help bring average page size global scale would save quite lot time money allowing content loaded people parts internet currently inaccessible due load time byte cost", "num": "9154", "d": "3/2017"}, {"title": "badly timed update makes impossible determine new value checkbox handler", "body": "want request feature report bug feature guess despite subject formulation current behavior update performed exactly wrong moment native capture document root happens moment react decides handler checkbox called moment called result impossible tell new value inside handler words particular case back old unchanged value handler called current behavior bug please provide steps reproduce possible minimal demo problem demo note clicking checkbox never checks expected behavior discussion probably expect triggered warning issued easier figure remove cause took quite time even nicer would special property holding correct changed value might big change edgecase scenario versions react browser os affected issue work previous versions react chrome win react likely applies browsersos", "num": "9151", "d": "3/2017"}, {"title": "csspropertyoperationsjs failing setup", "body": "uncaught syntaxerror unexpected token getting error loading page using react following webpack configuration anyone understands whats issue thanks", "num": "9150", "d": "3/2017"}, {"title": "bad reading number digit using reactjs nvda firefox", "body": "want request feature report bug bug current behavior write application accessibility using reactjs problem nvda firefox nvda ca nt read number correctly found solution use settimeout delay think better created proof concept show problem reproduce sad path run jsfiddle firefox run nvda open speech viewer click sometimes random works example check results first value ok next sometimes fe sometimes missing first digit reproduce happy path run jsfiddle firefox run nvda open speech viewer click sometimes random works example check results every value ok resolve problem without settimeout expected behavior versions react browser os affected issue work previous versions react windows firefox", "num": "9149", "d": "3/2017"}, {"title": "blur event fired button disabled", "body": "want request feature report bug bug current behavior focussed button becomes disabled react dispatch blur event current behavior bug please provide steps reproduce possible minimal demo problem via similar template attach blur event button focus button make button disabled expected behavior blur event dispatched versions react browser os affected issue work previous versions react sure worked previous versions isolated test case", "num": "9142", "d": "3/2017"}, {"title": "misleading wording documentation", "body": "lifting state nt special meaning popular name handler props starting implementations misleading special references syntheticevent handlers instead documentation give brief description used reference section syntheticevent allow users see available handlers", "num": "9141", "d": "3/2017"}, {"title": "learning error find module error", "body": "hello first time react issue title browser wrong edit details error print", "num": "9137", "d": "3/2017"}, {"title": "autocompletetype attribute unknown prop warning", "body": "want request feature report bug bug current behavior add autocompletetype attribute input react warn fiddle shows issue expected behavior autocompletetype seem standard warn versions react browser os affected issue work previous versions react tested version browsers", "num": "9135", "d": "3/2017"}, {"title": "solved", "body": "recently updated react app nt work works great problem click button use reactrouter jump another page click browser back button code indexjs import babelpolyfill import dialogpolyfill import react react import render reactdom import provider reactredux import createstore redux import configurestore storeconfigurestore import assetsjsmaterialminjs import assetscssmaterialmincss import assetscsscsslibcss import assetscssstylecss import assetscssreactdatepickercss import reducer reducers import routes routes let initialstate windowinitialstate const store configurestore initialstate render documentqueryselector root routesjs import react react import router browserhistory route indexroute reactrouter import app container import dashboard dashboard import users users import test test const routes export default routes key component child container appjs works fine react appjs import react component children cloneelement react import connect reactredux import actions actions import modal componentsmodal import windowloading componentswindowloading import style stylecss class app extends component constructor props context super props context function mapstatetoprops state return state function mapdispatchtoprops dispatch const actionnames objectkeys actions let actionprops dispatch actionnamesforeach name gt objectassign actionprops name rest gt dispatch actionsname return actionprops export default connect mapstatetoprops mapdispatchtoprops app tried put child components dashboard users test side container error", "num": "9134", "d": "3/2017"}, {"title": "rn app reject apple", "body": "jspatch applications rejected apple rn app rejected", "num": "9133", "d": "3/2017"}, {"title": "impure state allocation list ca nt append props listitem declaration parent", "body": "believe list able interface listitem props parent knows listitems display list listitem props declared parent parent manage listitems nt know list directly interface listitems instead parent class defining list list components render return thinking sending class names props list instantiate nt seem way dynamic jsx class saw promoted seem update cloned element props initial construction updating child styles times per second nt want clone object reason may cost react", "num": "9132", "d": "3/2017"}, {"title": "dynamically rendering react component jsx", "body": "using react node assigning component passed props var trying render var renders nothing example properly renders javascript class extends reactcomponent render return class extends reactcomponent render const dynamiccomponent thispropsdynamiccomponent return class childcomponent extends reactcomponent render return hey reactdomrender reactdomrender opposed", "num": "9131", "d": "3/2017"}, {"title": "use reactnative", "body": "create application use reactnative repository movieplate nt use redux flux want kown app whether use correct", "num": "9129", "d": "3/2017"}, {"title": "switch using createfactory compiler steps", "body": "originally intended compile jsx format allows us generate factory optimized resolves problems generating optimized factory many cases slow start however optimizing compiler resolve turn cases another thing function simple functional component return functional component becomes straight function call least element nt key slight change semantics mostly optimizing compiler vm aware type foo known babel transform infer function function call proceed actually inline heavy functions would bad though since expand time render executed work time slicing mechanism fiber therefore might want use heuristic determine functional component gets inlined eg function length something good data point use heuristic whether component part loop closure part map could change transform treat special flag part hot path calling special createfactory neat part model transform pretty simple readable optimization createfactory createfactoryhot also nt reason crossmodule transforms taken care optimizing compiler vm", "num": "9128", "d": "3/2017"}, {"title": "mark prop using custom proptypes validation", "body": "want request feature report bug bug missing feature rather current behavior ca nt define prop using custom validation simple stateless component demonstrates issue js const component content gt content componentproptypes content props propname componentname gt propscontent allow return null expected behavior somehow define prop required versions react browser os affected issue work previous versions react react nt think ever worked might black sorcery needed simplified example posted could nt find way adding prop either adding end function abstracting validation function away even returning chain return", "num": "9125", "d": "3/2017"}, {"title": "mapping function returning jsx list containing returns weird element debugger", "body": "sure confirmed react debug extension firefox using webpack babelcore code html actual page fine debugger turns familiar js expected behavior apologize", "num": "9123", "d": "3/2017"}, {"title": "missing tic tac toe tutorial throws errors codepen", "body": "want request feature report bug report bug current behavior line located throws errors codepen missing closing tag versions react browser os affected issue work previous versions react using starter code using", "num": "9122", "d": "3/2017"}, {"title": "mistake tutorial instructions", "body": "struggling learner trying learn years still really confused everything nt found good way learn yet apologies advance sort thing category super obvious audience aiming reach tutorial trying follow along tutorial half way page says passing two props board square value onclick latter function square call let changing render square think mistake instructions says render render square class return final result share shows button return maybe instructions replace render return thanks", "num": "9120", "d": "3/2017"}, {"title": "reactcsstransitiongroup nested transitions", "body": "issue apply animation parent route children inherit animations want different animations parent route children routes one help render method return method children component children routes get instead animation", "num": "9118", "d": "3/2017"}, {"title": "componentdidmount guarantee dom node document", "body": "read source code find comment method invoked component mounted dom representation however guarantee dom node document meaning", "num": "9117", "d": "3/2017"}, {"title": "programmatically trigger onchange ie", "body": "trying test script programatically triggering onchange class doesnt seem work kindly advice proceed created jsfiddle show top part shows typical reactjs code wherein values typed input field automatically appears separate dom element bottom part code wherein try programatically set value reactjs input field trigger change event jsfiddle execute chrome firefox safari code works executed example fails kindly advice programmatically onchange event thanks franz", "num": "9116", "d": "3/2017"}, {"title": "questionbug report higherordercomponentsmd", "body": "hey moment docs say static methods need copied however class inheritance javascript also works static properties looking recommended looks like copies properties supposed prototypical inheritance anyway error docs time classes used extension nt work classes", "num": "9112", "d": "3/2017"}, {"title": "getting", "body": "getting bug file loading react app react reactdom version issue nt browser specific tried couple older versions reactreactdom", "num": "9104", "d": "3/2017"}, {"title": "rfc reactfiberreconciler release artifact", "body": "issue intended discussion distribute reactfiberreconcilerjs file dependencies custom renderers currently firstclass renderers within react codebasefacebook ecosystem concerns haste access reactjs build publish tooling within codebase party renderers currently adding dependency list requiring build expose custom renderer ideally would distributed package standalone package whether idk think root better continue discouragement looking anything understand flat bundles coming know block could flat bundle alternative something team ready commit support came decision approach put together pr related issues create separate copies renderer include flow type definitions flow type distribution proposal sebmarkbage spicyj", "num": "9103", "d": "3/2017"}, {"title": "fiber check requestanimationframe throws reactdom required server", "body": "want request feature report bug bugish current behavior serverside rendering react requiring transitively requires throws exception raf defined happen universal component toplevel imports clientside libraries like require instead expected behavior would expect get error unless requestanimationframe actually called ex lazily check raf define ric versions react browser os affected issue work previous versions react react node started happening alpha shipped enabled fiber", "num": "9102", "d": "3/2017"}, {"title": "pasting text text box fire change event", "body": "found bug react version pasting text text box fire change event", "num": "9100", "d": "3/2017"}, {"title": "nt convert third later arguments reactcreateelement array use babel", "body": "babelthe member babel nt know much thisso want know thoughts thisthanks", "num": "9099", "d": "3/2017"}, {"title": "thisprops inside method longer works", "body": "want request feature report bug believe might bug sure little ago could something like work fine says read property name undefined still tried reproduce project ps commit results failure tests expected behavior expecting work used work wo nt work intended behavior something wrong", "num": "9095", "d": "3/2017"}, {"title": "locate corresponding src code react", "body": "notice sometimes want find implement details functions features eg every time add code step enter method want look ide press click identifier enter file code promiscuous nested diffcult read want know good way solve guess maybe internal system work fine", "num": "9094", "d": "3/2017"}, {"title": "getting rid string refs reacttransitiongroup", "body": "line making use string refs make pr fix", "num": "9093", "d": "3/2017"}, {"title": "fiber missing error causes infinite loop", "body": "getting issue throwing unhandled error turns infinite loop guarded callback wrapper fails extract error event causes reconciler ignore error thus triggering reproduce flipped sure important started redux added component", "num": "9092", "d": "3/2017"}, {"title": "fiber make treehook devonly", "body": "recently started pulling treehook production bundle sake fiber stacks error boundaries trueadm observed breaks umd bundle could remove gate still bad pull whole hook prod bundle use small part fiber think separate need dev prod pull extra code prod bundle linked", "num": "9090", "d": "3/2017"}, {"title": "maybe ref attribute usage could cause performance problem", "body": "doc ref attribute thinks maybe cause performance problem arrow function event bind handle event bound within handleclick return doc mention performance problem problem syntax different callback created time loggingbutton renders cases fine however callback passed prop lower components components might extra rerendering generally recommend binding constructor using property initializer syntax avoid sort performance problem ref attribute section tips want know thoughts thisthanks", "num": "9086", "d": "3/2017"}, {"title": "value array lost setting timeout", "body": "hello getting issue regarding timeout react code issue user clicks submit state value push array set set timout get array list sec shows undefined saying array undefined remove timeout code works fine dont know weather issue wrong please help thank", "num": "9085", "d": "3/2017"}, {"title": "react instance many child compenent parent", "body": "hi guys would like call child child form two times parents like return problem many select child changing select ca nt get value second select second child", "num": "9081", "d": "2/2017"}, {"title": "split doc react repository", "body": "want request feature report bug feature current behavior documentation tightly coupled react repository expected behavior many pros keep doc repo git clone react discovered project huge lead much slower cloned forked docs folder size git folder docs think want src folder also project like vue webpack split doc repository", "num": "9079", "d": "2/2017"}, {"title": "react perf scenarios", "body": "wanted write perf scenarios think might important incrementalfiber avoiding unscheduled work unscheduled work synchronous easily lead dropped frames synchronous work setstate componentdidmountupdate causing synchronous work lifecycles lot work rather minimal work schedule follow work event handlers processing handler rather deferring work component ric starvation hit starvation deadline expiration time something gone wrong nt able idle cycles reasons much work done animations leaves us little time idle might react animations js animations css animations even gifs much work done main thread parallelism better utilized worker eg video processing etc high priority updates happen high tree end rerendering whole tree enough shouldcomponentupdatepurecomponents high priority updates nt bail cause whole tree rerender high priority updates touch small part tree enough shouldcomponentupdatepurecomponents ca nt reuse enough work safely resume tree causing resumes rerender everything something causing new trees get dropped resumed probably bad fiber heuristic keep started tree throw away", "num": "9075", "d": "2/2017"}, {"title": "fiber dom reviving dom walking seems blocked reactfiberreconciler api", "body": "discussion sebmarkbage fiber client renderer revive serverrendered dom started dip toe seeing hard would implement first thought implementation use crawl existing dom elementbyelement comparing existing dom elements arguments would look something like parts simplified js createinstance type props todo actual check make sure markup correct probably little complicated conditional currentdomelement amp amp currentdomelementtype type amp amp compareprops currentdomelement props current dom element document reused return currentdomelement else todo warn markup mismatch const newelement newelement elementindocumenttoreplace currentdomelement return newelement appendchild parent child child elementindocumenttoreplace need patch dom tree markup mismatch parentreplacechild child child elementindocumenttoreplace else childparentnode null either ssr markup tree descendant node needed patched parentappendchild child else instance already correctly document ssr call appendchild noop seems fairly straightforward one big problem ca nt figure good way figure unfortunately nt take argument identifying parent instance far tell way determine tree call looked using currently used pass ancestors tree fairly certain nt good enough get access current dom node though method generates host context particular node nt receive parent instance parent host context type one truly silly way solve current api defer creation dom instances know tree instance supposed solution would return element metadata type amp props instance instead real dom element make decision whether use existing markup make new dom element information need tree strikes pretty bad solution though since whole point two calls least understand calls multiple frames calls synchronously one frame idea would put work frame would kind defeat point fiber knowledge fiber codebase minimal best could totally wrong think signature may need change support dom revival client took parent instance closest preceding sibling instance arguments problem would solved sure solutions thoughts", "num": "9072", "d": "2/2017"}, {"title": "fiber investigation internals direct dependencies stack modules", "body": "research following modules react codebase form direct dependency react stack module ideally want move away form using internal module requires use public api requires possible reacttestutils pr already open resolve lelandrichardson spicyj says renderers one test makes use directly move inline within test spicyj says one tests internals nt test anything observable originally added part minor perf improvement deleted renderers reactdom test suite uses spicyj says test added old devtools relied important break dan rewrote integration fiber devtools nt need test fine delete two tests require stack modules spicyj says tests rewritten terms public apis revisit ssr working spicyj says single whitespace test spicyj says let rewrite one terms public apis though probably move reactdomcomponenttest let ensure initial render updates work properly since historically used different codepaths might also diverge future renderers reactdom ssr revisit ssr working spicyj says renderers reactart couple stack modules required art spicyj says need worry delete delete stack bvaughn says renderers native spicyj says need worry delete delete stack bvaughn says scripts refactor use public api instead spicyj says nt really public api reflecting oninspecting react trees script almost bookmarklet need rewrite top fiber want use nt super important okay leave using stack modules work stack someone wants use upgrades fiber", "num": "9069", "d": "2/2017"}, {"title": "reactproptypes nt handle undefined well", "body": "example shows sometimes make typo mistake eg enter result pic abovethis make us confused sometimes spend us minutes find typo first check code first see error oh god nt use error says func check finally find typo react treat check think friendly doc mentionmaybe could improved", "num": "9068", "d": "2/2017"}, {"title": "feature setstate defer render apply new state immediately", "body": "want request feature report bug feature resolves bug current behavior call defers internal update thus trying access return set react batching algorithm assume setup like constructor props super props thisstate tabs focusedtab null opennewtab path thissetstate extend thisstate tabs thisstatetabs path thisfocustab path focustab path since react nt actually update yet got updated calling function get overwritten value still old one thissetstate extend thisstate focusedtab path expected behavior react batch let change take effect immediately way code would introduce unexpected behavior versions react browser os affected issue work previous versions react latest version na", "num": "9066", "d": "2/2017"}, {"title": "documentation epub format", "body": "hello way get react documentation epub format thanks", "num": "9065", "d": "2/2017"}, {"title": "opened mistake", "body": "", "num": "9062", "d": "2/2017"}, {"title": "rfc distribute files react", "body": "rfc regarding distributing typedef files react would generally useful possibly useful extract reactjs definitions flow especially rendererimplementers would especially nice renderer implementers manually extracted minimal required react renderer possible solutions ensure works generates files packages add custom step build tooling include public renderer type def public package minimal typedef package receives file", "num": "9061", "d": "2/2017"}, {"title": "reacttransitiongroup rendering single child", "body": "want request feature report bug bug current behavior rendering single child documentation coders encouraged pass prop like truthy js function firstchild props const childrenarray reactchildrentoarray propschildren return childrenarray null null however passed eg js var reacttransitiongroup reactaddonstransitiongroup var hello reactcreateclass render function return reactdomrender documentgetelementbyid container following console error thrown current behavior bug please provide steps reproduce possible minimal demo problem via similar see open console expected behavior error thrown passed prop nothing render versions react browser os affected issue work previous versions react latest version react chrome macos unsure previous versions presumably also broken", "num": "9056", "d": "2/2017"}, {"title": "possible remove ref key children props", "body": "currently extracting refkey props propskeypropsref compiled js lanuages scalajs bukclescriptreasonml ca nt use native classes props currently wrapping inside js literal inline elements use native classes props fails component childrenref point view props component props ref key children placed different location", "num": "9052", "d": "2/2017"}, {"title": "disabling destroying event target stops event propagation", "body": "disabling submit button within form stops event propagation forms handler fiddle import react react class someform extends reactcomponent constructor props super props thisstate disabled false handleclick thissetstate disabled true consolelog clicked button handlesubmit e alert submitted form render let opts optsdisabled thisstatedisabled disabling button stops event propagation reactdomrender documentgetelementbyid jsbin live example expected behavior event gets propagated unless explicitly swallowed via react version browser chrome unfortunately tell happens older versions", "num": "9046", "d": "2/2017"}, {"title": "change warning suggest empty array rather empty string", "body": "want request feature report bug bug current behavior setting value gt deselect currently selected option current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle expected behavior rendering value set empty string expect selection rendered select box mainly expectation comes react warning use instead fiddle change line get behavior expect versions react browser os affected issue work previous versions react gotten react whichever version used fiddle nt know worked previous versions tested using chrome os x", "num": "9038", "d": "2/2017"}, {"title": "error performupdateifnecessary unexpected batch number react reactdom", "body": "spun closed request reproducible testcases filed separate issues testcase filed failed still failing node version npm version git clone git githubcomwkingperformupdateifnecessarybuggit bug cd bug npm install npm install performupdateifnecessarybug tmpbug react fbjs corejs isomorphicfetch nodefetch encoding iconvlite isstream whatwgfetch promise asap setimmediate uaparserjs looseenvify jstokens objectassign reactdom reactscripts npm test consoleerror warning performupdateifnecessary unexpected batch number current pending fail srcbugtestjs duplicate requests loaded nodes duplicate requests loaded nodes local calls code really much code example p may bugs catches deeper stack direct dependencies seems like issue facebookmaintained repository possibly one dependencies case facebookmaintained dependency may need bumped", "num": "9037", "d": "2/2017"}, {"title": "plans release build package", "body": "hi plans release release build package latest release done previous releases could nt see releases page thanks k", "num": "9036", "d": "2/2017"}, {"title": "doc function component maybe needs review", "body": "doc describtion mount function mount element var type elementtype typeof type function userdefined components return mountcomposite element else typeof type string platformspecific components return mounthost element component like call somewhere call function handles elements composite type example handles function mountcomposite element var type elementtype var props elementprops var renderedelement isclass type component class var publicinstance new type props set props publicinstanceprops props call lifecycle necessary publicinstancecomponentwillmount publicinstancecomponentwillmount renderedelement publicinstancerender else typeof type function component function renderedelement type props recursive eventually reach bottom recursion element host eg rather composite eg return mount renderedelement call type functionthis makes consider react nt instance function component call receive returned valuebut see src code reactcompositecomponentjs shows react create instance named wrong please let knowif think add tips", "num": "9035", "d": "2/2017"}, {"title": "dom rendered componentdidupdate", "body": "understanding componentdidupdate called component rerendered however take code facebook react tutorial add functions class game codepen sleep milliseconds let start new date gettime let lt new date gettime start gt milliseconds break componentdidupdate thissleep takes seconds every click react update page instead updating dom sleep seconds expected behavior need function triggers page updated use", "num": "9033", "d": "2/2017"}, {"title": "licence clarification", "body": "question regarding licence faqs additional patent grant facebook bsdpatents license terminate sue facebook something patent infringement right facebook infringes patent mine sue facebook lose right use react would mean move applications another technology", "num": "9030", "d": "2/2017"}, {"title": "provide mechanism marking react type identified html", "body": "would helpful analysis debugging especially unfamiliar code base able identify components looking html instance datareacttype foo might nice formalize", "num": "9029", "d": "2/2017"}, {"title": "npm test failed reacttestrenderertestjs", "body": "want request feature report bug want request bug current behavior cloning react installing dependencies ran npm test found one test suites failed current behavior bug please provide steps reproduce possible minimal demo problem via similar template run command npm test expected behavior fail srcrendererstestingtestsreacttestrenderertestjs test suite failed run find module prettyformat reacttestrenderertestjs versions react browser os affected issue work previous versions react", "num": "9025", "d": "2/2017"}, {"title": "unexpected behavior wrapped handlers", "body": "want request feature report bug bug current behavior code snippet make one input follow react expression user changes field manually accomplished wrapping reach component ideally property work including handlers specifically intended let follow value regular element element wrapped component changed react synthetic event expected desired created sent handlers however followed element changed component triggered afaik regular nonsynthetic object current behavior bug please provide steps reproduce possible minimal demo problem via similar template events written console open take look expected behavior component handler receives react synthetic event versions react browser os affected issue work previous versions react react chrome macos", "num": "9024", "d": "2/2017"}, {"title": "eventpreventdefault click handler prevent onchange called", "body": "want request feature report bug bug current behavior rendering element type handler still called even though called handler current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior calling handler prevent default action occurring undo effect update value element stop event listener invoked see expected behavior versions react browser os affected issue work previous versions react tested using build master macos verified chrome firefox safari calls event listener cases", "num": "9023", "d": "2/2017"}, {"title": "doubleclickclick event firing", "body": "hello trying generate doubleclick documentgetelementbyid id ondoubleclick success tried onclick beside working fine without react idea working thank", "num": "9022", "d": "2/2017"}, {"title": "load data constructor", "body": "reading docs componentdidmount recommended load data method itit runs well still question load data earlier like ps maybe fault search much related docs issues plz point mei appreciate", "num": "9021", "d": "2/2017"}, {"title": "good way shallow compare element", "body": "good way shallow compare two elements two variables want shallow compare value like jsx let myfunc gt alert let let b let c iselementswallowequal b return true iselementswallowequal c return false reactcreateelementchildrenpropsreact provide function job thank", "num": "9020", "d": "2/2017"}, {"title": "feature best error tracking react special props errors", "body": "currently using react error displayed console warning li prop trying access result returned need access value within child component pass different prop printwarning warning warnaboutaccessingkey dehydrate dehydrate anonymous flushbufferslice flushbufferwhileidle ca nt track easily component trigger error binary search code find", "num": "9016", "d": "2/2017"}, {"title": "question forceupdate", "body": "hello new user react use make webapp creating cssbased animations div shows preview animation adding div certain classes node problem animations must timed correctly sync adding new div react feature smart dom update found way must update node containing animated divs tried use forceupdate seems nt use correct way nt find enough information method would glad someone could help", "num": "9012", "d": "2/2017"}, {"title": "key property svg elements causes warning", "body": "want request feature report bug bug current behavior use property svg elements line text circle see current behavior bug please provide steps reproduce possible minimal demo problem via similar template ca nt reproduce jsfiddle tried fresh project created expected behavior warnings versions react browser os affected issue work previous versions react project created react version macos chrome", "num": "9011", "d": "2/2017"}, {"title": "perf doc printoperations image update", "body": "misunderstood please let know apologize clear describe want request feature report bug maybe bug current behavior look perf doc saw field print printoperations function different doc image image printoperations print owner gt node operation payload flush index owner component id dom component id current behavior bug please provide steps reproduce possible minimal demo problem via similar template doc expected behavior would awesome change image sync printoperation print explain new fields versions react browser os affected issue work previous versions react doc thanks", "num": "9008", "d": "2/2017"}, {"title": "bug read property remove undefined simpleeventpluginjs", "body": "sorry reported could find issues section getting error unable replicate error occuring also stackoverflow link issue also using let know need details thanks", "num": "9007", "d": "2/2017"}, {"title": "reactcsstransitiongroup animated component removed dom", "body": "want request feature report bug bug current behavior reacttransitiongroup used like also compare versions react browser os affected issue react safari ios native android browser android codepen", "num": "9001", "d": "2/2017"}, {"title": "bring back jsx gotchas doc", "body": "following document useful however seems disappeared entirely replacement ca nt find anywhere current documentation explains react escapes html passed default trying explain someone today right seems like something know section custom html attributes seems useful", "num": "8998", "d": "2/2017"}, {"title": "react seems skip rendering semicolon inline styles", "body": "want request feature report bug bug current behavior ssr get warning using inline styles sure browser adding semicolon react skipping server expected behavior get warning markup client server match versions react browser os affected issue work previous versions react chrome linux firefox linux", "num": "8986", "d": "2/2017"}, {"title": "add new typechecking rule class inherit", "body": "sure possible necessary got trouble please see example code javascript class grandpa extends reactcomponent class parent extends grandpa class childone extends parent class childtwo extends parent class childthree extends parent class testcomponent extends reactcomponent render const customcomponent thispropscomponent return testcomponentproptypes component reactproptypesclassinheritof parent component reactproptypesclassinheritof grandpa class main extends reactcomponent render return add common function class component passed inherit classes component work correctly tested correct necessary add rule", "num": "8983", "d": "2/2017"}, {"title": "setstate errors", "body": "hey guys im new react wanted know setstate always gives uncaught promise typeerror read property setstate undefined code", "num": "8980", "d": "2/2017"}, {"title": "disabled attribute ignored div role button onclick clicked", "body": "using aria rolebutton div elements disabled times disabled attribute ignored react onclick event triggered created fiddle illustrating issue expect onclick would triggered elements disabled true especially role button using react jsfiddle", "num": "8977", "d": "2/2017"}, {"title": "react error reporting bugsnag", "body": "good guide connecting react bugsnag solution error reporting appreciate good example one thanks", "num": "8972", "d": "2/2017"}, {"title": "onchange firing controlled input element updated", "body": "found appears bug bug controlled element changes updating value nt called reproduction made codepen illustrates problem expected behaviour expect gets called since change world react nature much controlled written docs also mentioned various threads problem fact inputs function gets called problem need logic validation inputs changed comments tried using also nt get called either", "num": "8971", "d": "2/2017"}, {"title": "onchange oninput unlike dom", "body": "confusing normally change event called enter key field changed input used changes put events thing practical", "num": "8969", "d": "2/2017"}, {"title": "chrome breaks touch events", "body": "want request feature report bug bug current behavior react attaches events node causes latest version chrome issue following warning appears chrome treats document level touch events passive current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior allowed means react pass adding event listeners versions react browser os affected issue work previous versions react react chrome windows", "num": "8968", "d": "2/2017"}, {"title": "transitiongroup throws warnings component unmounted", "body": "react every time create animations using transitiongroup get errors change page animation still running", "num": "8966", "d": "2/2017"}, {"title": "inline border style rendering correctly", "body": "want request feature report bug reporting bug certain changes inline border styles nt updated correctly dom current behavior incorrect rendering current behavior bug please provide steps reproduce possible minimal demo problem via similar template changing inline style div results borderrightcolor undefined ie black rather green expected behavior rendering div inline style give border regardless border style set previous render versions react browser os affected issue work previous versions react tested latest versions chrome firefox safari unaware working properly previous versions react sure", "num": "8957", "d": "2/2017"}, {"title": "proposal fire event send data component", "body": "proposal fire event send data component create events lib const events events listeners init name state callback thisevents name state callback getstate name return thisevents name state addlistener name callback thislisteners name thislisteners name push callback else thislisteners name callback emit name state let key state thisevents name state key state key windowevents events lib easy call event component example header section export default class header extends reactcomponent constructor super thisstate title eventsinit headertitle title state gt thissetstate title statetitle easy call headertitle event send title easy listener component headertitle event use lib project reactjs easy without complex", "num": "8956", "d": "2/2017"}, {"title": "improve proptype warning mention received prop type", "body": "warning include actual type detected invalid something like", "num": "8955", "d": "2/2017"}, {"title": "rename proptypesfunc proptypesfunction deprecate proptypesfunc", "body": "want request feature report bug bug inconsistent naming leads poor user experience developers current behavior using proptypesfunction proptypes object react class produces warning error read property isrequired undefined must use proptypesfunc every time typing proptypes look whether func function sometimes makes wonder object obj none proptypes names truncated poor user experience current behavior bug please provide steps reproduce possible minimal demo problem via similar template myreactclassproptypes somefunction proptypesfunctionisrequired expected behavior works errors warnings versions react browser os affected issue work previous versions react previous", "num": "8951", "d": "2/2017"}, {"title": "confusion setting state almost developers data mutation bad need proof", "body": "want request feature report bug current behavior setstate behaviour current behavior bug please provide steps reproduce possible minimal demo problem via similar template bug raising issue among developers may create bugs expected behavior explanation versions react browser os affected issue work previous versions react latest version simple example setting initial state constructor setstate questions display none later updating like var questions thisstatequestions questions display block thissetstate questions questions approach bad bad anybody explain examples approach take lead ugly codes", "num": "8947", "d": "2/2017"}, {"title": "dynamic rendering react component", "body": "case list component names left side window sign click sign component get displayed list like click order component render following order", "num": "8944", "d": "2/2017"}, {"title": "clear button ios date input return correct event value", "body": "bug ios pressing date input event fired showing original value rather empty string current behavior chrome android clear button pressed onchange event value ios clear button pressed onchange event value demo try chromeandroid ios expected behavior value returned empty string versions affects react amp ios unsure previous versions", "num": "8938", "d": "2/2017"}, {"title": "docs tutorial mention getdomnode", "body": "current live docs contain following incorrect example according big change making release exposing refs dom components dom node means looked ref react dom component realized useful thing call thisrefsgiraffegetdomnode get underlying dom node starting release thisrefsgiraffe actual dom node perhaps example changed tried click edit github link top tutorial got thing could think open issue hope helps thanks heart", "num": "8935", "d": "2/2017"}, {"title": "slow performance react code", "body": "function gets passed renderednodes array contains nodes supposed rendered time node added removed function gets called parent desc const node childnodes childnodes node data renderednodesincludes parent desc const rendered recursiverender renderobj childnodes node childnodes node renderednodes id removeorrendernode arr arrconcat rendered else renderobj childnodes node groupedby employeename base else base problem render kind slow advice may case", "num": "8933", "d": "2/2017"}, {"title": "setstate nt call render testing react components", "body": "first case using ref function holds rendered instance taking action const rendercomponent element callback gt reactdomrender element const mydiv documentcreateelement div rendercomponent mydiv instance gt spyon instance render andcallthrough testutilssimulateclick mydivqueryselector call setstate expect instancerender tohavebeencalledtimes throws error render nt called since rendering called asynchronously guess second case without using ref deprecated const rendercomponent element callback gt const instance reactdomrender element callback instance const mydiv documentcreateelement div rendercomponent mydiv instance gt spyon instance render andcallthrough testutilssimulateclick mydivqueryselector call setstate expect instancerender tohavebeencalledtimes works since rendering called right away issue necessary batch rendering first case presented way disable batching react useful testing matters", "num": "8932", "d": "2/2017"}, {"title": "use highresolution time measuring performance reactperf", "body": "reactperf could give submillisecond precision using new performance api seems pretty well supported", "num": "8929", "d": "2/2017"}, {"title": "missing property props getting respective defaultprops property ref instead copy correct", "body": "want request feature report bug bug undocumented behavior props defaultprops understanding defaultprops could wrong current behavior props readonly nonprimitive object value supplied parents props missing value expected make copy respective defaultprops value instead hold ref defaultprops minimal demo problem link self explanatory expected behavior props readonly props missing value expected make copy respective defaultprops value value supplied parents versions react browser os affected issue work previous versions react latest version reactjs", "num": "8925", "d": "2/2017"}, {"title": "child array need unique key", "body": "note keys const welcomeuser thisstateexistingcookieusername amp amp welcome thisstateexistingcookieusername please log return want request feature report bug current behavior pass around array jsx without unnecessary keys current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior react nt care put keys elements versions react browser os affected issue work previous versions react latest", "num": "8920", "d": "2/2017"}, {"title": "problems click events ie edge", "body": "would like point specific behaviour using react ie edge building usercomputer chat application users presented prompts navigate user journey one steps user enters street namepostcode presented list addresses choose therefore step text input field user submits disappears list addresses appear example two ways submitting one clicking send button hitting enter keyboard user uses mouse submission everything ok browsers however user presses keyboard key click events work expected ie edge assumption problem comes field focus deleted dom ca nt sure make things stranger could reproduce issue putting addresses list two nested div elements display flex set styles link fiddle expected value entered input enter pressed send clicked would expect list addresses provided clickable actual value entered end send clicked mouse events list items tracked value entered enter pressed events list ca nt tracked using react ie edge", "num": "8912", "d": "2/2017"}, {"title": "pasteoncapture triggers dom event bubbling phase", "body": "want request feature report bug bug current behavior setting handler react provides two choices cases dom eventcurrenttarget document reasonable given react delegate behavior works aka bubbling cases current behavior bug please provide steps reproduce possible minimal demo problem via similar expected behavior expected fires dom event capture phase needed able manipulate paste handler properly playing focus games edge versions react browser os affected issue work previous versions react latest version react affects least chrome edge suspect browseros independent", "num": "8909", "d": "2/2017"}, {"title": "storing history incomplete", "body": "user gets storing history part react tutorial user easily get lost tutorial briefly becomes vague without example point text shown remove constructor board change board takes squares via props onclick prop specified game like transformation made square earlier pass location square click handler still know square clicked tutorial reiterate steps displaying final code board edited described takes squares via props onclick prop specified game vague someone never used react step easier said done conform level explanation examples previous portions tutorial exhibit long story short point tutorial falls apart users likely stop confusion move tutorial seems critical stepping point ironed clear concise", "num": "8904", "d": "1/2017"}, {"title": "unexpected exception using react perf tools", "body": "found exception trying use react perf tools components internally uses minimal reproducible case different mostly related exception happens used url may asking need use reactserverdom together reactdom need render svg blob use blob uri backgroundurl style attribute also use cases need render string instead directly dom think reasonable usage", "num": "8902", "d": "1/2017"}, {"title": "warning message swallowed using shape inside oneoftype", "body": "see expect warning says invalid prop supplied foo bar even better invalid prop supplied get invalid prop supplied", "num": "8901", "d": "1/2017"}, {"title": "bump fbjs", "body": "probably lots react apps depend babelruntime perhaps directly maybe indirectly problematic though cause apps depend two versions corejs babel using react app babelruntime corejs react fbjs corejs two versions nt semver compatible means project depends babelruntime also react two copies corejs use concrete example react app also depends relay probably many examples though nice collapse dependency single version corejs react could bump dependency latest fbjs fbjs alpha right alpha months probably guys arrange stable release want see also", "num": "8898", "d": "1/2017"}, {"title": "closure compiler wrong assignment order", "body": "consuming react source google closure compiler bit code nt run correct order seems like google closure compiler transformation changing function assignment messes behavior original function hoisted thought related fact function exported module anyway produces error assignment wrong order assignment function definition want definition assignment may also related root cause straightforward solution bring call function declared verified works correctly happy submit pr described approach", "num": "8894", "d": "1/2017"}, {"title": "usage dompropertyoperations module breaks build closure compiler advanced optimizations", "body": "want request feature report bug report bug current behavior referring object method another method within object breaks react build closure compiler advanced optimizations current behavior bug please provide steps reproduce possible minimal demo problem via similar template build react app using closure compiler advanced mode unfortunately provide source app got bug expected behavior app built closure compiler advanced mode throw exception versions react browser os affected issue work previous versions react react changing solves issue methods object using properly via call makes sense prepare pr", "num": "8887", "d": "1/2017"}, {"title": "properly setup eslint config eslint version", "body": "want request feature report bug report bug current behavior version eslint lint gulp task return errors indentation bottom line version operate normally usersrastopyrprogrammingjsreactsrcrendererssharedsharedtestsreactcompositecomponentstatetestjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent usersrastopyrprogrammingjsreactsrcrendererssharedsharedtestsreactmultichildtestjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent current behavior bug please provide steps reproduce possible minimal demo problem via similar template clone repo expected behavior packagejson setted version means latest minorpatch version higher installed think way solve issue set strict version eslint change files passed lint change eslint config rules", "num": "8885", "d": "1/2017"}, {"title": "component hierarchy fiber", "body": "module named permissionchecker code javascript const permissionchecker children permissions needs gt let hasaccess false export default connect appstate gt permissions appstateget userpermissions null permissionchecker usage case permissionchecker question know fiber possible return multiple react elements hierarchy category render method propschildren permissionchecker link want bypass permissionchecker returns children possible fiber", "num": "8881", "d": "1/2017"}, {"title": "jsx inconsistently rendering svg textanchor attribute react dom reacttestrenderer", "body": "think bug behaviour outputting following text reactdom reacttestrenderer current behavior seems rendering component using jest snapshot uses reacttestrenderer produces following output run code browser using jsx compiled javascript put reactjs get following output see example clearly test renderer leaving unknown attributes whereas dom renderer altering camelcase make hyphenated sure change jsx allow example work scenarios jestsnapshot reactjs bug lie jest snapshot renderer reactjs renderer expected behavior reacttestrenderer behaves reactjs note version numbers using code brief look source code yeilds line reactrenderer ca nt find similar line test renderer", "num": "8880", "d": "1/2017"}, {"title": "react tutorial const history", "body": "copied code code examples react tutorial page forked codepen followed tutorial time travel code nt work following tweak made work storing history section fourth code example line const history thisstatehistory changed const history thisstatehistoryslice thisstatestepnumber", "num": "8878", "d": "1/2017"}, {"title": "react onclick nt fire ie", "body": "seems issue onclick working correctly previously using react changed luck seems like onclick action triggered onchange text input works fine jsx component talking following onclick thishandlesubmitbind however assume issue related onclick across application class firstname extends reactcomponent constructor props super props thisstate submitted false firstnameerror false", "num": "8877", "d": "1/2017"}, {"title": "onbeforeinput fires edge updates dom", "body": "want request feature report bug bug current behavior edge onbeforeinput event fired edge already made changes dom negating purpose event breaking assumptions components built event draft current behavior bug please provide steps reproduce possible minimal demo problem via similar template demonstrates issue general see effects components consider steps go type bold underline space words select space press entire control text replaced hit undo several times observe broken states finally react fails issue opened draft core issue onbeforeinput misbehaving edge breaks draft assumptions expected behavior onbeforeinput fire changes occur dom versions react browser os affected issue work previous versions react repros latest version draft root cause root cause although issue longer repros fix referenced issue fixes issue well", "num": "8876", "d": "1/2017"}, {"title": "website page working properly", "body": "want request feature report bug attached screen short check please people world use ie built browser current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8875", "d": "1/2017"}, {"title": "remove rewrite examples", "body": "prompted examples really great examples use react maintained add little value consider either rewriting examples easier use represent good practices rewrite couple remove rest remove examples partial removing anything providing single example well built cc gaearon spicyj bvaughn", "num": "8874", "d": "1/2017"}, {"title": "maintaining ref prop reactcloneelement", "body": "react rc suggests prop components pushed allow two parents maintain props child tried replicate behaviour codepen able maintain two references child ie ancestor component gets nulled jist code working code found class childcomponent extends reactcomponent constructor props super props onclick e epreventdefault extendchildren return reactchildrenmap thispropschildren child gt return reactcloneelement child ref ref gt thisinput ref render return thisextendchildren class ancestorcomponent extends reactcomponent constructor props super props onclick e epreventdefault render return expected behaviour able click application childcomponent check buttons reference input poping alert input value behaviour droppednever implemented since rc something wrong", "num": "8873", "d": "1/2017"}, {"title": "type textbabel throw error latest chrome", "body": "type textbabel throw error latest chrome", "num": "8870", "d": "1/2017"}, {"title": "onsubmit handler proxy object first argument", "body": "want request feature report bug believe bug since ca nt find documentation behavior changing current behavior calling submit handler like first argument object second argument object current behavior bug please provide steps reproduce possible minimal demo problem via similar template see console see objects expected behavior first argument object object versions react browser os affected issue work previous versions react happening react happening", "num": "8869", "d": "1/2017"}, {"title": "significant change reactaddonsperf function getinclusive react", "body": "note asked first directed tl dr massive overhaul reactaddonsperf make large change would cause wildly different results data using perfgetinclusive process upgrading react react seeing puzzling changes profiling using reactperfaddons test case table rows cells upgrading tested total render times using windowperformance using reactaddonsperf getlastmeasurmentduration tools show increase performance rendering table seem outside realm possibility things started get weird looked results perfprintinclusive results printinclusive individual component render report render faster factor seem jive seeing elsewhere tried look changes inside reactperfjs module file replaced wholesale hard understand may changed nothing changelog would really explain big difference results printinclusive question could grossly different findings perfprintinclusive explained big refactor reactaddonsperf function showing something different used show old numbers wrong", "num": "8867", "d": "1/2017"}, {"title": "reactdomfinddomnode returns unexpectedly", "body": "want request feature report bug bug current behavior two versions simple page page produces text tries register dom event handlers mouse events html element underline text mouse remove underline mouse make text red color mouse return text black color mouse finally also sets elements difference two pages way dom event handlers registered object returned bad version link version binds event handlers like jsfiddle link version produces error good version link version binds event handlers like jsfiddle link version behaves expected current behavior bug please provide steps reproduce possible minimal demo problem via similar template jsfiddle links bad good versions provided expected behavior opinion good version bad version behave react exact way bad version produce error react versions react browser os affected issue work previous versions react tested chrome os x windows safari os x bad version work react bad version worked react", "num": "8862", "d": "1/2017"}, {"title": "react umbrella", "body": "list might change putting first draft posting together since related nt plan releases anyway put changes context goals click show past several months working rewrite react codenamed fiber initially affect public api brings several new features like fiber gives us solid foundation improve react core numerous ways talking soon intend ship react default reduce bundle size need remove apis nt recommend helpers intend warn usage start removing dependencies still available separate packages exclude default build react would like control bundles better optimize considering switching flat bundles thus removing access react internals react also mean faster compile times default users webpack bundlers faster serverside rendering performance speculative list changes think releases past releases moved end post final x flarnie amp sophiebits x check real regression nhunzaker aweary x check google issue still exists turns polyfillio bug x figure want regarding gaearon x ensure enzyme nt blocked anything side compat flarnie x remove prefix alias gaearon x ensure show sensible warning case gaearon x preparing final release react team general x write blog post adapted acdlite x add attribute info big changes section x consolidateremove updates section end x server hydration make hydration changes prominent breaking changes section maybe write full blog post later x release update devtools x website bvaughn flarnie x docs x document ability return strings arrays x document x merge server streaming doc regular dom server doc fix imports match new unified entry point x test renderer x right release x update cdn urls website official fiddle reference new paths rather x update doc snippets codepens website use todo add bugs discovered testing rc wishlist x fix hot reloading rn probably needs change use x show better message missing react x make sure offer way canceling updater form gaearon follow x remove stack compat code x add support enzyme fiber airbnbenzyme past releases click show x reactdom fixes jquense nhunzaker aweary want release x probably ship fix x new warning callback refs stateless functional components x new api deprecations x moved separate package provide codemod want update es classes moved separate package removed oneliner factories moved separate package forgot moving removed forgot moving x moved separate package x deprecate react addons x decide handle umd addons build x fix bug see alpha click show x remove deprecations added x stop appending strings x remove x remove x move separate package x move separate package x move factories separate package x decide addons build x keep addons need work regardless whether react aliased flat bundle case x strip proptypes checkers production build x readd warning calling proptypes directly x reactdom fixes jquense nhunzaker aweary want release x make decision input fix jquense accepted follow work change flarnie link issue related follow work beta click show x actually enable fragments flarnie verified x make error boundaries official bvaughn x choose lifecycle naming x codemod stuff x decide whether runtime warn old name decided let x fix issue tracking acdlite working x came internally set hard limit recursion acdlite x duplicate react string refs results confusing error ref function provide good invariant spicyj flarnie gaearon draft issue also x test flarnie x warn throw update container manually emptied outside react stack mounted brandnew tree fiber tries apply update usually fails flarnie x test flarnie x additional apis need order start experimenting async acdlite x x x sanity test use cra app check fixtures x messaging x update isfiberreadyyetcom x compose tweet rc click show x ml pass dom props latest gaearon spicyj sebmarkbage flarnie acdlite x regression warn object passed event listener prop aweary fixed needs review updated merged x make sure input variables props state point correct values lifecycle example nt case acdlite fixed x onchange event fires incorrect selectedindex value sebmarkbage x ensure weak minifiers nt ship bundle twice flarnie trueadm fixed x bug ssr false positive warnings svg tags spicyj fixed x bug unexpected crossdomain error passed bvaughn fixed x warn nesting tree inside spicyj fixed x undefined function evaluating ownergetname x regressions reported beta x server renderer crashes production inline styles fixed x server renderer nt yet support returning arrays strings components fixed x server renderer still renders somewhat unnecessarily gaearon x potentially fixed gaearon x cases reported instead real error decision update error message acdlite x shallow renderer nt implement decision team seems leaning away discussion x sm functional components decision delete add minor sebmarkbage x report google crawler render page using link flarnie x check real regression fixed looks like x sm ensure type validation nt regress enabled new features gaearon x decide want break value attribute syncing behavior decided postpone x sm decide want stop calling shallow renderer x decide polyfills x mapset need throw early gaearon x objectassign keep assume decision keep bundled x raf decision keep required maybe use approachstandard relay x big missing pieces x add server rendering reviving x add shallow renderer x seem decoupling shallow renderer reactdom however works inside shallow renderer contains reactdom injections going breaking change gaearon decision let support x decide whether include warning whitelistingblacklisting bvaughn decision x maybe switch flat bundles internals truly private x decide plan forward popular projects depending internals might block final x dangerously exported flat bundle tap event plugin x probably needs internals coordinate necolas done x support gaearon decision gon na x feature parity renderers x shallow renderer supports strings arrays x server renderer supports strings arrays x server renderer supports error boundaries nt make sense conceptually right x decide whether put package reduce issues caused npm duplication x decide domserver entry points seem inconsistent one gaearon configured separately prepack one target includes pure js apis node apis includes pure js apis could combine single entry point add new method x decide care catching errors events initial release x error messages flarnie dan moved back blockers nt think release unclear messages error boundaries huge change open source must documentation link start unmounting roots x add error boundary message link docs x duplicate key warning children keys date claims child ignored render second one easy add final sooner sebmarkbage x verify bundles produced valid strict mode bvaughn x testing beta react team general x share beta proposed release date library authors several weeks advance x triage issues reported beta", "num": "8854", "d": "1/2017"}, {"title": "remove reactcreatemixin", "body": "since mixins longer part future react api plan current reactcreatemixin implementation noop think consider removing since part public api believe would need happen next major release add deprecation warning number projects use api cc spicyj gaearon", "num": "8852", "d": "1/2017"}, {"title": "scoping render typescript maybe", "body": "want request feature report bug bug current behavior code throws export class test extends reactcomponent static proptypes state test variation export class test extends reactcomponent static proptypes state test current behavior bug please provide steps reproduce possible minimal demo problem via similar template using repo test logintsx component expected behavior managed chase scope lost render function suspect possible would issue syntax blocked tsd react sure react bug tsd one versions react browser os affected issue work previous versions react running chrome macos reproduce ff edge win well nt used older versions suspect", "num": "8850", "d": "1/2017"}, {"title": "dom element rendered props detected wasted", "body": "found issue trying demo react perf chrome basically utilizing dom element rendered prop detected wasted code detected wasted even onclick new function every render interestingly code exempt prop value false detect wasted properly code created minimal todolike project reproduce issue repro steps click start perf tab check one item web page click stop perf tab expected result detect wasted render actual result wasted detected reproduced react", "num": "8847", "d": "1/2017"}, {"title": "blank page coming apache server", "body": "want request feature report bug current behavior blank page coming current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior must running example versions react browser os affected issue work previous versions react", "num": "8844", "d": "1/2017"}, {"title": "dangerouslysetinnerhtml remove script tag", "body": "want request feature report bug bug current behavior many cases realworld need inject external party script example adding googleanalytics code adding stripe button currently dangerouslysetinnerhtml removes script tag making hard simply inject js code page issue people writing bloated components like reactga google analytics minimized add script tag similar libs like reactscripts stripecheckout minimized add script believe least using dangerouslysetinnerhtml remove script tag instead run script example adding stripe button follows current behavior bug please provide steps reproduce possible minimal demo problem via similar template script create stripe button render function return reactdomrender documentgetelementbyid container expected behavior display stripe button button versions react browser os affected issue work previous versions react believe react worked long time", "num": "8838", "d": "1/2017"}, {"title": "bug nashorn issue props", "body": "version reactjs running nashorn strange issue reactcreateelement called reactdomserverrendertostring react fails add attributes generated html output eg true far tell elements realize probably nashorn bug actually react bug thought file issue case narrowed issue row props object never gets assigned property mean likely nashorn bug however workaround issue replacing entire forloop calls objectassign polyfill gotten ca nt really see big difference polyfill fact using polyfill everything works using props propname config propname ideas edit similar issue earlier version reactjs regarding inline styles parsed used assign copy properties one object another however case objectassign polyfill bundled assign polyfill used instead solution use polyfill instead", "num": "8834", "d": "1/2017"}, {"title": "proptypesshape throw object properties specified", "body": "setup like call like expect show warning passed object exact shape required please advice", "num": "8832", "d": "1/2017"}, {"title": "umbrella async rendering", "body": "async rendering incomplete bugs existing implementation crucial features missing specifically bugs related resuming work interupted effort clean bugs without fundamentally changing underlying model course working branch decided underlying model inherently flawed needs change tricky case low priority work interrupted higher priority update want able reconcile higher priority without losing low priority children resume later way existing model going scrap model start scrap existing progressed work implementation bugs give us better foundation upon build new model also fix bugs triangle demo although starvation clearly worse aim correctness comprehensiveness x add fuzz tester protect regressions acdlite difficult impossible write unit tests provide sufficient coverage especially ones resilient implementation changes fuzz tester provides safety make assertions work reused consistency x remove existing code related progressed forked work acdlite split update priority represents priority subtree fiber belongs lets us know whether children remaining work expiration times next step implement expiration times low priority work nt possible expiration times alone sufficient generate real product wins even without ability resume interrupted work x implement expiration times acdlite updates fiber priority level coalesce commit bucket updates rounding expiration times may sufficient solve coalescing problem async toplevel api keep track next unit work per root possible context currently always reach root receive update fiber nt necessarily know tree fiber belongs flush interaction work synchronously expiration boundaries blockers shouldcomponentblock still figuring details work x components block rendering using component blocks react searches nearest expiration boundary similar semantics error boundaries ifwhen update expires switches tree instead unblock using actual name tk resuming interrupted work move onto addressing problem resuming interrupted work implement resuming basic case fiber touched since last time worked represent priority parent last reconciled set children present future maybe past still figuring details reorders work items x resume mount bug null passed props constructor acdlite x resume mount bug creating new instance resume causes refs callbacks userspace close wrong instance fix reusing original instance acdlite image load event may fire mounted dom figure way defer event applicable ones mount x ensure error boundaries work incremental mode eg hidden subtree nt commit wait next animation frame flush animation work using last completed priority level work overlaps may able reuse item may need wait switch expiration times x ensure work expires even events solve stale event listeners component receives interaction event flush updates parents simulate render recreate event handler calling defer event dispatching proper fast way see context solve case want show fallback content primary content takes long fast rendering spinner async render takes long general expiration time elapsed async tree started calling alternate tree instead way render tree spinner took long render suspense figure story around unittesting async components probably want force sync mode api provide enzymetestutils", "num": "8830", "d": "1/2017"}, {"title": "perf freezes browser", "body": "banging heads diagnosing really bad performance firefox specific chrome works fine react redux web app updating many objects time using node webpack typescript reactaddonsperf type definitions definitelytyped outputs module reactaddonsperf exported member perf lets us use perfstart console command entered browser freezes clue could wrong help really appreciated", "num": "8828", "d": "1/2017"}, {"title": "click handlers triggered disabled buttons containing elements chrome", "body": "want request feature report bug bug current behavior current version react chrome opera buttons click handler element inside ie text node get click handler triggered click disabled current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior buttons react click events versions react browser os affected issue work previous versions react react chrome working react", "num": "8827", "d": "1/2017"}, {"title": "disabled button onclick handler triggered erroneously", "body": "want request feature report bug bug current behavior buttons children text nodes disabled attribute true click handlers still triggered current behavior bug please provide steps reproduce possible minimal demo problem via similar template load code pen check react v observe button click behaviour instances expected behavior button click trigger click handler versions react browser os affected issue work previous versions react bug appears behaviour correct", "num": "8826", "d": "1/2017"}, {"title": "small error tutorial", "body": "want request feature report bug bug current behavior tutorial functional components explained following codesnippet expected behavior work correctly follow tutorial versions react browser os affected issue work previous versions react", "num": "8825", "d": "1/2017"}, {"title": "wondering react support", "body": "want request feature report bug feature current behavior currently react size reactminjs compressed reactdomminjs compressed compression still pain point mobile web situation expected behavior heard react implement event dispatching bubbling normalizes common events across browsers nt need worry much maybe make huge contribution react size wondering possible already enabled react combine babelpresetenv provide ability smaller production bundle size example team china mainly focus ios safari amp android browser amp hybrid webviews ios amp android based webkit kernel polyfill ieedge opera firefox desktop browsers unnecessary production codes polyfills could stripped make final production codes much smaller versions react browser os affected issue work previous versions react react", "num": "8824", "d": "1/2017"}, {"title": "unstablehandleerror allow disabling making error bubble parent upon retry", "body": "feature allows error boundaries components attempt rerender component first error handled boundary defined second render design unhandled error occurs render error bubbles parent would better configure behavior able choose bubble handled upon retry case acceptable continue retry render screen errors occasional race condition current state ready yet current component rendered error times state ready", "num": "8821", "d": "1/2017"}, {"title": "feature request binding utils elements", "body": "want request feature report bug feature first expert react using weeks silly request please forgive binding method elements prevent code repeating additional operations element component example binding updating state inputs need write thing every component design something like javascript import react component react import autostate autostate export default class loginform extends component constructor props super props thishandlesubmit thishandlesubmitbind autostatejs create utils use elements even use jquery manipulations add behaviors elements need without creating many components renderer needs bind functions added bind attribute bind accept array multiple bindings know create input component automaticly nt make tests believe way fast creating nested component everything since react looks components check update please think example main purpose kind feature open many posibilities", "num": "8820", "d": "1/2017"}, {"title": "showing wrong state value console", "body": "signup component state defined constructor component following event listner update state render following jsx code allow user select hisher gender click male button shows male console onchange event soon click female button often logging male value gotten female getting correct value render gender state jsx could please explain problem happening react taking time set component state", "num": "8819", "d": "1/2017"}, {"title": "disabled radio button checkbox fires onchange event double click", "body": "want request feature report bug bug current behavior disabled radio button checkbox fires onchange event double click current behavior bug please provide steps reproduce possible minimal demo problem via similar expected behavior disabled radio button checkbox nt fire onchange event double click versions react browser os affected issue work previous versions react react windows duplicate", "num": "8814", "d": "1/2017"}, {"title": "anything consider adding reactcomponent prototype", "body": "want functions default components creating best way add prototype chain reactcomponent add default implementation life cycle hook component something misbehave example javascript let defaults dosomething function consolelog added components shouldcomponentupdate function nextprops return deepequal nextprops thisprops reactcomponentprototype objectassign reactcomponentprototype defaults", "num": "8813", "d": "1/2017"}, {"title": "reactdomrender fails reactdom loaded dom available", "body": "want request feature report bug report bug current behavior reactdomrender fails global document first loaded current behavior bug please provide steps reproduce possible minimal demo problem via similar template providing jsfiddle example use case happens nodejs jsdom reproduce define component state render function render null one cases happens pretty frequently using hocs party translation tools etc js class mycomponent extends reactcomponent state display false componentdidmount thissetstate display true render return thisstatedisplay null define test load jsdom global every test cleanup done js const reactdom require reactdom describe app gt let cleanup beforeeach gt cleanup require jsdomglobal aftereach gt cleanup gt reactdomrender documentbody would fail following error require reactdom dom defined globally test pass also returning anything null react element make test pass looks like reactdom using get dom available first loaded nt look reactdomrender called makes sense happy give pr fix throw right direction expected behavior reactdomrender render correctly even global document added loaded works component nt return null certain state versions react browser os affected issue work previous versions react tested latest react nodejs thanks", "num": "8812", "d": "1/2017"}, {"title": "misleading reconciliation behavior due thispropschildren", "body": "want request feature report bug bug current behavior currently component state change input element loose focus think due misleading reconciliation mechanism playing nt get work expected remove component everything work expected another way fix issue change component slightly way current behavior bug please provide steps reproduce possible minimal demo problem via similar template start typing input focus would lost due dom manipulations expected behavior expected behavior update html elements reconciliation thus loose focus versions react browser os affected issue work previous versions react latest also reproducible", "num": "8810", "d": "1/2017"}, {"title": "double click event emitted wrong component", "body": "want request feature report bug bug current behavior doubleclicking component initial click create new component overlay first one double click event emitted new component current behavior bug please provide steps reproduce possible minimal demo problem via similar template double clicking button alert box created happen doubleclick handler new component expected behavior doubleclick event proably emitted button new layer versions react browser os affected issue work previous versions react tested chromium linux chrome window nt test another version", "num": "8804", "d": "1/2017"}, {"title": "text shown text box", "body": "creating html form get input information users via react working macos google chrome problem user types text text box words shown view text box looks like listener store aware action triggered separated three files code javascript import react react import addproductstore storesaddproductstore import addproductactions actionsaddproductactions class addproduct extends reactcomponent constructor props super props thisstate addproductstoregetstate thisonchange thisonchangebind componentdidmount addproductstorelisten thisonchange componentwillunmount addproductstoreunlisten thisonchange onchange state thissetstate state handlesubmit event eventpreventdefault var name thisstatenametrim var price thisstatepricetrim var description thisstatedescriptiontrim render return description export default addproduct code javascript import alt alt class addproductactions constructor thisgenerateactions updatedescription export default altcreateactions addproductactions code javascript import alt alt import addproductactions actionsaddproductactions class addproductstore constructor thisbindactions addproductactions thisdescription onupdatedescription event thisdescription eventtargetvalue export default altcreatestore addproductstore however simply change name function corresponding properties shorter name ie instead description problem solved perfectly result wondering bug naming convention react", "num": "8801", "d": "1/2017"}, {"title": "expose reactdevtoolsglobalhookinject", "body": "feature request came brief discussion twitter gaearon exposes access great use collect component level performance metrics customers production however things love access purpose helping users pinpoint performance issues applications issue includes initial observations hope keep open dialogue particular considering fiber probably change landscape regards common performance problems instrument according understand urge keep api surface area small possible order create minimal commitment apis allow internals move fast exposing additional internals explicit warning committed api fine us tool vendor looked using highlight batched nature work performed react eg work application getting batched properly access component updating methods etc ca nt really know batch work starts ends available reactdom prefix exposing hook would useful also experimentally hooked order capture events measure work resulting suspect better place case access event system would useful using unstable prefix indicate noncommittal would fine us much time look need access fiber instrumentation far looks like hook would useful", "num": "8800", "d": "1/2017"}, {"title": "warning message component reusage development enviroment", "body": "use full version react everything works fine exceptionswarnings minified version got uncaught error minified react error visit full message use nonminified dev environment full errors additional helpful warnings thrown reactdomrender components tested chrome firefox react found real problem component created inside component method like instances component render subcomponents work others nt cases first subcomponent type render fine others fail think must kind warning cases info docs", "num": "8798", "d": "1/2017"}, {"title": "triggers onchange event file input elementvalue assigned", "body": "want request feature report bug bug possibly related current behavior component file upload button user selects file upload called case want call user selects file two times row set null first selection handler called second time user selects file far good bug setting null causes handler called case chrome firefox validate seeing called twice selecting file browsers current behavior bug please provide steps reproduce possible minimal demo problem via similar template actually fiddle callback called three times expected behavior behavior chrome firefox versions react browser os affected issue work previous versions react react react latest fiddle", "num": "8793", "d": "1/2017"}, {"title": "missing objectassign licence please check others", "body": "want request feature report bug bug current behavior missing copyright licence current behavior bug please provide steps reproduce possible minimal demo problem via similar template see expected behavior lawyer facebook know show mit according policies versions react browser os affected issue work previous versions react checked current version oses probably previous versions", "num": "8789", "d": "1/2017"}, {"title": "react dom server broken build version", "body": "want request feature report bug bug current behavior breaks code execution file reactdomdistreactdomserverminjs beautified javascript function n r use strict var esecretinternalsdonotuseoryouwillbefired nexports oreactcurrentowner output expected behavior desired goal serverside rendering production skips unnecessary comments warnings etc react documentation page versions react platform nodejs server side rendering work previous versions react nt know", "num": "8788", "d": "1/2017"}, {"title": "missing function emptyfunction", "body": "browsing react source trying locate file emptyfunctionjs often see statements like var looked everywhere file ca nt find", "num": "8786", "d": "1/2017"}, {"title": "explore encouraging users ship dev mode production", "body": "want request feature report bug feature current behavior developers meaning right thing often accidentally ship dev mode production rather prod mode significant impact performance although dev prod one line change something react could explore encouraging great nuance know balance struck overall dx value brings vs ux another challenge change trivial make unclear whether right solution better defaults stronger advocacy folks like sebmarkbage acknowledging known issue perhaps room discussion help improve also noted switch warnings dev may require folks fix whole codebases also suboptimal may inbetween solution worth talking however expected behavior react encourages users ship prod mode production rather dev would open solution either provided library layer somehow tackled buildbundling time webpack tries ameliorate thread number suggestions ranging localhost detection alerts injecting dev mode messages dom used production environment something like alternatively thelarkinn proposing tried standardize env configs required better facilitate detection messaging like unclear would realistic likely ideas react core might around tackle problem versions react browser os affected issue work previous versions react recent versions thread jordwalke prompted issue think also makes fair point regarding benchmarks care help folks ship prod experience yall worked optimizing end customers glory", "num": "8784", "d": "1/2017"}, {"title": "differences react rax", "body": "says react much slower react api use react rax link", "num": "8783", "d": "1/2017"}, {"title": "able render n number deep expandable table rows render another rows", "body": "want request feature report bug probably neither stuck current behavior rendering multiple rows table expanded parent row possible due permitted absence fragmentation current behavior bug please provide steps reproduce possible minimal demo problem via similar template get idea expected behavior expected behaviour guess fiber lands looking explanation achieve versions react browser os affected issue work previous versions react probably prefiber versions thanks help", "num": "8775", "d": "1/2017"}, {"title": "react composition vs inheritance", "body": "going inheritance vs composition discussion place talk use case creating hierarchy components using react stuff like button buttonbar example sort things whatever functionalities defined button component needs present buttonbar components javascript class button extends reactcomponent shouldcomponentupdate prevalidation return result class buttonbar extends button shouldcomponentupdate return mylogic amp amp supershouldcomponentupdatecall currently implemented inheritance achieve correct way going nt want go back way using reactcreateclass", "num": "8774", "d": "1/2017"}, {"title": "missing downloads section", "body": "bug current behavior downloads section expected behavior downloads way section versions react browser os affected issue work previous versions react affected lastknowngood", "num": "8773", "d": "1/2017"}, {"title": "incorrect jsx dynamic elements", "body": "want request feature report bug bug current behavior something like thisafunction thisstateparam thisafunction thisstateparam paramparam changes seems like virtual dom processing comparing changes causing problems versions react browser os affected issue work previous versions react react everything worked fine previous versions react everything works fine iphone iphone", "num": "8772", "d": "1/2017"}, {"title": "input handler parent considered controlled well", "body": "want request feature report bug bug current behavior actually listening every input parent input know called controlled component behavior ca nt type anything case makes confusing warning reading term think controlled case nt want put handler times inputs reason treat uncontrolled case developer control input instead ifyoudonotfollowthenewtermweinventyoucannottypeinsilent way heshe really forgets put handler hisher fault put handler parent fault nt want punished current behavior bug please provide steps reproduce possible minimal demo problem via similar template see expected behavior handler matter oninput onchange onkeydown ancestor input element considered controlled versions react browser os affected issue work previous versions react", "num": "8769", "d": "1/2017"}, {"title": "ontoggle event name recognized", "body": "report bug current behavior ontoggle prop attached details html element attach event handler instead shows warning warning unknown prop tag remove prop element details see details created details current behavior bug please provide steps reproduce possible minimal demo problem via similar template time right expected behavior versions react browser os affected issue work previous versions react latest workaround use onclick instead work fire event handler details opened keyboard", "num": "8761", "d": "1/2017"}, {"title": "nt set thispropschildren children still evaluated", "body": "hi code class spinner extends reactcomponent render thispropsloading return else return thispropschildren class app extends reactcomponent render return thispropsaccountname const account null reactdomrender documentgetelementbyid demo thought display spinner got error avoid", "num": "8759", "d": "1/2017"}, {"title": "checksum validation serversiderendered html markup string", "body": "upgrading isomorphic rendering app whines page load react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client reactempty server div datareactroot turns change removing attributes rendered html server side rendering method still generated result never matches keeps whining error tried replace error disappeared however attribute generated html markup memory attribute check whether browser server side generated html matches checksum every render compare whole generated dom hurt performance", "num": "8758", "d": "1/2017"}, {"title": "make sure finddomnode works test renderer", "body": "injection missing stack test renderer something similar added near without get missing injection stack finddomnode error calling finddomnode files use reacttestrenderer nt use reactdom would great repro error test fix", "num": "8753", "d": "1/2017"}, {"title": "test utils renderintodocument issue refs invariant violation addcomponentasrefto", "body": "simple demo app showcase issue experiencing import react react import reactdom reactdom import testutils reactaddonstestutils var jsdom require jsdom jsdom globaldocument jsdom hello world globalwindow documentdefaultview testutilsrenderintodocument test basically ref element found function following error thrown checked multiple copies react project see react installed additionally intended behaviour bug since using refs context important feature", "num": "8748", "d": "1/2017"}, {"title": "make circle run properly branch", "body": "missing circleyml config branch would great copy whatever files need copied make ci pass anyone able test sending pr unlike normal prs go master changes seeing circle pass might simple copying circleyml scriptscircleci", "num": "8744", "d": "1/2017"}, {"title": "expose key helper libraries", "body": "want request feature report bug feature current behavior ca nt access thispropskey thiskey expected behavior use case hydratedehydrate certain components hmr plugin developed internally hmring file often need access things within loops rehydrate right data right add secondary key everything development tool access keys would trivial implement also impossible implement babel compiler trick need detect componentsloops runtime ca nt add prop everywhere mess props seems like rather enduserhostile least give backdoor accessing keys proposal weird edge case uses like would expose would take component instance return key could appropriate warnings around documentation elsewhere", "num": "8743", "d": "1/2017"}, {"title": "run tests correctly windows", "body": "issues test code failing tests windows invalid regular expression would invalid regexp like invalid arguments passed issue similar", "num": "8737", "d": "1/2017"}, {"title": "", "body": "hi run issue controlled password fields adding user tracking software app generally speaking trackers going claim nt capture text inputs achieve simply ignoring values events still however record fact event occurred together selector uniquely identifying target input controlled value attribute markup going change resulting tracking software capturing part selector brings question security implications value accessible via also virtue parsing markup thanks k", "num": "8736", "d": "1/2017"}, {"title": "better way get refs reacttransitiongroup", "body": "found get children refs reacttransitiongroup like get quite ugly better way", "num": "8734", "d": "1/2017"}, {"title": "fiber clear error boundary update queue whenever captures error", "body": "seems like least root", "num": "8733", "d": "1/2017"}, {"title": "unexpected unmountmount occurred delete node", "body": "want request feature report bug bug current behavior single node behavior right multiple nodes unexpected unmountmount occurred unchanged node delete node minimal demo problem without problem single node click toggle button toggle nt affect node problem reproduce multiple nodes ie add node previous fiddle click toggle button toggle unmount mount new node note attribute helpless problem expected behavior keep node regardless number children versions react browser os affected issue work previous versions react reproduced react", "num": "8731", "d": "1/2017"}, {"title": "event radio", "body": "could please explain behaviour clicking radio emits events example without clicking radio emits event thank", "num": "8727", "d": "1/2017"}, {"title": "potential typo codeoverviewmd", "body": "appears typo line codebaseoverviewmd specifically see one symbol results text line appearing one large block code see screenshot markdown code left stylized code rendered right based content subsequent text line would expect appear following indeed something fixed like fix submit pr immediately", "num": "8724", "d": "1/2017"}, {"title": "feature request proptypes validate extra props passed", "body": "stackoverflow question sorta solution working properly least recursion hope idea clear useful example refactoring helps eliminate death code props longer needed", "num": "8721", "d": "1/2017"}, {"title": "delimit dynamic part warning messages newlines", "body": "proposed think find warnings add dynamic part end like delimit two newlines way much easier recognize middle bunch errors good first issue contribute would need find calls include additional info like add couple newlines also need change tests case fail", "num": "8719", "d": "1/2017"}, {"title": "object tags fatally crash react apps chrome node cache issue", "body": "since recent update chrome canary beta branches react apps contain object tag fail fatally rendering halted due internal exception seems chromium devs altered following reason kills react line try stick arbitrary object onto end element cached htmlelement component relationship suppose object tag hits caching code throw exception eventually something tries access instance means change reaches chrome stable quite react apps could randomly stop working users update browsers", "num": "8718", "d": "1/2017"}, {"title": "bug resets value value defaultvalue provided", "body": "demo problem resets value type instead default behaviour trigger input invalid state source code demo available html bug normal behavior js demojs class test extends reactcomponent public state value render return fully resets value type allows type hightlight invalid field reactdomrender documentqueryselector test", "num": "8717", "d": "1/2017"}, {"title": "reactclassequivalence tests fail node", "body": "title says fails run node confirm tests pass included output failing tests reactclassequivalence tests thing classes coffeescript reactclassequivalence tests thing classes typescript summary failing tests fail srcisomorphicmodernclasstestsreactclassequivalencetestjs reactclassequivalence tests thing classes coffeescript reactclassequivalence tests thing classes typescript bvaughn briefly discussed problem confirmed failing behavior", "num": "8715", "d": "1/2017"}, {"title": "provide context sfcs invoked via", "body": "holywar question alert would possible provide context sfcs invoked via syntactic form usecase involves unusual class usage using inheritable containers sfc individual components could overridden descendant classes forced autobind viewmethods full return class item extends base constructor value super thisvalue value tostring return thisvalue var obj new item reactdomrender documentgetelementbyid container bit complete example could found understand holy war question pure functions javascript however thinking usage legit like props way ugly writing self full self return class item extends base constructor value super thisvalue value tostring return thisvalue var obj new item reactdomrender documentgetelementbyid container nt", "num": "8714", "d": "1/2017"}, {"title": "separate reactjsstyleinlinestyling cssstyle styling another npm module", "body": "first thanks making reactjs spreading core ideas others anyway gist issue separating files styling another npm module situation using rxjs react animation using directtodom method performance creating stylestreamedcomponent used like stylestreamedcomponent implementation resorting disgusting hack fond importing reactjsinternal code ps separating cssutility functionalities npm module might helpful librarymaintainersauthors well", "num": "8713", "d": "1/2017"}, {"title": "tutorial link expired", "body": "line reactdocstutorialtutorialmd links", "num": "8711", "d": "1/2017"}, {"title": "children array error message validatechildkeys consistent", "body": "validatechildkeys results inconsistent childrenlength equals result different try result sorry english way use google translate thanks", "num": "8709", "d": "1/2017"}, {"title": "instance pointing reactinternalinstance amp reactinternalinstance pointing instance expected structure", "body": "playing examples understand internal code flow react setstate noticed reactcompositecomponentwrapper object reference instance object turn reference screenshot console reactcompositecomponentwrapper object reactinternalinstance expected structure", "num": "8708", "d": "1/2017"}, {"title": "constructor requires new operator", "body": "reactcompositecomponentjs two calls component class construction missing use new operator calls like component publicprops publiccontext updatequeue", "num": "8702", "d": "1/2017"}, {"title": "warnings clean validatedomnesting", "body": "see validateexplicitkey warnings like hard see path components see validatedomnesting warnings like warnings clean validatedomnesting thanks", "num": "8701", "d": "1/2017"}, {"title": "broken link react tutorial", "body": "want request feature report bug report bug current behavior broken link first section current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior link go working version tictactoe codepen versions react browser os affected issue work previous versions react na", "num": "8699", "d": "1/2017"}, {"title": "bug input onchange event", "body": "hi created jsfiddle example view work onchange event native html react react onchange event worked oninput consoled every one keydown keyup event dont know see onchange event occurs value element changed tip event similar oninput event onchange occurs element loses focus try set value inputs see console react input consoled every key press html input consoled input loss focus", "num": "8696", "d": "1/2017"}, {"title": "native eventstoppropagation outside react root cuts react events", "body": "need host standalone react component draftjs editor inside application run js framework even plain js jquery code application beyond control vendor component adds content part reactbased editor anyway important part need add component following code existing div editorcomponent regular react component onclick events attached content primarily toolbar buttons editor learned react event model bubbling executes independently event bubbles way document evstoppropagation called native event react events wo nt execute understandable situations document contains react app component root content meaning control events page react code however react component small fraction entire page may severely influenced rest page problem event handling code component calls evstoppropagation cuts events smaller fraction even event originated react component scope influencing code could well jquery plugin even author page may able rewrite code special event handling fiddle demonstrate believe point event chain breaks allowing react execute events root element react component rather whole document way react root element could considered isolation edge react application component tracked react event registration function reactdomcomponentensurelisteningto found following code tried change register react event chain root react container tried several basic events onclick onmousedownup seems working us expected react events influenced stopping propagation native events outside react component root two differently implemented parts application coexist peace sure ownerdocument chosen node implementation changing node could break something important please advise proposed solution seems viable case consider change reasons would nt recommend", "num": "8693", "d": "1/2017"}, {"title": "expected onbeforemountcomponent parent onsetchildren consistent", "body": "want request feature report bug looks like bug current behavior setting state rendering component test renderer shows warning console warning exception thrown hook handling onsetchildren invariant violation expected onbeforemountcomponent parent onsetchildren consistent parents invariant violation expected onbeforemountcomponent parent onsetchildren consistent parents following example weirdly happens consistently third time run complex scenarios earlier steps reproduce issue following first create app install renderer add following button jsx import renderer reacttestrenderer tojson demo understand common way using react test renderer interested knowing reasons behind problem eventually see workarounds apply trying serialize components send endpoint see snapguidist expected behavior ideally warning versions react browser os affected issue work previous versions react able reproduce issue latest versions chrome firefox safari macos", "num": "8692", "d": "1/2017"}, {"title": "eventcurrenttarget null onmousemove event handler", "body": "browser chrome lts react ver lts javascript class dropdown extends purecomponent constructor props super props thishandlemousemove thishandlemousemovebind thishandlethrottlemousemove throttle thishandlethrottlemousemovebind guess eventcurrenttarget might", "num": "8690", "d": "1/2017"}, {"title": "shorthand css properties cause style inconsistencies", "body": "reporting bug current behavior render host component contains shorthand css property overwriting longer form property eg conflicting andor property update host component rerender shorthand property eg remove longer form property eg host component style invalid examples bug reproduced update since updated plnkr use instead since makes problem immediately obvious spot example render render expected actual alternate example render render expected actual also reproduce bug properties like etc caveats note shorthand value changes renders things work expected react explicitly updates shorthand style know edgecase behavior may worth fixing originally noticed way issue versions react browser os affected bug reproduces chrome firefox safari using react well unreleased renderer", "num": "8689", "d": "1/2017"}, {"title": "composition events chinese japanese ime problem controlled components input textarea", "body": "want request feature report bug current behavior existed issue one problems kind browsers uploaded detail demo files test results temporary solution reactcompositionevent main problem users type words ime chinese japanese maybe korean something like search database filter data sometimes functions unworkable example users type ni composition session maybe one \u4f60\u5c3c\u6ce5\u817b chinese one \u306b\u30cb\u5c3c\u716e japanese moment event also fired search filter functions application designed invoked event occured maybe something wrong logically functions invoked users finished composition session react three synthetic events input components uncontrolled use help capture text correctly different point google chrome change events sequence check cinputjs ctextareajs files input components controlled hard solve problem controlled component came ca nt modify directly way update state using schedule update may asynchronous test found different osbrowsers could different results written code solve thought nt good solution uses browser detection two properties object one input another internal functions search filter etc ca nt use one property object ca nt stop events state need update value input element stop change events composition session would get nothing typing words ime current behavior bug please provide steps reproduce possible minimal demo problem via similar template use online test demo use normal input component controlleduncontrolled test expected behavior input textarea controlled components react ensure fired change composition events consistent different browsers found different results events fired sequence least versions react browser os affected issue work previous versions react react browsers chrome firefox safari opera ie edge os macos", "num": "8683", "d": "1/2017"}, {"title": "docs look weird small widths", "body": "note accidental top bar misplaced tag also see doc page loading", "num": "8676", "d": "1/2017"}, {"title": "document profiling components timeline", "body": "basically need move section permanent place docs example page might good place", "num": "8675", "d": "1/2017"}, {"title": "shouldcomponentupdate render called thissetstate", "body": "bug current behavior calling multiple times rerenders component value inside also called equal value passed first call expected behavior called time called amp component rerenders returns true background building library wraps components amp state management stuff code similar working context feature created bmi calculator help debug issues vdom example looks like changing input value cause amp rerender nt investigation discovered called several times inside expected values however called expected workaround issue checked failures inside callback amp recalled required obviously ideal replicate go amp change input value trying recreate issue simpler example speculated calling inside parent immediately calling inside child caused problem though idea incorrect child correctly rerendered amp called every time called see attempt using react windows chrome", "num": "8672", "d": "1/2017"}, {"title": "checking permissions component breaks subscribe", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8670", "d": "1/2017"}, {"title": "children prop gets recreated killing purecomponent optimizations", "body": "want request feature report bug report possible bug current behavior component renders component b children prop react component jsx fragment render component recreate said children prop current behavior bug please provide steps reproduce possible minimal demo problem via similar template example code import react react class componentwithchildren extends reactpurecomponent render consolelog render comp return hello thispropschildren class children extends reactpurecomponent render return children nested class app extends reactpurecomponent update gt thissetstate count thisstatecount state count render consolelog render app return export default app expected behavior would expect componentwithchildren rerender none props actually changed versions react browser os affected issue work previous versions react react", "num": "8669", "d": "1/2017"}, {"title": "question hostparent vs rootnodeid", "body": "curious represent also method getting unique id composite component like native components composite components unique id thus would need create unique id manually", "num": "8666", "d": "12/2016"}, {"title": "able create new events", "body": "want feature able extend syntheticuievents add event required thank", "num": "8665", "d": "12/2016"}, {"title": "jquerybootstrap working", "body": "want request feature report bug current behavior run example jquerybootstrap working expected behavior jquerybootstrap working showing blank page version os windows", "num": "8664", "d": "12/2016"}, {"title": "facebook engineers thank", "body": "facebook engineers working open source reactiflux wanted take moment thank hard work job easy million requests coming time internal teams external community dan abramov compared managing issues pull requests juggling chainsaws fire yes know get paid really well open source full time work meets facebook needs think gone beyond way treated community way guys respond emails twitter mentions attention give issuepr time give different organizations podcasts amas list goes personally seen amazing humility pleasure around wonderful people thank excellence put efforts like invite react community reply thread thank comments team facebook let show grateful feel free include experiences team react ecosystem helped developer sincerely behalf reactiflux community gabegreenberg markerikson kyleamathews taion jquense vcarl benigeri phoenixmatrix", "num": "8663", "d": "12/2016"}, {"title": "using webpack", "body": "using webpack seems webpack becoming popular frontend module bundler wish react hug like angular", "num": "8660", "d": "12/2016"}, {"title": "webcomponents requires class syntax", "body": "want request feature report bug bug current behavior modern browsers longer permit means creating web components see possible use custom elements without classes domenic webcomponent demo uses nowremoved means creating webcomponents current behavior bug please provide steps reproduce possible minimal demo problem via similar template running linked webcomponent demo throw uncaught typeerror expected behavior demo executes amp renders versions react browser os affected issue work previous versions react sure change went force browsers chrome broken broken", "num": "8656", "d": "12/2016"}, {"title": "reactdommount reactdomrender flipped curried", "body": "would micro optimization appease functional gods order arguments always felt backwards say want app render want render might sound kind useless first actually built something rendering different components div based something happening outside react js import curry flip ramda const mount curry flip reactdomrender const render mount documentgetelementbyid content otherframeworktabindex render else otherframeworktabindex render else render", "num": "8654", "d": "12/2016"}, {"title": "infinite loop error thrown method", "body": "infinite loop components error render callback calls update parent component code run code unexpected infinite loop expect code stop thrown error suddenly change method component render works expected code correct behaviour get bug reactreactdom looks like version works correct cases", "num": "8653", "d": "12/2016"}, {"title": "featurerequest custom purecomponent comparelevel", "body": "want feature situation shallow compare one level us found common redux store long array filter get array b may pushremove object tofrom maymaynot change b since b always rebuilt purecomponent always rerender hope purecomponent shallow compare one level came idea js class mycomponent extends purecomponent let broke old code assert purecomponent purecomponent eh like maybe class mycomponent extends purecomponent level compare props level compare state hope consider", "num": "8643", "d": "12/2016"}, {"title": "textarea onfocus stoppropagation incorrect cursor rendering firefox", "body": "current behavior using event textarea parent causes cursor disappear render incorrect location firefox see vanishing cursor fiddle issues chrome edge firefox problem full app cursor nt vanish rather moves elsewhere italics placeholder text reproduced behavior fiddle expected behavior hard say expected behavior since real event bubble fiddle show cursor position affected event stopped vanillajs environment versions react browser os affected issue work previous versions react fiddle shows issue ff windows saw issue stoppropagation get eaten alive using say nonbubbling focus event simplifies one interactions setting specifically app bunch widgets marked active user clicks field widget widget marked active however widgets nested widgets innermost widget marked active", "num": "8642", "d": "12/2016"}, {"title": "isomorphic app throws incorrect error using legacy refs unstablehandleerror react dom tree root always node reference", "body": "building application renders react component server sends markup client client side react rendering takes wrapping root component react hot loader component component uses new method catch errors occur initial mount let say put code components render method guarenteed throw error client server maybe something like let say along side component another component uses legacy ref something like client calls following error thrown incorrect note using server side rendering correct error would thrown ie clearly solution use legacy refs bug string refs deprecated", "num": "8630", "d": "12/2016"}, {"title": "strange performance problem google chrome putlistener appears timeline", "body": "want request feature report bug performance problem latest chrome windows firefoxedge work fine current behavior chrome freezes seconds second render current behavior bug please provide steps reproduce possible minimal demo problem via similar template please open first input type cause items redrawn observe browser freezes seconds afterward everything works fine chrome inspector timeline reveals strange react behavior expected behavior happen versions react browser os affected issue work previous versions react tried react windows", "num": "8626", "d": "12/2016"}, {"title": "ca nt stoppropagation render subcomponents componentdidmount", "body": "js bin demo render dragging child parent triggers dragstart problem event tried estoppropagation enativeeventstoppropagation enativeeventstopimmediatepropagation useless ca nt stoppropagation render subcomponents componentdidmount render child parent mounted", "num": "8625", "d": "12/2016"}, {"title": "purecomponent working setstate inside interval", "body": "want request feature report bug report possible bug current behavior calling new state insider callback cause rerender using tried logging next previous state inside show identical even though nt current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior component update versions react browser os affected issue work previous versions react latest version", "num": "8624", "d": "12/2016"}, {"title": "refs callback called twice every render even component instance reused", "body": "want request feature report bug bug perhaps documentation current behavior documentation refs dom says ref attribute takes callback function callback executed immediately component mounted unmounted create stateful component like class scrollhelper extends reactpurecomponent componentdidmount consolelog scrollhelper componentdidmount componentwillunmount consolelog scrollhelper componentwillunmount render consolelog scrollhelper render return use via within app see behavior documented rather following pattern logs first render scrollhelper render scrollhelper componentdidmount scrollhelper ref lt props gt data changes elsewhere app scrollhelper ref scrollhelper render scrollhelper ref lt props gt data changes elsewhere app scrollhelper ref scrollhelper render scrollhelper ref lt props gt data changes causing scrollhelper actually unmount scrollhelper ref scrollhelper componentwillunmount expected behavior according docs would expect callback called exactly two times events component scrollhelper componentdidmount scrollhelper componentwillunmount instead gets reset basically every time page rerendered even though pretty clearly ending component instance time verified true via additional code well evident lack additional componentdidmount logs anyway versions react browser os affected issue work previous versions react react idea behavior earlier", "num": "8619", "d": "12/2016"}, {"title": "finddomnode work statelesscomponent", "body": "report work detail hello need hide component parent parent child writen others ca nt rewrite code resolve problems seems useless resolve code thanks lot class extends reactcomponent componentdidmount finddomnode styledisplay none render return const b gt return page b", "num": "8615", "d": "12/2016"}, {"title": "meta tags seo react", "body": "hello everyone used package dynamic meta tags react nt work made tools d\u00e9veloppement browser showing good made view source nt showing wrong thanks advance", "num": "8609", "d": "12/2016"}, {"title": "feature new jsx attributes", "body": "want request feature report bug feature current behavior tattoodo trying build rss feed delivering instant articles facebook rendering feed react setup unable provide needed attributes root tag expected behavior attribute probably rssfamiliar attributes transpiles versions react browser os affected issue work previous versions react react v", "num": "8603", "d": "12/2016"}, {"title": "dot notation shape props", "body": "short long lets class foo possible say sets addition saying would nt override defined possible think think please vote", "num": "8601", "d": "12/2016"}, {"title": "feature request support gestureevent api", "body": "gestureevent api currently nonstandard api target touch events nontouchscreen computers eg pinch gestures laptop trackpad safari supports starting version currently sole browser apple uses api enhancing apple maps widgets native gestures live example seen wwdc page currently seems impossible attach event handlers declaratively via react elements solution attach event handlers manually part ref callbacks proper implementation would highly appreciated nb microsoft rolls version usage seems less straightforward though msdn links usage api", "num": "8600", "d": "12/2016"}, {"title": "feature setstate without rerendering children", "body": "dev want able change state component without triggering rerender children better optimize app use cases imagine controlling visual state component defined state object inside render function effects display property nothing else form input element invisible label shows username invalid password short controlled true appends element calling trigger rerender components chain update way effecting visual update unless implemented nt make sense extra logic something could avoided first place useful function like propagates children components feedback welcome thanks", "num": "8598", "d": "12/2016"}, {"title": "unused function fiveargumentpooler", "body": "reference use fiveargumentpooler codebase deleted without issue sending pull request", "num": "8596", "d": "12/2016"}, {"title": "react missing files", "body": "throw err error find module reactlibreactdomserver functionmoduleresolvefilename functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload", "num": "8588", "d": "12/2016"}, {"title": "rfc testing browser compatibility", "body": "testing browser quirks challenging set page site local react repository made easier isolate browser differences document known issues example could start outstanding input issues like work way backward historical decision points adding additional rules support specific browsers speaking gaearon aweary see couple outstanding tasks x add pagesite local react repository includes test cases reproducing specific browser quirks x make easy switch versions react via cdn references local builds x catalog existing fixes outstanding issues start building test cases modify react flags via query strings mechanism quickly switch fiber standard dom renderer eventually could also great resource react handles dom manipulation obscure dom api concepts reference notes implementors dom rendering libraries test cases ie password fields nhunzaker backport input fix jquense change event fire ie edge certain circumstances jquense onchange randomly misses keys ie typing quickly jquense onclick firing disabled buttons aweary block change events disabled aweary mouse enter leave work consistently disabled elements aweary change event bubbling nt work controlled components ie", "num": "8583", "d": "12/2016"}, {"title": "ontouchend leads focus inputs rendered touch", "body": "want request feature report bug bug current behavior ontouchend event leads rendering input element location original touched element focus input element means touch reused new input element current behavior bug please provide steps reproduce possible minimal demo problem via similar template check following fiddle reproduce open mobile device mode chrome open fiddle touch device zoom touch click fully land theoretically input element behind double click somewhere touch click input element focused also see gif case repro steps unclear expected behavior input element focused exist touched yet versions react browser os affected issue work previous versions react also work chrome android chrome web view maybe browsers", "num": "8582", "d": "12/2016"}, {"title": "read property gethostnode null", "body": "feature request current behavior read property gethostnode null expected behavior error message tells wrong know fix react", "num": "8579", "d": "12/2016"}, {"title": "attempted update component", "body": "feature request current behavior expected behavior component would help error message would tell component react", "num": "8578", "d": "12/2016"}, {"title": "toplevel callback different semantics setstate callbacks", "body": "call callback state update enqueued separately callback called outside fiber parlance priority leads two separate flushes triggers synchronous render flushed ever called replicated behavior fiber well however toplevel callback passed semantics state update callback flushed end next render even outside see unit test example initial callback called initial mount whereas callback callback semantics would flushed updates scheduled inside fix inconsistency callbacks semantics opinion makes sense callback flushed right updatetoplevel render corresponds change callbacks behave way one way implement would unify et al accept callback could change toplevel callback behave way callbacks either way would require breaking change react question whether want make change possibly release version stack make fiber match current inconsistent behavior fix later facebookreactcore", "num": "8577", "d": "12/2016"}, {"title": "breaks default param behavior componentdidmount production build", "body": "want request feature report bug bug current behavior passed first argument becomes issue default param specified backtrace componentdidmount call seems like difference extra argument line repro clone project cd open supported browser open console log message kill wzrd process run refresh console log null expected behavior either log log development build production build nt differ regard versions react browser os affected issue work previous versions react everything ok", "num": "8576", "d": "12/2016"}, {"title": "proptype validation fails nesting validations", "body": "want request feature report bug bug current behavior app properly validate nest reactproptypes testing current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo expected behavior fail proptype validation versions react browser os affected issue work previous versions react react", "num": "8573", "d": "12/2016"}, {"title": "question support need way programmatically update field defaultvalue", "body": "support question looking robust performant way update input field text programmatically input field instead something like js render function return problem want sync database upon onblur event input field use instead get work two problems see using value instead defaultvalue much less performant gt updating react component state every keystroke b importantly makes database sync logic complex update react component state every keystroke sync database every onblur rather write logic possible asked question please let know ideas thanks", "num": "8571", "d": "12/2016"}, {"title": "dangerouslysetinnerhtml mark", "body": "want request feature report bug bug current behavior setting url contains text result current behavior bug please provide steps reproduce possible minimal demo problem via similar template problem expected behavior text amp reg replaced workaround versions react browser os affected issue work previous versions react tested chrome", "num": "8567", "d": "12/2016"}, {"title": "setstate inside setstate keeps unprocessed call queue", "body": "want request feature report bug bug current behavior nested setstate call queued executed next batch processing additionally callback param set executed immediately demo see console debug output expected behavior everything queue processed also attached execution tested current", "num": "8565", "d": "12/2016"}, {"title": "onchange registering state change paste delaying new state changes", "body": "bug report onchange registering state change paste delaying new state changes current behavior textinput box takes function prop sets state parent component onchange registering initial copy paste oddly type extra key pasted returns string count original paste count additional character appears react one change behind despite registering something changed make clear added consolelogs see behavior found initial paste triggering onchange event case despite explicitly setting state setting key pasting characters verified irb displaying type another character making characters triggering state change initiated step one returning original pasted key type yet another character one step behind printing printed step abridged code jsx import react component proptypes react import router reactrouter import authform componentsauthform import keyentry componentskeyentry export default class authorizationcontainer extends component constructor props context super props context thisstate accountkey thissetaccountkey thissetaccountkeybind thiskeylengthvalid thiskeylengthvalidbind setaccountkey event let text eventtargetvalue thissetstate accountkey text consolelog got got display initial paste thiskeylengthvalid consolelog thisstateaccountkey consolelog thiskeylengthvalid consolelog thisstateaccountkeylength keylengthvalid return thisstateaccountkeylength render return authorizationcontainercontexttypes router proptypesobjectisrequired import react proptypes component react export default class keyentry extends component constructor props super props render return keyentryproptypes setaccountkey proptypesfuncisrequired expected behavior paste accountkey state would key pasted length versions tested react version chrome version similar issue", "num": "8561", "d": "12/2016"}, {"title": "click handler get called twice nonprod mode", "body": "think bug happens nonprod mode noticed using reactdropzone library think found simple use case reproduce problem check fiddle see click handler called twice even though element clicked example showing working working believe something outer div click listener chunk code tested chromemac also seen behavior react", "num": "8559", "d": "12/2016"}, {"title": "error find module reactdomlibreactperf reactlibreactaddonsdomdependenciesjs", "body": "spotted issue regarding something like file exists brunch builds ok fails browser error nt know version using prior worked tried still luck", "num": "8556", "d": "12/2016"}, {"title": "form submitted click", "body": "want request feature report bug report bug current behavior strange behavior form submitted click following sequence induce behavior click call setstate button transformed form submission handler called expected behavior expected trigger form submit versions react browser os affected issue work previous versions react reproduced react google chrome firefox see fiddle behavior happen add unique property buttons", "num": "8554", "d": "12/2016"}, {"title": "update rendertostaticmarkup documentation", "body": "inconsistencies regarding use rendertostaticmarkup current documentation says similar rendertostring except nt create extra dom attributes datareactid react uses internally useful want use react simple static page generator stripping away extra attributes save lots bytes release statement suggests datareactid longer every node result using documentcreateelement prime node cache create dom nodes allowing us skip potential lookup used datareactid attribute root nodes datareactroot attribute server generated markup still contain datareactid looking optimize server render content removing extra markup thought something wrong still lot datareactid everywhere still possible render server without extra dom attributes", "num": "8553", "d": "12/2016"}, {"title": "version react reactdom nt work together", "body": "used version react reactdom together get following errors setup nt problem use code version instead", "num": "8551", "d": "12/2016"}, {"title": "failed find valid digest integrity", "body": "run build command upload files server error appears mobile browsers failed find valid digest integrity attribute resource computed integrity resource blocked", "num": "8549", "d": "12/2016"}, {"title": "requesting reviewfeedback blog inner workings virtual dom", "body": "wrote blog post make easy people learn virtual dom works using preact react explain wondering much similar react appreciate reviewfeedback thank", "num": "8547", "d": "12/2016"}, {"title": "textarea placeholder nt shown ie rendered using react", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template textarea display placeholder text initially placeholder text shown focus focusaway works browsers believe go figure believe issue solved seems come back pr originally fixed issue expected behavior placeholder text initial show render versions react browser os affected issue work previous versions react react looks like working", "num": "8546", "d": "12/2016"}, {"title": "documentation translations", "body": "hello plans including official communitysupported translations react docs translaitongang completed vuejs docs russian translation also progress react ones believe least japanese chinese communities would also like translations could integrate somehow upd see random translation files done document version display detected mean ca nt see header dropdown language choice something", "num": "8541", "d": "12/2016"}, {"title": "attach reacteventlistener ajaxdynamically loaded content", "body": "way attach onchange event listening like render function html loaded ajax inserted via example top render ondidmount ondidupdate ca nt get work callback issue called variable refs dynamically loaded nodes suggestion great edit possibly looks like want trigger react dom manually ps trying work native things suggest jquery documentaddeventlistener looking multibrowser multiinput types solutions like done react", "num": "8540", "d": "12/2016"}, {"title": "reacttestrenderer crashes rerendering reactnative textinput", "body": "want request feature report bug bug current behavior reacttestrenderer crashes rerendering component props change die javascript import reacttestrenderer reacttestrenderer import react component react import textinput view reactnative class example extends component constructor props super props thisstate query render const dosomething gt thissetstate query return die function const renderer reacttestrenderercreate renderertojson children propsonpress renderertojson expected behavior exception textinput value prop set versions react browser os affected issue work previous versions react react reactnative reacttestrenderer jest", "num": "8539", "d": "12/2016"}, {"title": "reactdom server still generate datareactid", "body": "still get attribute html using version react reactdom", "num": "8537", "d": "12/2016"}, {"title": "war peace bug scrolling embed font text special characters", "body": "use embed fonts text like war peace russian french characters programmatically scroll bottom component rendered componentdidmount excess gap bottom scrolling example code use separate window mode plnker editor example dos nt work maybe react rendering nt conform fonts rendering react chrome firefox windows ubuntu", "num": "8534", "d": "12/2016"}, {"title": "provide way external tools list nodes event info", "body": "would like add react event bubbles markup tree firefox developer tools need way get list nodes attached event listeners somebody provide way added within day possible moment done make possible", "num": "8533", "d": "12/2016"}, {"title": "triggers onchange twice replacing text selection", "body": "want request feature report bug bug current behavior type text input select whole text type key hitting key triggered twice one time second time happens behave correctly demo fiddle expected behavior hitting key triggered one time versions react browser os affected issue work previous versions react react possibly also older versions windows", "num": "8531", "d": "12/2016"}, {"title": "instances change state", "body": "want request feature report bug click instancea state visiable true click instanceb instancea visiable always true click visiable true click b b visiable true visiable false current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8530", "d": "12/2016"}, {"title": "feature request support auxclick event onauxclick", "body": "version starting chrome new event handle middle click nt trigger middle click anymore", "num": "8529", "d": "12/2016"}, {"title": "dx feature specific error render returns component instead element", "body": "version render function returns react component instead react element error message might quite cryptic like uncaught error element type invalid expected string builtin components classfunction composite components got undefined think react could try detect render function returning component instead element print something convenient like displayname useful example using lib api breaking change prop changed component element hard find cause problem even looking invarient stackvariables debugger see quite related seems react tries put component jsx like also simply swallowed think warning would useful see", "num": "8517", "d": "12/2016"}, {"title": "components need key attribute", "body": "want request feature report bug bug current behavior created component receives value array options props render multi step form saved object switch steps rendered component keeps state previous component instance example one step component giving options font family next step font size fixed bug setting etc component javascript export default class dropdown extends reactcomponent constructor props super props onchange e value epreventdefault thissetstate value value thispropsonchange thispropsonchange value getoptions const items thispropsoptionsforeach content value gt itemspush return items render const options thisgetoptions return thispropsoptionsget thisstatevalue options javascript export default class mycomponent extends reactcomponent constructor props super props thisstate step fontfamily arial fontsize thisgotostep e step gt epreventdefault thissetstate step step thisonfamilychange value gt thissetstate fontfamily value thisonsizechange value gt thissetstate fontsize value getfirststep return choose font family getsecondstep return choose font size render return thisstatestep thisgetfirststep thisgetsecondstep versions react browser os affected issue work previous versions react react chrome mac os sierra sure something wrong bug", "num": "8516", "d": "12/2016"}, {"title": "onchange event triggering mozilla ie typefile react jsredux", "body": "pretty new guy react jsi little bit confused input typefile action working mozilla ie working fine chromei nt working bug import react react import connect reactredux import uuid nodeuuid import headeraction actionsheaderactions import uploadactions actionsuploadactions import notificationactions actionsnotificationactions import shortid shortid header", "num": "8515", "d": "12/2016"}, {"title": "undo behavior controlled textareas works differently default behaviour chrome", "body": "control textarea value behaves differently use undo textarea controlled undo one letter time undo works normally uncontrolled component undo seems work expected input components controlled textarea component undo one letter time normal undo works kind algorithm much going un redone try difference codepen tested react chrome chrome canary works expected firefox safari might chrome bug", "num": "8514", "d": "12/2016"}, {"title": "perf reporting wrong wasted time connected component", "body": "redux state change perf reporting wasted time connected component even props changed example project using react reactdom reactredux redux reselect immutable reactaddonsperf gaearon note check later thanks", "num": "8513", "d": "12/2016"}, {"title": "performance monitoring record behaviour page reload", "body": "bug using appears correctly switch performance monitoring react measures show timeline reproduce chrome go page nonproduction react code add query string described example open chrome devtools click timeline tab refresh page page refreshed look timeline note nt reactspecific marks console get empty array get actual performance measures tested react chrome expect see reactspecific events eg events react components timeline able access performance measures console looking code appears recorded performance measures immediately deleted may causing issue see const markend function debugid marktype shouldmark debugid return immediately every measurement instruct browser clear measure name seems like measurements ever take place removing final two lines function restores expected behaviour", "num": "8504", "d": "12/2016"}, {"title": "call function start using thisfunctionname componentdidmount", "body": "want request feature report bug report bug current behavior call function start using thisfunctionname componentdidmount expected behavior versions react browser os affected issue work previous versions react windows react", "num": "8502", "d": "12/2016"}, {"title": "ca nt render meta tags server side", "body": "want request feature report bug reporting bug current behavior trying iterate array objects represent meta tags getting error javascript import react react let metas reactcreateclass proptypes metas reactproptypesarray render function return thispropsmetasmap function meta return moduleexports metas current behavior bug please provide steps reproduce possible minimal demo problem via similar template server side rendering issue express syntaxerror usersrobertdomainwatchdogviewsmetasjsx unterminated jsx contents thispropsmetasmap function meta return parserpp parserreadtoken parsernexttoken parsernext parsereat parserppexpect parserpp parserpp parserpp expected behavior react parser work correctly meta tags server side versions react browser os affected issue work previous versions react never tried seems lots libraries like reacthelmet use rewind api solve think right able render meta tags without jump hoops expressreactviews react reactaddonscreatefragment reactaddonscsstransitiongroup reactaddonslinkedstatemixin reactaddonsshallowcompare reactaddonsupdate reactclickoutside reactdaypicker reactdom reactmasonrycomponent reactpurerender reactredux reacttapeventplugin reactvirtualized redux reduxthunk", "num": "8501", "d": "12/2016"}, {"title": "make sure reacttestrenderer others depend objectassign", "body": "currently reacttestrenderer probably nt depend objectassign needs", "num": "8500", "d": "12/2016"}, {"title": "type property missing reactelement class ie", "body": "found bug debugging ie current behavior type property missing reactelement class ie present browsers including edge expected behavior type property present react version browser ie os windows reactelement issue interface reactelement type string componentclass sfc props p key key sample test code reactchildrenmap thispropschildren child index gt consolelog child type returns undefined ie", "num": "8499", "d": "12/2016"}, {"title": "add component stack contenteditable warning", "body": "feature warning component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional would help heaps would know component causing", "num": "8497", "d": "12/2016"}, {"title": "theadpropschildren always array", "body": "thead contain one tr elements contains theadpropschildren object contains gt array would make much simpler use always returned array", "num": "8494", "d": "12/2016"}, {"title": "best way add raw attribute values elements", "body": "using direct snippet personal website safely assume uses widely somewhere render function part larger code render wo nt work problem mailto react reencodes order avoid well known way use however makes sense use since part much larger element set attributes way set whole element phenomenon encountered quite often many scenarios personally think whole overengineered real use cases scenarios protecting vital stuff programmers generally use well known api encode anyway really pointless real life practical scenarios thing gives headaches often makes jump hoops perform simple stuff would greatly appreciate suggestion handle mentioned scenarios thanks ps entire address block cleanly abstracted one component found", "num": "8493", "d": "12/2016"}, {"title": "dist files built processenvnodeenvdevelopment", "body": "want request feature report bug bug current behavior appears files builtbundled wrong current behavior bug please provide steps reproduce possible minimal demo problem via similar template open files search expected behavior correctly set build time expectation would versions react browser os affected issue work previous versions react version affected along unknown versions similarly affected", "num": "8492", "d": "12/2016"}, {"title": "invariant violation rendering using reactdom reactdomserver", "body": "using reactdomrender reactdomserverrender w causes invariant violation react see console notice render completely different components render methods criteria met warning show like least two nested components seems like reactdomserver messing itemmap regular react ids components nt match", "num": "8487", "d": "12/2016"}, {"title": "webpack fails build react syntaxerror", "body": "found strange issue react packaged using webpack issue nt make sense browser used development mode webpack build pipeline throw syntaxerror ternary operator sure blame webpack react everything fails inside react go setup setup empty application shows uses react dependency everything bundled webpack exact config repository well current behavior try launch setup get syntaxerror points perfectly valid line react sources particular nt like ternary operators much replace ifs manually breaks somewhere else inside react looks disable uglifyjs expected behavior react work included dependency packaged webpack nt report issues", "num": "8484", "d": "12/2016"}, {"title": "using ref set htmlfor prop input label", "body": "nt know currently possible believe would useful able use refs rather ids setting htmlfor prop label something along lines something previously considered currently possible", "num": "8483", "d": "12/2016"}, {"title": "without handler rendertostaticmarkup", "body": "using get message nt wrong could find issue", "num": "8482", "d": "12/2016"}, {"title": "scrolldown event triggering twice make scroll infinity", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce bug open demos chrome version scrolldown table expected results open demos chrome version also tested scroll event component lifecycle componendidmount get result demos expected behavior scroll times scrolling triggered times stops versions react browser os affected issue work previous versions react react versions tested os windows browser google chrome version bug appeared version chrome", "num": "8481", "d": "12/2016"}, {"title": "strange caret behaviour text inputs chrome desktop", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce go facebook messenger web app found react input field chrome type string flflflflflflfl try move caret backwards using arrow keys see problem caret ignores every keystroke jumps two places every keystroke backspacing middle string also produces strange behaviour video behaviour get versions react browser os affected issue work previous versions react bug present chrome os x bug also present fresh install chrome dev channel windows sauce labs bug present firefox safari os x bug seems present controlled uncontrolled fields value vs defaultvalue react reactdom nt know version facebook messenger", "num": "8480", "d": "12/2016"}, {"title": "trycath render childrens", "body": "hi problem application use window various childrens card children problem occurs load data server runtime exception happens others childrens load believe problem would solved trycatch father component figure", "num": "8473", "d": "12/2016"}, {"title": "unstablehandleerror cause unmountcomponent null error", "body": "want request feature report bug bug current behavior trying handle errors happens render method example import react react export default class testcompoent reactcomponent component return error typeerror read property bar null know handle selectors proper tests etc aim dispatch action exception happens redirect certain page tried use function unstablehandleerror like unstablehandleerror e function dispatch thispropsfunctiontodispatch e browserhistorypush foobarerrorpage return null tried different type return luck receive another error solution found try catch block render function nt like hoping find better solution expected behavior dispatch action redirect page want versions react browser os affected issue work previous versions react react reactdom redux google chrome macos sierra", "num": "8472", "d": "12/2016"}, {"title": "react performance issues", "body": "found shoulddidupdate performance worse refs control shouddidupdate control udpate import react component proptypes cloneelement react import reactdom reactdom class extends component class extends component render let row columns thisprops return class extends component render let row columns thisprops return class extends component render let value thisprops thisvalue value return value function getdata cindex c vindex v let rows columns var ret getdata var rows retrows var columns retcolumns reactdomrender documentgetelementbyid root consoletime let lt consoletimeend import react component proptypes cloneelement react import reactdom reactdom class extends component class extends component render let row columns thisprops thisrow row thiscolumns columns return class extends component render let row columns thisprops thisrow row thiscolumns columns return columnsmap column gt return class extends component render let value thisprops thisvalue value return value function getdata cindex c vindex v let rows columns var ret getdata var rows retrows var columns retcolumns reactdomrender documentgetelementbyid root consoletime let lt consoletimeend computer macbook pro memory browser chrom ms b ms browser ie b better way deal scenario", "num": "8471", "d": "12/2016"}, {"title": "calling setstate inside ontouchstart event prevents touch events occur", "body": "want request feature report bug bug current behavior callback supplied ontouchstart calls subsequent touch events work normally fire see jsfiddle example behavior example ontouchstart set state touch events end ontouchend never happens reset initial state expected behavior ontouchstart able set state allow touch events occur following behavior expected versions react browser os affected issue work previous versions react tested react amp react chrome linux android", "num": "8469", "d": "11/2016"}, {"title": "shallow compare amp test renderer strict dependencies", "body": "using multiple libraries call various versions react react native npm tries find common compatible version everything warnings persist npm warn reactaddonsshallowcompare requires peer react none installed npm warn reacttestrenderer requires peer react none installed necessary tightly couple versions would beneficial loosen dependencies let consumer library choose version use", "num": "8468", "d": "11/2016"}, {"title": "reacttestrenderer install dependencies npm", "body": "currently using reacttestrenderer version npm version jest version running tests use reacttestrenderer seeing error find module objectassign reacttestrendererjs resolverresolvemodule object object issue npm", "num": "8466", "d": "11/2016"}, {"title": "onpaste triggered using html svg elements google chrome", "body": "following react component classes js const somesvg reactcreateclass displayname somesvg render return reactcreateelement svg null const somediv reactcreateclass displayname somediv render return reactcreateelement div tabindex style height onpaste event gt event listener triggered google chrome consolelog eventclipboarddatagetdata text reactcreateelement somesvg unable listen paste event google chrome firefox works fine interesting thing add html element content without content paste child paste event triggered checked developer tools browser paste event triggered always stopped somewhere react code svg child element svg child element html child element without content open following examples google chrome firefox comparison example working paste listener example working paste listener instructions use examples copy something clipboard click blue area focus div element paste clipboard using ctrlv see console logged", "num": "8461", "d": "11/2016"}, {"title": "reacttestrenderer componentwillunmount called inner component instance", "body": "want request feature report bug bug current behavior componentwillunmount inner instances never called jest tests first works second js import react react import renderer reacttestrenderer test top level componentwillunmount works gt let count class extends reactcomponent componentwillunmount count render return const inst renderercreate instunmount expect count toequal test inner componentwillunmount works gt let count class extends reactcomponent componentwillunmount count render return const inst renderercreate instunmount expect count toequal expected behavior two test pass component unmounted proper lifecycle whatever nesting versions react browser os affected issue work previous versions react react", "num": "8459", "d": "11/2016"}, {"title": "fullscreen onmouseout listener", "body": "container moved fullscreen mode listener nt triggered children components move mouse exampledemo use example demo chrome open console click button try nt move cursor fullscreen move cursor expected behavior assume mouse listener triggered mouse leaves component", "num": "8456", "d": "11/2016"}, {"title": "questions unstablecreateportal", "body": "talking vjeux whether remain around pointed newupcoming unstablecreateportal api using former render subtrees move atom panes panels since control node rendering subtree move around see fit two questions continue able move dom node wherever want eg attached document like people modals continue retain context subtree", "num": "8455", "d": "11/2016"}, {"title": "read property purgeunmountedcomponents undefined", "body": "getting error trying render component read property purgeunmountedcomponents undefined mean fix", "num": "8454", "d": "11/2016"}, {"title": "document componentdidupdate happens paint", "body": "docs componentdidupdate invoked immediately updating occurs method called initial render use opportunity operate dom component updated please correct wrong last component large sequence nested component changes cdu last child parent called sequence last cdu called flushbatchedupdates run turn calls runbatchedupdates read comment sebmarkbage context correct docs say something like use opportunity enqueue dom operations next execution thread edit guess issue also related new hooks proposal componentwasmounted componentwasupdated meanwhile would great docs specified componentdidmountupdate use requestanimationframesettimeout access rendered dom", "num": "8452", "d": "11/2016"}, {"title": "objects valid react child error occurring update", "body": "bug updating error showing previously working code app fails load win following error app continues work fine browsers thanks", "num": "8449", "d": "11/2016"}, {"title": "expose root ref default allow automatic forwarding setnativeprops", "body": "react native touchablehighlight requires children forward setnativeprops implemented builtin components must manually implemented custom components causes big incompatibilities library like native base mention custom components developer creates apparently preferred pattern theming projects create common directory inside main js directory folder houses commonlyreused components throughout app example declare common text header components could remedied making available default ref points root node would allow generic forwarding written base class components could inherit would essentially forward props chain hit concrete builtin component arguments making ref available default", "num": "8447", "d": "11/2016"}, {"title": "developing packages invalid manually calling reactproptypes warnings logged", "body": "want request feature report bug current behavior developing react component package common practice local copy project work need copy react installed directores otherwise node browserify nt tested webkit able find results ton warnings manually calling reactproptypes validation function current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior assuming means two copies react page preferably first class support developers working methodology barring ability test condition directly would nice disable warnings fashion versions react browser os affected issue work previous versions react currently testing react", "num": "8445", "d": "11/2016"}, {"title": "production build broken nodehaste since", "body": "issue tighly coupled issue jest comment explanation related react dupe info current issue version update dissapeared production code production mean code ships npm jest tests became broken way fix version tags latest version ca nt used workaround git tags compare shows interesting commit see commit comes pull request", "num": "8442", "d": "11/2016"}, {"title": "npm install microtime problem", "body": "bug want install reactdom docker ubuntu environment got error microtime install varwwwnodemodulesmicrotime nodegyp rebuild gyp info worked ends ok gyp info using nodegyp gyp info using node linux gyp http get gyp http gyp http get gyp http gyp info spawn gyp info spawn args usrlocallibnodemodulesnpmnodemodulesnodegypgypgypmainpy gyp info spawn args bindinggyp gyp info spawn args f gyp info spawn args make gyp info spawn args gyp info spawn args varwwwnodemodulesmicrotimebuildconfiggypi gyp info spawn args gyp info spawn args usrlocallibnodemodulesnpmnodemodulesnodegypaddongypi gyp info spawn args gyp info spawn args gyp info spawn args dlibrarysharedlibrary gyp info spawn args dvisibilitydefault gyp info spawn args gyp info spawn args dnodegypdirusrlocallibnodemodulesnpmnodemodulesnodegyp gyp info spawn args dnodelibfilenodelib gyp info spawn args dmodulerootdirvarwwwnodemodulesmicrotime gyp info spawn args depth gyp info spawn args noparallel gyp info spawn args generatoroutput gyp info spawn args build gyp info spawn args goutputdir gyp info spawn make gyp info spawn args buildtyperelease c build make entering directory varwwwnodemodulesmicrotimebuild make warning file microtimetargetmk modification time future cxx target releaseobjtargetmicrotimesrcmicrotimeo file included error variable field addgcepiloguecallback declared void isolate gcepiloguecallback callback error gcepiloguecallback member isolate isolate gcepiloguecallback callback error expected primaryexpression gctypefilter gctype gctypefilter kgctypeall error variable field removegcepiloguecallback declared void isolate gcepiloguecallback callback error gcepiloguecallback member isolate isolate gcepiloguecallback callback error variable field addgcprologuecallback declared void isolate gcprologuecallback callback error gcprologuecallback member isolate isolate gcprologuecallback callback error expected primaryexpression gctypefilter gctype gctypefilter kgctypeall error variable field removegcprologuecallback declared void isolate gcprologuecallback callback error gcprologuecallback member isolate isolate gcprologuecallback callback recipe target releaseobjtargetmicrotimesrcmicrotimeo failed make releaseobjtargetmicrotimesrcmicrotimeo error make leaving directory varwwwnodemodulesmicrotimebuild gyp err build error gyp err stack error failed exit code gyp err stack childprocessonexit gyp err stack emittwo gyp err stack childprocessemit gyp err stack processchildprocesshandleonexit gyp err system linux gyp err command usrlocalbinnode usrlocallibnodemodulesnpmnodemodulesnodegypbinnodegypjs rebuild gyp err cwd varwwwnodemodulesmicrotime gyp err node v gyp err nodegyp v gyp err ok npm info lifecycle microtime failed exec install script npm warn install microtime microtime install npm warn install microtime exit status npm info lifecycle reactdom reactdom npm info lifecycle reactdom reactdom asap nodemodulesreactdomnodemodulesasap corejs nodemodulesreactdomnodemodulescorejs promise nodemodulesreactdomnodemodulespromise whatwgfetch nodemodulesreactdomnodemoduleswhatwgfetch fbjs nodemodulesreactdomnodemodulesfbjs react nodemodulesreactdomnodemodulesreact holdshort varwww possible solution bump microtime", "num": "8435", "d": "11/2016"}, {"title": "optimized build", "body": "target newer browsers chrome firefox ms edge without supporting internet explorer build optimizes output scenario excluding code deals internet explorer quirks also possible es output minimize size output", "num": "8434", "d": "11/2016"}, {"title": "consider exposing reactelement factory function", "body": "currently react exposes outside world internally calls function create actual element instance performs copy create extract clojurescript world many libraries wrap react provide cljsidiomatic interface using cljs persistent maps props hiccup syntax popular convenient far ideal since first allocate cljs data structures addition particular inconvenient convert props data react would safe lot overhead could call directly saving whole lot work would nice others would anyways maybe obscure name discourage use fine marked experimental otherwise officially supported happy create matching pr folks agree expose somewhere", "num": "8431", "d": "11/2016"}, {"title": "error messages swallowed certain edge cases", "body": "would like report bug currently certain cases like one reproduced critical error messages displayed developer console sometimes view render left guesswork identify culprit relevant jsfiddle see error thrown one deliberately put line blocks proper rendering view yet trace show developer console expected behaviour would catch error show developer console current workaround wrap calls ugly works suppose design react usually excellent error reporting capabilities aware issue might caused imperfections code way improve maintaining functionality ears struggling issue quite time jsfiddle see error reproduced react", "num": "8430", "d": "11/2016"}, {"title": "issue collaboration react reactdom", "body": "want request feature report bug yes wan na report bug current behavior u install react reactdom last version intellij window npm react reactdom nodemodules reactdom indexjs found file moduleexports require reactlibreactdom nodemodules reactlibreactdom havent got file nodemodules reactlibreactdomfactory wont use reactdom import reactdom reactdom find error error reactdomindexjs module found error resolve file directory u install react reactdom havent got problems current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8429", "d": "11/2016"}, {"title": "onchange work well japanese ime react", "body": "trying make simple text box component suggestion feature however ie event japanese ime conversion arbitrarily decides press enter key examined little seems occurred ie seems occurred browsers chrome old ver ie react version seemed similar issues bug already fixed another bug maybe like make", "num": "8423", "d": "11/2016"}, {"title": "classname nt work attribute present", "body": "want request feature report bug report bug current behavior pass attribute nt work output instead dom current behavior bug please provide steps reproduce possible minimal demo problem demo expected behavior render instead versions react browser os affected issue work previous versions react", "num": "8419", "d": "11/2016"}, {"title": "\u663e\u793a\u9875\u9762\u63cf\u8ff0", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8418", "d": "11/2016"}, {"title": "component keys array index", "body": "question hope someone provide information following statements nt recommend using indexes keys items reorder would slow may read indepth explanation keys necessary interested last resort pass item index array key work well items never reordered reorders slow anyone provide explanation references links docs subject number items talking rendering slow sort", "num": "8410", "d": "11/2016"}, {"title": "react devtools download appear chromeextension", "body": "bug report expected behavior react suggest download devtools extension page extension permission inject devtool actual behavior reproducing create chrome extension page uses react load extension chrome open page observe console version google chrome react", "num": "8409", "d": "11/2016"}, {"title": "include polyfillio html", "body": "considered earlier settled shipping objectassign promise fetch polyfills default like reconsider adding polyfillio scripts html many people rely features without realizing need polyfills using polyfillio means easy opt know include polyfills specifically exclude objectassign promise fetch already", "num": "8397", "d": "11/2016"}, {"title": "firefox validation triggers input component render", "body": "using native form validation loading page form containing input prop set triggers browser validation immediately produces firefox native error highlighting firefox appears run validation dom used set value existing input component behavior seen angular run already", "num": "8395", "d": "11/2016"}, {"title": "facebook", "body": "notice facebook services nearest time open account mobile phone safari tried see message transfer install messenger app also notice sometime messages come inbox message come different messages like filters request archive message", "num": "8393", "d": "11/2016"}, {"title": "use addonsperf addonsreacttransitiongroup amd environment", "body": "use requirejs enviroment try use get regression", "num": "8392", "d": "11/2016"}, {"title": "warnning encountered two children key", "body": "sure key unique also print warning error react version thank", "num": "8390", "d": "11/2016"}, {"title": "documentation missing mention refs", "body": "want request feature report bug bug current behavior thinking react document quickstart section documentation contains code uses refs refs mentioned text refs used js code pen lines expected behavior refs explained thinking react earlier section quickstart section documentation reader able follow along versions react browser os affected issue work previous versions react react issue live url", "num": "8382", "d": "11/2016"}, {"title": "react app rendering", "body": "want request feature report bug bug current behavior app nt render current behavior bug please provide steps reproduce possible minimal demo problem via similar template build react app webpack launch emulator see blank screen halfcompiled react app following error expected behavior render chrome firefox etc versions react browser os affected issue work previous versions react temporarily shrinkwrapped dependencies continue serve app starting believe coming dependency may relying shrinkwrapped versions dependencies left new one broken right one old one continues work across browsers", "num": "8379", "d": "11/2016"}, {"title": "documentcaretpositionfrompoint caretrangefrompoint typecheck", "body": "want request feature report bug bug current behavior neither documentcaretpositionfrompoint standards track documentcaretrangefrompoint old syntax typecheck producing following flow error versions react browser os affected issue react flow", "num": "8377", "d": "11/2016"}, {"title": "classname named active invaild rerender", "body": "", "num": "8376", "d": "11/2016"}, {"title": "incorrect warning link", "body": "want request feature report bug bug current behavior link provided warning shown invalid aria prop redirects facebookcom current behavior bug please provide steps reproduce possible minimal demo problem via similar template fiddle reproduce check console use invalid aria prop name component click link shown console expected behavior go link versions react browser os affected issue work previous versions react", "num": "8373", "d": "11/2016"}, {"title": "respondereventplugin regression react", "body": "want request feature report bug report bug current behavior longer recognizes start dom events current behavior bug please provide steps reproduce possible minimal demo problem via similar template helper checks mousetouch start events section code used react react means event plugin longer recognize start events pr exposes issue uses expected behavior behaviour exhibited react versions react browser os affected issue work previous versions react works react nt work react", "num": "8370", "d": "11/2016"}, {"title": "reactcsstransitionsgroup nt execute enter animation properly cases", "body": "trying build nifty animation launching dialogs running snag reactcsstransitionsgroup goal ensure dialog looks like zooming button launched sample shows working demo unexpected behavior unexpected behavior exhibited following click first button either one works perfectly click second button enter animation play nt matter many buttons add first works expected additional buttons wo nt show enter animation properly leave animation works buttons reproduced glamor aphrodite feels good rule css library culprit trying figure something wrong code unintended usage reactcsstransitionsgroup bug thanks also posted", "num": "8369", "d": "11/2016"}, {"title": "production mode results everchanging generated keys", "body": "seeing mysterious behaviour regards generated keys production mode note keys relayadhocquery tabpanel components bottom also note parent hierarchy nt change forced update parent keys question simply append loosing state everything works expected development mode component instances reused based reuse keys unfortunately despite best efforts unable isolate exactly happens ie simply reproducible test case maybe someone knowledge key generating algorithms points us towards solution react seeing evergreen browsers", "num": "8367", "d": "11/2016"}, {"title": "firefox blocks react dev addon csp set regardless whitelisted", "body": "want request feature report bug bug current behavior firefox blocks dev addon message despite csp section believe subbed firefox since csp setting works chromium addon tries load loads opposed shows policy look headers request tells got csp serving correctly ff react start dev tools never connect react web app says looking react current behavior bug please provide steps reproduce possible minimal demo problem via similar install firefox react dev plugin visit left development machine running note csp violation dev console expected behavior addon work allowed scriptsrc indeed work whatever csp versions react browser os affected issue work previous versions react react plugin firefox affected os debian", "num": "8366", "d": "11/2016"}, {"title": "fail update dom style attribute", "body": "want request feature report bug bug current behavior style attribute updated correctly set time rerender issue suppose would tested example expected behavior dom element style last rendered one affected previous style value versions react browser os affected issue work previous versions react tested chrome react", "num": "8362", "d": "11/2016"}, {"title": "breaking feature request make jsx even like js", "body": "think time make jsx even like js less like html consider following jsx writing like main subjective reason looks right objective reason would could introduce javascript comment syntax similar things could done jsx attributes instead would like even better nt put much thought generally inspiration comes", "num": "8360", "d": "11/2016"}, {"title": "ref callback argument null", "body": "want request feature report bug bug current behavior ref callback gets called argument instead instance component occurs write component name starting uppercase character pascalcase write component starting lowercase character camelcase everything works expected jsfiddle demonstrates get argument demonstrates get correct reference see renamed expected behavior always pass component instance argument callback versions react browser os affected issue work previous versions react occurs nt tested versions", "num": "8359", "d": "11/2016"}, {"title": "overridingextending reacthostcomponentcreateinternalcomponent", "body": "would nice able override extend reacthostcomponentcreateinternalcomponent expand set elements rendered beyond html extjsreactor patching createinternalcomponent function tag starts specified prefix default x creates ext js component love stable way looks like something along lines originally considered never fully implemented recently removed advice sustainable approach would consider api", "num": "8358", "d": "11/2016"}, {"title": "react unable fully removing select mobile browsers", "body": "want request feature report bug bug current behavior please refer fiddle goal select onchange event select removed however unexpected thing occurs mobile tested latest ios latest mobile chrome safari select value select replaced standard button nothing tap button browser brings select menu even though select element look dom select element expected behavior select removed via onchange button shows tapping button nothing versions react browser os affected issue work previous versions react browsers latest mobile chrome amp safari os latest ios", "num": "8357", "d": "11/2016"}, {"title": "undocumented alteration arguments", "body": "upgrading reactreactdom noticed synthetic event possibly others receiving arguments differently event without custom arguments passed receives arguments observed console jsfiddle arguments look like viewable console ended causing problems application passing additional argument click handler expecting received second argument upgraded argument received third sure considered issue react nt see anything release notes way event handling thought would raise case way ended adjusting using spreadrest operator passingreceiving arguments event handler function may approach taken begin ps thank hard work guys put super excited fiber rock", "num": "8354", "d": "11/2016"}, {"title": "reactdom typeerror consoledebug function", "body": "experiencing following bug using react reactdom run team test suite uses mocha following exception thrown mocha crashes without running tests looking stack trace error coming line code surrounding line code calls exception message makes seem like function nodejs believes exists fact documentation nodejs console shows debug function interestingly running team project works fine time see exception try run test suite", "num": "8352", "d": "11/2016"}, {"title": "turn strict eslint rule back", "body": "upgrading eslint latest version turn strict rule conflicts combined flow statements opening issue track turning strict back either change eslint new custom rule use strict means", "num": "8344", "d": "11/2016"}, {"title": "issue still happening ie reactcloneelement handles props differently reactcreateelement", "body": "know issue addressed previously still seems happening ie browsers use cloneelement defaultprops values come undefined explicitly sent prop", "num": "8343", "d": "11/2016"}, {"title": "error find module reactlibreactperf", "body": "bug report current behavior importing throws following error checked file nt exist directory expected behavior nt throw error versions react browser os affected issue work previous versions react latest version using issue updating may introduced two", "num": "8342", "d": "11/2016"}, {"title": "error message stack trace still useless time possible solution enclosed", "body": "using react reasonably sure behaviour seen anything release notes regarding improved error messages render problem course source stacktrace simply originating call certain occasions error messages includes name component class whose method check even terribly useful larger components understand limitations much debug information tag along element creation code normal operation might practical simply rerender recheck using heavyweight tracing faulty call error already happened proof concept works great helpful path idx path consolewarn type eltype childcontextmaphas el ctx childcontextmapget el typeof eltype function eltypeprototype instanceof reactcomponent let element new eltype elprops ctx let childcontext typeof elementgetchildcontext function childcontext objectassign ctx elementgetchildcontext reactchildrenforeach elpropschildren child gt childcontextmapset child childcontext findinvalidelement elementrender ctx else findinvalidelement eltype elprops ctx ctx else elprops amp amp elpropschildren let idx reactchildrenforeach elpropschildren child gt quick kludgedtogether elementtree renderer tracks path individual node tree thus able report type incorrect together stack trace allows exact identification faulty node example path though verbose followed without ambiguity starting stacktrace ends method method method second child first child method method first child method first child first child get idea", "num": "8340", "d": "11/2016"}, {"title": "unable find element id undefined", "body": "react well invariant unable find element id undefined error happens specific yet special kind component update triggered using mobx state management latest webpack guess nt qualify proper issue report could localize issue specific component removed solves completely nothing special component working sidenote app rendered server successfully crash happens client move cursor particular component crash error constantly consoleloged move cursor outside nothing gets logged attaching listeners cursor movements", "num": "8338", "d": "11/2016"}, {"title": "nbsp renders differently production", "body": "using render method like renders expected dev mode production renders strange see attacked images dev mode prod mode notice strange using react", "num": "8336", "d": "11/2016"}, {"title": "hard dependency reacthotloader gt", "body": "tried uprev version react every major release since often help us perf core issues addressing updated yesterday however seems though breaking change comes development process although apps build successfully break try dev using webpackhotreloading process wepback spits following error file creating react component believe upgrading newest prerelease reacthotloader would completely fix issue sure proceed since documentation points fairly experimental think going stay react since nt require us update hotreloader configured webpackbabel assume nt oversight removal many lib files correct path wondering another work around switching prerelease hotreloader thanks", "num": "8330", "d": "11/2016"}, {"title": "false positive warning manually calling reactproptypes validation function", "body": "os macos node npm react getting warning inherited codebase interesting setup uses npm package therefore different react instance render dom details comment makes wonder could cause issue package using component defined react test copied code straight docs quite sure warning nt warranted jsx class greeting extends reactcomponent render return hello thispropsname greetingproptypes name reactproptypesstring still getting head around architecture codebase something like node server waits requests imports component say defined react instance imports internal library npm package request comes passes instance imports guess react instance uses render passed component returns rendered html take render logic package bring app nt get warning", "num": "8326", "d": "11/2016"}, {"title": "reactjs page android webview communication", "body": "want request feature report bug current behavior didnt find good way communicate android webview reactjs page problem im facing landing page written reactjs loaded webview backbutton want close webview activity click backbutton versions react browser os affected issue work previous versions react", "num": "8325", "d": "11/2016"}, {"title": "reacttestrenderer invariant violation getnodefrominstance invalid argument", "body": "following example order use snapshots jest run bug within seems fail whenever finddomnode used component instance minimal code replicate bug js import react component react import finddomnode reactdom import renderer reacttestrenderer class mycomp extends component componentdidmount finddomnode render return renderercreate error js invariant violation getnodefrominstance invalid argument react versions react reactdom reacttestrenderer", "num": "8324", "d": "11/2016"}, {"title": "delete examples except fiber amp basicjsx", "body": "many people understand something new reading docsarticles good practice explore examples parallel current examples issues depends babel deprecated wait dom outdated libraries like webcomponentsjs generally must parse mind whole file understand small component works possible solution could rewriting examples separate modules readme etc simple scripts useful could make pr days", "num": "8321", "d": "11/2016"}, {"title": "isinjected proptypes", "body": "would like propose small addition proptypes others encountered issues using redux connect inject information store see wandering maybe adding isinjected proptype would make sense could work similar isrequired chained datatype however isrequired validates value passed isinjected validates value passed example mycomponentproptypes optionalbool reactproptypesbool requiredbool reactproptypesboolisrequired injectedbool reactproptypesboolisinjected wanted vet idea bothering pull request", "num": "8320", "d": "11/2016"}, {"title": "getrootids defined reactcomponenttreehookjs", "body": "started running bug today everything going smoothly started happening updated error gets thrown page try use reactdom render something dom code import react react import reactdom reactdom import app mainapp reactdomrender documentqueryselector wrapper using react reactdom bundling everything rollup buble screenshot chrome tells happening", "num": "8318", "d": "11/2016"}, {"title": "react dom server nt contain separate copy reconciler", "body": "want request feature report bug nt know technically bug certainly regression inflates size reactdomserver package used client current behavior might best quote release announcement react another thing watch react dom server size react dom since contains copy react reconciler nt recommend using react dom server client cases expected behavior like react one copy reconciler needed using react dom react dom server use case using react dom server client example selectivityjs allows developers specify custom templates customize rendering ui component selectivity core nonreact library accepts templates either strings functions returning strings manually inserted dom selectivity react api also includes plugin wraps templates specified functions returning react elements see source code details plugin relies reactdomserver transform react elements string understood selectivity core example rather specific single library think use case specifying templates nonreact libraries jsx might widely applicable", "num": "8316", "d": "11/2016"}, {"title": "reactaddonstestutils depends reactdom instead react", "body": "want request feature report bug report bug current behavior reactaddonstestutils peer dependency uses peer dependency reactaddonstestutilsindexjs reactaddonstestutilsindexjs code contains fail given current dependencies reactdom dependencies previously needed break code breaking change leads errors like current workaround", "num": "8314", "d": "11/2016"}, {"title": "reacttestrenderer reactmount gone", "body": "updating react facing issues missing reacttestrenderer reactmount tried look release notes could see anything regarding reacttestrenderer gone calling directly using ideas nt change anything code rollback everything works fine", "num": "8312", "d": "11/2016"}, {"title": "feature request proptype name", "body": "feature request fill name attribute add static tostring method proptypes example js const stringproptype proptypesstring expect stringproptypename toequal checktype string const arrayofbooltype proptypesarrayof proptypesbool expect arrayofbooltypename toequal bound checktype array bool const shapetype proptypesshape foo proptypesbool bar proptypesnumber expect shapetypename toequal bound checktype shape foo bool bar number maybe useful debugging case need equal components prop types throw exception props generate names prop types could compared current behaviour primitive types could compared string bool number complex types shape arrayof time returns new bound function could compared value problems custom prop types generate undefined name custom prop like fixed adding function name btw feature implemented tcomb lib", "num": "8310", "d": "11/2016"}, {"title": "onclick firing disabled buttons", "body": "latest reactjs release firing disabled elements child html elements previous reactjs version onclick handler would called note onclick called remove button", "num": "8308", "d": "11/2016"}, {"title": "negitive consequences licence", "body": "take repost chatter internally", "num": "8307", "d": "11/2016"}, {"title": "reacttestutilssimulate longer works expected", "body": "firstly congrats release update couple projects tests failing given changes discussed workaround use however still entirely clear difference one used feels like docs updated reflect change finally reason appear docs concerned others going caught change also", "num": "8305", "d": "11/2016"}, {"title": "minor nt supposed break much stuff", "body": "packages broke due missing stuffs seems like nt happen even build process broke suddenly due react update react packages set thanks", "num": "8303", "d": "11/2016"}, {"title": "problems updating react", "body": "getting error files using latest version react webpack help", "num": "8302", "d": "11/2016"}, {"title": "reactdom work amd enviroment", "body": "try load reactdom requirejs get error mismatched anonymous define looking reactdom distribution notice seem two umd wrappers top probably related change packaging structure", "num": "8301", "d": "11/2016"}, {"title": "npm access request tomocchino", "body": "order publish react npm need access following repositories reactaddonscreatefragment reactaddonscsstransitiongroup reactaddonslinkedstatemixin reactaddonsperf reactaddonspurerendermixin reactaddonsshallowcompare reactaddonstestutils reactaddonstransitiongroup reactaddonsupdate reactdom reactnativerenderer reacttestrenderer react", "num": "8300", "d": "11/2016"}, {"title": "firefox invalid", "body": "want report code follow js var textarea reactcreateclass handledrop function e e e event epreventdefault epreventdefault else ereturnvalue false estoppropagation estoppropagation else ecancelbubble true return false handledragover function e e e event epreventdefault epreventdefault else ereturnvalue false return false render function return drag amp drop docx file firefox browser trigger default behavior help", "num": "8296", "d": "11/2016"}, {"title": "way judge instance component child another", "body": "hello team writing framework react system facing problem judge instance component child another may deep layer parent instance think function resolve problems cound find need help thanks lot", "num": "8295", "d": "11/2016"}, {"title": "react distribution", "body": "react amazing library literally changed way get develop applications job made pleasant experience day day however absolutely hate many legacy things affect react way react built terrible issues seen seems legacy build system monstrosity could never fixed internal facebook reliance things major part community suffers one way react extremely large despite react clones like preact inferno popular alternatives react distributed size well large comparison vue angular react compiled googles closure compiler start change could switching modern build system like webpack rollup create smaller library output particularly rollup smaller bundles people use react web applications much people would love contribute change way react built someone familiar react current build system tightly coupled facebooks usage able get pr successfully merged hoping rewrite release react fiber fixed new found performance movement going javascript community team facebook behind react accept call action make change better reliant react well shit luck", "num": "8294", "d": "11/2016"}, {"title": "expose rendersubtreeintocontainer react native", "body": "never built react native use cases layers react native basically need port reactnativemount", "num": "8289", "d": "11/2016"}, {"title": "immutable html elements react", "body": "hi everyone first report please bear nt make much sense facing issue interoperability webcomponents work proprietary library dom nodes custom webcomponent element frozen ie extensible get error console upon inspecting seems thrown following snippet react seems adding new property dom node precaching things fail case helps also pasted entire stack trace question valid react assume dom node mutable precaching omit nodes able attach reproducible test case due proprietary nature custom webcomponent nt seem able reproduce issue simple webcomponents try really required however stacktrace let know something obvious missing", "num": "8288", "d": "11/2016"}, {"title": "feature request add errorshaped proptype option", "body": "want request feature report bug request feature current behavior currently errorshaped proptype option minimal use case js class myimage extends component async fetchurl try const src await requrl fid thissetstate src catch error thissetstate error throw error render const src error thisstate return class image extends component static proptypes src proptypesstring error proptypeserror lt requested feature render const src error thisprops const src error errorsrc src return", "num": "8286", "d": "11/2016"}, {"title": "feature reactcsstransitiongroup delays", "body": "hi want make feature request adding way delay enterappearleave component propose adding new props transitionenterdelay delay element begins transition defaults transitionappeardelay delay element begins transition defaults transitionleavedelay delay element begins transition defaults defaults proposed props wouldt add breaking changes existing users example describes reasons behind request use case currently creating project contains navigable subpages subpage unique enter leave animation unique enterleave duration possible change subpage another order changing new page previous subpage leave must end new page begins entering need delay entering new subpage old one leaves currently object defines enterleave durations subpages helper function calculates correct timeouts delays current subpage component depending current state subpage contains multiple different elements combination creates enterleave animation sequences enterleave transitions css class based possible add additional parent element add needed behaviour would need entirely manage enterleave stuff javascript rather css adding class", "num": "8280", "d": "11/2016"}, {"title": "future refs", "body": "hi writting use refs pilot tests would love able uniformise tests right pr achieve pretty well string refs since string refs considered legacy since still seems problems refs wondering plan concerning refs moreover would possible support shallow rendering looked think possible return mount given element instead aware breaking change make like understand plan andor logic behind returning maybe could help oh since much trouble interested reason changing string refs callback refs thank help", "num": "8275", "d": "11/2016"}, {"title": "add reactjs irc note support page", "body": "want request feature report bug docs change think used pointer freenode reactjs channel support page reactiflux linked could note added back channel still users hours day several us frequently answer questions pretty good flow conversation questions throughout day", "num": "8268", "d": "11/2016"}, {"title": "add debug info error typeerror read property gethostnode null", "body": "want request feature report bug feature current behavior undefined component somewhere deep hierarchy react throws message typeerror read property gethostnode null objectgethostnode webpack reactlibreactreconcilerjs expected behavior please add debugging information place happens least name current parent node versions react browser os affected issue work previous versions react", "num": "8267", "d": "11/2016"}, {"title": "function returns incorrect checksum opera presto browser", "body": "discovered seems like platform bug opera browser presto engine causing server side rendered components always rerendered client checksum match server rendered checksum addition assignment expressions single statement results incorrect checksum function called test case used reproduce bug download link opera mac could install run test see fail old browser fix extremely unlikely still used many embedded devices tivo one finding however react work around bug splitting line function multiple statements", "num": "8264", "d": "11/2016"}, {"title": "need way receive pass context regardless contexttypeschildcontexttypes", "body": "want request feature report bug feature current behavior component access via thiscontext anything defined childcontexttypes parent contexttypes child current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior would like way take context available regardless contexttypes also pass via context variables defined childcontexttypes similar proptypes validation versions react browser os affected issue work previous versions react use case portal component renders child div end body using reactdomuseful fixed positioned components nt want stacking context parent works well pass context context comes owner component rendered new html element import react children purecomponent proptypes react import unmountcomponentatnode render reactdom renders children end body export default class portal extends purecomponent static proptypes children proptypesnodeisrequired componentdidmount thisel documentcreateelement div documentbodyappendchild thisel renderintoel gt const children thisprops render childrenonly children thisel componentdidupdate children children thispropschildren thisrenderintoel componentwillunmount unmountcomponentatnode thisel documentbodyremovechild thisel render return null would like able pass context available portal tree rendered body tag something like import react children purecomponent proptypes react import unmountcomponentatnode render reactdom class contextprovider extends purecomponent static proptypes context proptypesobject children proptypesnodeisrequired getchildcontext return thispropscontext render return childrenonly thispropschildren renders children end body export default class portal extends purecomponent static proptypes children proptypesnodeisrequired need receive context static contexttypes componentdidmount thisel documentcreateelement div documentbodyappendchild thisel renderintoel children context gt render thisel componentwillreceiveprops children nextcontext children thispropschildren nextcontext thiscontext thisrenderintoel children nextcontext componentwillunmount unmountcomponentatnode thisel documentbodyremovechild thisel render return null", "num": "8262", "d": "11/2016"}, {"title": "make sure jest tests fail error thrown within jsdom event handler", "body": "situations unit tests use dispatchevent jsdom dom node order use jsdom event system appears event handler throws ex change onchange handler test throw error silently ignored cause test fail jsdom make attempt report error hook jest config scriptsjesttestframeworksetupjs see fail test triggers exception behavior implementation reportexception looks like might able onerror handler nt work hooking virtual console may possible", "num": "8260", "d": "11/2016"}, {"title": "documentation examples purecomponent vs component", "body": "think would nice examples comparing purecomponent component", "num": "8255", "d": "11/2016"}, {"title": "awkward output shallow rendering snapshots components nodemodules", "body": "want request feature report bug bug current behavior experiencing awkward output shallow rendering snapshots components imported via nodemodules renders expected behavior extra closing tag contain component name", "num": "8253", "d": "11/2016"}, {"title": "using webcomponentcustomelement react", "body": "want request feature report bug bug current behavior js class orionnotificationelement extends htmlelement constructor super windowcustomelementsdefine orionnotification orionnotificationelement export default orionnotificationelement import react component react import default orionnotificationelement webcomponentsorionnotification class orionnotification extends component render return using component causes following error uncaught typeerror failed construct htmlelement please use new operator dom object constructor called function pasting customelement definition console calling documentcreateelement orionnotification creates element loading react seems error occurs current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior able instantiate web component versions react browser os affected issue work previous versions react current react current chrome", "num": "8249", "d": "11/2016"}, {"title": "component model", "body": "react one javascript libraries use componentbased software engineering approach cbse component models ejb model com model net model etc want know component model react use react using different kind component model research react behaviour based componentbased software engineering want ask help documentations react component model anything help research thank willing help please send email randichil gmailcom", "num": "8246", "d": "11/2016"}, {"title": "render nt called inside hoc component passing children", "body": "hi writing custom datatable component want add support rich cells example desirable usage used pass props datatable rendering replaced header cells body cells make rich cells working trying save children column rendering cell inject actual rowdata hoc cell rendering class tablecell extends purecomponent renderrichcell const rowdata columndescription thisprops return reactchildrenmap columndescriptioncellchildren cellcomponent gt withrowdata cellcomponent rowdata problem render method column children fakeid example nt called debugger result renderrichcell looks ok provide snapshot needed errors console maybe valid use reactchildrenmap tablecell transform elements another parent", "num": "8245", "d": "11/2016"}, {"title": "fiber handle errors callbacks", "body": "commit phase updates flushed dom errors thrown inside trapped handled later tree committed error thrown callback trapped handled way relevant section code calls callbacks part update queue linked list updates callbacks throw error catch error continue calling rest callbacks good first issue someone interested contributing reactreact fiber please read fiber principles contributing fiber submitting pr", "num": "8238", "d": "11/2016"}, {"title": "fiber fiber root field", "body": "problem component calls must update fiber ancestor fibers root get root ensure root scheduled called multiple times consecutively walk path time callback passed requires additional walk priority child always greater equal priority parent nice optimize stopping whenever condition step fails problem step ca nt assume root tree scheduled pending work roots unscheduled uncaught error thrown tree ensure root scheduled every update one idea would use field fiberroot eg rather unschedule field would still need cleared every update requires access root nt solve problem possible solution could solve adding field fiber always update quickly question whether extra memory usage worth performance gain", "num": "8222", "d": "11/2016"}, {"title": "referenceerror defined calling reactdomrender", "body": "kinda bug ca nt use react way frowningman using nwjs end backend uses nodejs installed npm running application tag include features ecmascript class definition example pointing script javascript use strict anyways const controllername mainwindow const controllerclass require controllername controllerjs var controller new controllerclass loads javascript use strict const react require react const reactdom require reactdom moduleexports class mainwindowcontroller constructor thisview require mainwindowjs thisviewcomponent reactcreateelement thisview null error occurs prevents component javascript use strict const react require react moduleexports class mainwindow extends reactcomponent constructor props works dependencies used nwjs react reactdom time nt access developer console nwjs minimal build flavor nt download sdk deeper look issue browsers without nodejs backend", "num": "8217", "d": "11/2016"}, {"title": "number input defaultvalue accept decimal input", "body": "want request feature report bug report bug current behavior using number input defaultvalue enter decimal value attempting type decimal cursor moved beginning input behavior observed defaultvalue given current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior input allow type decimal versions react browser os affected issue work previous versions react happening react happen", "num": "8211", "d": "11/2016"}, {"title": "documentation sample still using string refs", "body": "sample code step add inverse data flow quick startthinking react still using old string refs handlechange thispropsonuserinput thisrefsfiltertextinputvalue thisrefsinstockonlyinputchecked render return show products stock think better easier understand use new syntax handlechange thispropsonuserinput thisfiltertextinputvalue thisinstockonlyinputchecked ref input gt thisfiltertextinput input ref input gt thisinstockonlyinput input", "num": "8209", "d": "11/2016"}, {"title": "reactcloneelement gives precedence child component props", "body": "want request feature report bug feature would like version gives precedence props already component cloned passed ignoring ones provided default order precedence props provided child component props provided parent used override child component ones default props child component ie prop provided parent child example use case behavior would like achieve red button amp blue idea provide single prop parent sort default individual components override default choose tried manually merging props default value already supplied nt really reliable way thank", "num": "8205", "d": "11/2016"}, {"title": "reactcsstransitiongroup work", "body": "want fade animation code import react proptype react import browserrouter router link match miss reactrouter import jsondata subtitlejson import reactcsstransitiongroup reactaddonscsstransitiongroup import styles letterboxcss export default class letterbox extends reac tcomponent constructor props super props render var boxstyle background black padding borderwidth bordercolor white borderstyle solid location absolute var letterstyle fontfamily \ub9d1\uc740 \uace0\ub515 fontsize color white textalign center var buttonstyleright float right background white marginright fontsize bordercolor black var buttonstyleleft background white float right fontsize bordercolor black changes anyone help", "num": "8203", "d": "11/2016"}, {"title": "react component sending wrong content type multipart form", "body": "want request feature report bug bug current behavior form multipart sending current behavior bug please provide steps reproduce possible minimal demo problem via similar template submit form existing action url expected behavior content type sent versions react browser os affected issue work previous versions react latest", "num": "8197", "d": "11/2016"}, {"title": "purecomponent respond context changes", "body": "want request feature report bug bug current behavior extend purecomponent context component changes props rerender triggered current behavior bug please provide steps reproduce possible minimal demo problem via similar template see bug reproduced expected behavior expect click increment context button would see updated view doenst happen change props see context instantly update actual value view versions react browser os affected issue work previous versions react react chrome fixing reasonably simple think need add shallow comparing context stand purecomponent meantime", "num": "8184", "d": "11/2016"}, {"title": "warn invalid css propertyvalue stripped react", "body": "want request feature report bug feature current behavior react strips invalid css properties nt throw warning expected behavior react strip invalid css properties example throw warning let developer know something wrong passed values versions react browser os affected issue work previous versions react guess versions", "num": "8182", "d": "11/2016"}, {"title": "fiber error handling", "body": "filing todo list x scheduling tests place add tests uncaught errors different roots x remove recursion choose implement sensible behavior fataled roots eg look", "num": "8181", "d": "11/2016"}, {"title": "invalid version installing react", "body": "got following error installing react step reproduce create new project using npm init add dependencies packagejson react npm install expected behavior able install react versions react browser os react windows os notes detected issue starting monday october project dependencies issue present issue reproduced react", "num": "8180", "d": "11/2016"}, {"title": "search broken docs page", "body": "want request feature report bug bug current behavior search input docs page nothing seems firing click handler search iconmagnifying glass current behavior bug please provide steps reproduce possible minimal demo problem via similar template try use search bar expected behavior search docs react index docs internal search engineservice search curious versions react browser os affected issue work previous versions react versions react docs page likely worked never actually tried use search", "num": "8178", "d": "11/2016"}, {"title": "tutorial please clarify use spread properties", "body": "part tutorial confusing data change without mutation end result mutating changing underlying data directly added benefit help us increase component overall application performance appear match either jsx spread operator js spread operator closest match find shallow clone excluding prototype", "num": "8177", "d": "11/2016"}, {"title": "onchange triggered autocomplete chrome ios", "body": "want request feature report bug bug current behavior chrom ios onchange triggered inputs choosing option autocomplete suggestion current behavior bug please provide steps reproduce possible minimal demo problem via similar template smth autofill data chrome try fill form suggested autocomplete option first case onchange handler wo nt triggered expected behavior onchange triggered autocomplete versions react browser os affected issue work previous versions react chrome ios least", "num": "8174", "d": "11/2016"}, {"title": "onchange", "body": "verify works mentioned recently", "num": "8168", "d": "11/2016"}, {"title": "htmlfor api considerations", "body": "want request feature report bug feature discussion hi guys using react daily since april still mistake regular basis using instead oh yeah makes wonder ca nt use property first place suppose related fact javascript keyword far know public api allowing use property loop instruction would nt better api applies principle least surprise instead us remember specificity actual impact use api actually realize could go", "num": "8161", "d": "10/2016"}, {"title": "path attribute removed animatemotion tag", "body": "want request feature report bug bug current behavior react remove path animatemotion tag outputs warning warning unknown prop tag remove prop element current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior want use path animatemotion tag without using dangerouslysetinnerhtml versions react browser os affected issue work previous versions react google chrome dev windows version", "num": "8154", "d": "10/2016"}, {"title": "componentdidmount would nt rerendering component", "body": "look got problem shows console nt know wtf error another serious problem code log know code may look good problem killing try debug ca nt", "num": "8144", "d": "10/2016"}, {"title": "hot module replacement problem working dropbox", "body": "submitting bug report react webpack version current behaviour hot module replacement work project dropbox named dropbox person change name dropbox without work spend days figure problem want share others need waste time", "num": "8141", "d": "10/2016"}, {"title": "uncaught error", "body": "connect connect connect connect getcontext withhandlers memberprepaidview idea getting", "num": "8140", "d": "10/2016"}, {"title": "react support node development", "body": "current behavior steps reproduce install node clone react repo run expected behavior react support node development", "num": "8134", "d": "10/2016"}, {"title": "setstate handle well nested setstate calls", "body": "could bug nice feature setstate handle well nested setstate calls successive calls put pendingstatequeue resolved queue reference cleared soon suggestion would change function processpendingstate like processpendingstate function props context var inst thisinstance var queue thispendingstatequeue var replace thispendingreplacestate thispendingreplacestate false thispendingstatequeue null lt lt lt lt lt lt lt lt lt lt lt lt lt queue return inststate", "num": "8132", "d": "10/2016"}, {"title": "transferring transitiongroup maintenance", "body": "nt good maintaining reacttransitiongroup nt use much facebook result stagnating bugs nt get fixed new features nt get added apis nt acknowledge changes react eg fake lifecycle hooks ca nt work functional components nobody time review prs like dead weight core team feel guilty much great alternatives ecosystem react motion however understand lot people happy issue call new maintainer using widely codebase would happy maintaining fork documentation please let us know deprecate package favor package", "num": "8125", "d": "10/2016"}, {"title": "react docs conditional rendering", "body": "", "num": "8119", "d": "10/2016"}, {"title": "datepicker updating type change", "body": "toggling input type date datetimelocal strict formatting rules least chrome breaking example changing react version example fixes bug", "num": "8116", "d": "10/2016"}, {"title": "children components always blackbox parent", "body": "perhaps already solved trouble finding solution happy scenario follows function return hello world function disable props return propschildren function b return component nt know anything disabled component b owner decides disable component wrapping component disable easy enough far like pattern means disable component like however started getting trouble div disable adds dom starts mess styling flexbox cases component might styles disable needs replicate think tidiest solution component expose prop used pass disabled class means component may want disable needs also expose prop accepted approach problem something missing thanks", "num": "8111", "d": "10/2016"}, {"title": "reusable components page redirects improperly", "body": "old page reusable components went great detail various proptypes used redirects wrong page original page redirects like looking something see original page google cache", "num": "8108", "d": "10/2016"}, {"title": "redirection docs lead wrong page", "body": "search google react event listener remove click dom event listeners component react dom event listeners component note entry shows attach dom events provided react check info good opens page nt include info event listeners happens search results pretty annoying able find references public docs quickly", "num": "8100", "d": "10/2016"}, {"title": "redirected wrongly", "body": "following warning redirected correctly least chrome debugger warning child array iterator unique key prop check render method see information leads instead", "num": "8092", "d": "10/2016"}, {"title": "debug read property reactinternal null", "body": "good debugging toool finding exact line numbers component names got error like adding console logs every file solution", "num": "8091", "d": "10/2016"}, {"title": "reactaddonscsstransitiongroup give warning transitionentertimeout nt supplied reactcsstransitiongroup", "body": "failed prop type transitionentertimeout nt supplied reactcsstransitiongroup cause unreliable animations wo nt supported future version react see information solve warning thanks", "num": "8087", "d": "10/2016"}, {"title": "readd warning proptypes", "body": "discussion spicyj decided keep warning even though functions throw production warning way learn also document pass secret case know", "num": "8080", "d": "10/2016"}, {"title": "add description false caveat docsconditionalrenderingmd", "body": "want request feature report bug documentation enhancement need describe user wants output string false boolean property false convert string else wo nt appear output", "num": "8075", "d": "10/2016"}, {"title": "uncaught invariant violation parentcomponent must valid react component", "body": "want request feature report bug bug current behavior seeing following error page used work stack nt say anything debugging difficult request help debug code improve error stack people encounter error figure coming thanks versions react browser os affected issue work previous versions react chrome windows react", "num": "8074", "d": "10/2016"}, {"title": "forms documentation hide relevant info", "body": "want request feature report bug feature current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior attribute shown within code scroll find versions react browser os affected issue work previous versions react relevant", "num": "8068", "d": "10/2016"}, {"title": "handling events readme example handles eventhandler takes parameter", "body": "example eventhandlers receive e syntheticevents example passing parameters eventhandler", "num": "8065", "d": "10/2016"}, {"title": "new docs set localization effort", "body": "deleted old localized content docs changed much set proper infrastructure localization old process slow ineffective cc lacker", "num": "8063", "d": "10/2016"}, {"title": "new docs wanted guides", "body": "revamped docs guides missing think essential community section good resources eg mrscobbler glossary similar virtual dom terminology gone friendly check inspiration troubleshooting common issues explain right away like wrong element casing loaded dom container missing react scope etc see inspiration accessibility madhug manipulating children using portals useful modals animation react motion jamesknelson routing need use react router show use history api point rr componentbased api ajax show use lifecycles mention cancellation issues x integrating nonreact code show wrap jquery plugin react expose react component backbone view consume backbone models reactperf include basic usage example reference snapshot testing publishing component somebody wants work please comment let figure plan help wanted", "num": "8060", "d": "10/2016"}, {"title": "unable type input adding value prop", "body": "made input field makes api call based whats typed returns results list clicking list element value text input field must get updated add value prop input unable type anything removing value prop input able type set state work javascript import searchdoctorbyname helpersapi import react component react class autocompletesearch extends component constructor props super props thisstate value suggestions export default autocompletesearch using also futile", "num": "8053", "d": "10/2016"}, {"title": "wrong snippet code uncontrolled components docsforms", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8052", "d": "10/2016"}, {"title": "featureidea rename context types implicit props types merge", "body": "currently js parent getchildcontext gt theme red render gt child themedbutton props ctx theme gt themedbuttoncontexttypes theme proptypesstring effectively context implicit props ie mostly equivalent child parent expect child ask interchangably proposalidea mind also imply override props needed cases like testingpreview sample enhancer implementation feel free point flaws edge cases whatever context probably share issue idea intuitive introduce concept ps also would proposal creating constant context values share fixed values never trigger child update mount", "num": "8042", "d": "10/2016"}, {"title": "new docs docs bugs amp issues", "body": "completely rewrote docs bound cause issues mistakes etc let keep issue umbrella problems discovering initial rollout x old links nt major issue x topbar points ugly url x nt use identifier x remove vars everywhere except page x jsx depth weird names like lacker x jsx depth shows failing example tag nt show fix lacker localized pages gone need set new streamlined localization effort cc thejameskyle mention default indexhtml productionready mark legacy unnecessary addons page recommend instead figure community section mention string refs x forms doc mistakes forms doc uses setstate uncontrolled components confusing installation messy", "num": "8035", "d": "10/2016"}, {"title": "docs list key examples override number", "body": "want request feature report bug bug current behavior examples use component name maybe good idea rename component something", "num": "8034", "d": "10/2016"}, {"title": "findparent fails unable get property reactinternalinstance undefined null reference", "body": "want request feature report bug bug current behavior exception thrown rendering stops current behavior bug please provide steps reproduce possible minimal demo problem via similar template nt seem determinstic happens ie least expected behavior throw exception continue rendering versions react browser os affected issue work previous versions react react ie windows", "num": "8031", "d": "10/2016"}, {"title": "maximum call stack size exceeded reactdomcomponentupdatedomchildren", "body": "first realize likely nt problem react problem application tought open issue see think might problem react could give pointers dig deeper since call stack contains react code nt much us trouble shoot see messed want request feature report bug possible bug current behavior sometimes get random maximum call stack size exceeded errors small percentage users nt look like related browserdevice seems happen types devices mobile tablet desktop firefox chrome safari ios mac stack trace nt contain code react looks like js lastprops line column webpack updatedomproperties line column webpack updatecomponent line column webpack receivecomponent line column webpack receivecomponent line column webpack updatechildren line column webpack reconcilerupdatechildren line column webpack updatechildren line column webpack updatechildren line column webpack updatedomchildren line column webpack pages larger others anyone nesting deep enough could realistically cause maximum call stack size exceeded error versions react browser os affected issue work previous versions react nt know true versions nt version deployed help reagarding would much appreciated", "num": "8030", "d": "10/2016"}, {"title": "multiple copies react installed", "body": "using react components made various libraries like material ui get message see one version react installed using gulp browserify build process idea solve", "num": "8026", "d": "10/2016"}, {"title": "chrome throws error failed execute insertbefore node parameter type node", "body": "react throws error messages certain points app chrome chrome browsers work nt able pinpoint cause", "num": "8025", "d": "10/2016"}, {"title": "feature request reactaddonsupdate operations accept objects well arrays", "body": "want request feature report bug feature current behavior pass object reactaddonsupdate update operation speced take array generates error saying forget wrap object array expected behavior operate single object provided example unshift foo onto target element versions react react", "num": "8023", "d": "10/2016"}, {"title": "better support web components", "body": "gets old rebuild date picker whatever widget every time switch frameworks would nice react better support web components", "num": "8022", "d": "10/2016"}, {"title": "npm run lint fails windows", "body": "npm run lint fails windows least windows error running eslint task using gulpfile c projetosgitreactgulpfilejs starting eslint c function exports require module filename dirname exist syntaxerror unexpected token illegal objectexportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerunmain run startup lint failed fatal error something went wrong running gulp screenshot found related error mocha could nt fix anyway might", "num": "8021", "d": "10/2016"}, {"title": "need way prevent component render client side initial load", "body": "ad performance isomorphic application need react avoid rendering ad component containing ad position div client initial load following scenario react renders ad position div server sends html client div empty div id attribute identifying location place ad google gpt makes request ad react lifecycle finished client ad position div gets filled ad react finds mismatch server client ad position div rerenders empty ad position div client wiping ad way conditionally stop react rendering ad position div client found seems like needs flag method react lifecycle used prevent component render certain conditions", "num": "8017", "d": "10/2016"}, {"title": "warning validatedomnesting appear child see head gt metadata", "body": "believe bug dom validator try render entire page element inside got warnings render result put inside expected behavior warns appears also move elements using react tested previous version updated reactdom renders correctly warns well", "num": "8014", "d": "10/2016"}, {"title": "fiber formalize states", "body": "fiber number states component however formalized code right instead state inferred leads hard follow code instead organize code terms explicit states original prototype componentdidmount ie never begun begun never completed completed committed nt begun time around begun yet completed completed yet committed componentdidmount ie nt begun update yet begun never completed update completed committed nt begun update begun update yet completed completed update yet committed children set component also states never reconciled current set last committed previously reconciled set nt committed yet", "num": "8012", "d": "10/2016"}, {"title": "rfc enabling formreset controlled inputs make value defaultvalue transparent", "body": "would like make case supporting controlled inputs make control value defaultvalue direct background react synchronizes attribute property inputs believe two reasons easy testing frameworks like selenium select testing reverts input back value attribute also trigger change events causes input state sync react state many reasons listed stop syncing value attribute keep issue focused desired outcome change want able control value attribute property directly component time javascript wo nt add flow types clarity type widget name string class editwidget extends reactcomponent constructor thisstate thispropswidget onchange event thissetstate name eventtargetvalue render return revert save change react property directly maps value property react property directly maps value attribute configurable time input becomes controlled specifies property support formreset sending synthetic change events fields mismatch last tracked value maybe fire blindly simplicity change creates controlled input makes much clearer react applies changes control granted user provides away allow props coming form dictate canonical state form still supporting native browser behavior also means nt synchronize value attribute would save lot headaches things figure server rendering property use case send along default value might fine cases thought edge cases", "num": "8011", "d": "10/2016"}, {"title": "jsx gotcha case sensitivity", "body": "want request feature report bug documentation add something pertaining jsx gotcha page current behavior equal rather unintuitive considering meaning nt generally attached case current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8008", "d": "10/2016"}, {"title": "onchange event getting triggered via selenium clear", "body": "want request feature report bug possible bug current behavior according selenium spec based issues reported method triggers dom onchange event spec issue however using clear input onchange handler triggered browser see input empty expected behavior expect onchange handler trigger versions react browser os affected issue work previous versions react using react reproduced firefox amp chrome latest version post", "num": "8004", "d": "10/2016"}, {"title": "ca nt find function", "body": "use chrome give function", "num": "8002", "d": "10/2016"}, {"title": "style props render incorrectly safari", "body": "want request feature report bug bug report report undocumented behaviour current behavior style props render incorrectly safari example following becomes screenshot inspector similar thing happens rendered another screenshot works expected browsers tried current behavior bug please provide steps reproduce possible minimal demo problem via similar template check element child ios safari using desktop safari inspector tool otherwise minimal failing example expected behavior rendered style property matches given style property becomes becomes versions react browser os affected issue work previous versions react using version served seen issue ios safari el captian safari ios safari seems unaffected unsure versions", "num": "7998", "d": "10/2016"}, {"title": "remove debug info reactminjs file publish project", "body": "remove debug info reactminjs file publish project", "num": "7990", "d": "10/2016"}, {"title": "variable refers new date child element", "body": "following code snippet book run code compiled via babel code like error message reported browser datetimenow could please help answer cause error thank much want request feature report bug current behavior error message uncaught invariant violation objects valid react child found mon oct cst meant render collection children use array instead wrap object using createfragment object react addons check render method current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior span tag displays current time versions react browser os affected issue work previous versions react react", "num": "7988", "d": "10/2016"}, {"title": "event listeners stop working container moved new document", "body": "want request feature report bug report bug current behavior react gt container moved different document component tree rerendered event listeners stop working react lt possible move container one document another via state rendered components preserved event listeners continued work steps reproduce using testhtml click counter button times click move iframe button click counter times note counter longer responds clicks expected behavior clicking counter continues increment moved iframe works react react gt versions react browser os affected issue work previous versions react issue bisects changed logic adds event listeners use cached document value instead hack resolves issue patch diff git asrcrenderersdomsharedreactdomcontainerinfojs bsrcrenderersdomsharedreactdomcontainerinfojs index asrcrenderersdomsharedreactdomcontainerinfojs bsrcrenderersdomsharedreactdomcontainerinfojs var docnodetype function reactdomcontainerinfo node var info ownerdocument nodenodetype docnodetype node nodeownerdocument get ownerdocument return nodenodetype docnodetype node nodeownerdocument tag nodenodenametolowercase namespaceuri nodenamespaceuri notes original use case preserving state components app runs chrome popup window pop closes unloads window workaround involves moving dom node background page popup closed back next opened", "num": "7986", "d": "10/2016"}, {"title": "issue redboxreact", "body": "testing react version one projects installing packages worked previous version react redboxreact issue reactdom error redboxreactreactdomindexjs module found error resolve module reactlibreactdom", "num": "7985", "d": "10/2016"}, {"title": "mistakenly published latest", "body": "bug current behavior yields result installs expected behavior looks like publish mistake point point", "num": "7982", "d": "10/2016"}, {"title": "react match syntax autofocus", "body": "react match syntax autofocus autofocus attribute auto focuses inputs forms buttons autofocus true false attributes camel case html demo current situation react following valid equivalent true following invalid number attributes boolean attributes presence boolean attribute element represents true value absence attribute represents false value attribute present value must either empty string value ascii caseinsensitive match attribute canonical name leading trailing whitespace source recommendation update syntax example considered valid", "num": "7981", "d": "10/2016"}, {"title": "docs implementation notes replacechild args worng order", "body": "order arguments wrong js prevnodeparentnodereplacechild prevnode nextnode prevnodeparentnodereplacechild nextnode prevnode", "num": "7975", "d": "10/2016"}, {"title": "jsx variables shadowing gotcha", "body": "think discovered jsx gotcha see nowhere mentionned let say component defined like intended behaviour rendered output provided receives instead value foo prop provided comp means variable shadowing work suspect relative template like behaviour jsx since bited gotcha think mentionned docs correct code make work", "num": "7965", "d": "10/2016"}, {"title": "documentation finddomnode title paragraph", "body": "documentation bug working browser contains subheading refs finddomnode following paragraph however contain information finddomnode removed commit", "num": "7958", "d": "10/2016"}, {"title": "allow html attributes dangerously set without encoding", "body": "want request feature report bug feature current behavior react element like renders expected behavior behavior expected majority cases strongly recommended however scenarios automated parser play nicely encoded special characters etc user may want render arbitrary strings attributes without automatic encoding way provided entire elements could const getattributes gt datafoo amp bar currently workaround using container element node able set attribute specifically would bit safer thoughts fence whether good idea since opens another avenue inserting invalid html nevertheless interested hearing justified grounds", "num": "7951", "d": "10/2016"}, {"title": "props validation objects", "body": "want request feature report bug request feature current behavior ca nt specify object different type values eg either rely order object specify like unpack object passing props current behavior bug please provide steps reproduce possible minimal demo problem via similar template bug makes fairly typical usage spitting warnings console expected behavior able specify objectof attached pr versions react browser os affected issue work previous versions react", "num": "7945", "d": "10/2016"}, {"title": "fiber principles contributing fiber", "body": "wanted document unique design patterns apply fiber necessarily anything else start may mutate fiber working phases may global sideeffects need global sideeffect moved phase fiber fixed data structure shares hidden class never add fields outside construction nothing reconciler uses dynamic dispatch ie nt call first class function except user code ref callbacks functional components render methods etc rest static function available closure ie use instead time need branch logic use switch statement number indicates type object dealing branch take see pattern matching many modules instantiated object single constructor gets called initialization time inlinable compiler nothing fiber uses normal js stack meaning use stack compiled flat function needed calling functions fine limitation ca nt recursive ca nt use recursion traverse tree learn use singly linked list tree traversal algorithm eg parent first depth first need complicated use normal js stack time yield would rebuild stack continue since lasts idle would spend time unwinding rebuilding stack time bad however everything along stack would aware unwind abort middle work flow plausible could level ocaml algebraic effects nt currently features need nt get performance tradeoffs want box atm plausible future way forward though code lives outside recursion nt matter much cases react space normal stack eg memoization error handling etc using normal stack makes difficult get interact everything put stack generally put heap memoize maintaining stack heap data theoretically less efficient said optimizations might moot js stacks much efficient js heaps one thing wanted try compile react components work directly data structures like normal programming languages compile make mutations etc stack think ideal implementation react let try see goes cc spicyj gaearon acdlite", "num": "7942", "d": "10/2016"}, {"title": "making view difference reuse markup error configurable", "body": "want request feature report bug requesting feature current behavior currently way reuse markup error displayed difference hardcoded characters code side configurable property code found characters sometimes bit hard debug especially cssinjs libraries div usually also contain obfuscated class name able make larger number could help debugging went wrong", "num": "7939", "d": "10/2016"}, {"title": "functions passed props updated", "body": "array reactcreateelement render jsx understand todoitems dragged text updated onblur clicking anywhere outside current text surprised get issue gif passed arrow functions updated new render call end gif still observe logs maybe like since forever surprising intuitive maybe optimization demo issue edit instead would fix issue breaks css transitions", "num": "7937", "d": "10/2016"}, {"title": "use reactdomrender target implicit jsx root", "body": "currently rendering must provide topmost wrapper addition node designated reactroot introduces unwanted extra layout element make styling little irritating would nice target topmost node could pass array first children right away", "num": "7932", "d": "10/2016"}, {"title": "page navigates path component changes", "body": "new react looks like appjs loginformjs expected behavior state app changed callback header component rendered stay like current behavior state changed header rendered page directed automatically dont know help appreciated", "num": "7928", "d": "10/2016"}, {"title": "changing state quickly cause error shallow render", "body": "want request feature report bug report bug current behavior running causes react throw exception issue using see error using current behavior bug please provide steps reproduce possible minimal demo problem via similar template could figure use jsfiddle example even though reactwithaddons loaded code used project reproduce jsx import react component purecomponent react import render reactdom import reacttestutils reactaddonstestutils class root extends component componentwillmount thistestbreak settimeout thistestbreakbind render documentgetelementbyid root class testreactelement extends purecomponent render return thispropsname const testrender name gt let renderer reacttestutilscreaterenderer rendererrender testrender test testrender test testrender test works fine long run soon run times error pops project tap output listened wrapper updated new one comes reproducible example contrived realworld bug running tests project expected behavior expected behavior error occurs console running multiple shallow test renders time react updating state element rendered dom versions react browser os affected issue work previous versions react windows updates october tried previous versions react verified displays error chrome firefox", "num": "7927", "d": "10/2016"}, {"title": "fiber umbrella remaining features bugs", "body": "umbrella issues remaining fiber issues found running unit tests flag turned see additional tasks beyond scope initial fiber release phases phase infrastructure x set infra know tests failing spicyj x reacttestutils features x reactcomponentexpect gaearon x scry etc gaearon phase smaller initial tasks x reactdomfiberrender simple synchronous case sebmarkbage x string refs using owner acdlite x pass correct previous state componentdidupdate x componentwillmount componentwillreceiveprops componentwillupdate lifecycles sebmarkbage x componentdidupdate fired shouldcomponentupdate returns false sebmarkbage x instance recreated already started work gets resumed componentwillreceiveprops without didmount sebmarkbage x fix module pattern mountindeterminatecomponent sebmarkbage x finddomnode sebmarkbage x switching types nt track deletions updateslot nt return null sebmarkbage gaearon x purecomponent flag acdlite x ensure scheduling works synchronously default batched dom events initial default priority acdlite x unstablebatchedupdates acdlite x setstate componentdidmountcomponentdidupdate always synchronous end batch even work deferred acdlite x make sure setstate error boundaries work gaearon acdlite x unmount failed trees attempting recover acdlite phase larger tasks x allow testing fiber facebook web codebase spicyj x error boundaries gaearon x context gaearon x dom attributesproperties update sebmarkbage x dom events plug event system sebmarkbage x rendercontainerintosubtree preserve state spicyj x fb bug switching text children regular children wo nt clear old text content easy fix since sideeffect parent scheduled child insertions acdlite sebmarkbage x recover errors commit phase including errors thrown host environment use single trycatch block acdlite x fb svg mode switch based parent svg html gaearon x fb setstate behavior called possible lifecycles including sibling lifecycles parents children acdlite phase uncovered bugs x root container wrong commit phase sebmarkbage x update stateprops object pointers even bailout happens currently cause unnecessary componentdidupdate solve somehow acdlite x validate inputvaluetracking indeed need cleaned unmount nt think needs revert anyway x autofocus nt work todo reactdomfibercomponent bvaughn x fb last effect renders infinite loop acdlite x fb defer clearing initial nodes work actually begun ensure unmounting rerendering batch works acdlite x updates different roots componentwillmount reactupdatestest acdlite x refs update even shouldcomponentupdate returned false however componentdidupdate fire acdlite x fb make top level render unmount synchronous default even batch even updates updates acdlite x fb uncaught typeerror read property children null probably due context change based caller probably either avoid rerendering set pendingprops memoizedprops case sebmarkbage x replacestate remove previous callbacks scheduled acdlite x root fiber use instead acdlite x fb ensure get current props controlled components restorestateifneeded spicyj x fb iterable children eg immutablejs set etc gaearon x fb reuse hosttext bailing sebmarkbage x fb ensure rendersubtreeintocontainer twice enables context pass middle subtree ie two nested layer single context provider top spicyj x make hostcontainer appendinsertremove child instead always updating detach return child gets unmounted removed sebmarkbage x handle selection restoration x swap active fiber host node updated including listeners change know listener active needs remain even prepareupdate fixed x remove traversal x finddomnode findallinrenderedtree broken insertion happens happen look previous work progress deletes removes looks like current assume happen deletion done sebmarkbage x fb batch different roots together one commit reactupdatestest wo nt fix use portals instead x error handling error thrown detachref callbacks acdlite x ensure walk return treetraversal always get current fiber props possibly walk parentnode tree instead sebmarkbage x ensure switch tag names cover mixedupper case eg wo nt fix instead warn upper case used html tags sebmarkbage x scheduling issue causing reactcompositecomponentnestedstatetest fail performs first setstate second one task priority stuff fix acdlite x fb scheduling update render nt work mostly already warn setstate called render might required componentwillmount others calling callback sets state different component works currently complete phase resets updatequeue pending priority cause infinite loops happen apparently still used need either warnlog better upgrade everyone support fiber acdlite x toplevel context pushpop nt properly matched lots tests fail patch bvaughn x fb reentrant mounting synchronous mode spicyj phase x feature flag disable fiberonly features acdlite x polyfills alternate paths sebmarkbage x ismounted technically deprecated yet sebmarkbage x top level render callbacks second argument render x ensure server rendering works using stack fiber enabled x declarative portal api gaearon x add tests event bubbling need track changes top level event listeners get attached x react test renderer support iamdustan x react art support bvaughn x land basic react native support react repo bvaughn x mark root renders mount perf testing see tests marks toplevel updates bvaughn x merge callbacklist onto updatequeue instead separate field acdlite x separate priority level state updates acdlite x fix coroutine issue fiber passed user space could become stale sebmarkbage x dom dev tools gaearon phase unit tests known bugs push x fb fix bug used certain cases sebmarkbage acdlite x fb provide ability block event bubbling portals spicyj x unit tests reactfragmenttest invariants acdlite x unit tests reactdomproductiontest invariant acdlite x unit tests reactemptycomponenttest invariant acdlite x ensure replace calls sensible messages acdlite x unit tests reactmounttest acdlite x unit tests reactmultichildtest remove map children support stack acdlite x unit tests reactmultichildtexttest acdlite x rn fix event bubbling regression spicyj bvaughn x make sure babel nt generate bad code eg iife maybe fork babel plugin throw spicyj x rn land react update fbsource fiber disabled sebmarkbage x verify fiber works ie facebook map set open make sure works spicyj x fb figure ads image cropper issue spicyj x unit tests reactdomcomponenttest acdlite x unit tests reactcomponentlifecycletest warnings ex fdn render acdlite x allow assigning thisstate cwrp warning acdlite x unit tests reactstatelesscomponenttest warning trueadm x unit tests refstest trueadm x make new manual proptypes checker acdlite x unit tests reactcompositecomponenttest warnings ex setstate render acdlite x ensure break alluncaught exceptions works expected browsers acdlite x investigate modules unit tests fail remove stack trueadm x quick investigation fb requirejs perf trueadm x quick investigation fiber bundle perf cutting extra devonly code trueadm x fb move hidden check hostconfig phase release warn throw update container manually emptied outside react stack mounted brandnew tree fiber tries apply update usually fails keyanzhang sebmarkbage took blocks beta x extract proptypes separate npm package get package name acdlite x unit tests reactcontextvalidatortest pass correct previous deprecate feature remove test bvaughn x fb better fix reactarttext x update warning calling proptypes directly refer user api x docs updates test utils removed addons flarnie phase react native fiber x reimplement shallow renderer without stack dependencies lelandrichardson trueadm rn ensure keep important invariants text must wrapped block anything ensure call fb specific warning module instead one rn spicyj nt block anything oss internal fb x convert proptypes callers use checkproptypes acdlite x deploy forwarding modules reactlibreactcurrentowner reactlibreactcomponenttreehook fbjslibinvariant fbjslibwarning fbjslibexecutionenvironment fbjslibperformancenow fbjslibemptyobject fbjslibemptyfunction fbjslibshallowequal keep using providesmodule repo flat bundles better yet inverse switch using commonjs naming convention www sebmarkbage bvaughn see codemod away use instead nt block oss release x release new version reactredux whose peer compatible update rn use x enable feature flag one week landing sync x codemod flow errors yielded properly typing added types comments good enough x redesign host component type type host component refs integration upgrade compatible bvaughn x unblocks rn dev tools gaearon x unblocks rn inspector see known issues section pr gaearon make sure instanceprops nt leak sebmarkbage bvaughn phase flat bundlesrollup x make react perf work fiber reactperftest gaearon decided favor deeper timeline integration x unit tests reactcomponenttreehooktest gaearon x unit tests reacthostoperationhistoryhooktest gaearon x make list internal react modules required fb code x come better strategy dealing dev code make sure nt ship prod x change www sync script run rollup using commonjs source x shimming required files ex reactdominjection warning x exporting single bundle exposes internals need x make fowarding modules reactdometc well internal modules convert oss repo modules block release nicetohave follow x make separate dev nondev build one file www x convert oss repo rollup x replace current gruntgulp build system unified build system maybe purely using rollup add closure compiler advanced deal mangling properly block release nicetohave follow phase asynccompatible block release fix incremental regression regression fb fix resumemountclassinstance gets passed construct class otherwise rn aborting async work unmounting tree due error leaks native views add crossrenderer support portals necessary async art reactdomfiberrender return root instance render even priority deferred test cover incremental cases decide replacing priorities deadlines fix starvation phase serverside rendering x x unit tests reactrenderdocumenttest ssr reviving server rendered markup including rendering shadow dom containers phase improvements block release internal api consistently used exposing statenodes see x keywarnings fragments flarnie x nt mark update effect newly mounted components unless componentdidmount lifecycle add support enzyme fiber currently bailing equal propsstate equality means still copy children traverse meaning parent many children still lot work even bails skips pendingworkpriority referred children would know children additional work acdlite x unit tests reactdomtextcomponenttest normalize case reconsider contentreset flag cleaner solution clearing text content innerhtml changing insertion order reconsider storing masked contexts instances revert inputvaluetracking replace different comparison strategy gettersetters slow complicated subscription model nt helpful fiber goals principle listening lots events diffing value sound nt shipped oss yet hard fix probably get pushed back fiber drops lazy dom insertion order solution nt slow worth fixing leave slow wait fix browser related follow previous task use linked list acdlite ensure possible resume incomplete parents without rerendering shallow reuse store memoizedprops resuming completed parents already possible acdlite move callback invariant closer usage requested replace invariants warnings help code size", "num": "7925", "d": "10/2016"}, {"title": "dangerouslysetinnerhtml someofmytext causes chrome console developer tool freeze problem firefox though", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7924", "d": "10/2016"}, {"title": "detect click outside view component react native", "body": "want compress view component clicks outside view way", "num": "7910", "d": "10/2016"}, {"title": "bug sometimes selects last value dropdown", "body": "using value multiple times selection differs fiddle example issue chrome selects first option value testing iphone selects last option value solution consistent always selecting first option value", "num": "7908", "d": "10/2016"}, {"title": "fiber spillover child reconciliation", "body": "spillover nt plan initial batch fix text node merging edge case search forward find next sibling swap end text node sum previous value siblings trick lets us avoid backreferences tag include children updated recalculate children needed eg coroutines alternatively pass nearest host coroutine tree quickly flagged child changed insertmoves avoided added sideeffect list coroutines second option probably better possibly use two sideeffect lists two passes needed forward order possible x remove notion unnecessary extra traversal requires duck typing know terminal reconsider need backpointers several optimizations possible uses memory", "num": "7906", "d": "10/2016"}, {"title": "context support reacttestrenderer", "body": "want request feature report bug feature request current behavior nt appear way pass context calling attempting use snapshot testing jest component uses could provide context could create similar helper function enzyme expected behavior able provide context similar versions react browser os affected issue work previous versions react using react nt tried previous versions react", "num": "7905", "d": "10/2016"}, {"title": "data updating", "body": "data atributes updating using react redux input fields dataerror atribute dataerror property used give feedback user field valid inital state looks like component looks like passed component via javascript const mapstatetoprops error gt error const mapdispatchtoprops dispatch gt export default connect mapstatetoprops mapdispatchtoprops component hit submit helper validates data data valid helper calls reducer return something like using redux logger inspect get desired state continues instead", "num": "7903", "d": "10/2016"}, {"title": "strange second argument passed event handler always undefined", "body": "found bug attached event listener property like event listener called arguments synthetic event strange undefined value think normal behavior handler called single param event object windows chrome react version", "num": "7902", "d": "10/2016"}, {"title": "bypass synthetic event system web component events", "body": "use web component react must directly attach event listener react ref wc could change implementation react detects custom element tag names dashes like bypass synthetic event system whitelist attach event listener element bypass synthetic event system anyway already need bypass manually using web component familiar react codebase naive approach seems work whoever uses web components react responsible whatever downsides would cause maybe performance nt know already supposed downsides issue convenience wc usage inside react send pr thought opening issue looked issues nt see existing one related handling wc events current behavior wc custom event eg must handled attaching event listener directly element componentdidmount using ref react js class hellomessage extends reactcomponent handlehelloclick thisrefs foo toggle handleflipend ev consolelog handle flip end componentdidmount thisrefs foo addeventlistener flipend ev gt thishandleflipend ev render return front back expected behavior wc custom event handled reactelement corresponding wc js class hellomessage extends reactcomponent handlehelloclick thisrefs foo toggle handleflipend ev consolelog handle flip end render return front back ps snippet still unrelated reasons ideally would nt need refs handling events wcs", "num": "7901", "d": "10/2016"}, {"title": "shallowcompare stateless components", "body": "want request feature report bug report bug confusion point current behavior implementing inside always return true pass param expected behavior would expect method handle cases passed documentation clear stating must pass versions react browser os affected issue work previous versions react using react specific browser os", "num": "7900", "d": "10/2016"}, {"title": "syntheticeventkey property unidentified safari mac os x", "body": "bug current behavior using standard onkeydown event syntheticeventkey property unidentified safari key pressed fiddle expected behavior syntheticeventkey provide proper values standard keyboard inputs letters numbers numberpad arrows backspace etc chrome since webkitbased browsers version info mac osx el capitan react safari", "num": "7897", "d": "10/2016"}, {"title": "dom contents ready first update incognitoprivate window", "body": "bug current behavior attempting load data api display scroll url fragment deep document window partially scrolls may browser behavior ca nt figure reliably wait content painted scrolling view first attempt example showing issue open new incognito chrome private firefox window paste type sorry ff url data loaded itunes saved state triggered triggered used let dom painting occur dom node deep document queried attempted scroll view correct node red background never seen work fresh incognitoprivate window issue using suggested answer discussion expected behavior dom node scrolled view versions react browsers os work previous versions react", "num": "7889", "d": "10/2016"}, {"title": "inconsistent state setstate componentdidmount", "body": "working library needs initialized componentdidmount according documentation getting expected results update state like javascript class chartcontents extends reactcomponent constructor super thisstate stxx componentdidmount let stxxnew stxchart thischartcontainer stxxnewchart spy sampledata thissetstate stxx consolelog consolelog thisstate render const style height position relative width return view object debugger find state updated object chartcontents newly created chart try access returns empty object initialized also see eslint warning wondering solve problem thanks", "num": "7886", "d": "10/2016"}, {"title": "thinking react tutorial update", "body": "thinking react one important well written tutorials beginners even advanced developers would like update increase readability also would like replace jsfiddle react docs highlighter first suggestions jsx replace var productcategoryrow reactcreateclass render function return thispropscategory function productcategoryrow category return category jsx replace var productrow reactcreateclass render function var name thispropsproductstocked thispropsproductname return name thispropsproductprice function productname product return function productrow product return productprice continue nt worth effort", "num": "7885", "d": "10/2016"}, {"title": "docs request build react component library", "body": "important section think lot folks end piecemealing would super useful terms ecosystem support", "num": "7882", "d": "10/2016"}, {"title": "reacttestrenderer missing files", "body": "installing reacttestrenderer npm brings indexjs file referenced lib folder exist", "num": "7880", "d": "10/2016"}, {"title": "reactaddonstransitiongroup creates multiple copies react", "body": "scenario react library amp code using webpack build process react gets bundled twice including webpack build process apart increased build size fine webpack build process however try use react component built another project angular project using ngreact load react globally library creates issue multiple copies react refsmusthaveowner problem comes react using one globally one gets bundled anybody else encountered issue workaround plan make peer dependency require directly sure major change asking anyways please correct misunderstood problem anyways ps sorry previous issue accidentally hit enter github created issue", "num": "7874", "d": "10/2016"}, {"title": "declaring react", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7872", "d": "10/2016"}, {"title": "unable add css react app", "body": "making react js app trying add bootstrap css app following code webpackconfigjs var webpack require webpack contextpath processcwd indexhtml checked network request app getting file styles getting applied components following component import react component react please help solving issue", "num": "7860", "d": "10/2016"}, {"title": "show component stack invalid type warning element creation", "body": "foo valid string function show error message include owner name please check render method bar full parent stack show warnings like key warnings prop types call reactcomponenttreehook get full stack possible", "num": "7856", "d": "10/2016"}, {"title": "svg xlinkhref breaks tabkey focus safari", "body": "want request feature report bug bug report current behavior safari given document fields separated uses focusing first pressing tab key focus switched second input instead address bar another browser element gets focused sure issue react safari could reproduce safari without using react opening issue current behavior bug please provide steps reproduce possible minimal demo problem try use tab key jump first second input field expected behavior pressing tab key sets focus second input field works fine browsers versions react browser os affected issue work previous versions react safari version osx react", "num": "7852", "d": "10/2016"}, {"title": "custom renderer api support", "body": "working upgrading renderers documentation current master build installing following along knew hard breaking changes wanted begin discussion commitments react willing make time support use case rather trying figure current apis needed front like begin looking mount entry point discuss apis could exposed covered apis reactmount reactmount reactnativemount reacttestmount entry points three facebookreact supported renderers live codebase first class access number internals external renderers currently get specifically modules access reactreconciler instantiatereactcomponent helper function create correct react component type host composite text also part reconciler reactupdates understanding part reactreconciler reactinstrumentation bridge react internals devtools limited react devtools modules see used fb renderers beyond may worth future consideration though understand important unblock renderer development understanding renderers method dependent upon reconciler bridge renderer semantics react core reconciler become effectively private nonshareable recent build changes done today allow renderers continue existing experimenting release cycle initial ideas get feedback possible direction would acceptable ideas comes developerconsole warnings unsupported nonguaranteed api could break moment including patch releases expose minimal reconciler surface area create package", "num": "7850", "d": "10/2016"}, {"title": "windows development issues", "body": "issues developing windows fresh install master running causes test suites fail error changing teststests seems fix issues last character escape character invalid regex another regex error though sure regex comes though also error looks like unix git bash crossover issue possibly another escape character issue anyone run windows similar issues", "num": "7849", "d": "10/2016"}, {"title": "update unknown props warning page", "body": "current behavior write jsx component without upper case react gives unknown prop warning finally remember react jsx uses upper vs lower case convention distinguish local component classes html tags think could useful remind unknown props warning page reason warning spent time debugging understanding warning case might one expected behavior update unknown props warning page add reason warning could appearing using jsx component without upper case react treats html tag probably nt recognize props react jsx uses upper vs lower case convention distinguish local component classes html tags versions react browser os affected issue work previous versions react use react let know think could useful nt enough careful", "num": "7848", "d": "10/2016"}, {"title": "react lets access dom internal instances", "body": "current behavior reactdomcomponenttreejs gives easy access react internal instances even property name randomly generated instance following piece code lets access redux state placed context might lead security issues potentially malicious thirdparty scripts selfxss something like following piece code considerable order expose things javascript const instancemap const setinstance node instance gt const id nuid node internalinstancekey id instancemap id instance const removeinstance node gt delete instancemap node internalinstancekey const getinstance node gt return instancemap node internalinstancekey", "num": "7846", "d": "10/2016"}, {"title": "log warning user setting dom properties web component", "body": "current behavior using web components react cumbersome properties copied attributes without transforming lot said confusing developers trying use web components using react expected behavior much like using property logs warning suggest property key exists raise similar warning user knows happening expected behavior bug proposal acceptable pr ready sent thoughts", "num": "7845", "d": "10/2016"}, {"title": "react clearing datareactid datareactchecksum attributes dom mount", "body": "current behavior rendering react view server react appears mount without errors client remove attributes dom far observed issue using react router also reported reacttrainingreactrouter rr folks characterized react issue current behavior bug please provide steps reproduce possible minimal demo problem repro repo expected behavior mounting react remove extra attributes dom versions react browser os affected issue work previous versions react react browsers tested far chrome safari ie appear get better rolling back earlier react versions could reproduced react router lt happy provide much debugging information honestly sure start troubleshooting thanks advance guidance illumination provide", "num": "7844", "d": "10/2016"}, {"title": "error preload attribute video windows", "body": "want request feature report bug bug current behavior get error using video element react current behavior bug please provide steps reproduce possible minimal demo problem via similar template screenshot error expected behavior versions react browser os affected issue work previous versions react react ie windows", "num": "7839", "d": "9/2016"}, {"title": "group radio button requires defaultchecked attribute work properly firefox", "body": "", "num": "7838", "d": "9/2016"}, {"title": "input nt fire focus event focused programmatically", "body": "assign callback call method actual element react wo nt fire event related callback wo nt called problem react dom method fire event version update called support firing events design think", "num": "7835", "d": "9/2016"}, {"title": "mobile friendly docs", "body": "like contribute make react docs mobile friendly cry every time need look something phone attempt time ago pr apparently abandoned author like wait sending pr accept navigation design reset pretty straightforward guess pretty much would see removed downloads tab phone place case little gif almost identical react native docs would kind consistency rather like avoid sticky header takes much space cc lacker gaearon advised contact one", "num": "7833", "d": "9/2016"}, {"title": "unexpected interleaving subtreeparent lifecycle methods", "body": "repro example click handler subtree queues update subtree parent components following ordering lifecycle methods parent update child update subtree update child update parent update subtree update parent component unmounts subtree cause subtree unmounted time method called parent update child update subtree update child update parent update unmount subtree subtree unmount subtree update expected behavior probably parent update child update subtree update child update subtree update parent update", "num": "7827", "d": "9/2016"}, {"title": "dangerouslysetinnerhtml working properly simple example", "body": "using react latest tried goes wrong works nt description property normal string html content however rendered string html reason suggestions", "num": "7825", "d": "9/2016"}, {"title": "react fails update textnode", "body": "want request feature report bug bug current behavior react fails update text nodes current behavior bug please provide steps reproduce possible minimal demo problem via similar template close could get reproduction think jsfiddle nt work though masking real problem see expected behavior dom updatesdoes nt throw error versions react browser os affected issue work previous versions react react internet explorer sure ever worked feeling nt submitting pr shortly know nt actively supporting actually pretty simple fix hope outlined issue well enough", "num": "7824", "d": "9/2016"}, {"title": "always empty object", "body": "trying set context react app somehow ca nt acces context childrens parent class javascript import react react import menubar menubarjs export default class app extends reactcomponent static childcontexttypes prop reactproptypesbool getchildcontext return prop true render return children class javascript import react component react export default class menubar extends component constructor props context super props context consolelog thiscontext consolelog context render consolelog thiscontext return menubar consolelog return empty object something wrong", "num": "7823", "d": "9/2016"}, {"title": "nt trigger warnings prop null", "body": "want request feature report bug bug current behavior unexpected prop component prop meant generated html dom set null react triggers warning actual use case reusable component called either actual code html output activeclassname attribute second case nt react warning example reproducing reproduced issue simple example expected behavior nt warn prop defined null therefore never generated dom versions react browser os affected issue work previous versions react react version os ubuntu mac os x chromium google chrome", "num": "7820", "d": "9/2016"}, {"title": "tests errors compiling linux", "body": "want request feature report bug bug probably still unsupported arch current behavior trying compile react linux get two tests errors fail srcrendererssharedhookstestsreactcomponenttreehooktestjs reactcomponenttreehook stack addenda gets created expected constructor unknown jasminebuildexpectationresult objecteval tryontimeout timerlistontimeout fail srcisomorphicclassicelementtestsreactelementvalidatortestjs reactelementvalidator warns keys arrays owner parent info expected warning child array iterator unique key prop check toplevel render call using see information div warning child array iterator unique key prop see information div jasminebuildexpectationresult current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior pass tests versions react browser os affected issue work previous versions react linux react version", "num": "7816", "d": "9/2016"}, {"title": "shape validation recognize deconstructed props attributes", "body": "bug shape validation recognize deconstructed props attribute failing example deconstructed props const foo bar gt barbaz fooproptypes bar reactproptypesshape baz reactproptypesstring working example non deconstructed props const foo props gt propsbarbaz fooproptypes bar reactproptypesshape baz reactproptypesstring", "num": "7815", "d": "9/2016"}, {"title": "warned manually calling reactpropttypes validation function", "body": "nt think though component import react react export class timeline extends reactcomponent static proptypes cls reactproptypesstring timelinetitle reactproptypesstringisrequired timelinebyline reactproptypesstring timelineevents reactproptypesarray get warning every proptype defined component", "num": "7810", "d": "9/2016"}, {"title": "pass inline css variables", "body": "tried get warnings nt think react support yet", "num": "7808", "d": "9/2016"}, {"title": "using proptypes", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7807", "d": "9/2016"}, {"title": "reactchildrenmap nt work function child components", "body": "create component accepts functions children able use map returns nothing instead use throws error one child js bin illustrating issue sure bug intended functionality recommended build components way js bin example using react experiencing well", "num": "7806", "d": "9/2016"}, {"title": "enter leave timeout csstranstiongroup", "body": "want request feature report bug bug current behavior everything works warning console current behavior bug please provide steps reproduce possible minimal demo problem via similar template using csstransitiongroup appear animation enter leave expected behavior need provide timeouts appear suffice", "num": "7805", "d": "9/2016"}, {"title": "upgrading react causes development build crash", "body": "application crashes upgrade react works fine earlier versions diff looks like gif crash recorded using browserstack start recording google loaded dev tools open navigated apps url see crashes hard nothing logged console browsers load app fine seems crash guys drop support ideas might causing", "num": "7803", "d": "9/2016"}, {"title": "jsx spread tag proposal", "body": "feature request common request developers allow returning multiple elements inline expressions jsx use case would pseudocode would react generate either depending value flag stands would work two consecutive tags would transpile single expression several approaches problem wrap elements kind parent tag always acceptable use arrays would make react complain elements second array unique property adding property would take extra effort use keyed fragments requires using addons assigning arbitrary keys fragments syntax quite cumbersome use directly making benefit spread syntax straightforward way would equivalent either jsx anymore proposal make use latter solution jsx extending jsx spread tag tag could used nontop element jsx tree could contain single js expression curly braces must evaluate array way original problem could solved writing would transpile follows almost simple naive solution top produces exact effect developers variable number arguments need create keys wrap elements dummy tags", "num": "7801", "d": "9/2016"}, {"title": "problems changing value uncontrolled number input chrome", "body": "want request feature report bug bug current behavior jsfiddle try edit default value something else like soon insert dot cursor stars jump input versions react browser os affected issue work previous versions react working chrome react also try go far back tried old jsbin react worked firefox correctly working", "num": "7799", "d": "9/2016"}, {"title": "manipulating dom componentdidupdate", "body": "hi like question like open discussion regarding dom manipulation creating react plugin dom calculations css powerful enough cover everything plugin needs problem need adjust css properties depending return value getboundingclientrect dom element rendered component technically options calculate calling calculated values afraid infinite loop could happen certain cases would nt go one like play bit seems complex readable lot questions pop dependent certain use case update dom componentdidupdate solution decided go works simple stable works intended however feel edge wanted double check ok way things ok manipulate dom called everytime done ok throwing away changes next modify dom part code componentdidmount thisrecalculateindent componentdidupdate thisrecalculateindent recalculateindent calculate indent based getboundingclientrect dom reference thistextarearefstyletextindent render return", "num": "7797", "d": "9/2016"}, {"title": "receive outside events without leaving react system", "body": "feature request right way respond outside world events leave react event system add native dom listener bad since require mental overhead work need think event listener receiving native event react synthetic event also simply possible computed eg also makes hard react events handlers interrupt dom handlers consider following example intuitive react listener stop propagation spoiler react also listens use js var example reactcreateclass render function return documentaddeventlistener keydown function alert still fire reactdomrender documentgetelementbyid react example want deal outside events simple drawing tool must listen stop drawing process solve problem propose new public api something like behave like regular dom node callbacks receive get called triggering two phase dispatch respects order well everything expect listening example replace new event root correctly applied", "num": "7795", "d": "9/2016"}, {"title": "documentation inconsistencies around parentchild vs ownerownee", "body": "want request feature report bug bug looking documentation describes difference parentchild relationship compared ownerownee relationship tutorial talks parentchild relationship ownerownee relationship ownerownee terminology commonly used feel like time read tutorials read parentchild relationships even parent passing props child would ownerownee relationship happy make whatever changes need made documentation tagging lacker gaearon", "num": "7794", "d": "9/2016"}, {"title": "svg switch tag", "body": "feature request plans make sense add svg tag see example usage use case following script thanks reactdom renders svg server side image context foreignobject rendered switch tag could useful", "num": "7792", "d": "9/2016"}, {"title": "onchange events ca nt stoppropagation amp", "body": "want request feature report bug bug current behavior onchange events ca nt stoppropagation throw error trigger change events current behavior bug please provide steps reproduce possible minimal demo problem via js var hello reactcreateclass render function return log function e consolelog change stop function e estoppropagation reactdomrender documentgetelementbyid container expected behavior span trigger onchange events type input amp versions react browser os affected issue work previous versions react amp", "num": "7791", "d": "9/2016"}, {"title": "flickering ui scrolling react app", "body": "want request feature report bug bug current behavior built react web app using react redux rendered webview long paginated list rendered shows flickering kind behaviour loading ui scroll page scroll fast takes second two render ui properly also problem found android webview browser current behavior bug please provide steps reproduce possible minimal demo problem via similar template link screencast recorded expected behavior nt flickering scrolling webview browser versions react browser os affected issue work previous versions react react redux android webview", "num": "7787", "d": "9/2016"}, {"title": "onblur nt work tag clicked", "body": "want request feature report bug bug current behavior textarea onblur nt work headertag one children clicked current behavior bug please provide steps reproduce possible minimal demo expected behavior blur event triggered focus gone textarea whatever element click versions react browser os affected issue work previous versions react chrome windows nt work also", "num": "7786", "d": "9/2016"}, {"title": "api suggestion extend reactcomponentprototype", "body": "component library author constantly use cases want every single component one properties polymer handles exposing polymerbase likely become static method examples themesstyles props behaviors know recommended best practice use hoc wrapping even decorating every single component gets tedious implicit library consumers much like context merging props messy always reliable depending use case know one would benefit something like search react discuss forums", "num": "7785", "d": "9/2016"}, {"title": "support slot attribute shadowdom dom elements", "body": "want request feature report bug feature guess current behavior react nt support attribute comes shadowdom throw error web component nt working code rendered html error current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior support new dom attribute standard versions react browser os affected issue work previous versions react react chrome osx el capitan", "num": "7784", "d": "9/2016"}, {"title": "jsfiddle official website working", "body": "want request feature report bug bug current behavior work code executed two files loaded facebook servers return error current behavior bug please provide steps reproduce possible minimal demo problem via similar template go click link bottom go click link jsfiddle text expected behavior generated output result pane versions react browser os affected issue work previous versions react chrome latest stable mac os safari mac os", "num": "7782", "d": "9/2016"}, {"title": "deleting decimal values number inputs", "body": "already chimed problems another issue type number start deleting delete cursor jobs way left think problem fact considered valid number sure came react browser specified value valid number value must match following regular expression dddd ee", "num": "7781", "d": "9/2016"}, {"title": "proper pattern controlled input type number blank initialization", "body": "say building controlled react element returns proper way initialize want start blank value equivalent anything think pass throws errors antipattern nt want hack text input like take advantage builtin min max step functionality passing warning failed prop type invalid prop value type string supplied numinput expected number passing warning value prop input null consider using empty string clear component undefined uncontrolled components passing warning numinput changing uncontrolled input type number controlled input elements switch uncontrolled controlled vice versa decide using controlled uncontrolled input element lifetime component", "num": "7779", "d": "9/2016"}, {"title": "bug react onchange synthetic proxy events recycled issue handler debounced", "body": "current behavior confirmed also happens today js class foo extends reactcomponent render const handlechange debounce thispropsonchange return reactdomrender documentqueryselector div expect get get without debounce works expected possibly related", "num": "7778", "d": "9/2016"}, {"title": "notification index please ignore issue", "body": "refer dom element within jsx props without using ref class mycomponent extends component constructor props thisstate selectedoption getclassname e return etargettextconent thisstateselectedoption selected onnodeselected e thissetstate selectedoption etargetcontexttext return still much tempted pass refer current dom element update answer ca nt use always stands current component matter use correct approach pass explicitly eg know refer pass value directly without using keyword", "num": "7776", "d": "9/2016"}, {"title": "safari error navigatoruseragentindexof function", "body": "typeerror navigatoruseragentindexof function navigatoruseragentindexof chrome navigatoruseragentindexof undefined", "num": "7775", "d": "9/2016"}, {"title": "react throws warning concerning unique key prop collection one element", "body": "want request feature report bug bug current behavior create list elements contains one element element key undefined render list properly react throws warning current behavior bug please provide steps reproduce possible minimal demo problem via similar template example expected behavior expected behavior list contains one element therefore key unique warning nt displayed versions react browser os affected issue work previous versions react appeared following versions react reactdom worked previous version react reactdom", "num": "7774", "d": "9/2016"}, {"title": "redux realworld", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7772", "d": "9/2016"}, {"title": "ship", "body": "might little ways going start process definitely want run rc push react native want people play big packaging change potential issues", "num": "7770", "d": "9/2016"}, {"title": "input autofocus causes focus emitted ref", "body": "reproduce chrome", "num": "7769", "d": "9/2016"}, {"title": "add date created docs", "body": "docs request could dates added docs version writtenintroduced instance could include date written introduced ecosystem", "num": "7768", "d": "9/2016"}, {"title": "input elements switch uncontrolled controlled disabled readonly", "body": "want request feature report bug bug current behavior input elements readonly disabled updated value inital render produce warning child changing uncontrolled input type text controlled input elements switch uncontrolled controlled vice versa decide using controlled uncontrolled input element lifetime component current behavior bug please provide steps reproduce possible minimal demo problem expected behavior warnings versions react browser os affected issue work previous versions react browser related behaving correctly got warning dev console", "num": "7767", "d": "9/2016"}, {"title": "ca nt isomorphically check proptypes reactdomstream ssr without warnings react", "body": "helpfully checks rendering static html stream course react warns case user warning manually calling reactproptypes validation function head prop html deprecated work next major version may seeing warning due thirdparty proptypes library see details page link advises party libraries use external libraries wo nt work case trying call user put components rather providing helpers like party libraries author page seems considering eg prevent errors user would remove components replace usages code library using party components declare would luck intended solution conflict unanticipated", "num": "7765", "d": "9/2016"}, {"title": "forceupdate defaultvalue", "body": "throwing reading way update saw one idea using wanted use key input working nt change key input looks like run program type input box get thing update rerender atleast think rerendering typed values actually applied rerender toggle update later debugged problem made still called function btw better solution appreciate", "num": "7764", "d": "9/2016"}, {"title": "react github page localization issue", "body": "hello im korean im helped react korea page page sidebar translated english sidebar elements moved us clicked korean issue japanese hope issue solved thanks", "num": "7763", "d": "9/2016"}, {"title": "problem element", "body": "bug safari nt know react problem reactrouter problem could reproduce repo beginning website two links home select click select change value select element anything change select new one click home select page still see select open problem ios", "num": "7762", "d": "9/2016"}, {"title": "react call children components render calls parent component render", "body": "spicyj implementing wizard framework basic design like wizard container contains previousnext buttons several wizard pages wizard container maintains ref current wizard page next button clicked wizard container submit current wizard page invoked thru ref sample code wizard page problem see using objectassign set new state current wizard page see every time click next button wizard container alert box pops saying current wizard page rerendered however child component wizard page alert box businessinfoform render function well understand child component businessinfoform since passed prop remains prestine boolean true need rerender behaviour kind makes sense however parent component gets rerendered nt children component get destroyed reconstructed seems like children components cached rerendered needed know may call forceupdate force children components rerender simply pass new object instead boolean interested react framework designed finding solution yeah know debug source code nt want go far cheers", "num": "7761", "d": "9/2016"}, {"title": "feature request allow stateless components render plain string", "body": "occasion would cleaner stateless functional component render plain string perhaps type satisfies without needing wrap element imagine lending well leaf components less sure would possible solve plain nodes root though sorry discussed could nt find existing issues looked related", "num": "7760", "d": "9/2016"}, {"title": "rfc idea forcedeepupdate forcedeepupdatewithscope scope", "body": "going put feedback motivation subscription management comes cost eats wins async rendering since needs managed synchronously managing direct subscriptions managing dynamic dependency graph invalidated meanwhile subscriptions used data never update least apps pure loss use case connecting third party systems nt easily connected top level data tree proposal use case reading global mutable state reason use bypass entire subtree basically rerender everything combined fiber lowpriority update bad things change lot things good example would changing locale regardless read global mutable locale like airbnb context locale like yahoo lets change need without needing manage subscriptions cases nt need would traverse subtree start rendering returns arbitrary argument allows bit targeted update convenience overhead additionally react would cache pair responded number scopes back new component gets mounted might check cache see need add cache effectively creates lazy subscriptions use case something like typing input field updates global store immediately displays completely different place page first character might bit slower still responsive levels subsequent characters fast update caveat major downside proposal relies mutation know react nt really like mutation many reasons effect fiber example component gets higher priority update start using new value components rely mutable state effectively become upprioritized good temporarily show inconsistent data point making kind update lower priority likely large larger updates stall page take priority higher priority updates thereby defeating benefits fiber anyway like try come variant api nt rely mutation", "num": "7759", "d": "9/2016"}, {"title": "improve tutuorial remove remarkable", "body": "using remarkable helpful big portion reader hurts clarity simplicity tutorial request remove", "num": "7758", "d": "9/2016"}, {"title": "use camelcase event type name", "body": "want request feature report bug feature current behavior returns original lowercase event type name description library component author would nice receive event type camelcase way react requires name camelcase passing prop would allow authors pass props easier allow people still hook events example usage etype totally doable right would require third party addon function keep track new events added react would nice react provided camelcase name us", "num": "7755", "d": "9/2016"}, {"title": "upgrade react warning", "body": "since upgrade react always reported information", "num": "7754", "d": "9/2016"}, {"title": "docs request examples guidance toplevel api methods", "body": "would handy simple examples guidance use thanks", "num": "7752", "d": "9/2016"}, {"title": "rename lifecycle methods", "body": "feature request consider renaming byzantine lifecycle method names mean come componentdidupdate componentwillreceiveprops shouldcomponentupdate react declarative huh concise method names easy reason react claims rendered updated sometimes think react team invented rest instead get post clientwillretrievedata clientwilltransmitdatawithparameters lifecycle implies passage time method names succinctly indicate things within cycle method names useful developers building applications compound portmanteau words reflect internal engineering complexity", "num": "7751", "d": "9/2016"}, {"title": "ship", "body": "shipped safe go straight final wanted get published first case nt get tonight remind ship final need write changelog", "num": "7749", "d": "9/2016"}, {"title": "note used classes docs", "body": "currently docs getinitialstate mention method used class syntax could use note like one replacestate method available classes caused least little confusion stackoverflow question react", "num": "7746", "d": "9/2016"}, {"title": "receiving userentered input", "body": "want request feature report bug feature current behavior serving controlled inputs serverside reactdom user might entered data already clientside react executed case data user entered gets overwritten initial value current behavior bug please provide steps reproduce possible minimal demo problem expected behavior mechanisms available available capture input one natural solution imagine way capture user entered text could hack together manually plucking content dom interested know reacty solution possible default discarding user input unlikely desired developer user versions react browser os affected issue work previous versions react observed working previous versions react see chrome mac os x react", "num": "7745", "d": "9/2016"}, {"title": "bug shallow rendering work properly react stateless function components", "body": "bug react stateless functions cause cyclic rendering shallow rendered javascript import react react const component gt return describe test case gt let shallowrenderer beforeeach gt shallowrenderer reactaddonstestutilscreaterenderer describe render gt render properly gt shallowrendererrender const output shallowrenderergetrenderoutput expect output toequal error test case failed expected test case pass", "num": "7743", "d": "9/2016"}, {"title": "refs", "body": "want request feature report bug bug current behavior possible test component use utilitiestesting refs always javascript flow import react react export default class foo extends reactcomponent future refs bar javascript import react react import renderer reacttestrenderer valide ref gt const foo renderercreate expected behavior ref usable versions react browser os affected issue work previous versions react tested versions", "num": "7740", "d": "9/2016"}, {"title": "fix flow issues introduced", "body": "missed flow nt run properly travis clear introduced bunch new flow failures nt bad like say break buy one aweary couple preexisting flow issues vjeux going fix mostly testrenderer issues", "num": "7735", "d": "9/2016"}, {"title": "blacklist opera developer plugin notice", "body": "opera sending chrome user agent nt plugin release opera need massage browser detection show warning relevant code", "num": "7734", "d": "9/2016"}, {"title": "event dispatch fails unmounting", "body": "current behavior repro click click fails react dom tree root always node reference expected behavior failure event dispatch stops versions react browser os affected issue work previous versions react chrome os x certain worked maybe related", "num": "7733", "d": "9/2016"}, {"title": "jsx alternative syntax passing jsx content props", "body": "silly succinct example today say proposal support alternative inspired xaml short element name contains first part parent element name second part prop name content becomes value passed prop nothing else changes merely alternative way specify prop value remains consistent xml allowed indeed xaml forced order xml dialect yet flexible properties specified objects jsx nt challenge nevertheless complex examples would lessen brain eyestrain keep structure tree obvious staying jsx syntax instead blocks stretching across many lines layers nesting alternating syntaxes enhancement say today say prop elements purpose attributes optionally specify valueless attributes become parameter names function function passed prop maps exactly previous example attributes specified nothing variable content depend hence simple value rather function returning value found prior issue seemed asking something similar nt precisely mapped existing concepts talking anything changes model way staying jsx reducing mental overload switching syntaxes writingreading trees", "num": "7732", "d": "9/2016"}, {"title": "prop type invalid must function", "body": "hi declaring prop types component one props definition react gives confusing error component rendered link reproduce hit run button console", "num": "7728", "d": "9/2016"}, {"title": "skip comparing known constant props reconciliation", "body": "want request feature report bug feature current behavior currently whether prop expected change passed props way us developers mark prop fixed never change lifecycle component expected behavior would static properties ie change instance instance created initial render never change original ideally though sure implementation would also always original perhaps something like advantages allowing props explicitly marked fixed shouldcomponentupdate would better lot certain props automatically nt ca nt change allow errors warnings prop marked fixed changed initial render possible compiler render optimizations knowing particular props never change course multiple renders particular component fixed props including children know render output fixed inline output parent render output one possible api would allow separate fixedprops category maintain signature jsx one mediocre idea would something like another would separate prop called fixed something similar would critical would merged component actually created would always contain props functional components still get one arg thus nobody rewrite render component", "num": "7720", "d": "9/2016"}, {"title": "state prop collecting geoloacation data even component mounted", "body": "ok problem map component gets someones current location every x seconds stores data array launch app home scene option opening map new scene using navigator select button route coordinates seem collecting even rendered map view component mount javascript componentdidmount thissetstate routecoordinates console log routcoordinates beginning componentdidmount give empty array problem seems secretly rendering even navigated map component console logged routecoords immediately render navigate map component output gives latitude longitude latitude gettersetter longitude gettersetter latitude longitude latitude gettersetter longitude gettersetter latitude gettersetter longitude gettersetter latitude longitude latitude gettersetter longitude gettersetter latitude gettersetter longitude gettersetter latitude gettersetter longitude gettersetter latitude longitude want start fresh every time mount component setstate irrelevant set start collecting data even componentdidmount gets run", "num": "7719", "d": "9/2016"}, {"title": "bug false positive plain object warning", "body": "bug logic determining plain object bug results false positive flooding console hundreds instances warning expected props argument plain object properties defined prototype chain ignored code failing reactelementjs line branch line number probably different master configproto null configproto objectprototype fails props object created one iframe uses instance react another frame browser windowtabframe instance object constructor instance always results check demo shows falsepositive warning message", "num": "7718", "d": "9/2016"}, {"title": "log warning development mode", "body": "want request feature report bug feature ref tweet dan currently easy use react mode production little warning library happening takes fair bit googling know tucked away advanced performance docs nt include directions webpackbrowserify start recommend react always log message console development mode something like running development mode use production mode flags speed code stands hope prevent misses", "num": "7713", "d": "9/2016"}, {"title": "attach react component already rendered dom rendered react server", "body": "like keep traditional server side rendering react rendering node attach client side code believe following statement might help achieve wonder work done help guide mix server rendered content via server side template react moment would greatly appreciated states reactdomrender modify container node modifies children container future may possible insert component existing dom node without overwriting existing children", "num": "7712", "d": "9/2016"}, {"title": "bug click disabled click", "body": "bug following jsx const component gt click clicking trigger whereas clicking red trigger demo thanks react incredibly well designed tool", "num": "7711", "d": "9/2016"}, {"title": "class name manipulation native", "body": "page currently suggests external dependency npm provided react instead include lines code react eliminate external dependency", "num": "7709", "d": "9/2016"}, {"title": "search box website wrong font", "body": "nt match rest text think right place stylesheet fix", "num": "7706", "d": "9/2016"}, {"title": "anyway retrieve field meta object externally", "body": "hi hoping retrieve field meta attribute field rendered know field error actually wrapping field pop edited later want know whether field error use allowed continue example finding reference meta object access meta object customcomponent field anyway without storing variables access meta input objects reference field", "num": "7705", "d": "9/2016"}, {"title": "unable transform const layout rest props via babel", "body": "ran error ran react code warning unknown prop tag remove prop element details see jump link replaced code first good example listed page pass babel transpiling error syntaxerror jsxtttjsx unexpected token function mydiv props const layout rest props layout horizontal return else babelrc file like miss something react doc needs modified want request feature report bug report bug something wrong doc current behavior babel transform code posted react official site current behavior bug please provide steps reproduce possible minimal demo problem via similar template copy following code running babel transpile transpiling stuck spread operator expected behavior pass transpiling versions react browser os affected issue work previous versions react babel babelpresetreact", "num": "7703", "d": "9/2016"}, {"title": "react thinks input readonly", "body": "want report bug input value set thisstate value manipulated using onkeydown event console next error warning failed form proptype provided prop form field without handler render readonly field field mutable use otherwise set either check render method input readonly gets edited means error nonexistent reproduce could add value handler handler something like class myinput extends reactcomponent onkeydown e thissetstate inputvalue thisstateinputvalue render return expected behavior would without console error component works exactly expect react", "num": "7700", "d": "9/2016"}, {"title": "reactcloneelement thispropschildren thisprops copies children thispropschildren children", "body": "please run js fiddle given copies children propschildren child child also renders children using method infinite loop established browser maximum call stack size exceeded ideally cloning children property props child left untouched", "num": "7692", "d": "9/2016"}, {"title": "issue input formatting value state", "body": "want request feature report bug want report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template case trying format value input thousand separator javascript formatnumber ev typing number everything well number exceeds value state becomes setting original target value using setstate loggin formatted value works expected javascript formatnumber ev codepen problem expected behavior using intlnumberformat svse values following works works work work versions react browser os affected issue work previous versions react unaware worked previous version react using react reactdom tested latest version chrome firefox", "num": "7688", "d": "9/2016"}, {"title": "reactchildrencount incorrect false value", "body": "want request feature report bug think bug current behavior try use children contains child value result one example function root return false function hello children return count reactchildrencount children toarray length reactchildrentoarray children length render replace count fiddle demonstrates issue expected behavior count nt include nodes versions react browser os affected issue work previous versions react repro firefox chrome nt know worked previous versions react", "num": "7685", "d": "9/2016"}, {"title": "edge file input inside label keeps reopening file explorer window", "body": "want request feature report bug want report bug current behavior using inside ms edge file explorer window keeps reopening happens way close edge killing process current behavior bug please provide steps reproduce possible minimal demo problem via similar template place inside like expected behavior file explorer window closed either selecting file cancelling file explorer window closed remain closed versions react browser os affected issue work previous versions react react version browser ms edge os windows nt test previous react versions", "num": "7683", "d": "9/2016"}, {"title": "umbrella new lifecycles ideas", "body": "use gather ideas new lifecycle methods help avoid existing problematic cases using fiber async rendering solutions gets called entire tree rendered server useful aborting buffered renders logging got idea could possibly replace similar happens asynchronously spare cycles component already appeared screen way triggering things like io nt block component rendering screen dropping frames since synchronous appropriate use flux store subscriptions since may missing events way however use lazy subscriptions alternative solution similar would happen spare cycles clean purposes clean synchronously needed may needed separate lifecycles since possibly make async would fiber specific thing unlike current actually happens children called right sideeffects committed dom use case reading current scroll position reset later nt work async rendering scroll could possibly replace", "num": "7678", "d": "9/2016"}, {"title": "use babili instead uglify browser builds", "body": "idea actually viable point figured open issue track determine best way forward pretty likely end unless find reason couple things consider currently browserify already compiled modules might need babili would browserify resolve correctly maybe start dropping transforms npm package aggressively rely native support things still compile browser risk falling sync basically dual pipelines somebody interested investigating feel free say something let hold prs time unless convincing results nt foresee immediately doable would rather collect info one place instead splitting discussion", "num": "7677", "d": "9/2016"}, {"title": "bug missing warnings unknown props unknown dom properties", "body": "actual missing warnings unknown domproperties development missing warnings unknown props development expected unknown domproperties log warnings unknown props log warnings affected versions software version test react seems work intended runtime node link affected browsers chrome tested link", "num": "7674", "d": "9/2016"}, {"title": "mouseenter events triggered disabled form element", "body": "want request feature report bug bug current behavior mouse enter disabled form element trigger events trigger mouse leave element current behavior bug please provide steps reproduce possible minimal demo problem via similar template first button rendered react expected behavior nt trigger events form elements disabled versions react browser os affected issue work previous versions react yes", "num": "7673", "d": "9/2016"}, {"title": "deprecate componentwillmount maybe", "body": "let use thread discuss use cases componentwillmount alternative solutions problems generally solution simply use componentdidmount two pass rendering necessary several problems global sideeffects componentwill phase includes starting network requests subscribing flux stores etc confusing used error boundaries currently called without ever called false promise children successfully completed currently applies error boundaries used probably want revert decision simply call fiber experiment nt really good way call new render gets aborted higher priority update interrupted similarly sister project componentkit reconciliation threads safe perform sideeffects yet callbacks update parent components completely unsupported lead strange order dependent race conditions already know want deprecate pattern reconciliation order children easily dependent upon perform global sideeffects already fully guaranteed updates cause unexpected reconciliation orders relying order also limits future use cases async streaming rendering parallelized rendering legit use case call even never really need since initialize initial state whatever really kept around specific use case callback used synchronously asynchronously convenient avoid extra rerender data already available solution split api synchronous version asynchronous version guarantees sideeffect happens component successfully mounts async sideeffect needed twopass rendering needed regardless argue much boilerplate since need anyway hidden inside higherorder component global sideeffects also bad since guaranteed complete due aborts errors prefer possible however likely remain form even use case constrained also nearly bad since still get invoked cleanup", "num": "7671", "d": "9/2016"}, {"title": "unwanted focus event triggered blur", "body": "want request feature report bug bug current behavior blur event triggered componentwillupdate unwanted focus event triggered render current behavior bug please provide steps reproduce possible minimal demo problem via similar expected behavior input box focused key pressed input box blur nt versions react browser os affected issue work previous versions react", "num": "7665", "d": "9/2016"}, {"title": "incorrect shallow rendering incase children key", "body": "want request feature report bug bug current behavior let say component recieve array renders list let say passed following array since id duplicate react render one item throws following warning demo however using reacttestutils shallow render list returns items instead testcase demonstration purpose describe gt render correct number items gt current behavior bug please provide steps reproduce possible minimal demo problem see expected behavior shallow renderer behave like browser case return children instead versions react browser os affected issue work previous versions react", "num": "7664", "d": "9/2016"}, {"title": "improve warning message oneoftype validation fails", "body": "want request feature report bug enhancement current behavior var hello reactcreateclass displayname hello proptypes name reactproptypesoneoftype reactproptypesbool reactproptypesnumber isrequired render function return reactcreateelement null welcome react reactcreateelement div null hello thispropsname reactdomrender reactcreateelement hello name world documentgetelementbyid container running example results following warning desired behavior following improvement would nice adding type supplied bad value would amazing name checker functions though may involve changes createinstancetypechecker createprimitivetypechecker work ex know nt high priority like least add type would gladly work", "num": "7662", "d": "9/2016"}, {"title": "event handlers firing unmount", "body": "want request feature report bug reporting bug current behavior working project employs react view layer rather large tree components ran bug day event triggers click handler ultimately unmounts tree continues running rogue react dom thing unmounted triggers handlers simple workaround used avert future crises current behavior bug please provide steps reproduce possible minimal demo problem via similar template sure repro little luck enough components event management event handlers expected behavior event handlers triggerable unmounting versions react browser os affected issue work previous versions react browser chrome version os mac os x react version fiddle failed repro", "num": "7661", "d": "9/2016"}, {"title": "since testutils radios checkboxes unexpected behavior attributes", "body": "want request feature report bug bug current behavior using checkboxes jsx attribute value dom element using configuration result current behavior bug please provide steps reproduce possible minimal demo problem demo expected behavior expected behavior testutils would mimic actual dom fragment ie jsx property results versions react browser os affected issue work previous versions react worked stopped working gt", "num": "7660", "d": "9/2016"}, {"title": "numeric string value css property", "body": "want request feature report bug bug current behavior warning tag owner passed numeric string value css property value treated unitless number future version react current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior nt warn versions react browser os affected issue work previous versions react react aside ms ms case get warning", "num": "7657", "d": "9/2016"}, {"title": "ie edge required select boxes value set initial render failing validation submit", "body": "want request feature report bug bug current behavior ie edge rendering required select box initial value set trying submit form input fail validation saying must choose item list current behavior bug please provide steps reproduce possible minimal demo problem via similar template visit ie edge try submit form expected behavior form valid submit correctly versions react browser os affected issue work previous versions react browser ie edge testing react versions master works react notes believe might browser bug issue occur react perhaps using different apis related links", "num": "7655", "d": "9/2016"}, {"title": "string refs cause incorrect warning reacttestrenderer", "body": "attach element using string use get warning see returns requires instance nonnull warning invariant think either return simple instance instead use additional check see dealing first option seems reasonable given comment current code cc spicyj", "num": "7645", "d": "9/2016"}, {"title": "unable select disabled elements disabled psuedo selector css", "body": "want request feature report bug bug current behavior unable select disabled form elements css via disabled psuedo selector currently use disabled attribute selector creating disabled form element jsx current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior expect able select disabled elements via css disabled psuedo selector versions react browser os affected issue work previous versions react new react tested multiple versions issue verified nt work versions", "num": "7643", "d": "9/2016"}, {"title": "kou hello", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7640", "d": "9/2016"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7639", "d": "9/2016"}, {"title": "kou hello", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7638", "d": "9/2016"}, {"title": "tutorial commentsjson used file name address comments", "body": "want request feature report bug bug current behavior confusing current behavior bug please provide steps reproduce possible minimal demo problem via similar template link file named commentsjson code apicomments used expected behavior file name consistent versions react browser os affected issue work previous versions react versions", "num": "7637", "d": "9/2016"}, {"title": "click events triggered ios touch devices", "body": "possible bug created js fiddle desktop click anywhere components outside components get clicked alert expected mount registered click event component try thing ios touch device im using ipad mini model ios click events triggered touch react components touch outside components alert comes whats interesting add css components get triggered looks like sort regression around issue tried react versions issue", "num": "7635", "d": "9/2016"}, {"title": "component mounted twice rerender triggered componentwillunmount", "body": "react given js consoleclear class extends reactcomponent componentdidmount consolelog mounted componentwillunmount consolelog unmounted render return reactcreateelement div test class extends reactcomponent componentdidmount consolelog mounted componentwillunmount consolelog unmounted render return reactcreateelement div test const render vnode gt reactdomrender vnode documentqueryselector root const gt render reactcreateelement const gt render reactcreateelement settimeout gt expected console output actual console output problem seems calling render within suspect common ie dispatching redux actions unmount trigger synchronous render", "num": "7632", "d": "9/2016"}, {"title": "radio buttons correctly checked using multiple lists radio buttons", "body": "want request feature report bug bug current behavior two lists radio buttons conditionally shown correct radio button nt always checked provided jsfiddle created two lists put button toggle two lists see switching second list radio buttons none radio buttons checked even though second one checked based state expected behavior correct radio button checked following jsfiddle shows behaviour react still worked versions react browser os affected issue work previous versions react react works react broken", "num": "7630", "d": "9/2016"}, {"title": "reactrouter longer defaults history prop hash history please use singleton instead", "body": "reactrouter longer defaults history prop hash history please use singleton instead", "num": "7627", "d": "9/2016"}, {"title": "ref callbacks rendertostring called", "body": "bug experiencing ref callbacks called mount using rendertostring documentation react supports special attribute attach component ref attribute callback function callback executed immediately component mounted referenced component passed parameter callback function may use component immediately save reference future use expectations ref callbacks would called mount client side rendering server side rendering using", "num": "7624", "d": "8/2016"}, {"title": "way work around deprecation directly calling proptypes validators", "body": "came rather crude think promising way autogen component rendering tests throwing big list values components proptypes validators kind like using fuzzer use construct set supposedlyvalid values prop subsequently combine supposedlyvalid sets props direct calling prop validators deprecated way accomplish missing think test generator would really useful given dependent deprecated feature clear future fiddle demo", "num": "7623", "d": "8/2016"}, {"title": "bug using react net webbrowser", "body": "use react web application works well also office addins use problem occurs addins try show tag application show script error like go mentioned line code see following function located debugging found select looks like nt accept node tried increase ie version according guide shows following string refers ie luck error occurs ms office environment word addin excel addin etc try use net webbrowser component windows form application works correctly ideas use tag case", "num": "7622", "d": "8/2016"}, {"title": "setstate state updates status value array attributes original array length added length original array", "body": "setstate state updates status value array attributes original array length added length original array value inside original array ispush", "num": "7620", "d": "8/2016"}, {"title": "error shown use undefined variable", "body": "use react webpack use variable component like instead component fail silently errors shown", "num": "7617", "d": "8/2016"}, {"title": "bug onchange fires often using range sliders", "body": "react version chrome version current behavior react fires onchange events type even browser input event fire example html js const container documentgetelementbyid container class app extends reactcomponent componentdidmount thisrefs slider addeventlistener change event gt consolelog eventtargetvalue render return reactdomrender container try expected behavior observe console output dragging sliders first slider behavior incorrect fires dragging slider second slider behavior correct seen workaround incorrect behavior reference", "num": "7614", "d": "8/2016"}, {"title": "bug embedded slidesiframe mobile", "body": "want request feature report bug bug current behavior google slides nt show full screen mode button allowfullscreen attribute set truthy value current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior expect slide display full screen mobile versions react browser os affected issue work previous versions react trying chrome safari using latest jsfiddle available react version application react", "num": "7613", "d": "8/2016"}, {"title": "reacttestrenderer custom depth rendering", "body": "want request feature report bug feature current behavior jsx mycomponentjs import react react import thirdpartycomponent thirdpartycomponent function myinternalcomponent return test export default function mycomponent return testjs import reacttestrenderer reacttestrenderer import react react import mycomponent mycomponentjs const renderer reacttestrenderercreate consolelog renderertojson renders whole tree dom actually expected behaviour problem dont want render shallow renderer isnt answer shallow would render problem hard divide component smaller internal chunks done work order achieve fully working patch done part shallowrenderer testrenderer besides patch pretty old resolving conflicts would hard expected behavior would love provide blacklist components nt want render js import thirdpartycomponent thirdpartycomponent const renderer reacttestrenderercreate dontrender thirdpartycomponent would return jsx js test test props returned internal logic combine full shallow renderer ideas implementation dont want waste time writing code wo nt marged master anyway possibly would allow resolve", "num": "7612", "d": "8/2016"}, {"title": "components render nonempty ca nt rerender", "body": "want request feature report bug bug react user perspective matter matters context serverside rendering want structure page template contains jsdisabled users see static one jsenabled users see dynamic one everyone happy current behavior bug please provide steps reproduce possible minimal demo problem via similar template open js console click rerender button fiddle current behavior expected behavior button update rerender remove set versions react browser os affected issue work previous versions react tried chrome linux understand happening nt think browser os issue jsx fiddle seems work firefox reproduce nonminimal version problem nt know much rehydration process works seems like reasonable solution might pass right rehydrating js enabled wo nt visible anyway chrome firefox least noscript setting seems constant mod refresh nt worry changing renders seems like might deserve fix trunk would also appreciate workaround short rendering outputting whole page twice would really prefer", "num": "7607", "d": "8/2016"}, {"title": "getting new inapplicable prop warnings please make less painful developers", "body": "passing userland nonapplicable props etc already widespread large codebase lot components add various properties eg bootstrap want pass rest props case applicable saw reason waste cpu timememorymy time cloning props deleting componentspecific props example code bottom post trying hard contain anger painstakingly change components get rid slew new react warnings inapplicable props react team really expect people write components way certainly nt remember seeing thorough explanations nt documentation even unknown prop warning page says ensure dom elements spurious props floating around without justification unkind developers providing kind global switch flag prop makes dom elements delete inapplicable props codemod wraps object spread props dom elements filter function example jsx flow import react component react import classnames classnames import addclass wrappersaddclass import getcontextclass getcontextcontent getshadeclass bootstrapproputils import alertsass import errormessage utilsreacterrorutils type props contextclass alarm error danger warning info success ok alarm error danger warning info success ok shade darker brighter darker boolean brighter boolean classname string children export default class alert extends component static link addclass alertlink render reactelement let classname children thisprops let contextclass getcontextclass thisprops type let shadeclass getshadeclass thisprops let content getcontextcontent thisprops", "num": "7604", "d": "8/2016"}, {"title": "unknown prop warning allowed props", "body": "jest snapshot test see warning classname react set class attribute understand change brought react sure getting classname get warning attributes use jest react", "num": "7601", "d": "8/2016"}, {"title": "native map detection reactcomponenttreehook fails corejs", "body": "want request feature report bug bug current behavior using polyfilled browsers without native map support current behavior bug please provide steps reproduce possible minimal demo problem via similar returns expected behavior using objects instead method implemented ca nt detect corejs polyfills look discussion comments versions react browser os affected issue work previous versions react", "num": "7593", "d": "8/2016"}, {"title": "documentmode document check giving inconsistent results", "body": "bug current behavior line changeeventpluginjs incorrectly returning false nonie browsers paired party code specifically returning false google tag manager case setting documentdocumentmode undefined causing errors input fields better check case might would still accomplish intended check minimizing conflicts codebases found couple instances issue versions react browser os affected issue chrome react", "num": "7583", "d": "8/2016"}, {"title": "rename", "body": "zpao gave talk react rally mentioned could improved renamed happy file pr make reality huge task anything consider big findreplace", "num": "7575", "d": "8/2016"}, {"title": "isrequired nesting validation functions", "body": "possible implement adding generic variant custom validation function without including checks null undefined function prior validator wrapped another validation function called value present allowed anymore call validations function directly nest", "num": "7574", "d": "8/2016"}, {"title": "oncontextmenu stoppropagation nt work", "body": "bind oncontextmenu div call eventstoppropagation event handle still reach contextmenu event handle document js documentaddeventlistener contextmenu preventmenuofcontextmenu false function preventmenuofcontextmenu event consolelog always log oncontextmenu event eventpreventdefault eventstoppropagation render return", "num": "7573", "d": "8/2016"}, {"title": "using react edge dangerouslysetinnerhtml nt work svg tag", "body": "hi everyone issue following fix works unfortunately nt edge seems edge implementing innerhtml property svg tag inefficient way using appends svg text dom tree seen using inspector edge nt render anything unless modify svg string inspector see codepen updated use react edge see issue course enforce edge use hack works nt know enforce except browser sniffing grr", "num": "7563", "d": "8/2016"}, {"title": "defaultprops replacing undefined function props", "body": "bug current behavior default function given replacing function prop defined defaultprops works string minimal example expected behavior calling appears returns value returned defaultprop versions tried result nt know versions", "num": "7562", "d": "8/2016"}, {"title": "dom property warning", "body": "support prop", "num": "7561", "d": "8/2016"}, {"title": "basicjsxprecompile working", "body": "hi downloaded script mentioned starter kit referred file indexhtml reactjs components renderingi got one console error referred online link new reactjs please help resolve error regards thangavel e", "num": "7560", "d": "8/2016"}, {"title": "reactjs components rendering ajax", "body": "hi used ajax load reactjs components html filebut components rendering explained sample link achieve regards thangavel e", "num": "7559", "d": "8/2016"}, {"title": "react nt override eventphase property fires synthetic event component event hander", "body": "demo eventphase always equal", "num": "7555", "d": "8/2016"}, {"title": "using throws securityerror firefox", "body": "want request feature report bug bug current behavior development mode firefox throws exception thrown line current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo expected behavior exception versions react browser os affected issue work previous versions react sure behave previous versions ff", "num": "7553", "d": "8/2016"}, {"title": "support symbol keys props", "body": "want request feature report bug want report bug current behavior nt receive props symbol keys example guess reactelementcreateelement current behavior bug please provide steps reproduce possible minimal demo problem via jsfiddle similar expected behavior symbolkeyed passed versions react browser os affected issue work previous versions react every single one far know", "num": "7552", "d": "8/2016"}, {"title": "react compiled latest google closure compiler", "body": "trying compile react latest closure compiler following output produced warning misplaced abstract annotation functions nonstatic methods abstract gettransactionwrappers function warning misplaced abstract annotation functions nonstatic methods abstract gettransactionwrappers function warning misplaced abstract annotation functions nonstatic methods abstract gettransactionwrappers null error nosideeffects may appear externs files render specpolicydefineonce error warning last one errors others warnings reproduce", "num": "7551", "d": "8/2016"}, {"title": "update html table without refresh table", "body": "let database table name hrtblemployee open webpage html table employee records insert record hrtblemployee database crontrigger call second get new row insert table table refresh html table add new row top delete row update delete row webpage delete frontend database table refresh please anyone simple solution tell regards ehsan fida", "num": "7547", "d": "8/2016"}, {"title": "input unable enter decimal", "body": "input unable enter decimal", "num": "7545", "d": "8/2016"}, {"title": "warn checkbox changes controlledness", "body": "warning controlled component becomes uncontrolled vice versa thought fixed apparently either fixed checkbox components maybe subsequently broke similar regardless fix demo case warn", "num": "7544", "d": "8/2016"}, {"title": "support link preload", "body": "rel preload new functionality latest browsers preload content however reactjs currently strips warning get unknown prop tag remove prop element details", "num": "7543", "d": "8/2016"}, {"title": "defaultvalue trigger onchange event", "body": "opinion defaultvalue programmatically init input value change input init input defaultvalue triggers onchange event wrong change yet think like defaultvalue pushing value input attribute keep consistency native events onchange triggering always value changes", "num": "7542", "d": "8/2016"}, {"title": "dangerouslysetinnerhtml wo nt set html", "body": "come across issue dangerouslysetinnerhtml set html renders correctly situation need render dangerouslysetinnerhtml strips tags think missing outer table tags please see attached link example suggestionsworkaroundsfixes would awesome", "num": "7541", "d": "8/2016"}, {"title": "warnings antipatterns render", "body": "want request feature report bug right use setstate within render get tons warnings imagine quite expensive two reasons mainly warnings render every time ie setstate antipattern rendering message make browser go crazy current behavior current behavior makes warning message render setstate causes browser crash setstate rendered functions declared within render method current behavior bug please provide steps reproduce possible minimal demo problem via similar template bug quite easy reproduce make function within render method calls setstate make instance event get error reproduced expected behavior get tons warnings console browser likely freeze need forceexit chromebrowser suggestion really want help feel like need contribute back react using extensively walkthrough would similar find react calls finds rendered trigger warning trigger warning first render experiment see make exception similar current build nt crash perhaps reset previous state something like print message state resets previous one es", "num": "7538", "d": "8/2016"}, {"title": "allow generators yield components place arrays", "body": "want request feature report bug feature current behavior generators silently discarded current behavior bug please provide steps reproduce possible minimal demo problem via similar template allowed legal would even better trailing nt required executed function expected behavior examples generate html foobar would make much easier write conditions middle jsx block snippet used current project jsx generatortoarray function samevehicleanddriverforallsegments yield billing type hourly flat notice write conditions statements without instantiate empty array push elements needed return array end generators take care versions react browser os affected issue work previous versions react na", "num": "7536", "d": "8/2016"}, {"title": "unclear docs api children esp children", "body": "writing table cell component specially handle case given single number looking documentation api unclear multiple components toplevel api say opaque suggest apis used preserve encapsulation type children props gives full details implemented suggests provided simply convenience docs reactchildrenonly say gets single child reality gets single child long child react element react least improves error message case questions suggestions improvements docs supposed opaque type children props updated supposed public multiple components toplevel api updated documentation updated clarify requires valid react element possibly explain use case requirement see comments confusion caused current documentation official recommended way get anything renderable child opposed valid react element child changing allow string number nodes closed wo nt fix using directly goes docs statement opaque using seems like overkill supposed opaque would new function useful solution", "num": "7535", "d": "8/2016"}, {"title": "reactrouter longer defaults history prop hash history", "body": "totally new react stuff get node application uses react ironed errors except shown picture pointers great total newbie node n react thanks", "num": "7534", "d": "8/2016"}, {"title": "ship", "body": "ship little bit x update latest semverpatch issues x ship amp update fbjs need x write changelog", "num": "7531", "d": "8/2016"}, {"title": "proposal stateful functional components", "body": "functional components awesome numerous reasons react way declare stateful equivalents functional components today feature proposal introduces backwardscompatible solution including optional observable state map object functional component example js import observablemap react const counter props state new observablemap value gt counter stateget value export default counter example state changes easily tracked using object initial value counter incremented decremented clicking one rendered buttons soon state changes stateful functional component calls resulting rerender component initial state provided assigned empty instance furthermore immutable variant made time travel debugging could made possible", "num": "7529", "d": "8/2016"}, {"title": "dangerouslysetinnerhtml large amounts markup", "body": "display large amount markup generated server inside component lot markup around dangerouslysetinnerhtml takes long time stalls page several seconds sometimes crashes chrome assume happens react parses html creates elements everything way around behaviour ps also tried creating normally would takes way long well", "num": "7528", "d": "8/2016"}, {"title": "input file upload panel shows seconds chrome opening tabs", "body": "new react user upload file chrome opening tabs click upload button upload file panel display seconds use code chrome opening tabs local ps file upload panel show second open page separate window chrome upload file panel show second seem normal thanks", "num": "7527", "d": "8/2016"}, {"title": "set state defaultvalue ca nt work", "body": "", "num": "7525", "d": "8/2016"}, {"title": "chromium fails inline style display revisited", "body": "want request feature report bug bug revisited current behavior posted bug error description correct bug using inline style display flex fails add dom display block variants work like reproduce bug jsfiddle jsfiddle adds display flex correctly browser working example jsfiddle versions react browser os affected issue work previous versions react react chromium os ubuntu", "num": "7524", "d": "8/2016"}, {"title": "test onselect", "body": "testutils allows simulation several types events could nt find way simulate onselect event input element looking wrong place test onselect event thank", "num": "7522", "d": "8/2016"}, {"title": "chromium fails inline style display", "body": "want request feature report bug bug current behavior using inline style display relativeabsoluteflex fails add dom every attribute added except display versions react browser os affected issue work previous versions react react chromium os ubuntu", "num": "7521", "d": "8/2016"}, {"title": "feature request reactdom server rendering chunked encoding", "body": "feature request current behavior currently must synchronously render complete component means react servers connect data sources must wait respond beginning send http response desired behavior support serverside use exposing streaming render api eg providing way react components block rendering serverside would improve would enable much lower latency cases server connecting multiple backing services service request content early document delivered browser backends responded", "num": "7518", "d": "8/2016"}, {"title": "optimization env production", "body": "development process staging env rely nodeenv staging since staging close possible production would like react optimization enabled way explicitly ask optimization without setting nodeenv", "num": "7512", "d": "8/2016"}, {"title": "add new properties received object call fn object argument without freezing", "body": "strange bug behaviour following code works following codes freeze browser", "num": "7509", "d": "8/2016"}, {"title": "number input uncontrolled mode issues changing defaultvalue", "body": "want request feature report bug bug current behavior providing number input causes element enter sort semicontrolled mode changing noop element mounted seems set property element break behavior uncontrolled component current behavior bug please provide steps reproduce possible minimal demo problem see fiddle try enter expected behavior show input box since dom property changed provided changed think dom trying programmatically set input interim value real number like wipes resets empty string caught handler persisted back effectively losing input versions react browser os affected issue work previous versions react latest react latest chrome", "num": "7507", "d": "8/2016"}, {"title": "dangerouslysetinnerhtml working svg elements edge browser", "body": "appears bug react microsoft edge browser previously bug older internet explorer browsers well appears fixed unfortunately fix resolve issue edge modified codepen original issue use react includes abovereferenced pull request demonstrates bug edge output codepen ie expected behavior available internet explorer yet react still able function output codepen edge problem seems edge use ie workaround code yet edge appear refreshing dom updating least see svg contents added dom using inspect element visible browser", "num": "7506", "d": "8/2016"}, {"title": "reactcomponenttreehook end production build", "body": "noticed getting included production builds filing track specifically fixed recently regressing likely related", "num": "7492", "d": "8/2016"}, {"title": "input element backspace work", "body": "want request feature report bug report bug current behavior open demo type five character text caret position ie forced every change use arrow mouse move caret position ie press backspace caret goes position ie expected behavior caret obey go position even backspace versions react browser os affected issue work previous versions react bug started react react problem issue reported heymdall found wrap sets position correctly though user would type slowly ensure always happens workaround", "num": "7489", "d": "8/2016"}, {"title": "controlled input typeemail produces console warnings chrome", "body": "want request feature report bug bug current behavior chrome osx produces console warnings reactcontrolled fields current behavior bug please provide steps reproduce possible minimal demo problem via similar template js class app extends reactcomponent constructor super thisstate value render return expected behavior chrome produce warnings versions react browser os affected issue work previous versions react os os x browser chrome react version gt including current release earlier issue closed comment documented still issue see currentlyopen issues related problem", "num": "7487", "d": "8/2016"}, {"title": "better error message reactelementvalidator type error", "body": "currently throws warning warning reactcreateelement type null undefined boolean number string dom elements reactclass composite components would helpful warning actually said value passed eg warning reactcreateelement invalid value type string dom elements reactclass composite components", "num": "7485", "d": "8/2016"}, {"title": "printwasted nt show wasted renders", "body": "want request feature report bug possibly bug current behavior using react addons perf printwasted see many entries think example case see entries current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior root gt app show printwasted rerender click output cached element wasted render see code walk tree bottom component nt wasted render mark app wasted render even though versions react browser os affected issue work previous versions react mac osx unsure", "num": "7484", "d": "8/2016"}, {"title": "master umd builds work commonjs using webpack alias config", "body": "sure yet putting forget check later past could put webpack config many people improve build times works master likely related recent sebmarkbage changes fails like seems like claims umd shim assumes global environment whereas true umd shim would detect environment fallback available cc zpao", "num": "7482", "d": "8/2016"}, {"title": "doc explain bind methods arrow functions", "body": "want request feature report bug feature specifically improvement docs current behavior read trough react documentation last days confused section docs say better performant could nt find place docs shows arrow function alternative accidentally learn open source github projects reactcodemod approach performance nt somewhere docs current behavior bug please provide steps reproduce possible minimal demo problem via similar template bug expected behavior kind mention arrow function approach bind methods component preferably well documented versions react browser os affected issue work previous versions react sure due update react sure version pd btw issue accepted planned would happy make pr fix guidance community else include docs wink", "num": "7479", "d": "8/2016"}, {"title": "problematic code tutorial", "body": "page pollinterval caused browser load apicomment every instead pollinterval load every seconds", "num": "7478", "d": "8/2016"}, {"title": "input typesearch trigger react change event clicking clear button", "body": "want request feature report bug bug current behavior chrome firefox edge etc using clicking clear button x right triggers react onchange event probably earlier versions onchange event fire even though input cleared get fired search box cleared expected behavior react event consistently fire well versions react browser os affected issue work previous versions react react definitely affected sure worked previously affected browsers including edge appear", "num": "7475", "d": "8/2016"}, {"title": "unable run babel code without serving http file source file", "body": "new trying install run without serving http file following package manager installed created file root directory following code removed http source file access doest work trouble please help solve thank advance", "num": "7470", "d": "8/2016"}, {"title": "warning react attempted reuse markup", "body": "want request feature report bug bug current behavior says warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client serverside react render discarded make sure initial render contain clientside code one see parts equal nt know complaining expected behavior would complain unequal strings versions react browser os affected issue work previous versions react latest react", "num": "7469", "d": "8/2016"}, {"title": "bug embedded slidesiframe", "body": "want request feature report bug bug current behavior google slides enter full screen mode allowfullscreen attribute set truthy value current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior expect slides display full screen versions react browser os affected issue work previous versions react trying chrome firefox using latest jsfiddle available react version application react", "num": "7467", "d": "8/2016"}, {"title": "alternatives dangerouslysetinnerhtml methods", "body": "hi read alot warnings dangerouslysetinnerhtml api react suggest instead official page examples simple strings like first second nt know implement methods wide spread cases like displaying text inner markup database like even complicated case text created tinymce editor display properly without dangerouslysetinnerhtml ps saw different plugins like similar much popular stars count less", "num": "7462", "d": "8/2016"}, {"title": "element migration one parent another", "body": "want request feature report bug feature request current behavior currently high performance way move rendered element one parent another causes lot overhead requires full mountcomponent new place even reuse component instance versions react browser os affected issue work previous versions react need trying optimize one specific case need render component invisibly order measure dimensions need render component visible area currently need buy overhead case fact done pure dom simple appendchild call almost overhead specific talking reactvirtualized library specific cellmeasurer component become faster avoid overhead", "num": "7460", "d": "8/2016"}, {"title": "inline style including important ignored", "body": "set style works expected ignored like example", "num": "7459", "d": "8/2016"}, {"title": "hanging process references pulling shim bundling", "body": "occurs bunch times leaves references usual replacement done creating production build resulting shim pulled increasing bundle size unless manually configure eg webpack config mentioned release notes", "num": "7447", "d": "8/2016"}, {"title": "react shows warnings unknown props root level components", "body": "probably bug unpleasant change many passing props root components ie div etc unknown prop large stack trace displayed us using cljs libs omreagent frequently leverage passing props around amp args div quite bit write components take open ended markupcontent would painful go back refactor many components deal massive amounts obnoxious stack traces make development extremely unpleasant show warnings prior display behavior", "num": "7445", "d": "8/2016"}, {"title": "feature request change default shouldcomponentupdate shallowcompare", "body": "understand backwardcompatible guess people use pure component approach majority components", "num": "7443", "d": "8/2016"}, {"title": "pass default parameter values function", "body": "got error updating reactnative react think right syntex dont know error coming thislist function table callback wheredata selection extra syntaxerror unexpected token exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs", "num": "7441", "d": "8/2016"}, {"title": "bug didputlistener tries finddomnode unmounted component", "body": "believe bug potentially related specific details different enough wanted file separate issue feel free close root cause repro clickme component runs click first renders components type b let call componentdidmount function calls setstate comes play later updates new prop acomponentdidupdate unmounts mounts new b done react runtime performs ops presumably due setstate leads warning react ca nt find root component node datareactid value seeing message probably means loaded two copies react page time single copy react loaded time uncaught typeerror read property firstchild undefined peeking stacktrace looks like trying finddomnode alreadyunmounted component weird details leaving onclick removes error calling setstate bcomponentdidmount also removes error bit different erroring unmount b click erroring onclick setstate react tested briefly react got invariant violation react dom tree root always node reference presumably better formed version error", "num": "7440", "d": "8/2016"}, {"title": "add catch block function rendervalidatedcomponent", "body": "like js rendervalidatedcomponent function var renderedcomponent reactcurrentownercurrent try renderedcomponent thisrendervalidatedcomponentwithoutownerorcontext catch error consolelog error alert error", "num": "7439", "d": "8/2016"}, {"title": "import addons reactwithaddons", "body": "want require reactlibreactmount reactlibreactinputselection precompiled reactjs got none", "num": "7437", "d": "8/2016"}, {"title": "inline style working dynamically", "body": "want request feature report bug report bug current behavior style props component render dom rendertabscontent return thispropschildrenmap tab index gt const activestyle visibility visible const disabledstyle visibility hidden console images expected behavior render dom style visibility hidden versions react browser os affected issue work previous versions react version react", "num": "7432", "d": "8/2016"}, {"title": "write documentation", "body": "first day used already stumbled upon three problems injectenvironment called twice bug fact refs rendered setting ref dom element react erroneously warns stateless function components given refs also probably related going shipped soon think deserves comprehensive documentation soon possible least troubleshooting bulletpoints text one supposed refs sometimes use refs example setting focus input code fail always test ref nt undefined using plans near future solve issue way", "num": "7431", "d": "8/2016"}, {"title": "contains nonstandard property", "body": "want request feature report bug report bug current behavior object includes icon property section title attribute supported standard html element included specs list attributes list attributes mozilla developer network includes list attributes specifies element use obsolete element supported desktop mobile browser expected behavior property might better placed section titled nonstandard properties removed altogether documentation html attributes could omit encountered issue working typescript opened issue react type definition react includes custom interfaces extend definitelytyped reacthtmlattributes include nonstring property versions react browser os affected issue work previous versions react added react alpha commit message mentions possible part draft standard time omitted final spec", "num": "7430", "d": "8/2016"}, {"title": "reactcsstransitiongroup working ie webpack", "body": "want request feature report bug bug current behavior transitionappear working ie webpack current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior transition appear ie versions react browser os affected issue work previous versions react react reactaddonscsstransitiongroup browser ie os window", "num": "7429", "d": "8/2016"}, {"title": "proposal ordered attribute white list new property injection types", "body": "working lot wrapper fix ie chrome bugs noticed good portion code exists prevent attributes assigned wrong order inserting specific way got curious benefits centralized ordered property assignment might yield interested eliminating special attribute assigning ordering cases like assigning eliminate special assignment order code investigating reimplementing chrome backspace fix logic moved code eliminated guarantees property assignment order curious could eliminated wrappers dom utilities work sort hesitate share curious type thing would accept contribution safe work parallel react fiber feature going start reproducing edge cases fixed wrappers start working towards reducing amount rule breaking require get properties assign expected otherwise guess much better understanding property assignment works", "num": "7428", "d": "8/2016"}, {"title": "investigate recent performance regressions dev", "body": "development build become much slower lately likely due new warnings perf measurements intend look next week", "num": "7427", "d": "8/2016"}, {"title": "updating style attribute radial gradient chrome safari", "body": "want request feature report bug current behavior attribute nt get updated changing see update value though current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo open chrome safari click closestside button css string changes gradient remain click update position button update attribute dom node position extent keyword changing value directly via developer tools update must reactrelated bug see update gradient change position expected behavior try steps firefox see proper behavior versions react browser os affected issue work previous versions react reproducible", "num": "7425", "d": "8/2016"}, {"title": "falsepositive mutation warning", "body": "given following test case jsx function testcmp return nan reactdomrender documentgetelementbyid app produces following warning probably caused mutation check introduced nt work nan nan nan", "num": "7424", "d": "8/2016"}, {"title": "missing polyfill ie", "body": "using getting error offending line adding suggested seems fix problem believe issue introduced moving reverted older react verify nt react include polyfill", "num": "7423", "d": "8/2016"}, {"title": "ca nt set caret setstate callback ie v", "body": "controlled input works fine ie press backspace setselectionrange works sample sample", "num": "7422", "d": "8/2016"}, {"title": "onfocus onblur events input elements cause issues", "body": "want request feature report bug bug current behavior use events element react app event handler set input value empty string get looking stack trace trying delete value detach onpropertychange handler onfocus onblur called versions react browser os affected issue work previous versions react react browsers frankly able reproduce locally browser seeing error happen times bug tracking system know probably helpful figured least see anyone else run happy close issue feel enough information", "num": "7421", "d": "8/2016"}, {"title": "bug reacttestutilsimulate tolowerstring mutating event type", "body": "current behaviour reacttestutil returning nodes event type cast lower case strings causing test failures several external repos reactselect publicfacing example far tell issue appears type mismatch causing dom nodes return node initially called expected behaviour reacttestutil return proper event type cast string steps verify clone verify tests fail react reactaddontestutil using replace line run verify tests pass tested react chrome os x", "num": "7418", "d": "8/2016"}, {"title": "freeze classes defaultprops dev mode", "body": "make compiler optimizations around classes inlining defaultprops need know nt get mutated escape analysis difficult js compiler start enforce nt rely escape analysis also make getterssetters make nice warning messages sets although weigh slowing dev mode property exists preserve enumerability property nt exist still ok attach gettersetter long nonenumerable", "num": "7415", "d": "8/2016"}, {"title": "doc confusing rather", "body": "wherever else applicable var myformcomponent reactcreateclass myformcomponentrow reactcreateclass myformcomponentlabel reactcreateclass myformcomponentinput reactcreateclass three dots type spread operator pseudocode placeholder think order help confused reader use comments instead pseudocode var myformcomponent reactcreateclass myformcomponentrow reactcreateclass myformcomponentlabel reactcreateclass myformcomponentinput reactcreateclass", "num": "7413", "d": "8/2016"}, {"title": "shouldcomponentupdate nt work well component accepts children", "body": "react shouldcomponentupdate based performance improvements work great improving performance mediumweight components large numbers instances even work well event handlers ignore event handler changes instead pass locally bound method access demand however fails apart start passing react elements pure components js use strict import react component proptypes react import reactdom reactdom import shallowequal recomposeshallowequal shallowequalexcluding fictional function works like shallowequal ignores changes list props passed third argument class button extends component static proptypes icon proptypesnodeisrequired onclick proptypesfunc class icon extends component static proptypes name proptypesstringisrequired color proptypesstring const nilclick gt reactdomrender documentqueryselector container reactdomrender documentqueryselector container invovation reactdomrender documentqueryselector container invovation given sample component expects icon passed prop simple pure components button also coded rerender changed pretend button actually heavy props state nt change frequently second invocation icon require prop change render button prop changed require render third invocation icon require render button need render except change icon however practice button always rerender including second invocation nothing changes always result new instance never normally could work around within component without telling users store variable think need change props functions could pass function use objects deep comparison know structure object react elements even though allows react know current component render dependency subcomponent access information button tell icon requires render practice turn problem writing libraries rather application notably material ui suffers problem production light used use react element prop reasonably checkboxes one page even pure identify whether icon requires update result render component containing checkboxes check single checkbox result instances think ideas type api could added react solve issue shouldcomponentupdate helper obvious api would toplevel react function given instance context old reactelement new reactelement would return result component heavy parent components use implement aware render dependencies children bonus theoretically could temporarily remember walking current tree instead calling multiple times every potentially nested component result simply calls raised highest level component renderdependent however expect problem also responsible state dependent updates supposed rendered instance reactelement instance know passing current instance reference state either props ref based shouldcomponentupdate helper second obvious api would helper instead uses ref downside get ref component nt create inevitably use render passthrough next idea render passthrough way render process component say need render update children mine may would tell react skip render run instances deeper tree however components know need updates pass new props passthrough wo nt work instead need way tell react run pass update specific component instance advantage using instead allowing medium components wrapping light components child requires also allow heavy components never unless require still allowing permit light children update partial renders based applying updates component child feels somewhat awkward forced though robust idea might partial render lifecycle optionally runs call render subtree belongs current component js class heavycomponent extends component shouldcomponentupdate nextprops ignore icon children return nextpropstext thispropstext though probably potential conflicts expect reactline way name would something like would invoked using used would really light component probably would render children probably accept dom refs part react lifecyclewalker part client side browser reactdom like", "num": "7412", "d": "8/2016"}, {"title": "bug onclick firing radio button selcted arrow keys", "body": "current behaviour handler fired radio button selected using arrow keys expected behaviour fired navigating radio buttons arrow keys example click radio press right navigate second radio box reactevent logged console alert appears tested react amp chrome os x", "num": "7407", "d": "8/2016"}, {"title": "memory leak react nonproduction server side rendering", "body": "memory leak appears introduced server side rendering react size heap grows proportionally number requests received confirmed node also confirmed work correctly react reproduce start app configured serverside rendering production inspect heap hitting server number requests used heapdump take snapshots wrk hit app bunch requests load snapshots chrome dev tools profiler see culprit appears react children mutation warning saves reference given react element props object cleanup steps never called server thus object ever growing versions react browser os affected issue work previous versions react react reactdom node express", "num": "7406", "d": "8/2016"}, {"title": "ca nt fire ontouchend ontouchcancel events", "body": "hello trying create horizontal scroll issue create two buttons button add events ontouchstart ontouchend ontouchcancel event ontouchstart triggers change margin container contains scrollable elements ontouchend ontouchcancel need stop scroll events nt trigger ca nt stop scroll cases events may trigger use chrome os ubuntu react tested chrome device mode code", "num": "7404", "d": "8/2016"}, {"title": "transform stateless component stateful harmlessly", "body": "want request feature transform stateless component stateful awful git diffs want better way write stateless statefull component switched harmlessly less diffs possible maybe someone recommend better way construct code", "num": "7401", "d": "8/2016"}, {"title": "question update context descendant component", "body": "want use context pass data parent descendant components also need update context descendant component like clicking descendant component find document tell wondering antipattern", "num": "7399", "d": "8/2016"}, {"title": "reactdom package longer listed npm registry", "body": "page show via search npmjscom either package still linked zpao npm profile npm issue", "num": "7398", "d": "8/2016"}, {"title": "reacttestrenderer outputs undefined html tag", "body": "currently starting test coverage jest using reacttestrenderer compare snapshots running issue simple component rendering prop leaving proptypes jsx const poccomponent props gt propssomeattribute export default poccomponent use test jsx import poc poccomponent describe poc gt work gt const component reacttestrenderercreate const tree componenttojson expect tree tomatchsnapshot reacttestrenderer gives us output snapshot poc work pass someattribute string instead number snapshot generated expected number instead tag using react amp reacttestrenderer v", "num": "7392", "d": "8/2016"}, {"title": "reusable components probably wrong", "body": "using react business projects since built large medium many small apps one dreams create reusable components shared across projects still support highly customization even css framework changes mean want support bootstrap foundation semantic ui raw styles frameworks nt know discovered highly explicit nt make styling assumptions example ps trying say approach best others bad sharing fixed problem others try approach see fit projects problem passing building reusable api create formal api general defining database model allowing consumer pass anything cool small projects prototypes reusable component need make formal assuming bootstrap used pass classes foundation semantic ui users nt use css framework reusable component support many styling frameworks techniques every project different solve make formal api early create formal api reusable component nt mean still experimenting looking good api reusable component nt define classes styles except styles know never change type component building eg dropdown autocomplete popup always need styles like etc case problem styles define component behave never change change css framework aesthetics styles real world example getclassnamegetstylebutton know always types formalize consumer use apply specific styles classes function reusablebutton type getclassname getstyle children return reusablebuttonproptypes type proptypesoneof primary secondary success warning danger isrequired getclassname proptypesfunc getstyle proptypesfunc children proptypesnodeisrequired reusablebuttondefaultprops getclassname gt null getstyle gt null myappbuttonjs future need change css framework probably need change function function getclassname type return function getstyle type type danger return fontsize return null function myappbutton type children return advantages simple example probably wo nt see advantages try list creating formal api helps thinking apply styles next project defines types every app needs nt need think possible styles use every project use api back project weeks months later know use pulling fixes easy upgrading easy updating one file build platform top eg etc instead trying cover every use case inside use power composability", "num": "7391", "d": "8/2016"}, {"title": "url references react reactdom tutorial docs showing undefined", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7389", "d": "8/2016"}, {"title": "purecomponent breaks hot reload", "body": "seems switching breaks hot reloading error messages reliably reproduced project simply switching back fix problem", "num": "7388", "d": "8/2016"}, {"title": "attach stack setstate calls dev mode", "body": "queue state transitions natural place stack frame stored could use information work way back errors show information call source error batching always possible make correct attribution could one several possible sources specifically like use fiber starvation protection kicks show state transition kept getting deferred due higher priority work", "num": "7387", "d": "7/2016"}, {"title": "called twice", "body": "trying test simple react component using materialui jest stuck looks like calls actual application imported somewhere within materialui module turn imported component code may really bug react per se though one could imagine dependencies somehow loading well causing issue created testcase may provide context", "num": "7386", "d": "7/2016"}, {"title": "binding react", "body": "recently read article medium binding react basically explaining bind functions inside constructor stateful components prevent unnecessary rerenders component shows using arrow function causes function creation spot makes seem like new props received continuously even may bad prevents optimizations according article great know bind constructor binding methods parameters calling stateful stateless components say theres something like following js using stateful components class something extends reactcomponent constructor super thisdosomething thisdosomethingbind dosomething take return take using stateless components function something props throws error call evaluates immediately number function makes sense way around able go around using arrow function run cause unnecessary rerenders article explained could better prevent unnecessary rerenders stateless stateful components", "num": "7385", "d": "7/2016"}, {"title": "implicit returns method", "body": "name bos return fullnames return without using return fullnames", "num": "7384", "d": "7/2016"}, {"title": "add text view components", "body": "default rendering span div browser small change enable universal react components badly need next step port stylesheet browser allow style accept need start", "num": "7382", "d": "7/2016"}, {"title": "write docs reactpurecomponent", "body": "need least update top level api page consider writing something cc spicyj", "num": "7379", "d": "7/2016"}, {"title": "investigate ci failed add file ghpages", "body": "reason failed detect commit new file presumably dirtystate detection failed nt happen previous build also changed files added new ones maybe helped trigger done couple builds jekyll amp new travis container could related", "num": "7378", "d": "7/2016"}, {"title": "jsx shorthand property syntax", "body": "hello searched similar issues nt found one sorry duplicate let say following component code forwarding properties could less verbose shortcut syntax aware spread operator comfortable sometime example nt want revalidate property changed", "num": "7376", "d": "7/2016"}, {"title": "ie bug svg", "body": "hi reccently updated project react issue svg use svg sprites get icon like use crossbrowser support updaiting react started throug exception ie x reactid understand exception fires plugin wich replacing inner polyfill page loads react ca nt find use exeption workaround came react dose nt include virtual dom ca nt complaint better way case rewrite whole lot svg icons", "num": "7375", "d": "7/2016"}, {"title": "way return raw html unmounted component", "body": "asked question seems way use must mounted component first like feed raw html plugin like linked question also like avoid jquery way mount component raw html sure called consolelog html element chrome outputs html sort native html object way imagine using element still mounted", "num": "7374", "d": "7/2016"}, {"title": "bound function access thisrefs", "body": "seemed function bound class longer access see following simple case works nt would expect two behave idea javascript import react component proptypes react export default class sample extends component", "num": "7373", "d": "7/2016"}, {"title": "react automatically remove vendor prefix inline style", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior react render css vendor prefix versions react browser os affected issue work previous versions react tried result", "num": "7372", "d": "7/2016"}, {"title": "reacttestrenderer nt work refs reactdomfinddomnode", "body": "jest snapshot testing uses reacttestrenderer component contains ref uses throws component js import react react export default class link extends reactcomponent render return test js use strict import react react import link link import renderer reacttestrenderer describe link gt renders correctly gt const tree renderercreate tojson stack trace", "num": "7371", "d": "7/2016"}, {"title": "data keyed list mangled unpredictably", "body": "going close issue immediately since nt reproducible test case hit issue exactly know code simple suspect react bug may cause hoping documenting might help someone else stumbles across future want request feature report bug report bug reduced code sample javascript const states alabama al alaska ak arizona az arkansas ar etc class extends reactcomponent render return thisrenderregionfields renderregionfields return country objectkeys states map thisrenderregionoptionsbind renderregionoptions key const abbreviation states key referring module anywhere else application ie pretty certain mutated accidentally expected behavior list states list twoletter state abbreviations order al ak az current behavior list states intermixed unknown data ends looking something like notably nt strings allcaps anywhere codebase nt look like react either versions react browser os affected issue work previous versions react react chrome osx", "num": "7370", "d": "7/2016"}, {"title": "allow disable tag prop warnings", "body": "applies curious first would cause problems theres strong reason allowing people disable warnings would disagreeable would open alternative solutions problem props used lifecycles hoc often render class child componentwillmount something thispropsotherprop render const children props thisprops otherprop gets passed causing error destructuring leaves unused variable render nice either initial thought create helper filters event props verbose potentially heavy lots lookups guess second thought could patch reactcreateelement seems bit hacky well nt see much downside passing props elements though guess could see dangers", "num": "7368", "d": "7/2016"}, {"title": "request toplevel api allow context passing", "body": "hi know context flagged experimental feature hence missing toplevel api find pass context legacycompatible component allow context setting causing hack context cases something like mixin something could looked thanks", "num": "7367", "d": "7/2016"}, {"title": "questions movies react help", "body": "use strict var reactnative require reactnative var stylesheet reactnative var maxvalue import type styleobj stylesheettypes question stylesheettypes come question styleobj function getstylefromscore score number styleobj score lt return stylesnoscore var normalizedscore mathround score maxvalue return color rgb maxvalue normalizedscore normalizedscore var styles stylesheetcreate noscore color moduleexports getstylefromscore could help thank much", "num": "7366", "d": "7/2016"}, {"title": "handle externally injected elements replacedelimitedtext", "body": "mostly preemptive talked right render external tool bolds like entire string bolded updated react first element kept called would say makes sense throw elements away case start scratch perhaps check node type also throw away nt textnode", "num": "7363", "d": "7/2016"}, {"title": "inline svgs rendering ie", "body": "process upgrading project react strangely inline svgs stopped rendering ie upgrade screenshots well svg elements example little red alert icon renders fine ie old react missing new react old react svg element alert icon appears html appears html new react got element missing elements want see action put bogus emailpassword following urls ie old react new react ideas could causing note little g icon google button also inline svg yet renders fine versions react", "num": "7358", "d": "7/2016"}, {"title": "electron webview tag throws unknown property warnings", "body": "electron adds new html tag webview since tag registered via internaltoblink methods nt follow standard web component rules ie name must good place add tag properties list valid properties pr maintainers would willing approve gate electron wo nt affect web apps without pr impossible use attribute react", "num": "7357", "d": "7/2016"}, {"title": "becomes unresponsive updating element inside svg", "body": "bug reproduced ui become unresponsive first update element visit clicktoggle button works fine chromefirefox ie browser becomes unresponsive first click error thrown able reproduce versions windows modernie editions", "num": "7355", "d": "7/2016"}, {"title": "possibility return multiple elements render", "body": "seen extension asking light would possible return array multiple elements maybe strings currently already possible return array mix elements amp strings block jsx could commentwrapping method allow also render methods js hello elementsmap elem gt elem hello motivation sometimes hard get layout work expected one wrap list elements element alternative write plain functions instead react components produce expected result would syntactically nice able componentize multipleoutput components", "num": "7354", "d": "7/2016"}, {"title": "possibility return pure text render without wrapping element", "body": "asking light would possible also return plain text alternative current return type one would wrap element could commentwrapping method allow also render methods motivation sometimes hard get layout work expected one introduce span elements alternative write plain functions instead react components produce expected result would syntactically nice able componentize textonly components way htmlenabled components", "num": "7353", "d": "7/2016"}, {"title": "respect autocomplete values", "body": "bug currently react transforms non value given property example jsx rendered html besides obvious case also semantic detail values valid part spec values passed property respected left alone tested react", "num": "7352", "d": "7/2016"}, {"title": "thistransferpropsto function", "body": "hi help uncaught typeerror thistransferpropsto function react", "num": "7351", "d": "7/2016"}, {"title": "babelnode reactcomponenttreedevtooljs causes reactdomserverrendertostring fail", "body": "following serverside react tutorial encountered runtime error caused reactcomponenttreedevtool specifically purgedeep function seems problematic certain conditions reactlibreactcomponenttreedevtooljs line user code stack trace offending code resolution adding check undefined childids traversal reactlibreactcomponenttreedevtooljs line resolves issue see additional os os x yosemite node run babelnode via babelcli let know additional information provide eg dev dependencies thanks", "num": "7350", "d": "7/2016"}, {"title": "expect componentdidmount timer start render timer still progress another instance", "body": "sure filed bug intended behaviour case would feature request something lost since last versions specific error logging since last version error shows many times without usable stacktrace mainly occurs prop state defined would nt big problem could stacktrace case lead back related component go changed last use stacktrace go back createstore connect related since error shows regardless element undefined property also often accompanied debug error plans improve", "num": "7349", "d": "7/2016"}, {"title": "zindex interaction", "body": "say html put targetcomponent top components impossible interact change order implementation like html come top components something like zindex interaction problem way react works", "num": "7346", "d": "7/2016"}, {"title": "higherorder components reacting change props", "body": "trying implement basic filtering functionality using higherorder components hoc looks like filterjs import react component react export default function filter filteredcomponent return class filtercomponent extends component constructor props super props however typing input element generatelist method called tried using get triggered well though happily passing props search component component using props searchresultsjs import react react const searchresults props gt const listdata propsfilteredlistmap item gt item return search results export default searchresults corresponding container searchresultscontainerjs import connect reactredux import searchresults componentssearchresults import actions import filter enhancersfilter const getsearchterm state gt statesearchterm undefined statesearchterm const mapstatetoprops state gt return searchterm getsearchterm state currencylist statecurrencylist const mapdispatchtoprops dispatch gt return setsearchterm e gt dispatch asetsearchterm etargetvalue const searchresultscontainer connect mapstatetoprops mapdispatchtoprops searchresults export default filter searchresultscontainer", "num": "7345", "d": "7/2016"}, {"title": "stop using imgur images blog post", "body": "using imgur image hosting put site like previous posts making sure maintain control also ensure images served https nt currently could fix updating img srcs probably host anyway", "num": "7337", "d": "7/2016"}, {"title": "documentation links documents text wrong", "body": "want request feature report bug bug current behavior error current behavior bug please provide steps reproduce possible minimal demo problem via similar template open page docs like one click link like see error page expected behavior correct link versions react browser os affected issue work previous versions react problem occurs many doc pages since file names changed include numbers guess", "num": "7334", "d": "7/2016"}, {"title": "use testutilssimulate component created testutilsrenderintodocument", "body": "upgraded react existing tests begun failing due issue apparent cause components created testutilsrenderintodocument tagname therefore testutilssimulate recognise components leaves node null jsfiddle repro", "num": "7331", "d": "7/2016"}, {"title": "ie edge longer prompt remember password controlled form", "body": "want request feature report bug bug regression ieedge current behavior react gt edge prompt user save password form steps reproduce react react expected behavior browser prompts user save password form versions react browser os affected issue work previous versions react react gt worked react ie edge", "num": "7328", "d": "7/2016"}, {"title": "svg react component animating", "body": "seeing issue svg inside react class class follows var react require react var headerloader reactcreateclass render function return moduleexports headerloader renders svg fine path elements nt animating react react dom thanks", "num": "7327", "d": "7/2016"}, {"title": "warn someone using shadydom react", "body": "probably emit warning someone using shadydom instead shadowdom react since cause things break subtly", "num": "7325", "d": "7/2016"}, {"title": "optimizing compiler compiling internals", "body": "optimization renderer specific optimization knowing react process particular component internals inlining internal work user code comes two flavors known host component js function foooptimizedmount props propsdatatype img var img documentcreateelement img imgclassname propsclassname imgsrc propsdatasrc return node img listeners reacteventlistenerstrap img error load var span documentcreateelement span spanclassname propsclassname var children reactchildrenmountnestedchildrenintoparent thispropschildren span return node span children function foooptimizedupdate instance oldprops newprops oldpropsdatatype newpropsdatatype foooptimizedunmount instance return foooptimizedmount newprops propsdatatype img imgclassname propsclassname imgsrc propsdatasrc return instance spanclassname propsclassname reactchildrenupdatenestedchildreninparent thispropschildren instance return instance function foooptimizedunmount instance oldpropsdatatype newpropsdatatype foooptimizedunmount instance return foooptimizedmount newprops propsdatatype img reacteventlistenersrelease instancelisteners reactchildrenunmountnestedchildreninparent instance composite components similarly composite components pick different code branches imperatively update children example known constant value would nt considered comparison single property potentially bail tree although unclear significant benefits two optimizations", "num": "7324", "d": "7/2016"}, {"title": "optimizing compiler component folding", "body": "like final frontier react never really wrote anything figured create issue basically idea utilize information react works constant folding inlining components certain conditions example source knowing foo classes made turn bar component deadcode elimination strips bunch different cases needs bail example need know object object immutable need infer immutable using escape analysis classes bail cases even complex problem current js infrastructure particularly bad kind whole program whole package linking node nt notion per package private modules anything mutate anything default transpilers babel set work single file time nt access source files analysis rollup closer limited small set static primitives however smarter compilers become prevalent js world find ways hack around limitations start building smarter compiler optimizations", "num": "7323", "d": "7/2016"}, {"title": "ie member found", "body": "catch member found exception react input onchange syntheticevent eventcancelbubble true line", "num": "7320", "d": "7/2016"}, {"title": "react polymer child properly rendered web component", "body": "want request feature report bug looking report bugclarify following problem upgraded react found web components rely embed html elements working used react component example usage react component test current behavior resulting dom looks followings test problem button getting correctly selected web component embed place problems getting react polymer working jsfiddle together try create demo problem add expected behavior react dom properly rendered looked like following resulting dom looks followings test versions react browser os affected issue work previous versions react worked react work expected react polymer version used versions react", "num": "7318", "d": "7/2016"}, {"title": "reactcsstransitiongroup transitiontimeout props required undocumented", "body": "used without timeout props warns warning failed proptype transitionleavetimeout nt supplied reactcsstransitiongroup cause unreliable animations wo nt supported future version react see information check render method missing timeout prop however url simply points getting started section animation page code listed use timeout props nothing page explains props necessary fact word timeout appears names props code examples could get explanation docs please", "num": "7317", "d": "7/2016"}, {"title": "facing problem react webpack installation", "body": "followed steps npm install save react reactdom babelpresetreact babelloader babelcore webpack mainjs bundlejs modulebind jsbabelloader got error like shared screen please solve proper installation guide react redux amp webpack", "num": "7315", "d": "7/2016"}, {"title": "", "body": "", "num": "7314", "d": "7/2016"}, {"title": "request optional strict validation valid attributes react native renderer", "body": "want request feature report bug feature request current behavior consider code pass invalid properties node simply skipped expected behavior would like warning using illegal property understood would make much easier determine property trying set taking effect eg misspelled property name property actually nt exist type trying set think looking assert check runs dev true would probably configurable support existing code sets invalid properties nodes turn strict attribute validation default happy put pr add nt see configuration react native renderer code could add property eg versions react browser os affected issue work previous versions react", "num": "7310", "d": "7/2016"}, {"title": "make createelement undefined warning descriptive", "body": "update claimed jin see mistype import useful provide better message cases caused invalid import create page explaining common cases could happen eg mismatching defaultnamed export forgetting export component importing nonexisting named export link page warning", "num": "7307", "d": "7/2016"}, {"title": "proptypes informative warning createelementtypechecker", "body": "want request feature report bug enhancement current behavior element type checker informative ones expected behavior would nice provide actual type prop passed similarly type checkers ie instead invalid prop supplied expected single reactelement say invalid prop type supplied expected single reactelement versions react browser os affected issue work previous versions react seeing think also applicable previous versions know general intention move away prop types nt specific reason current behavior look making pretty", "num": "7302", "d": "7/2016"}, {"title": "updating react reactflexboxgrid throwing lots similar warnings", "body": "want request feature report bug unknown props tag current behavior unknown props tag remove props element details see div created col col created index div created row row created index div created index div created index index created connect index connect index created reactrouterproxy reactrouterproxy created routercontext div created template div created template div created template template created reactrouterproxy reactrouterproxy created routercontext routercontext created router router provider current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7301", "d": "7/2016"}, {"title": "highlight element failed checksum", "body": "moment serverrendered markup nt match clientrendered markup big red error shown difficultimpossible locate element occurred would something logged offending element console considered pull request", "num": "7300", "d": "7/2016"}, {"title": "help getting rid use case timermixin react native", "body": "want request feature report bug help request current behavior want replace react native something else given dan talked downsides using mixins still find solution use case", "num": "7298", "d": "7/2016"}, {"title": "working correctly chrome", "body": "work correctly chrome user type decimal point point disappear caret reset beginning input keep typing twice value input disappear however input defaultvalue seems work fine put together fiddle page demo bug think something internal state management uncontrolled component first typed get chrome may trimmed unnecessary value type react pushing back input causing disappear caret position reset two typed value longer valid number chrome may return causing input reset", "num": "7297", "d": "7/2016"}, {"title": "nwjs app file type onchange event nt fire", "body": "use react node webkit application update react reactdom nt changed code onchange event fire error console log help appreciated", "num": "7295", "d": "7/2016"}, {"title": "attributes html element", "body": "hi new react wanted implement simple feature need accesses html element properties rendered example html code want access mydata mycustomobject two instances rendered different data think possible set attributes mycustomobject replacing div found documentation right thank", "num": "7294", "d": "7/2016"}, {"title": "license clarification", "body": "good morning came across blog post says bsd license react terminated react user competes facebook per patent clause addition seems lot confusion around clause actually means wondering might consider adding tl dr summarizing clause motivation readme would clear lot confusion let everyone focus building cool stuff thanks update maintainers worked legal team post faq addressing common misconceptions", "num": "7293", "d": "7/2016"}, {"title": "checkbox attribute unnecessarily removed dom every render", "body": "want request feature report bug bug current behavior rendering list controlled checkboxes causes reconciler unnecessarily update add remove attribute every render regardless whether value changed table rows needs add highlighted class rows based user interaction another part screen expect table renderer would get called every interaction seeing render times perf tool dug looks like every render reconciler removes checked attribute see jsfiddle attribute row datum never changes always false extracting rows component using fixes slowness seems like bug current behavior bug please provide steps reproduce possible minimal demo problem via similar template two jsfiddles demonstrating issue minimal repro full repro expected behavior reconciler nt touching dom attributes nt changed versions react browser os affected issue work previous versions react mac osx chrome safari firefox react version", "num": "7290", "d": "7/2016"}, {"title": "reactdomcomponenttreeprecachenode triggers render", "body": "react trying optimize application serverside rendering using problem react browser always triggers render methods components even root since page quite big results seconds lag javascript arrives scrolling frozen interestingly happens chrome firefox safari tried track react source returns true mounting jumps looks good still getting initial rerenders expected behavior ca nt find detailed explanation works could provide working example tips prevent initial lag thank", "num": "7289", "d": "7/2016"}, {"title": "docs request adding support new html elements", "body": "eg", "num": "7288", "d": "7/2016"}, {"title": "discussion state immutable default", "body": "taking hard perspective redux component state immutable default would much overhead react side note possibly previously addressed topic nt immutable default realize immutability helpers man syntax hard eyes much sugar vinegar also know section immutabilityjs advanced performance page nt address directly clear least setstate docs whether react already handles returns object containing keys update sorry sidebar wanting get confirmation either way", "num": "7287", "d": "7/2016"}, {"title": "pass parameter click event binding constructor", "body": "binding class constructor like class header extends component constructor props super props thisdosometing thisdosometingbind dosometing id consolelog id write code render onclick gt thisdosometing id right", "num": "7285", "d": "7/2016"}, {"title": "input onchange triggered every time epreventdefault used", "body": "input onchange triggered every time epreventdefault called onchange handler occurs typing fast characters lost react amp", "num": "7281", "d": "7/2016"}, {"title": "oninput firing contenteditable div", "body": "using event event fired work chrome microsoft edge also reproduces react nt seem regression see reproduced maybe related jquense", "num": "7280", "d": "7/2016"}, {"title": "todoapp example main page", "body": "main page stands jsx var todolist reactcreateclass render function var createitem function item return return thispropsitemsmap createitem var todoapp reactcreateclass getinitialstate function return items text onchange function e thissetstate text etargetvalue handlesubmit function e epreventdefault var nextitems thisstateitemsconcat text thisstatetext id datenow var nexttext thissetstate items nextitems text nexttext render function return todo add thisstateitemslength reactdomrender mountnode let look element reason declare inside function would suggest declare function inside function suggestion jsx var todolist reactcreateclass createitem function item return render function think ps sorry could nt find better place post idea", "num": "7279", "d": "7/2016"}, {"title": "colors", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7276", "d": "7/2016"}, {"title": "chrome debugger causes event listeners skipped", "body": "browser chrome mac react component includes function component renders among things functions props unexpected behavior without breakpoints chrome debugger functions run correctly however breakpoint introduced method function entirely skipped sure intended consequence synthetic events reused seems unexpected steps reproduce jsfiddle open dev tools note never runs comment note runs", "num": "7271", "d": "7/2016"}, {"title": "microsoft edge textinput event fires twice ctrla selection keypress crashes draftjs", "body": "issue discovered building editor draftjs see original issue filed edge provides textevent still useful disabling canusetextinputevent react edge fixes draftjs issue reproduce bug draftjs go type hit enter type ctrla select everything type j get javascript error editor actually reactdomcomponent confused state dom component react component points prematurely removed", "num": "7269", "d": "7/2016"}, {"title": "improve warnings refs functional components runtime docs", "body": "trouble get working one composite components inline ref function always called mount unmount like thats statelessfunctional component react print warning one tries use stateless components", "num": "7267", "d": "7/2016"}, {"title": "unknown prop warning ignore undefined", "body": "emitted even property value perhaps treated existing perhaps intended afaik", "num": "7266", "d": "7/2016"}, {"title": "support referrerpolicy attribute", "body": "referrerpolicy defined whatwg html eg elements also see", "num": "7263", "d": "7/2016"}, {"title": "react redux sortable problem", "body": "hello trying sort list elements unique key aplication based react redux sorting using works really good save sort order redux store store changes triggers rerendering elements swap back previous positions probalbly react detect sortable already made change dom works well use mathrandom keys really like avoid force react detect keys displayed list already changed order", "num": "7262", "d": "7/2016"}, {"title": "add dependency ci checks", "body": "dependency ci new service checks status projects dependencies post commit able read dependencies packagejson checks dependencies various metrics eg deprecated unmaintained check license current behavior currently adding updating dependencies check manually expected behavior enabling could give additional metrics dependencies project free fast need integration signing github giving access repo enabling switch large open source repositories like mozilla servo already enabled", "num": "7261", "d": "7/2016"}, {"title": "error messages omitting relevant components displayname", "body": "please forgive appears like rant feature request searched ca nt find explanation error messages displayed without component responsible driving insane every component project explicit specified debugging rendering bunch immutable props changed one prop types see warning using maps children yet fully supported experimental feature might removed convert sequence iterable keyed reactelements instead obviously missed something could easily fixed knew even component name message frustrating taunting know problem wo nt tell feel makes infuriating looking stacktrace behind useless well usual neverending list react function calls mention source files spent countless time hunting errors like would taken moments knew name component responsible would infinitely helpful field appeared debug output", "num": "7257", "d": "7/2016"}, {"title": "react state set set object", "body": "like following code want change set use following code change state directly official note", "num": "7256", "d": "7/2016"}, {"title": "bug backspace input type number behaves badly blink", "body": "appears introduced new chrome version ca nt find reference affectedtested browsers os x chrome opera unaffected browsers safari firefox backspacing input element set causes odd behavior decimal point gone ca nt easily readded example example simply backspaced twice second backspace expect showing input instead reads cursor moved beginning next two jumps attempts add another decimal point fiddle tested react notes occurs set neither set input behaves properly currently working around issue unfortunately setting input value via ref", "num": "7253", "d": "7/2016"}, {"title": "attributes properties custom components", "body": "want request feature report bug feature current behavior custom component properties always set attribute expected behavior maybe react watch static property custom elements decide set attribute instance property otherwise objects array could always passed properties order avoid", "num": "7249", "d": "7/2016"}, {"title": "component specs document nextcontext parameters", "body": "including contexttypes adds parameter signature several component lifecycle functions documented two locations anyone attempting implement plugin react nt made use context would unlikely consider extra parameters since documented slightest componentspecs page leading hardtofind bugs please consider updating reference context parameters", "num": "7244", "d": "7/2016"}, {"title": "expand border style property", "body": "current behaviour passedin style property would translated want shorthand style property remained unexpanded outlook dose support style properties like borderwidth bordercolor etc also found expanding operation react done configurable ideas thanks advanced", "num": "7243", "d": "7/2016"}, {"title": "custom properties set style objects", "body": "using css custom properties inline styles react logs following console dev mode demo logged importantly warning though styles applied elements client side dev production applied server rendering maybe initial client render client side elements taken dom put back state changes see info affects chrome react", "num": "7241", "d": "7/2016"}, {"title": "missing react element debugid warning testing components jest", "body": "want request feature report bug report bug current behavior testing components shown calling current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior according internal warning nt displayed versions react browser os affected issue work previous versions react react reactaddonstestutils reactdom nt receive warning", "num": "7240", "d": "7/2016"}, {"title": "page found", "body": "found want use jsx guide shows set compilation", "num": "7239", "d": "7/2016"}, {"title": "hey", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7237", "d": "7/2016"}, {"title": "date input defaultvalue regression", "body": "chrome browser webview android defaultvalue specified show defaultvalue react works tested multiple devices including tablets phones phone works ok chrome desktop browser react react additionally tap blank date field select date defaultvalue set leaves field blank onchange event triggered test case inspecting elements rendered android device via chrome devtools version renders version renders value element also affects possibly types tested date time", "num": "7233", "d": "7/2016"}, {"title": "unit test failures react", "body": "bug unit tests using shallow rendering fail typeerror read property onsetdisplayname null ca nt seem get testutils jsfiddle build output code snippet import expect expect import testutils reactaddonstestutils import react react import blurinput beforeeach function props value onchange function expectspyon props onchange let renderer testutilscreaterenderer rendererrender instance getinstance renderer componenttree renderergetrenderoutput reflects value underlying input function expect componenttreepropsvalue tobe expect instancestatevalue tobe expected behavior unit test run normally versions react browser os affected issue work previous versions react issue", "num": "7231", "d": "7/2016"}, {"title": "show", "body": "report bug enable react tab developer tools react chrome", "num": "7228", "d": "7/2016"}, {"title": "performance regression removing rows large table", "body": "javascript frameworks benchmark ran performance regression react reproduce open reactjs version open console repeat three times following click create click clear get result like runlots took clear took runlots took clear took runlots took clear took repeat reactjs get something like unlots took clear took runlots took clear took runlots took clear took measurement chrome macos mbp notice clear lot slower first two runs react v third clear run performs react versions source code found repository benchmark", "num": "7227", "d": "7/2016"}, {"title": "deprecation warnings production", "body": "want request feature report bug feature current behavior warnings stripped production build current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior ideally important warnings production namely ones either indicate something broken definitely broken next major version upgrade react react could provide function register callback would called every warning prod callback would responsible whatever wanted eg capturing stack trace amp reporting error server since working react know supported hacked version unfortunately ended split across commits since nt test well pushing implements callback registration main hook next two bugfixes diff got warnings wanted react hack keep stuff debug build really trying use prod exact details nt important give idea flavor things looking broken next version almost certainly bad bug ideally system would also make use new error codes keep warning messages weighing prod build react version since highly selective warnings kept potential save stripping messages anyway might worth effort unless choose keep significantly warnings prod versions react browser os affected issue work previous versions react", "num": "7224", "d": "7/2016"}, {"title": "feature connection react view rctbridgemodule", "body": "connection reactview rctbridgemodule since want create ads like canvas ad facebook find rctbridgemodule callback reactview", "num": "7223", "d": "7/2016"}, {"title": "firefox hack leaky without noop", "body": "want request feature report bug bug current behavior right react provides crossbrowser workaround event firefox selectionchange event nt fire react hacks around evaluating selection smart however nt added handler component part selection listening hack firefox wo nt ever fire means happen something changes selection wo nt caught expected next time fires handler triggered via part hack since react thinks selection changed example place cursor end sentence fires thanks updates selection last character handle deleting character preventing default nt fire change nt taken place yet expected updates selection another character handle deleting another character fires thanks internal state comparing selection updated date expected add noop handler problem goes away since always fire rendering thanks never fire incorrectly due example draftjs onkeyup handler actually nt anything except without handling would nt stay sync firefox expected behavior ideally think event hack would still fire even without developer add noop component versions react browser os affected issue work previous versions react react firefox", "num": "7222", "d": "7/2016"}, {"title": "consider exposing opaque component path somehow", "body": "something thought regard focus hover selection implement hover top level state value currently hovered root component currently focused component anything gets rerendered respond things changing however also means everything gets rerendered previous next path ideal would store path component extract path internal state way quickly rerender previous next path still letting anything react focushover changing maybe generally useful selection bit special might need rerender anything two paths also optimized similarly checking child node corresponds start end path anything selected unselected", "num": "7221", "d": "7/2016"}, {"title": "ship", "body": "estimated date yet wanted make sure something track noncherrypicking actions required set point", "num": "7220", "d": "7/2016"}, {"title": "would like make sure lifecycle react usage jquery datatable react", "body": "hey guys freshman react facing problems like fetch data server show table create features deal loading error statues like render spinner data loading error message error occured datatable everything works perfectly issue place run productrun function initialized datatable tried put componentdidmount componentwillupdate nothing works even trie put render function still got nothing anybody show way let work really appreciate component import react react import contentwrapper componentslayoutcontentwrapper import grid row col panel button table reactbootstrap import productsrun productsrun import link reactrouter import spinner componentswidgetsspinner class products extends reactcomponent componentdidmount thispropsfetchproducts export default products productrun function", "num": "7218", "d": "7/2016"}, {"title": "way let users know invalid type returned", "body": "error message question helpful technically possible show returned", "num": "7215", "d": "7/2016"}, {"title": "feature request merge classname prop outermost container component", "body": "use classname prop html element custom react component requesting support feature simplifies component usage need apply additional styles without wrap component external div mycomponent render return hello expected usage render hello affect achieved mixin nonmounted tests use thispropsclassname find components", "num": "7214", "d": "7/2016"}, {"title": "thisstate constructor thissetstate everywhere else violating uniform access principle", "body": "style creating components react clearly violating uniform access principle general source confusion bugs able set state two different ways must constructor must everywhere else believe much better way set state general universal already accessing state setting state constructor everywhere else behavior could easily replicated proxies", "num": "7212", "d": "7/2016"}, {"title": "onchange firing properly react paste text textarea", "body": "hello copypaste data keyboard textarea onchange firing works fine chrome ff included test link log msg happen copypaste data textarea thanks", "num": "7211", "d": "7/2016"}, {"title": "add afterbatchupdate callback similar", "body": "want request feature report bug feature request discovered would quite useful us able react call userdefined function every batch updates case would like ask datastore remove unneeded data every round updates say user clicks button resulting ui changes done existing lifecycle methods nt seem provide us way achieve behavior currently releasing data datastore unmount components suboptimal new component mount place might ask similar data could react execute callback round updates ui changes quiesce could avoid unnecessary unloadreloads alexcole", "num": "7207", "d": "7/2016"}, {"title": "bot comment prs build size changes threshold", "body": "would nice establish threshold bot comment pr adds number bytes umd build size setup potentially add metrics want track notification", "num": "7205", "d": "7/2016"}, {"title": "reason use null instead undefined default state using default would allow using default values", "body": "really issue reason use null instead undefined default state using default would allow using default values", "num": "7204", "d": "7/2016"}, {"title": "behaviour consistent dom values identical", "body": "created opposite bug react fixed match dom behaviour instead solution proposed see", "num": "7203", "d": "7/2016"}, {"title": "enhancement htmlxml comment support jsx", "body": "feature support xml comments jsx current status currently way insert comments jsx flow wrap js context proposed extension xml like comments would also allow us quickly temporarily comment components jsx flow like", "num": "7201", "d": "7/2016"}, {"title": "weird behaviour prop present", "body": "want request feature report bug bug current behavior example reactdomrender reactcreateelement div key classname foo test documentgetelementbyid container renders test reactdomrender reactcreateelement div key classname foo test documentgetelementbyid renders test see adding prop breaks rendering prop maybe parameters well weird reserved word js got prop another story behaviour definitely weird versions react browser os affected issue work previous versions react chrome tested", "num": "7200", "d": "7/2016"}, {"title": "input elements always rendered attribute", "body": "want request feature report bug bug think current behavior rendering without name attribute render dom current behavior bug please provide steps reproduce possible minimal demo problem via similar template example regression using react expected behavior attribute rendered provided expected behavior react versions react browser os affected issue work previous versions react regression good", "num": "7198", "d": "7/2016"}, {"title": "npm problem", "body": "hello new react testing project whne npm install get lealsmacbookair snapchat manu npm install snapchat usersmanudesktopsnapchat react npm warn reactaddonspurerendermixin requires peer react none installed npm update lealsmacbookair snapchat manu npm update snapchat usersmanudesktopsnapchat reactnativecamera git npm warn reactaddonspurerendermixin requires peer react none installed nt know react packagejson", "num": "7196", "d": "7/2016"}, {"title": "react strips property tag issues warning", "body": "want request feature report bug bug current behavior react flagging warning stripping property tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior strip issue warning versions react browser os affected issue work previous versions react chrome", "num": "7192", "d": "7/2016"}, {"title": "bug missing react element debugid triggered reactdomserverrendertostaticmarkup", "body": "react provided fiddle throwing missing react element debugid warning described internal ie userfacing react warning warning present react make claim sane usage pattern exists realworld components unexpected failure case", "num": "7190", "d": "7/2016"}, {"title": "missing react element debugid warning triggering render componentwillmount", "body": "want request feature report bug bug current behavior reported adamryvola react displaying warning another component rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template js import react component react import reactdom reactdom const container documentgetelementbyid container const menucontainer documentgetelementbyid menucontainer export default class app extends component componentwillmount reactdomrender menucontainer lt trigger warning render return app reactdomrender container jsfiddle expected behavior according gaearon warning internal bugs react meant users source warning triggered versions react browser os affected issue work previous versions react react issue", "num": "7187", "d": "7/2016"}, {"title": "react removes tabindex property", "body": "react removes tabindex property defined like component found working misunderstanding bug update fault proper tabindex property camelcase", "num": "7186", "d": "7/2016"}, {"title": "linkedin react users group proposed angular jobs subcription", "body": "hello subscribed linkedin react users group thought would like know currently administered angular guy proposed look angular jobs subscription really one might expect", "num": "7184", "d": "7/2016"}, {"title": "documentation add schema illustrate component lifecycle", "body": "peter beshai created good cheatsheet illustrate component lifecycle could useful similar schema react documentation page components", "num": "7183", "d": "7/2016"}, {"title": "testutils shallow renderer triggers componentwillreceiveprops nt trigger componentdidupdate", "body": "following test rerender component different props using different methods get different results sure intended behaviour think behaving like expect js import react component react import createrenderer renderintodocument reactaddonstestutils import jsdom mochajsdom import reactdom reactdom class foo extends component componentwillreceiveprops consolelog component receive props describe test gt jsdom triggered triggered shallow renderer sure test feature using think possible would expect triggered shallow renderer well using node react", "num": "7182", "d": "7/2016"}, {"title": "error production devlopment", "body": "idea error occured production version anything wrong many thanks information uncaught invariant violation minified react error visit full message use nonminified dev environment full errors additional helpful warningsreactprodinvariant addcomponentasrefto attachref reactrefattachrefs attachrefs notifyall close closeall perform batchedmountcomponentintonode batchedupdates batchedupdates rendernewrootcomponent rendersubtreeintocontainer render selecthandler firechange onmenuselect onclick onclick invokeguardedcallback executedispatch executedispatchesinorder executedispatchesandrelease executedispatchesandreleasetoplevel foreachaccumulated processeventqueue runeventqueueinbatch handletoplevel handletoplevelimpl perform batchedupdates batchedupdates dispatchevent", "num": "7181", "d": "7/2016"}, {"title": "form submit button empty values", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template using react reactdom expected behavior versions react browser os affected issue work previous versions react extra attributes empty values added submit button form works", "num": "7179", "d": "7/2016"}, {"title": "setstate update existing state transition", "body": "hi guys component count character word component render got lot duplicate warning chrome console tool gt fix problem finally want return states thanks import react react import reactdom reactdom import countable countable class statics extends reactcomponent constructor props super props thisstate paragraphs sentences words characters thiscountercallback thiscountercallbackbind countercallback counter thissetstate paragraphs counterparagraph sentences countersentences words counterwords characters countercharacters counterall render var area documentgetelementbyid editor countablelive area thiscountercallback return thisstatewords words reactdomrender documentgetelementbyid footerstatics", "num": "7177", "d": "7/2016"}, {"title": "svg xmlns attribute", "body": "want request feature report bug bug current behavior following error raised warning unknown prop tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template create component svg tag set xmlns attribute expected behavior warning versions react browser os affected issue work previous versions react", "num": "7176", "d": "7/2016"}, {"title": "range input value set initial render", "body": "want request feature report bug bug current behavior rendering range input element value input nt set initial render call render value get picked current behavior bug please provide steps reproduce possible minimal demo problem via similar template created demo demo includes component called test simply renders range input component passing props update button calls setstate trigger render also consolelog statements show values used render run demo notice click update button twice input value updates strange thing seems something min max attributes input commented line seems work fine initial render references state value nt work expected behavior input value set properly initial render versions react browser os affected issue work previous versions react affects react works fine tested latest chrome", "num": "7170", "d": "7/2016"}, {"title": "run function automatically", "body": "hi guys component proceeded find page render component inner function called wrong tip want search press enter key import react react import reactdom reactdom class quickbar extends reactcomponent constructor props super props thisstate issetfonttoggled false isfindformtoggled false value find type hit enter thistogglefind thistogglefindbind reactdomrender documentgetelementbyid headerquickbar", "num": "7169", "d": "7/2016"}, {"title": "getting warning using reactcsstransitiongroup react", "body": "bug current behavior using reactcsstransitiongroup react warns unknown prop passed dom element created component span demo expected behavior versions react browser os affected issue work previous versions react react v os tested osx el capitan worked previous versions", "num": "7163", "d": "7/2016"}, {"title": "potential issue components imported", "body": "consider following import react react import reactdom reactdom import somecomponent somecomponent export class dashboard extends reactcomponent render return let dashboardelement documentgetelementbyid dashboard dashboardelement null reactdomrender dashboardelement file import react react import reactdom reactdom export class somecomponent extends reactcomponent issue least believe issue nt treated properly react maybe babel get error second import react react import reactdom reactdom class somecomponent extends reactcomponent moduleexports somecomponent everything works unless understanding fundamental level export moduleexports essentially react recognize latter first thing thing", "num": "7162", "d": "7/2016"}, {"title": "language used dangerously set innerhtml document unclear", "body": "document dangerously set innerhtml states intent behind syntax considered typetaint sorts typetaint also like recommend using language nt rely understanding term least supplement definition best create opportunity misunderstanding explaining security measure lest user draw conclusion importance", "num": "7161", "d": "7/2016"}, {"title": "emessagequeuejni javalangoutofmemoryerror", "body": "listview jni leak issue idalvikvmheap forcing collection softreferences allocation idalvikvmheap clamp target gc heap ddalvikvm gcbeforeoom freed free paused total edalvikvmheap memory allocation idalvikvm main runnable idalvikvm group main idalvikvm cgrp idalvikvm schedstat idalvikvm androidutilsparseintarrayput sparseintarrayjava idalvikvm comfacebookreactuimanagereventstoucheventcoalescingkeyhelperaddcoalescingkey idalvikvm comfacebookreactuimanagereventstoucheventinit idalvikvm comfacebookreactuimanagereventstoucheventobtain idalvikvm comfacebookreactuimanagerjstouchdispatcherhandletouchevent idalvikvm comfacebookreactreactrootviewdispatchjstouchevent idalvikvm comfacebookreactreactrootviewonintercepttouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm androidviewviewgroupdispatchtransformedtouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm androidviewviewgroupdispatchtransformedtouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm androidviewviewgroupdispatchtransformedtouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm comandroidinternalpolicyimplphonewindow decorviewsuperdispatchtouchevent idalvikvm comandroidinternalpolicyimplphonewindowsuperdispatchtouchevent idalvikvm androidappactivitydispatchtouchevent idalvikvm comandroidinternalpolicyimplphonewindow decorviewdispatchtouchevent idalvikvm androidviewviewdispatchpointerevent idalvikvm androidviewviewrootimpldeliverpointerevent idalvikvm androidviewviewrootimpldeliverinputevent idalvikvm androidviewviewrootimpldoprocessinputevents idalvikvm androidviewviewrootimplenqueueinputevent idalvikvm androidviewviewrootimpl windowinputeventreceiveroninputevent idalvikvm androidviewinputeventreceiverdispatchinputevent idalvikvm androidosmessagequeuenativepollonce native method idalvikvm androidosmessagequeuenext idalvikvm androidoslooperloop idalvikvm androidappactivitythreadmain idalvikvm javalangreflectmethodinvokenative native method idalvikvm javalangreflectmethodinvoke idalvikvm comandroidinternaloszygoteinit methodandargscallerrun idalvikvm comandroidinternaloszygoteinitmain idalvikvm dalviksystemnativestartmain native method einputeventreceiver exception dispatching input event emessagequeuejni exception messagequeue callback handlereceivecallback idalvikvmheap clamp target gc heap ddalvikvm gcforalloc freed free paused total idalvikvmheap forcing collection softreferences allocation idalvikvmheap clamp target gc heap ddalvikvm gcbeforeoom freed free paused total edalvikvmheap memory allocation idalvikvm main runnable idalvikvm group main idalvikvm cgrp idalvikvm schedstat idalvikvm javalangabstractstringbuilderenlargebuffer abstractstringbuilderjava idalvikvm idalvikvm javalangstringbufferappend idalvikvm javaiostringwriterwrite idalvikvm javaioprintwriterdowrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javalangthrowableprintstacktrace idalvikvm javalangthrowableprintstacktrace idalvikvm androidosmessagequeuenativepollonce native method idalvikvm androidosmessagequeuenext idalvikvm androidoslooperloop idalvikvm androidappactivitythreadmain idalvikvm javalangreflectmethodinvokenative native method idalvikvm javalangreflectmethodinvoke idalvikvm comandroidinternaloszygoteinit methodandargscallerrun idalvikvm comandroidinternaloszygoteinitmain idalvikvm dalviksystemnativestartmain native method emessagequeuejni javalangoutofmemoryerror dandroidruntime shutting vm wdalvikvm thread exiting uncaught exception idalvikvmheap clamp target gc heap ddalvikvm gcforalloc freed free paused total idalvikvmheap forcing collection softreferences allocation idalvikvmheap clamp target gc heap ddalvikvm gcbeforeoom freed lt free paused total edalvikvmheap memory allocation idalvikvm main runnable idalvikvm group main idalvikvm cgrp idalvikvm schedstat idalvikvm javalangabstractstringbuilderenlargebuffer abstractstringbuilderjava idalvikvm idalvikvm javalangstringbufferappend idalvikvm javaiostringwriterwrite idalvikvm javaioprintwriterdowrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javalangthrowableprintstacktrace idalvikvm javalangthrowableprintstacktrace idalvikvm comumenganalyticsba idalvikvm comumenganalyticsda idalvikvm ualyafa idalvikvm ualyafuncaughtexception idalvikvm javalangthreadgroupuncaughtexception idalvikvm javalangthreadgroupuncaughtexception idalvikvm dalviksystemnativestartmain native method idalvikvm reacting signal idalvikvm wrote stack traces dataanrtracestxt", "num": "7160", "d": "7/2016"}, {"title": "option labels", "body": "bug clicking label associated radio button trigger onchange react chrome version import react react export default class optionspanelview extends reactcomponent constructor props super props thisstate filter", "num": "7158", "d": "6/2016"}, {"title": "onchange firing td element checkbox element inside", "body": "nt think expected behavior reporting bug creating data table component one projects component decided implement extensions table different types columns creating checkabletablecolumn extend regular column support toggle actions putting checkbox inside ran strange behavior try attach onchange handler checkbox upperinthetree component event firing twice looking found onchange event checkbox react translates onclick event bubbling td component contains checkbox simplicity spreading passed props managed reproduce behavior following bin reproduce click one checkboxes table know td element attaching onchange handler think problem latest stable chrome firefox opera react version currently using latest one thank advance", "num": "7157", "d": "6/2016"}, {"title": "setting autofocus input warns", "body": "want request feature report bug bug current behavior warns set steps reproduce render input autofocus prop set see spit warning demo expected behavior setting warn set versions react browser os affected issue work previous versions react seeing warning rc warn", "num": "7156", "d": "6/2016"}, {"title": "css minus positioning zindex working inside component", "body": "ok got img inside component want position two component one component end new begins middle img position img component nt hold img positioned top img zindex nt work bring img front idea many thanx aar", "num": "7155", "d": "6/2016"}, {"title": "group warnings unknown dom properties", "body": "ran react bootstrap doc page master saw ton warnings page really long maybe edge case least think group props element single warning example warnings could become one", "num": "7152", "d": "6/2016"}, {"title": "bug data attributes supported script element", "body": "currently following resulting script element custom data attribute problematic many libraries use add data load eg api keys etc data attributes appear supported elements specifically stripped scripts", "num": "7151", "d": "6/2016"}, {"title": "proposals reacttestrenderer api", "body": "want request feature report bug new feature current behavior returns instance primarily seems support two things getting representation rendered output calling methods instance via expected behavior good testing regular ui components testing infralevel components hocs often requires testing lifecycle hooks found need ability rerender component new props test etc unmount component altogether test changing props accomplished via helper using following work around issue javascript class propssetter extends reactcomponent constructor super thisstate active true props null setprops props thissetstate props unmount thissetstate active false render thisstateactive return const child reactchildrenonly thispropschildren thisstateprops return reactcloneelement child thisstateprops return child const inst reacttestrenderercreate instgetinstance setprops works updating props calling fails appears replacing component dummy failing preferably api would support directly versions react browser os affected issue work previous versions react new api master knowledge", "num": "7148", "d": "6/2016"}, {"title": "allow indirect children reacttransitiongroup", "body": "calls transitionrelated lifecycle hooks like direct children inconvenient child component wrapped thirdparty decorator decorators may return components outermost direct child receive lifecycle calls would possible let descendants register constructors instance receive calls would save app developers hassle writing wrapper component sits animated child intercept hooks pass presence intermediate wrapper components", "num": "7146", "d": "6/2016"}, {"title": "type input field correctly updated safari", "body": "want request feature report bug bug report current behavior safari type input field updated properly consider example linked react component display button input field type input field toggled file text clicking button change input type reflected believe issue safari setting property safari affect rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior input type changed chrome firefox versions react browser os affected issue work previous versions react react reactdom browser safari chrome firefox os os x", "num": "7144", "d": "6/2016"}, {"title": "quick removal addition animated css class results animation", "body": "trying call followed remove flash class dom element add therefore triggering css animation defined class works first time working expected unless introduce timeouts first time class added animation triggered subsequent calls fail trigger animation sure issue way react updates dom inherent limitation css animations know react specialised utilities animations rather keep code way fix statjs javascript import react component react import link reactrouter import styles statscss export default class stat extends component constructor props super props thisstate flash false componentwillreceiveprops nextprops nextpropscount thispropscount const flash nextpropscount gt thispropscount thissetstate flash false gt thissetstate flash render const count name href thisprops const flash thisstate const flashclass flash styles return statnumber flashclass gt count name statscss scss highlightupcolor green highlightdowncolor red keyframes highlightup color highlightupcolor color default keyframes highlightdown color highlightdowncolor color default flashup animation highlightup flashdown animation highlightdown", "num": "7142", "d": "6/2016"}, {"title": "refs object extensible", "body": "wanted drop stringbased refs bindings replace callbackbased ones however tried replace received error nt find informations docs found issue frederickfogerty tried assume back sep worked nt something change refs object became nonextensible assigning refs manually callbacks considered bad practice", "num": "7136", "d": "6/2016"}, {"title": "onmouseenter propagation double reactroot", "body": "think bug onmouseenter event handler calls child element several reactroots reproduce run fiddle move mouse white square red back console see log link works wrong expected behavior handler haves call mouse enter red square see simiar example one reactroot works right react", "num": "7135", "d": "6/2016"}, {"title": "deprecate calling proptypes validators production", "body": "want strip code implements proptypes validation functions production mean functions throw production every time initial attempt much change people might calling production right introspection need deprecate calling production actually turning shims throw errors spicyj suggested good first step pass extra argument proptype checkers would warn argument passed passed match secret value way detect somebody manually calls validators warn production like work please comment many people implementing time would need pass extra argument prop type checkers production warn inside prop type checkers receive expected extra argument warning say something like forget write tests peek see write tests simulate production environment send pr discuss", "num": "7131", "d": "6/2016"}, {"title": "jest react django rest test implementation", "body": "rookie question code like create test case class apiinstanceview extends reactcomponent componentdidmount let insturl djangourlrestapisinstanceapireplace api thispropsapi let apiurl djangourlrestapisonereplace api thispropsapi get apiurl get insturl function api instance bind function error bind running jest code describe apiinstanceview gt change api instance view based state gt render checkbox label document const menu testutilsrenderintodocument get referenceerror djangourlrestapisinstanceapi defined define djangourlrestapisinstanceapi thanks", "num": "7130", "d": "6/2016"}, {"title": "clean toplevel event listeners unmounting roots", "body": "want request feature report bug bug maybe intended behaviour current behavior background app needs embedded apps customers idea react app javascript loaded iframe main window hosts dom elements customers react app bit works fine time goes react ui longer needed react root removed iframe destroyed apps often long lived times react app needs appear iframe recreated everything reloaded happen many times goal would like keep iframe around actually needed rather recreate time needed app used customers would like embed react app without interference app javascript iframe thing problem evident watching chrome dev tools timeline memory graph memory always increases time new iframe created react ui init unmounting destroying iframe never causes memory drop near original load value repeating process multiple times slowly show increase memory also causes immediate problem react throwing exceptions every event click type etc window iframe null proof first symptom event exceptions happens app exceptions happen cant share app cant repo parts apply react apps please read thru make sense get end examine poc destroying iframe leaves react event dispatching system memory mixture xtag webcomponents used create iframe load react app custom element used lets call console starts showing exceptions within react code side effect react dispatchevent still active trying stuff know snip disable react havent actually tried avoid exceptions would leave memory leak rather easy prove react remains memory simply goto compiled app find insert consolelog watch continues print stuff unmounting last component even though listeners case exception caused eventually default window target multiple copies basic idea various react functions tries get target assumes never null one doesnt load react iframe window always defined later tries read nodename undefined window iframe destroyed results exception null pointer etc current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior probably two possible solutions work tandem firstly react provide api remove global event listeners naturally could complain active components remain mounted api may internalprivate public implemented might called something like everything gone next react render would setup globals react dispose global event handlers last root component unmounted would call new api mentioned either option solves problem wish either let react shutdown gracefully mind could unmount iframe powered react ui component call reactdisposeglobals mentioned unmounting auto calls internal step skipped destroy iframe proof goto compiled locate add consolelog notice even last root container unmounted stuff continue printed event listeners still active quick scan abstraction around adding listeners couldnt see remove function stored called cleanup proof look last section proof concept form popular todomvc react example versions react browser os affected issue work previous versions react react reactdom reactredux might useful know reproducable use case sorry tried decided using facebook jsfiddle wasnt really smart thing following reasons compile jsx content means loading babel etc compile babel jsfiddle etc many moving parts hard get root component inserted output box even hard put jsx compiled output somewhere iframe src load forked popular todomvc app added minor edits recreate reload renderunmount destroy everything app try loop separated sleep todomvc main site todomvc github fork comments snapshots chrome dev tools timeline memory graph hopefully trust todomvc guys right thing dumb memory leaks examine obvious thing im adding support horrible create app run app renderunmount many times render unmount sleep bit loop counter exhausted sorry boring convenience list basic instructions run react version branch local machines clone root run gulp compile everything run something like python simplehttpserver navigate navigate examplesreact corresponds distexamplesreact directory gulp built poc supports concepts rerun todomvc window create iframe load todomvc js iframe render outer window unmount destroy iframe try create custom element webcontainer creates iframe load todomvc js iframe render outer window unmount destroy custom element try look pr todomvc see many helpful pictures memory leak graphs chrome dev tools described scenarios commentary", "num": "7128", "d": "6/2016"}, {"title": "refs undefined", "body": "react var react require react var foo reactcreactclass render function moduleexports foo im getting console could possibilities also using reactrails", "num": "7124", "d": "6/2016"}, {"title": "defaultprops react stateless function", "body": "pls help resolve error stateless function works provide function hello props return hello propsname hellodefaultprops name world var hellohello reactdomrender hello mountnode returns error tried based following documentation simplified component api intended components pure functions props components must retain internal state backing instances component lifecycle methods pure functional transforms input zero boilerplate however may still specify proptypes defaultprops setting properties function would set class", "num": "7123", "d": "6/2016"}, {"title": "polyfill mouseeventbuttons safari", "body": "mouse move event ebuttons returns undefined safari behaving correctly chrome pressing left mouse button moving mouse expect ebuttons return enativeeventwhich returns correct result safari sample code javascript import react react export default class canvas extends reactcomponent constructor props super props mousedown e consolelog mouse ebuttons enativeeventwhich mousemove e consolelog mouse move ebuttons enativeeventwhich mouseup e consolelog mouse ebuttons enativeeventwhich render var canvasstyle backgroundcolor rgba position absolute top left width height versions react safari os os x el capitan version computer model name macbook air model identifier processor name intel core processor speed ghz number processors total number cores cache per core kb cache mb memory gb", "num": "7122", "d": "6/2016"}, {"title": "thisprops nextprops parent state changes", "body": "changing parent state component nested child passing callback method props working expected state changed components updating properly however optimizing rendering noticed particular prop ends newest prop parent component object like jsx parent component class parent extends reactcomponent constructor props super props thisstate settings one true two true togglesetting key gt const settings thisstatesettings consolelog old settings settings produces expected old state results settings key settings key thissetstate settings consolelog new settings thisstatesettings produces expected new state results render return child component componentwillreceiveprops nextprops consolelog thispropssettings nextpropssettings new results would stop rerendering always true reason shouldcomponentupdate nextprops return thispropssettingsone nextpropssettingsone child render grandchild render behavior works expected except incoming props old props", "num": "7121", "d": "6/2016"}, {"title": "react", "body": "", "num": "7120", "d": "6/2016"}, {"title": "ship", "body": "next release react shipped rc npm last week react native went rc week using rc ship final rn using final versions think another week branch cut ideally get sooner nt heard issues going assume good shape planning ship react monday june cc ide sure running rn release time around feel free cc todo x pull prs x write changelog zpao x actually ship zpao keyanzhang blog post error codes keyanzhang", "num": "7118", "d": "6/2016"}, {"title": "shallow rendering proptypes validation", "body": "javascript const react require react function scopedforwarnings const c gt reactcreateelement div cdisplayname ci cproptypes c reactproptypesstringisrequired consolelog shallow rendering require reactaddonstestutils createrenderer render scopedforwarnings consolelog static markup rendering require reactdomserver rendertostaticmarkup scopedforwarnings actual expected unless mistaken cry working towards warnings react components tests thought using shallow would allow us stop mockingpassing tons useless props proptypes validation first level component even though really rendered proptypes validation still occurs normal", "num": "7115", "d": "6/2016"}, {"title": "context validation limitations", "body": "problem best expressed terms example function acts plugs implementation isomorphic style loader function simply set highlevel contains application services components whole shebang passed root component component inside essentially needs get style applier function context run naturally abstracting higher order component would make sense initiate styles dispose paired lifecycle note similar live implementation running site however since site duplicating class workaround mentioned problem however want couple component app context essentially want something like ts export function createstyledwith styleapplier cssstylestyleapplierfunction innercomponent styles class styledcomponent extends reactcomponent static displayname getdisplayname innercomponent private removecss gt void problem create pull service context simply pass decoupled style applier function component unless stored else access context outside component well solved providing closure accesses context pull services thought since nt react refuse acknowledge existence context really way make work without another unnecessary abstraction another higher order component pulls styleapplier context provides component called higher order components may gold fill entire ship gold sink great react community insisting hoc pattern seems little dogmatic way certain things seems totally wasteful components tiny exists hundreds hocs may small processor time requirement consume memory component diffing react things keep around lifecycle method executions note using example concern pattern involved encounter many scenarios seem jump hoops access want use higher order components good way solve things could potentially solve reasonable one imo make context validation optional nt shove component throat provide way access context outside without using higher order components well think kinda breaks many encapsulations leaving since would theoretically solve issue", "num": "7114", "d": "6/2016"}, {"title": "read property getnativenode null reactreconciler", "body": "hello everyone problem updating react current latest actually even tell exactly cause problem pages spa everything works fine one specific action app error happens problem appeared react dependent libraries update", "num": "7113", "d": "6/2016"}, {"title": "es target", "body": "targeting es compliant modern browsers latest version chrome safari etc would like leverage reduce size react build using latest version react already something possible options reduce size react setting node environment variable production", "num": "7111", "d": "6/2016"}, {"title": "documentation thisstate mutation seems contradictory", "body": "documentation component api says however documentation classes says perhaps would possible make exception mutation clear", "num": "7108", "d": "6/2016"}, {"title": "bug safarimessages copying text puts comment tags clipboard", "body": "reproducible osx safari mac messages app using react run example fiddle safari copy triple clicking text paste text messenger app paste chat window pasting clipboard content elsewhere outputs bug report composer example", "num": "7106", "d": "6/2016"}, {"title": "textfield type eq number bug", "body": "input string type eg eee accepted react windows chrome", "num": "7105", "d": "6/2016"}, {"title": "uncaught invariant violation react dom tree root always node reference", "body": "rendering following component server using causes error message logged chrome console error get logged index route thereafter navigating two routes causes error logged html served dynamically looks like html stuff click lorem ipsum dolor sit amet consectetur adipisicing elit nostrum sint totam ea quam iusto illum necessitatibus ad pariatur quos provident ipsum adipisci deserunt voluptatum vero eaque veniam reiciendis ipsam aspernatur lorem ipsum dolor sit amet consectetur adipisicing elit nostrum sint totam ea quam iusto illum necessitatibus ad pariatur quos provident ipsum client entry point looks like javascript const run gt reactdomrender router documentgetelementbyid root const loadedstates complete loaded interactive typeof document undefined loadedstatesincludes documentreadystate amp amp documentbody run else windowaddeventlistener domcontentloaded run false", "num": "7103", "d": "6/2016"}, {"title": "expose react build modeflags", "body": "kittens expressed concern people forget set nodeenv building react application result babel producing bloated builds due new devmode transforms never set production set every element would introduce substantial bloat would nt want production environment probably want able warn happens case think might want expose something transform could add runtime checks verify react dev mode warn know thinking switching real build flags various features maybe want expose individual flags anyway opening issue place discuss track", "num": "7100", "d": "6/2016"}, {"title": "value input range incorrectly rounded mounting step attribute ommited", "body": "want request feature report bug bug current behavior react beginning rounds value looks step parameter example result incorrect value input component mounts put attribute attributes works fine current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo comment uncomment line see difference expected behavior always look step parameter round value required versions react browser os affected issue work previous versions react opera chrome firefox yes works", "num": "7099", "d": "6/2016"}, {"title": "wrap state props getter setter", "body": "development accidentally get directly manipulated warning pop though pretty dumb mistake happen occasionally tools like flow detect every uses", "num": "7096", "d": "6/2016"}, {"title": "keyboard events delivered divs", "body": "hi normal dom allows catch keyboard events focused element example make focusable need set tabindex react synthetic event system deliver keyboard events elements fixed", "num": "7095", "d": "6/2016"}, {"title": "global event handlers documentbody containing element run react event handlers", "body": "discovered add global event handler component stop inside react event handler global native event handler runs react one able stop set think bad behaviour react setting synthentic events window instead specific dom elements fixed", "num": "7094", "d": "6/2016"}, {"title": "unable find element id rerendering server generated content contains style tag", "body": "want request feature report bug bug current behavior serverrender page style tag style tag created using later gets rerendered without element see error console note happens serverrender page turn server rendering error goes away dom looks like error also goes away instead also goes away seems element expects one child current behavior bug please provide steps reproduce possible minimal demo problem via similar template nt able create small reproducable hope narrowed enough clear tell try create reproducable versions react browser os affected issue work previous versions react", "num": "7093", "d": "6/2016"}, {"title": "get reactsecretdomdonotuseoryouwillbefired", "body": "version npm installed reactdom file imports react dom related stuff react however nt reactsecretdomdonotuseoryouwillbefired property since react nt export result use totally useless", "num": "7092", "d": "6/2016"}, {"title": "warn string refs owner self", "body": "sebastian wants warn hard case find codemodding string refs callback refs", "num": "7091", "d": "6/2016"}, {"title": "composition type compoent", "body": "write baseinput code problem click button input nt change know nt use defaultvalue component compostion type nt work correct browser document really nt know idea baseinput update change see effect demo video", "num": "7087", "d": "6/2016"}, {"title": "sites using react disappeared", "body": "ca nt find page sites using react repo wiki", "num": "7086", "d": "6/2016"}, {"title": "component rerenders without checking shouldcomponentupdate", "body": "component rerenders without checking condition inside shouldcomponentupdate large app cant provide fiddle screenshot console rerender getting printed shouldcomponentupdate", "num": "7083", "d": "6/2016"}, {"title": "react displayname property", "body": "following piece code import react srclibreact reactclassjs library var reactclass creates composite component class given class specification param object spec class specification must define return function component constructor function public createclass function spec var constructor function props context updater breakpoint inspect variable breakpoint get following object displayname property came assigned testcomponent looked everywhere ca nt find", "num": "7078", "d": "6/2016"}, {"title": "proposition refactor isomorphism", "body": "hey guys wanted leave proposition project chris", "num": "7077", "d": "6/2016"}, {"title": "documentdocumentelement null causes typeerror loading react", "body": "bug behavior reproduce load react html document loaded case load react chromium web view cef window object ready natural race condition html document might might parsed yet meaning cases null test srcrenderersdomclientutilssettextcontentjs causes exception thrown expected behavior react gets loaded without errors independently html document load state expect control html document accessed ie implicitly react module loading possible fix code settextcontentjs check attempting perform object versions react browser os affected issue work previous versions react macos chromium embedded framework also confirmed", "num": "7074", "d": "6/2016"}, {"title": "call props checktype validation function", "body": "example question define custom prop type use validator like use prop validation function anywhere inside function signature whatever pass arguments always returns something wrong impossible check type way thanks", "num": "7072", "d": "6/2016"}, {"title": "include licensing header reactjs", "body": "currently reactjs distribution licensing header unfortunately removed webpack uglifyjs could please add file headers minifiers keep optimized versions license compliance achieved automated manner", "num": "7071", "d": "6/2016"}, {"title": "performance worsening version", "body": "hey folks maintainer reactvirtualized recently focused trying squeeze better fps components scrolling help created test harness scrolls lot measures fps test harness lets measure different versions reactvirtualized different versions react order compare performance testing discovered consistent drop performance react slower observed chrome safari firefox latest versions os x wanted share perhaps something silly test harness react react instructions reproduce load page open console click anywhere body start test wait complete log average fps total time information test run minimum times potentially longer satisfies confidence interval upon completion print average frame rate across test source code case helpful test code test case test runner", "num": "7067", "d": "6/2016"}, {"title": "invariant violation error message improvement", "body": "want request feature report bug error message bug current behavior uncaught invariant violation img void element tag must use check render method provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react found chrome universal", "num": "7065", "d": "6/2016"}, {"title": "browser unresponsive controlled text input containing large amount text focused", "body": "reproduce go paste long text chars good fit add whole tab freeze good amount time text input todo app application try scroll text input still focused gt really bad scrolling performance repositioning cursor takes second rendered contrast pasting text noncontrolled component like markdown editor right component using external plugins doe nt yield issue", "num": "7063", "d": "6/2016"}, {"title": "passing function setstate receives empty object even initial state", "body": "react dont initial state via getinitialstate usually thisstate null thissetstate receive function following signature function prevstate initial call seems react initializing empty object prevstate even though indeed still empty thus subsequent access state setstate returns returns empty object intended behavior", "num": "7061", "d": "6/2016"}, {"title": "bug invariant violation using reactaddonstransitiongroup", "body": "working rails project uses reactrails gem react premade modal component requires reactaddonstransitiongroup among things modal loads get following error uncaught invariant violation addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded details try close modal get error uncaught typeerror read property componentwillenter undefined trouble using react components already deleted reinstalled nodemodules folder known issue tips already reviewed following resources attempted debug per suggestions avail", "num": "7058", "d": "6/2016"}, {"title": "fix webcomponents example", "body": "reactcomponent gt webcomponent gt reactcomponent interop example currently partially broken chrome custom element createdcallback expect actual get work createdcallback function moved attachedcallback pull request coming soon", "num": "7056", "d": "6/2016"}, {"title": "reactperf totaltime measurement", "body": "relying total time output reactperfprintwasted measure performance components prevent degradation working reactdefaultperfanalysis replacement functionality expected come back future release", "num": "7055", "d": "6/2016"}, {"title": "access props", "body": "want request feature report bug seems like bug sure current behavior unable access props function defined outside current behavior bug please provide steps reproduce expected behavior expected behavior access props versions react browser os affected issue work previous versions react working though believe present older versions well", "num": "7052", "d": "6/2016"}, {"title": "checked attribute dom", "body": "want request feature report bug afaik bug current behavior setting checkbox checkbox indeed checked attribute nt actually dom means checkbox targeted case blocker regarding seleniumpowered tests use xpath target elements therefore nt work either current behavior bug please provide steps reproduce possible minimal demo problem via similar template check quick copypasta browser console ran right loading fiddle behaviour expected behavior attribute actually dom whenever relevant versions react browser os affected issue work previous versions react tried react fiddle uses app uses firefox chromium ubuntu previously stumbled upon nt find answer issue nt seem related thanks lot", "num": "7051", "d": "6/2016"}, {"title": "html attributes order object keys order", "body": "want request feature report bug bug current behavior react rendered html depends order keys props example gives two different html see attributes reversed critical isomorphic application two different renders nodejs server something client expected behavior rendered html must depend order keys objects versions react browser os affected issue work previous versions react react nodejs chrome actual cases change order keys get warning checksum mismatch client two different html", "num": "7049", "d": "6/2016"}, {"title": "componentwillmount called render", "body": "hi together learning react moment sure unterstanding core part react bug idea create simple login nt show login window user already logged authentication handled via firebase small snippet code var login reactcreateclass getinitialstate function return loggedin false componentwillmount function render function return thisstateloggedin login form end login problem following componentwillmount called render user already logged new state loggedin true renders backend login form unfortunately new state componentwillmount taken render actually renders login form thanks answer cheers martin", "num": "7048", "d": "6/2016"}, {"title": "react nt repeat proptype warnings multiple renders named component", "body": "bug react renders component invalid props logs warning named component rendered invalid props warning demonstration issue testing react components jasmine karma webpack components end referred sure means testing proptype validation subsequent tests different components named prop log warnings", "num": "7047", "d": "6/2016"}, {"title": "exception thrown render method suppressed jsx expression", "body": "hi please refer following code question exception suppressed error message thrown console difficult find error jsx skips render threw exception better approaches capture accident thanks", "num": "7041", "d": "6/2016"}, {"title": "reactdomserverrendertostaticmarkup cause iterator unique key prop warning", "body": "want request feature report bug bug nt think behaviour occur problem production current behavior warning appears warning child array iterator unique key prop check render method see information current behavior bug please provide steps reproduce possible minimal demo problem via similar template fiddle paste code case html jsx function list props return propsitemsmap x gt x let listitems array keys documentgetelementbyid container innerhtml reactdomserverrendertostaticmarkup expected behavior warning versions react browser os affected issue work previous versions react fiddle uses react tested chrome ubuntu nt test previous versions react suspect always way notes mistaken html generated via updated react essential dom attributes stripped away means necessary react never need match elements rerender supplying never used avoid warning tedious ergo warning suppressed jsx rendered via", "num": "7038", "d": "6/2016"}, {"title": "onchange work corectly", "body": "onchange work like oninput oninput work react v", "num": "7037", "d": "6/2016"}, {"title": "improve error messages invalid states", "body": "think create test suite throws errors different lifecycle methods make sure relatively sensible invariants early possible preferably component names example keep regressing actually test something like explicitly cc jingc yungsters facebookreactcore", "num": "7036", "d": "6/2016"}, {"title": "reactperf throws production defined error", "body": "using webpack build react project react somehow throwing production defined referenceerror reactperf webpack setting injecting nodeenv working fine advice", "num": "7032", "d": "6/2016"}, {"title": "handle proptypes undefined production", "body": "aware note performance reasons proptypes checked development mode development mode models collections eg js import proptypes react import layout componentlayout export const schema direction layoutproptypesdirectionisrequired components proptypesarrayof component react component expecting access property component works development environment however stripped production getting error uncaught promise typeerror read property direction undefined fix think user land adding safecheck eliminates deadcode build stage eg suboptimal would require updating instance used declare data shapes environment variable would force keep disable validation suggest alternative approach issue", "num": "7031", "d": "6/2016"}, {"title": "dispatch synthetic events define custom ones", "body": "right dispatch native events dom nodes way dispatch synthetic events virtual dom nodes like able dispatch synthetic events addition like way define custom event listeners usecase example component decorator adds event dom element get resized like able dispatch event element able listen using example reference logic decorator would dispatch event see right using makes event available real dom node means must listen event way inconvenient flexible need way dispatch synthetic events able listen using properties think would great addition react", "num": "7029", "d": "6/2016"}, {"title": "onchange randomly misses keys ie typing quickly", "body": "simple search bar controlled text input autocomplete type text quickly get onkeydown events every corresponding onchange event goes missing example type foobar input field may end showing foobr happens ie tested windows seen browser fiddle showing issue log note onkeydown handler sees onchange handler fiddle includes timer real code triggers ajax call somehow important issue remove timer reproduce issue react version fiddle happens", "num": "7027", "d": "6/2016"}, {"title": "bugbreaking change csstransitiongroup react", "body": "hope correct place file issue definitely related reactcsstransitiongroup could also related react router im using react router reactcsstransitiongroup order provide animation user navigates routes app instance provide nice fancy login animation also use hoc library wrote reduxauthwrapper secure routes authenticationauthorization checks hoc performs redirects using redux state data user authentication dispatching redirects typically via redux actions use react router context well hoc works perfectly upon upgrading infinite redirection loops clear using transition group way wrong obviously concern pages briefly rendered hoc uses componentwillmountcomponentwillreceiveprops trigger redirect forcing another redirection seems like cwrp called trying unmounted continually causing cwrp triggered created sample repo use master branch everything works expected click foo link type user name welcome text moving branch renpm install try perform process result infinite redirect loop beware crashing tabbrowser typically open new window open chrome dev tools soon loads starts looping using pause script button console tested chrome version thanks let know anything else help", "num": "7025", "d": "6/2016"}, {"title": "onchange firing using keyboard", "body": "hello firefox least changing values keyboard firing actually fires blur react thanks", "num": "7024", "d": "6/2016"}, {"title": "feature request proptypesdeny", "body": "writing proptypes ensure accuracy components sometimes necessary component receive particular prop may cause problems component receiving props lead confusion suggest following would output warning like", "num": "7023", "d": "6/2016"}, {"title": "virtual dom deeprenderer", "body": "virtual dom lot potential testing actually shallowrenderer uses great usable unit testing library like enzyme great deep rendering wo real dom huge performance boost case functional orand integration testing without real browser uses dom mock called jsdom opinion totally unnecessary virtualdom rendered output totally usable testing shallowrenderer proves made little hacky fully working patch shallowrenderer allows render children also pr propose introduce something like test utils modify patch worth skip jsdom noticable perf boost name renderer api look like", "num": "7019", "d": "6/2016"}, {"title": "allowfullscreen working", "body": "seems possible pass attribute like test script note camelcase attribute names hyphen would clearer", "num": "7018", "d": "6/2016"}, {"title": "recover bug validatedomnesting appear descendant see loginform gt statelesscomponent gt connect form gt form gt form gt gt statelesscomponent gt connect form gt form gt form", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7017", "d": "6/2016"}, {"title": "regression syntheticevent longer available handler", "body": "want request feature report bug bug probably major regression current behavior used first argument passed event handler current behavior bug please provide steps reproduce possible minimal demo problem via similar template simple case reproduce javascript var exampleapplication reactcreateclass render function return foo function event consolelog click event reactdomrender documentgetelementbyid container expected behavior type console output something like object output like unless intended behavior change otherwise looks like regression versions react browser os affected issue work previous versions react used work seems introduced affect following versions", "num": "7016", "d": "6/2016"}, {"title": "downloading script files could easier", "body": "want request feature report bug website feature meta improvement current behavior get file name like rename expected behavior download correct file name ie", "num": "7013", "d": "6/2016"}, {"title": "warn one instance reactperf page", "body": "gaearon normally bundle react addons different file application using reactperf forgot including bundle react reactdom noticed receiving empty array reactperf functions every time using reactdebugtool different application react means flushhistory also different think warning user one instance reactperfreactdebugtool page", "num": "7010", "d": "6/2016"}, {"title": "allow objects key", "body": "want request feature report bug feature current behavior need specify unique key current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior behave using unique key string versions react browser os affected issue work previous versions react na idea came discussing module wrote take care functionality ca nt really think reason behavior nt work box regular setting people need either add id property objects array spend nonzero cogintive load figuring field fields unique set reason passing object nt work case collection refetched therefore previous references lost elements array tend order therefore cause perf hit nt know enough comment perf hit insert removal middle collection ssr similar perf hit say none although prop need stripped server rendered markup something worth pursuing", "num": "7009", "d": "6/2016"}, {"title": "expose minified react addons includes testutils perf", "body": "want request feature report bug feature requested feature currently upgrading react noticed test suite running considerably slower running minutes running minutes created custom version reactwithaddonsminjs remove brought time minutes request expose reactwithaddons file minified also includes versions react browser os affected issue work previous versions react react yes react test suite slowed", "num": "7007", "d": "6/2016"}, {"title": "bug csspropertyoperationssetvalueforstyles check component argument", "body": "version code component tolerant missing argument changed introduced breaking bug way calls without", "num": "7004", "d": "6/2016"}, {"title": "react work ie", "body": "seems createelement method call without checking candefineproperty make crash even throw error catched react", "num": "6999", "d": "6/2016"}, {"title": "typeerror read property replacechild null", "body": "maintainers problem please see explanation want request feature report bug bug current behavior error thrown using reactdnd see report current behavior bug please provide steps reproduce possible minimal demo problem via similar template provided sample code linked ticket create repo minimal demo necessary expected behavior error created versions react browser os affected issue work previous versions react react meteor react dnd", "num": "6998", "d": "6/2016"}, {"title": "warning", "body": "syranide jimfb issue vs around year still ca nt understand thinking behind reasoning give issues raise apologise following indicates misunderstanding something please clarify seem understand could please give example developer may use uncontrolled input seems react sees developer something like happens null terms intention means may nonnull value later leave component controlled component understanding react already issue warning gives currently react gives warning encounters says value null rather empty string undefined depending whether want controlled vs uncontrolled input release notes say react treats intention clear input warning dropped may lead developers code especially using async store patterns values may get set later point leads mistake losing value instances seems like something docs warning code yet see case developer uses value prop uncontrolled input direct result lack cases controlled input changed uncontrolled input case reach encourage developers explicit intention flow control mechanism returns different component altogether instead setting controlled input null", "num": "6996", "d": "6/2016"}, {"title": "relax validatedomnesting warning whitespace table", "body": "see since stopped wrapping text spans loosen validation validatedomnesting little think probably fine whitespace anywhere tree", "num": "6995", "d": "6/2016"}, {"title": "math error documentation", "body": "want request feature report bug bug current behavior see line means displaying nodes would require order one billion comparisons far expensive use case put number perspective cpus nowadays execute roughly billion instructions per second even performant implementation would nt able compute diff less second considering mentions cpus execute billion per second require billion comparisons come conclusion would nt able compute task less second expected behavior guess expected behavior would either provide correct cpus time update conclusion versions react browser os affected issue work previous versions react documentation bug", "num": "6994", "d": "6/2016"}, {"title": "react perf tools work react", "body": "month upgrade react react perf doesnt work anymore usually use like finished load react page call console result put thanks", "num": "6993", "d": "6/2016"}, {"title": "input browser warnings", "body": "render method something like first render input matter browser remains silent call press input focused moves cursor end yields warning jsfiddle might related happening nt tested version expected behavior", "num": "6992", "d": "6/2016"}, {"title": "documentation passing key reactcreateelement", "body": "nothing documentation indicates pass also explanation either especially using copied new children passed see also question", "num": "6991", "d": "6/2016"}, {"title": "render component server without mounting client", "body": "possible frozen component rendered serverside without processed client side without calling rendercycle let say cms statically generates html server legacy system want use react render output inside component structure prevent html exposed twice provide information server side html quite big nt want client site right nt see way tell react prevent calling render method component ugly workaround react complains checksum mismatch though javascript flow import react component element react type props id string classname string type state markup object export default class cmsblock extends component props props state state constructor props props super props const id props const createmarkup contentid gt return html globalcmscontent amp amp globalcmscontent contentid globalcmscontent contentid globalcmscontent amp amp globaldocument fixme wtf globaldocumentqueryselector innerhtml shouldcomponentupdate called initial clientmounting return false render element const classname id thisprops return used react", "num": "6985", "d": "6/2016"}, {"title": "resets value textarea placeholder used", "body": "want request feature report bug bug current behavior create textarea value placeholder set click using value reset empty string current behavior bug please provide steps reproduce possible minimal demo problem via similar expected behavior value textarea stays cursor placed clicked position versions react browser os affected issue work previous versions react react ie windows work earlier versions", "num": "6984", "d": "6/2016"}, {"title": "new reactperf eats lot cpu", "body": "migration react noticed application running slower usual quick debug chrome profiler shows method eats around application time every mouse move click method iterates huge amount elements nt know behaviour desirable", "num": "6983", "d": "6/2016"}, {"title": "remove hassideeffects logic", "body": "followup need remove dead code", "num": "6979", "d": "6/2016"}, {"title": "reactaddonsperf nt work", "body": "see error seems ie nt support consoletable", "num": "6978", "d": "6/2016"}, {"title": "rfc make refs optin", "body": "note personal proposal please announce anywhere react dropping refs higher order components solve many problems mixins however come problems painful one experience hide ref wrapped component treated transparent wrappers well described prepare deemphasizing mixins think important treat higher order components first class pattern react provide full support without clashes existing features means need fix refs work well higher order components community see people embrace stateless functional components even though public instances support refs pointed think good indication refs moving commonly needed feature escape hatch deemphasized becoming optin change works like provides node callback works like provides callback classes opt exposing ref spirit propose becomes optin api every class component want components reffable expose public instances refs need manually call constructor js class mycomponent extends component constructor props super props thisref exposing public instance print mycomponent instance default expose refs call constructor react automatically call js class mycomponent extends component print null means default class components act like functional components access instance unless class opts automatic cleanup class opts needs call constructor react take care automatically calling component unmounts new forwarding ref another component new feature since opt refs cleanly support ref forwarding higher order components js function wrap wrappedcomponent return class extends component passing let supply instance available way fact wrapped higher order component becomes unobservable also works fine conditionally switch different components delay rendering js function wrap wrappedcomponent return class extends component let say initially react would take care calling constructor ran since knows constructor never called initially parent receives expected mounts call instance make available parent unmounts react call instance cleaning works alternate upsides higher order components unobservable removes common pain point wrapping component hoc changes public api refs discouraged making optin better signal use data flow component also certain changing removing imperative method breaking change default expose ref exposes ref done intentionally providing explicit imperative apis component may also choose provide subset methods public api js class mycomponent extends component constructor props super props exposing stuff thisref focus thisfocusbind focus privatemethodidontwantanybodytocall lets component choose methods wants expose imperatively still considered implementation details downsides migration cost would easy enough codemod components add class component still cost considering components npm control arguably third party components provide imperative methods anyway cause trouble potential misuse imagine people method could get confusing see easy way prevent warn much freedom technically able pass weird things maybe could limit possible values react public instances hand ability provide subset methods described providing explicit imperative apis seems useful considerations could provided inside would argue want two reasons want react still manage partially calling component unmounts otherwise easy introduce memory leaks magic behavior one props would unexpected want transfer ref child would unexpected cases think cc facebookreactcore", "num": "6974", "d": "6/2016"}, {"title": "document test utils date", "body": "react gt following methods return instead scryrendereddomcomponentswithclass findrendereddomcomponentwithclass scryrendereddomcomponentswithtag findrendereddomcomponentwithtag guide page test utilities still says return check props ca nt thing think better make date avoid make people get confuse", "num": "6970", "d": "6/2016"}, {"title": "feature request ontransitionstart", "body": "think implemented", "num": "6968", "d": "6/2016"}, {"title": "difference render count instance count", "body": "trying measure time react takes bootstrap hydrate ssr client side javascript match routes location gt renderperfstart render documentgetelementbyid appcontainer renderperfstop results see difference render count instance count sometimes one double mean initial renders wasted detect happening also printed time count overall", "num": "6966", "d": "6/2016"}, {"title": "stoppropagation affects level dom node handlers", "body": "react expect corresponding dom element events still fired since level raising issue sure worth changing current behaviour check console focusing bluring two hello ce", "num": "6965", "d": "6/2016"}, {"title": "server side", "body": "wondering possible render react component server side without serialising string make possible trigger state changes without rerendering whole tree example like able something like pseudocode render test settimeout gt thissetstate ready true render const ready thisstate ready return ready return ready const tree render test rendertostring tree gt ready settimeout gt rendertostring tree gt ready nt really plan use timeouts illustrate idea would another way put javascript let setstate class test extends component componentwillmount important called consolelog componentwillmount called setstate thissetstatebind render const ready thisstate ready return ready return ready const tree render test outputs componentwillmount called consolelog rendertostring tree outputs ready setstate ready true consolelog rendertostring tree outputs ready possible currently would difficult implement", "num": "6964", "d": "6/2016"}, {"title": "react warn controlled components duplicate values", "body": "consider following example live react js const myselect props gt banana broccoli orange tomato class app extends reactcomponent constructor super thisstate thisonselectchange thisonselectchangebind onselectchange e thissetstate selectedvalue etargetvalue render return html nt seem problems duplicate values tag see example semantically valid reasons might want controlled component example makes impossible select eg orange tomato selection forced first matching value thought solution stores reactdom take sort index prop manipulate internal dom node sure bad form react could enhanced take foresee problems single source truth fruitvegetable example bit contrived may many realworld scenarios would want gut feeling warning developers like nt paint corner trying support case", "num": "6959", "d": "6/2016"}, {"title": "context updates unavoidable", "body": "see basically component supplies getchildcontext nothing check see context actually changed even long getchildcontext always new context problem rerender react redux context provider triggers update every single connected component even though return tripleequals reactelement render rerendered context changed arguably partially reactredux issue always returning new object getchildcontext nt seem mechanism react moment checking contexts suggest react provide mechanism like shouldcontextupdate shallow comparison context objects even changing getchildcontext like trygetupdatedcontext return null change check actually changed worked around issue simply making context provider root object never rerendering forceupdating child bit nasty also relates caching reactelements components icons react element use element global constant every case represent icon nt use context would nice could tell react ignore context changes deciding whether update elements", "num": "6956", "d": "6/2016"}, {"title": "feature let shouldcomponentupdate also return props triggered update nonimmutable deep comparisons", "body": "currently shallowdeep checks components propsstate returns boolean value triggered proposed update hook need check prop actually changed basically case deep check performing expensive comparison twice know props problem would arise react apps commit use props also object often immutable therefore despite beeing deep equal would still trigger rerender component propose introduce nonbreaking change let return array property names triggered update react would check could", "num": "6955", "d": "6/2016"}, {"title": "using react transformation outer div removed attributes", "body": "react chrome firefox transformation outter div removed", "num": "6954", "d": "6/2016"}, {"title": "distribute compiled files npm package", "body": "right npm package distributes files good used nodejs must precompile build system use would really nice files bower package distributed directory reactjs reactdomjs something like npm also used clientside package management", "num": "6952", "d": "6/2016"}, {"title": "changing state onfocus onchange select multiple element work firefox", "body": "want use controlled component react addition value also want keep focused state select state update state event handlers unfortunately issue firefox firefox update value change event select gained focus means user click twice select element change value focus would expect select gain focus change value click created jsfiddle demonstrate prolem react select multiple issue firefox demonstration see problem firefox select multiple ie chrome working expected firefox working expected form elements simple select checkbox radio text input textarea environment firefox react", "num": "6951", "d": "6/2016"}, {"title": "using react ie dangerouslysetinnerhtml nt work svg tag", "body": "hi since dom reconciliation produce deep dom manipulation instead setting innerhtml higher level html dom node every dom mutation done exactly done either html element svg element side effect use dangerouslysetinnerhtml svg element react create svg element using documentcreateelementns set innerhtml element new element pretty cool recent browser except ie nt support innerhtml svg tag script error assigning unknown property always allowed object nothing added dom tree example stateless component produce empty svg ie var icon svg gt return red icon var svgpath reactdomrender documentbody codepen demonstrating issue goal add string containing literal svg path svgpath code g tag wrapper inside svg generic react component first red icon created using second green icon created using direct dom manipulation setting innerhtml g tag third blue icon created using direct dom manipulation without using innerhtml g tag avery modern browser able display icons except internet explorer version capable display blue one blue one use hack use innerhtml directly g tag embed literal svg path svg literal tag create temporary div tag set innerhtml div tag loop divsvgchildnodes append g tag way know browser supports innerhtml svg tag way avoid issue current react statefull component embed hack describe componentdidmount eventually componentdidupdate methods considering exemple provided statefull version working class iconie extends reactcomponent static proptypes svg reactproptypesstringisrequired setinnersvg var iedivwrapper documentcreateelement div iedivwrapperinnerhtml thispropssvg arrayprototypeforeachcall iedivwrapperfirstchildchildnodes child gt thisrefsitemgappendchild child componentdidmount thissetinnersvg componentdidupdate prevprops prevpropssvg thispropssvg thissetinnersvg render return blue icon reactdomrender documentgetelementbyid patchedcontainer codepenio please notes partially regression dangerouslysetinnerhtml svg tag working initial render svgpath string added virtual dom string whole virtual dom generated render method added real dom using innerhtml one parents node working props update except setting key props high level svg tag forcing react use innerhtml parent without knowing know regards", "num": "6950", "d": "6/2016"}, {"title": "bug problems using reactaddonsperf", "body": "trying use reactaddonsperf google chrome found perfstart error messages displayed warning internal error react performance measurement code expect ctor timer start componentdidmount timer still progress another instance warning internal error react performance measurement code expect componentdidmount timer stop timer still progress another instance please report bug react typed perfstop try use getwasted error message displayed uncaught typeerror read property updatecount undefined", "num": "6949", "d": "6/2016"}, {"title": "document reduce bundle size", "body": "trying optimise bundle seems standard react import includes code backwards compatibility react found including react way reduces bundle size documented better supported significant gain standard way import react nt going break future updates", "num": "6947", "d": "6/2016"}, {"title": "react renders elements null firefox", "body": "firefox specific bug due react gt populates every element property caused weird firefox behaviour checking args number eg gt gt gt verified firefox react react", "num": "6943", "d": "6/2016"}, {"title": "reactcloneelement docs bit light", "body": "old nice example mentions deprecated favour meanwhile pretty terse links blog post decent example proposing adding guide page modifying child properties similar example old page linking cloneelement api docs seem reasonable put together pr", "num": "6942", "d": "6/2016"}, {"title": "tests found", "body": "trying run version return", "num": "6939", "d": "6/2016"}, {"title": "return mocked functional components", "body": "classes functional components see leads lot issues confusion people using jest realize maybe greatest implementation ever since support one align implementation add find better way deal easy add somewhere around spicyj", "num": "6932", "d": "6/2016"}, {"title": "default props inherited components working", "body": "default props declared base class found inheriting classes observed react example codepen help reproduce js class testbase extends reactcomponent constructor props super props testbasedefaultprops message test message class test extends testbase constructor props super props render return thispropsmessage reactdomrender documentqueryselector main", "num": "6929", "d": "5/2016"}, {"title": "change event fires many times inputing chinese characters ie", "body": "like", "num": "6927", "d": "5/2016"}, {"title": "warn unsupported lifecycles stateless components", "body": "example generating child context stateless component context available children", "num": "6926", "d": "5/2016"}, {"title": "cant clone clone child element", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "6923", "d": "5/2016"}, {"title": "put js code related ui react", "body": "suppose render table react component want add features make columns resizable bind several keypress events updown highlight shiftupdown select enter processing etc none tasks anything react aspect component states props component lifecycle etc scenario write ui features code inside file import corresponding jsx file place entirely please advise", "num": "6922", "d": "5/2016"}, {"title": "ondoubleclick event bug", "body": "use ondoubleclick event found problem move mouse doubleclick found ondoubleclick event triggered", "num": "6920", "d": "5/2016"}, {"title": "html jsx working", "body": "hi wanted report page working", "num": "6918", "d": "5/2016"}, {"title": "form disappears without calling onsubmit", "body": "want request feature report bug report bug current behavior form element disappears result state change eg triggered onclick handler submit button onsubmit handler called html even form element removed dom onsubmit handler still called current behavior bug please provide steps reproduce possible minimal demo problem via similar template plain js html version expected behavior reproduced react commentedout settimeout react code usable hack fix time expected behavior code specified form onsubmit executed form disappears versions react browser os affected issue work previous versions react react chrome os x", "num": "6916", "d": "5/2016"}, {"title": "test", "body": "test", "num": "6912", "d": "5/2016"}, {"title": "appear child", "body": "want request feature report bug bug current behavior render function one rows data noticed react automatically put span tag around elapsedtime ms triggers dom validation warning issue appear child current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior put span tag around text versions react browser os affected issue work previous versions react", "num": "6911", "d": "5/2016"}, {"title": "typescript definitions", "body": "official blessed typescript definitions react reactdom jest definitions definitelytyped repo type definitions outdated definitelytyped outdated favour typing advantages dt want create type definitions typings create pr use instead hardcoded poorquality definitions react repo help reuse type definitions react repo react applications made typescript developers current plan create uptodate typings typescript definitions react reactdom plans jest prefer start prefer type definitions official communitydriven suggestions corrections plan", "num": "6910", "d": "5/2016"}, {"title": "provide optin way easily manage event handlers", "body": "shortage places react dev write something like alternatively ideal recreate functions render alternative would form autobinding class constructor recreate functions per instance require boilerplate love see react team add way opting handler ed current component set current component mean component whose created element nt know called example called ownclick would look like button clicked would called object owns method rendered button set", "num": "6908", "d": "5/2016"}, {"title": "external javscript react component", "body": "hi problem wan na use external javascript fabricjs component serverside render tips still error message fabric defined thank much", "num": "6907", "d": "5/2016"}, {"title": "building things upon react diff algorithm", "body": "since react treediffing dom rendering decoupled paving way projects like way give treediffing algorithm clues operations fast slow suppose fictitious drawmodel updating certain property node much expensive recreating entire node tell react situation switch really easy way repurpose become", "num": "6906", "d": "5/2016"}, {"title": "sdfssd", "body": "", "num": "6902", "d": "5/2016"}, {"title": "add support eventlistener interface", "body": "would nice support eventlistener interface example mdn necessary listeners creating unnecessary copies callback instance component making use event delegation make sense made working proof concept plunk first approach tests added", "num": "6901", "d": "5/2016"}, {"title": "bug controlled input type number", "body": "seems bug way react interfaces controlled inputs type number input contains invalid number let say trying clear input value setting empty string nothing check example reproduce onchange handler set controlled value value returned evtargetvalue case invalid value input returns empty string per html spec actually clear input invalid input stays setting input value empty string entering invalid value clear input content keep invalid value seen react osx chrome firefox", "num": "6900", "d": "5/2016"}, {"title": "cursor jump end value contains", "body": "reporing bug current behavior cursor jump end value contains rerendering component without changing value click text reproduce problem expected behavior rerender preserve cursor position reproduced react react chrome safari affected latest version firefox fine", "num": "6897", "d": "5/2016"}, {"title": "error performupdateifnecessary unexpected batch number", "body": "maintainers problem please see explanation getting strange error never come across googling nt help caused lot headaches reverted days ago error persists even though days ago everything running smoothly tests passing would appreciate sort direction begin resolve bug guesses error redux webpack reduxform react know precise quite lost example redux logger information max os x el capitan react error persists sorry nt specific react look error message code appears coming facebookreact code thanks", "num": "6895", "d": "5/2016"}, {"title": "change website use codemirror jsx mode", "body": "right use codemirror javascript mode website jsx mode start using instead", "num": "6894", "d": "5/2016"}, {"title": "purerendermixin release process broken", "body": "want request feature report bug report bug current behavior several versions specifically versions published npm specify nonexistent versions react peer dependencies etc assume bug release process mixin assumes equivalent react version always exist current behavior bug please provide steps reproduce possible minimal demo problem via similar template throw peer dependency warning reactaddonspurerendermixin resolves wants least react nt exist whereas react ca nt resolve anything expected behavior install latest versions package without throwing warnings versions react browser os affected issue work previous versions react", "num": "6892", "d": "5/2016"}, {"title": "docs enhancement link source", "body": "thought might useful able jump source code right documentation eg reactdomrender section docs included link source github believe easier access source code increase familiarity things work background perhaps induce community involvement also understand might add complexity docs management could also difficult point right source file eg depends platform serverclient maybe spoiled jsduck handles ideas welcome", "num": "6891", "d": "5/2016"}, {"title": "childrentoarray return flat array children", "body": "would quite surprised actual bug since would probably reported long ago case think documentation made clear interpret documentation way supposed return children including nested ones flat array want request feature report bug bug unclear documentation current behavior return flat array rather returns flat array including direct children nested ones current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior return flat array children including nested ones versions react browser os affected issue work previous versions react documentation return children opaque data structure flat array keys assigned child release notes api made public added reactchildrentoarray takes nested children object returns flat array emphasis added keys assigned child helper makes easier manipulate collections children render methods especially want reorder slice thispropschildren passing addition reactchildrenmap returns plain arrays", "num": "6889", "d": "5/2016"}, {"title": "string whitespace causes uniteless css warning", "body": "current behavior assigning style object component results unitless css warning divunknowncontent demo fiddle demo fiddle expected behavior throw warnings css properties need could string one following values versions react tested react", "num": "6888", "d": "5/2016"}, {"title": "ensurescrollvaluemonitoring issue", "body": "app wrapped sentry error catching service encountered bug may react specific kind workaround done mind sure tackle yet occurs mounting root component dom using react happens really rarely chrome far caught versions mac windows thousands renders app daily got hits past days tried search info return could nt find viable info react popularity odd nobody filled issue earlier leds think maybe usage somehow different others thing kinda special app running inside iframe", "num": "6887", "d": "5/2016"}, {"title": "perfprintwasted nt work component conditionally returns null", "body": "upgrading react able use printwasted perf tools react throws error react discovered error connected returning lot components something like try measure one components get error removing conditions components fixes problem", "num": "6885", "d": "5/2016"}, {"title": "reactcreateelement type key undefined handled incorrectly", "body": "believe introduced behavioral difference development production versions react released part difference still exists production behavior changed however development behavior diverged change expect appear development production development production dev behavior different dev code path checks existence property whether undefined whereas prod code path checks undefined explicitly affected include warnings seem like major problem nobody noticed real world think fix related fix works add tests include", "num": "6879", "d": "5/2016"}, {"title": "docs production note needs updated", "body": "could nt find reactdocs repo anything posting spent past mins googling get webpack build react production page nt clear ended hunt production undefined error ended asking irc could get clear answer correct way build react production add following plugins array would great get docs notice production string containing literal double quotes page might others question", "num": "6875", "d": "5/2016"}, {"title": "escaped ampersands query params within srchref attributes", "body": "ampersands query params within srchref attributes escaped currently attributes sanitized browser using escapetextcontentforbrowser however case attributes escape within query parameters example attribute name available calling quoteattributevalueforbrowser would need degree refactor create conditional behavior consideration given attributes might contain urls possible attributes alter variations nt know bug exists design nonobvious reasons versions", "num": "6873", "d": "5/2016"}, {"title": "perfprint method working read property foreach undefined", "body": "upgrading trouble using react perf tools done following added one files launch app chrome open dev tools run console get failure line behaviour occurs method behaviour occurs put commands code ie running chrome console", "num": "6871", "d": "5/2016"}, {"title": "attribute works inputlike things", "body": "want request feature report bug report bug current behavior adding attribute react component inputlike thing desired effect current behavior bug please provide steps reproduce possible minimal demo problem via similar template fails work div works input expected behavior would expect focusable element could also receive behavior versions react browser os affected issue work previous versions react nt yet bisected issue please let know needed", "num": "6868", "d": "5/2016"}, {"title": "performance disable proptypes validation production builds", "body": "react run faster production builds nt check proptypes looking code nt see checks would prevent proptypes validation running production builds createelement cloneelement seeing functions like pop performance analysis app", "num": "6864", "d": "5/2016"}, {"title": "props passing included description component", "body": "unsure bug expected behavior component two components js import modal modal import inviteform inviteform render return js modal hidemodal render return reactcloneelement thispropschildren hidemodal thishidemodal hidemodal available props inviteform scenario include prop hidemodal becomes available props also whats interesting include containing file modal file actually overwrite hidemodal prop passed inviteform js import modal modal import inviteform inviteform render return using react reactdom babel webpack", "num": "6863", "d": "5/2016"}, {"title": "createelement warn propsproto null fails instead", "body": "bug code warn null since believes plain object originating since directly accesses fails object passed props reproduce expected behavior nt use directly props object expected react browsers os affects versions react since acceptable shape props explicitly defined explicitly supported well", "num": "6854", "d": "5/2016"}, {"title": "click select version ie", "body": "nothing happens attempt click date select ie works every browser export function monthsarray return january february march april may june july august september october november december map monthname index gt let month monthname monthname monthabbr monthnameslice monthnumber index monthpadded monthnumber lt monthnumbertostring monthnumbertostring return month", "num": "6845", "d": "5/2016"}, {"title": "function", "body": "hi guys tried use perfstart latest version return error console used latest version react reactdom idea thanks advance", "num": "6843", "d": "5/2016"}, {"title": "react devtools ctor timer error", "body": "bug warning displayed console internal error react performance measurement code js import react react import render reactdom import perf reactaddonsperf import browserhistory router reactrouter import routes routes import persist altfluxpersist persist docs const target documentgetelementbyid app perfstart render target gt perfstop perfprintwasted google chrome", "num": "6842", "d": "5/2016"}, {"title": "possible typeerror syntheticuieventjs", "body": "static analysis found issue react code line null check line", "num": "6840", "d": "5/2016"}, {"title": "react devtools error", "body": "since updating react getting error multiple times", "num": "6839", "d": "5/2016"}, {"title": "rfc reactinstrumentationdebugtoolonsethostnode debugid node", "body": "need way get host nodes react devtools new api currently get reaching directly propose transition using devtool api renderers provide host nodes become available propose renderer code would emit something like node becomes associated deassociated dom renderer would happen would add reactcomponenttreedevtool would handle event sound reasonable longer term would make something like possible userland", "num": "6834", "d": "5/2016"}, {"title": "support passing array components reactdomrender", "body": "would like something like could nt find answer elsewhere possible similar algorithm work way works mounting children inside component using keys etc know simple wrap everything div always felt wrong", "num": "6827", "d": "5/2016"}, {"title": "unable use testutilssimulatechange consecutively", "body": "using coupled test code check following code snippet second expect would fail see value indexfieldnode updated change code make like time everything works properly", "num": "6826", "d": "5/2016"}, {"title": "npm react satisfy siblings peerdependencies", "body": "bug current behavior errs expected behavior run react documentation without error repro default blank answers npm err argv usrlocalbinnode usrlocalbinnpm install react reactdom npm err node npm err npm npm err code epeerinvalid npm err peerinvalid package react satisfy siblings peerdependencies requirements npm err peerinvalid peer reactdom wants react info", "num": "6825", "d": "5/2016"}, {"title": "add child parent name keymissing warning stack", "body": "information", "num": "6823", "d": "5/2016"}, {"title": "onchange firing properly react clearing input x button rightclick delete", "body": "onchange event inputs seem working correctly react using clear x button provided ie using clicking clear button fire immediate onchange time click rather seems queues onchange fires next time text entered effectively rapidfiring two onchanges succession becomes problem using component maps state two probably inputs values made two fiddles different versions react reactdom react fiddle buggy react fiddle working react fiddle reproduce typing value left input box typing another value right input box clicking x button clear right input box typing whatever left input box see right input box reverts value clicked x also see happening instead clicking x clear right input highlight input text right click click delete x button rightclick delete cases work fine react tested fiddles exact browser code", "num": "6822", "d": "5/2016"}, {"title": "react production mode", "body": "nodeenv still required change development production mode find anything source code version", "num": "6821", "d": "5/2016"}, {"title": "react statechildren could undefined reactelement array element", "body": "ca nt understand always array would much easier work since nt check type time children get changed performance would likely better think", "num": "6819", "d": "5/2016"}, {"title": "figure strategy reactperf separating renderers", "body": "discussed need figure strategy friends ships", "num": "6812", "d": "5/2016"}, {"title": "noscript tags allow child elements", "body": "", "num": "6810", "d": "5/2016"}, {"title": "ondoubleclick named ondblclick", "body": "dom event diverged adds confusion opinion dblclick maybe badly named react events follows dom counterpart makes really easier stick original names", "num": "6809", "d": "5/2016"}, {"title": "onmouseleave nt work node gets detached", "body": "problem kind component javascript class onhover extends component constructor props super props thisstate bool false render return show onmouseenter show onmouseleave notice first works fine move mouse slowly though cut mouse fast event gets triggered event always working though options tag edit think something rerendering components type force rerender causes issues javascript class onhover extends component constructor props super props thisstate bool false render return", "num": "6807", "d": "5/2016"}, {"title": "trying write event onchange multiple fields getting errors", "body": "warning failed proptype invalid prop type supplied expected check render method genericform warning child array iterator unique key prop check render method see informationwarning warning string valid react element null must returned may returned undefined array invalid objectwarning warning string valid react element null must returned may returned undefined array invalid object uncaught invariant violation string valid react element null must returned may returned undefined array invalid object files upldtargz please help one", "num": "6805", "d": "5/2016"}, {"title": "rfc ish ship", "body": "branch branch published alpha react native using master soon already cut ideally would nt ship would get however real risk rn churn rc could say tough shit used alpha really cool big happy family work together told use alpha even nt think ideal work pragmatically probably publish already final since patch fixes top ship easily changes changes top longer term nt think shipping maintaining multiple releases really tenable us doubtful ship outside security release need properly plan cadence consider trainlike model tangential decision though write thoughts later discuss wherever couple related discussions amp", "num": "6803", "d": "5/2016"}, {"title": "react node removed child node", "body": "hi simple code like upgrading react whenever click link got message uncaught notfounderror failed execute removechild node node removed child node function code componentjs js ondispatchclick event eventpreventdefault appdispatcherdispatch type routepickupconstantsdispatchingrunsheet routeid apidispatch thispropsrouteid gt appdispatcherdispatch type routepickupconstantsdispatchingrunsheetsuccess routeid thispropsrouteid getdispatchlink route routeisdispatching dispatchlink dispatching else dispatchlink dispatch render let route thispropsroute storejs js case routepickupconstantsdispatchingrunsheet case routepickupconstantsdispatchingrunsheetsuccess", "num": "6802", "d": "5/2016"}, {"title": "support server rendering attribute", "body": "attributes like necessitates server rendering features corresponding dom properties prefer case app cache know well serverside meaning generic problem might need way solve serverside nt want global plugins client side solution refs manual manipulation generally nt need fix uncommon enough nt create ecosystem fragmentationisolation global plugins learned something mootools", "num": "6798", "d": "5/2016"}, {"title": "move instrumentation isomorphic renderersshared", "body": "per sebmarkbage want folder contain code necessary author react components dependencies friends moved caller right folder onsetstate inside need move somewhere inside renderer eg update queue implementation labeling mostly involves moving files goal files folder contain anything references grabs one takes", "num": "6797", "d": "5/2016"}, {"title": "submit form element nt trigger onsubmit", "body": "want request feature report bug bug current behavior ref dom element call trigger callback repro fiddle hit input properly calls alerts click button calls expected behavior trigger versions react browser os affected issue work previous versions react chrome test others unknown broken previous versions", "num": "6796", "d": "5/2016"}, {"title": "create separate copies renderer", "body": "simple plan copy files renderer package rewrite require files isomorphic folder hardcode whitelist needed way share isomorphic modules none files way versioning separate renderers easy nt depend everyone updating peer dependencies", "num": "6795", "d": "5/2016"}, {"title": "react performance", "body": "parent component subcomponents rerender parent component found subcomponent execution requires time hide refresh need excuse way handle scenario thank", "num": "6794", "d": "5/2016"}, {"title": "option elements selected attribute applied", "body": "want request feature report bug report bug regression current behavior elements get attribute applied current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo issue expected behavior currently selected would attribute applied demo behaviour versions react browser os affected issue work previous versions react worked", "num": "6793", "d": "5/2016"}, {"title": "prop types validation happen twice", "body": "historically validated prop types component mount time switched validating upon element creation gives earlier errors better stack traces nt want ever show message failed composite proptype remove code generates addition remove check fbjs unnecessary code cleanup mildly improve performance dev mode", "num": "6791", "d": "5/2016"}, {"title": "key warnings show component stack", "body": "made proptypes warnings show stack components warning occurred key warnings key provided child array iterator unique key prop nt hard use reactcomponenttreedevtoolgetcurrentstackaddendum way proptypes warnings using update unit tests pass new format", "num": "6790", "d": "5/2016"}, {"title": "uncaught typeerror function action imported without curly braces", "body": "using react see following behavior want import actions redux import like try import like used import single react components without curly braces bundling see following exception see exception", "num": "6788", "d": "5/2016"}, {"title": "move shared utilities react", "body": "slowly working making sure code fb depends modules internal react mostly involves changing code use public apis also several things react general purpose moved example hitting right used used used couple modules fixed data table know also used elsewhere transition event detection surely others mostly reminder notice sorts others random files disappear repo live fbjs instead", "num": "6786", "d": "5/2016"}, {"title": "add option ignore specified props shallowcompare", "body": "feature requestquestion consider component stateless functional component sfc prop eg like using would always return cases makes sense use props except sfcs like issue reduxform solution idea common pattern saw added thought maybe would possible add option make ignore one several props eg signature could like instead could array string keys avoid breaking change could course added fifth argument instead seems robust makes sense could go pr", "num": "6784", "d": "5/2016"}, {"title": "form elements readonly attribute ignored", "body": "want request feature report bug bug current behavior readonly attribute nt exist generated real dom input field example expected behavior add readonly attribute generated input element react credit stackoverflow question", "num": "6783", "d": "5/2016"}, {"title": "current starter kit examplesbasiccommonjs working", "body": "want request feature report bug bug current behavior running npm install npm start examplesbasiccommonjs directory found results following error current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior example works versions react browser os affected issue work previous versions react react npm node osx unknown worked previously", "num": "6782", "d": "5/2016"}, {"title": "warning changing uncontrolled input type radio controlled", "body": "code click radio gives warning warning test changing uncontrolled input type radio controlled input elements switch uncontrolled controlled vice versa decide using controlled uncontrolled input element lifetime component info clear bug", "num": "6779", "d": "5/2016"}, {"title": "change expression brackets", "body": "feature request change expression brackets able render style tag react component", "num": "6774", "d": "5/2016"}, {"title": "react router error occur", "body": "use react router broken code like import react component react import reactdom reactdom import router route link browserhistory reactrouter const app reactcreateclass const reactcreateclass etc const users reactcreateclass render return users use link route around app thisstateusersmap user gt user userid gt username thispropschildren const user reactcreateclass componentdidmount thissetstate route components rendered useful information like url params user finduserbyid thispropsparamsuserid render return thisstateusername etc declarative route configuration could also load config lazily instead really need single root route nt need colocate entire config reactdomrender documentbody error like uncaught invariant violation createclass class specification must implement method", "num": "6766", "d": "5/2016"}, {"title": "reactperf expose isprofiling exported object", "body": "tested new perf tools one screens one app working works great one thing wanted also old one perf tools able check whether perf tools started stopped basically exposing variable use keyboard shortcut development bound startstop perf tools currently forced maintain variable know whether start stop gets sync startstop perf tools without keyboard shortcut nt think worthwhile expose feel free close issue", "num": "6762", "d": "5/2016"}, {"title": "jsx doc render html tag vs render reactelement", "body": "file section says react either render html tags strings react components classes according react terminology nt", "num": "6761", "d": "5/2016"}, {"title": "use testutil component", "body": "used run tests components using changed component getting also tried", "num": "6758", "d": "5/2016"}, {"title": "able use testutils addon outside npm", "body": "working old project started using react ui part order test react components need testutils addon comes npm using react outside npm project built using npm anyway use testutils addon outside npm project test react components", "num": "6757", "d": "5/2016"}, {"title": "input element rendered cursor gets position mobile browser", "body": "input tag bug following official document document user input event occurs controller input value method however tried code works well browser pc mobile browser chrome safari bug like enter inputs remove letter cursor get position second line even though remove first letter guessed component rendered method cursor get positioned tried code works well guess right fixed thank", "num": "6755", "d": "5/2016"}, {"title": "new reactperf free memory dev profiling", "body": "purge code run early exit need fix add test case make sure regress", "num": "6750", "d": "5/2016"}, {"title": "warn inline style update bad value", "body": "set inline style attribute component update state bad value make inline style like currently takes effect component backgroundcolor remain yellow live example suppose correct behavior old value override new value even value nonstandard fallback use parent style like plain html leave previous style behavior component lose connection component state style become chaotic unpredictable", "num": "6749", "d": "5/2016"}, {"title": "attributes custom elements removed diff", "body": "trying adopt custom elements parts ui ran issue update tree custom attributes custom elements removed correctly seen need click false inspect dom node dev tools browser tracked issue method seems special check loop corresponding section missing deleting results incorrect behavior starting work patch", "num": "6747", "d": "5/2016"}, {"title": "hidden true works element display css", "body": "css js expect element hidden actual element hidden solution div hidden display none important seems like react use div hidden hide element think important better", "num": "6743", "d": "5/2016"}, {"title": "reactprerftools", "body": "testing latest refactor perftools using printoperations often always get getoperations line", "num": "6742", "d": "5/2016"}, {"title": "uncaught typeerror read property addeventlistener null", "body": "getting error console certain components removed dom calling method assumes target null tries access addeventlistener null object checking target amp amp targetaddeventlistener instead components removed incorrect way would cause happen", "num": "6740", "d": "5/2016"}, {"title": "react app load facebook ios webview", "body": "hello know might best place ask seem find better place react said application built facebook inc built react application demo page main issue arises want users share link facebook people viewbook cellarevent page loads fine desktop browsers android devices tested also facebook webview ios devices using safari load facebook webview range devices going iphone ipad nano ipod touch nt access ios devices found behavior tested ones put kind shims support also legacy browsers also render using phantomjs works fine issue comes facebook webview ios use track console outputs nothing thrown accessing facebook webview simply wo nt load clueless next packagejson dependencies", "num": "6739", "d": "5/2016"}, {"title": "publishing separate disttag", "body": "react native requires currently published installing module leads peerdependency warnings errors ex actually fails several packages peerdeps react nt match several people including raised issue npm time could fb publish master use npm disttag feature tag latest next atyourownrisk", "num": "6738", "d": "5/2016"}, {"title": "rerender element componentdidmount error read property rootid null", "body": "reactdomrender container element toplevel componentdidmount function react show error read property rootid null use settimeout run reactdomrender work even feel uncertain could someone help html ajsx amp bjsx var reactcreateclass componentdidmount function reactdomrender documentgetelementbyid container render function return hello world var b reactcreateclass render function return hello world b appjsx", "num": "6737", "d": "5/2016"}, {"title": "docs build russian", "body": "something went wrong build think page nt checked", "num": "6735", "d": "5/2016"}, {"title": "svg sprite freeze", "body": "svg sprite using within component changing sprite freezing jsx example javascript var hello reactcreateclass clicknum click function thissetstate statemessage click thisclicknum thisclicknum render function var icon thisclicknum heart heartactive reactdomrender documentgetelementbyid container link jsfiddle", "num": "6734", "d": "5/2016"}, {"title": "svg clippath url issue", "body": "tried upgrading react run issue svg seems related change way react emits clippath css property following jsx simplified react emitted following react produces following note quotes around clipabove new clipping work", "num": "6733", "d": "5/2016"}, {"title": "textarea placeholder nt shown ie rendered using react", "body": "nikolai mavrenkov already created good description problem stack overflow confirm breaks works browsers react", "num": "6731", "d": "5/2016"}, {"title": "force react reorder keyed children instead destroyingrecreating", "body": "using react build application viewing multiple webcasts one time component arbitrary number components children unique key described trying implement ability swap positions webcasts screen important dom nodes reordered recreated order prevent webcast embeds reloading based documentation components reordered destroyed recreated unique keys react reconciles keyed children ensure child reordered instead clobbered destroyed instead reused problem destroyed vital components reordered destroyed nt know diffing algorithm decides components reorder destroy recreate seeing mix two behaviors nt want created simple test case jsfiddle demonstrate problem click button swap keys assigned first last components note last component correctly moved first position remainder components including ones indices nt change destroyed recreated see embedded video reloads way force react reorder children instead destroying recreating", "num": "6729", "d": "5/2016"}, {"title": "unable render backgroundimage single quote url", "body": "single quote background image url react even flush changes dom got around url works fine without manipulation set exactly sure react rejecting even putting dom sort inconsistency browser handles single quotes background image could react handle simple string manipulation", "num": "6728", "d": "5/2016"}, {"title": "installation error node postinstall", "body": "got node postinstall error running npm install ubuntu npm err linux npm err argv usrbinnodejs usrbinnpm install npm err node npm err npm npm err file sh npm err code elifecycle npm err errno enoent npm err syscall spawn npm err spawnsync postinstall npm err spawn enoent luckily found similar issue realized issue also resolved creating symbolic link node nodejs running sudo ln usrbinnodejs usrbinnode missing something command node postinstall needs replaced nodejs postinstall", "num": "6726", "d": "5/2016"}, {"title": "componentdidupdate running render flushes", "body": "trying write simple transition component react router looks like var transitiondaemon reactcreateclass getinitialstate function return stage active componentwillreceiveprops function nextprops var nextpath nextpropspathreplace g var currentpath thispropspathreplace g idea fade new child component css changing class active hidden noticed small child components componentdidupdate run new dom flushed resulting transition work around seems put setstate componentdidupdate settimeout gt thissetstate stage active", "num": "6725", "d": "5/2016"}, {"title": "support unquoted attribute values jsx", "body": "example jsx", "num": "6724", "d": "5/2016"}, {"title": "support eventmovementxy featurerequest", "body": "currently seems synthetic events nt properties mousemove", "num": "6723", "d": "5/2016"}, {"title": "proposal getcomponentatnode", "body": "reactdom already function think would useful similar utility function simply let get component instance particular dom node would allow guard calls also help folks need lots interop nonreact code react code furthermore seems like good function sake reactdom api completeness perhaps could named similar happy start working pr yall like idea", "num": "6721", "d": "5/2016"}, {"title": "support", "body": "ton browser support right appears horizon webkit right getting dom events fired chrome wonder syntheticevent could prollyfill", "num": "6717", "d": "5/2016"}, {"title": "test authentication flow app", "body": "hi app implementing auth using reactrouter redux sagas jwt tldr approach testing authentication flow basically using reactrouter onenter method check user authenticated allow access function checks info app state credentials submitted action dispatched received sagas send api request store credentials details local storage gets reduced app state", "num": "6714", "d": "5/2016"}, {"title": "docs clarification complete example refs", "body": "relevant code centers around nt defined complete example defined maybe move together", "num": "6711", "d": "5/2016"}, {"title": "objects valid react child", "body": "searched issue earlier saw mention think different using immutablejs immutablelist react children react works fine modern browsers inside ie react throw invariant saying objects valid react children symboliterator polyfill using babelpolyfill current solution calling tojs children ie nt complain sure supposed happening jsfiddle reason ie example works babel babelpolyfill throws error sure ca nt reproduce fiddle adding tojs onto end list error goes away site", "num": "6708", "d": "5/2016"}, {"title": "add ref root element", "body": "would weird implicit ref root el returned render definitely convenient especially cases wrapping components ca nt throw another messes flexbox rendering etc", "num": "6707", "d": "5/2016"}, {"title": "text adjacent radio button wrapped tag results minified exception", "body": "results minified exception nearly impossible debug tells switch development mode however receive errors development mode result errors sure problem spent hours trying debug issue figured bring attention", "num": "6705", "d": "5/2016"}, {"title": "setting progress element value removed markup", "body": "seems like nt working expected regular html expected rendered empty progress bar react however rendered noticed however setting value seems get around bug using react", "num": "6704", "d": "5/2016"}, {"title": "react perf always prints empty array", "body": "hi guys trying test performance app using react perf tools problem working call perfstart perfstop perfprintwasted console works console errors warnings always returns empty array message total time ms also happens functions like problem ps using reactrouter react perf performing maybe causing issues also set production using", "num": "6702", "d": "5/2016"}, {"title": "nativeevent object missing returnvalue input onchange events", "body": "ran issue testing upgrade ie preventdefault stoppropagation called inside handler onchange event input control member found exception thrown stepping code appears nativeobject reference broken accessing properties mseventobj throw exception able reproduce minimal case clean test vm microsoft repro fiddle", "num": "6699", "d": "5/2016"}, {"title": "proposal validating object proptypes object outside rendercontext flows", "body": "avoid using lots event handling manual prop chaining inside parent form wrote component accumulates form data using context like import react react import rcomponent reactcomponent subclass let func string object reactproptypes class reactform extends rcomponent reactformchildcontexttypes report funcisrequired export default reactform context exposes function child namely input reports final json key value validation status although could bring party schema validator wanted see could leverage property object containing react proptypes understand proptypes nt get checked rendering production hoping want call whatever react uses take object check accumulated form data ie looking docs stackoverflow looks like exposed api validate proptypes solution find involves using stateless components intercepting console messages paranoid solution might look like matchschema going fly nt want run react dev mode production react expose way take advantage validation system regardless mode test object shape property types without hacking around flow", "num": "6698", "d": "5/2016"}, {"title": "unknown plugin babelplugintransformreactjsxsource", "body": "added nt export module fail removed line tests still pass remove change troydemonbreun jimfb also cc spicyj since might know issue", "num": "6695", "d": "5/2016"}, {"title": "error boundaries crash server rendering", "body": "component crashes server rendering tested pretty sure master well fiddle cc jimfb", "num": "6689", "d": "5/2016"}, {"title": "rfc configure warning levels using env variable", "body": "would feasible specify version warnings want static environment variable would silence new warnings safely update minor versions without worrying warning spew dynamic configuration creates stateful shared module dependencies close getting rid isomorphic package reactcurrentowner last one", "num": "6683", "d": "5/2016"}, {"title": "read property addeventlistener null", "body": "component whose method looks like javascript render const condition thisstate state changes changes triggers error trace helps eventlistenerlisten simpleeventplugindidputlistener eventpluginhubputlistener putlistener assignnotifyall ondomreadyqueueingclose mixincloseall mixinperform mixinperform assignperform flushbatchedupdates reactupdatesflushbatchedupdates mixincloseall mixinperform reactdefaultbatchingstrategybatchedupdates batchedupdates reacteventlistenerdispatchevent returning empty div instead null fixes issue javascript render const condition thisstate", "num": "6680", "d": "5/2016"}, {"title": "read property addeventlistener null", "body": "component whose method looks like javascript render const condition thisstate state changes changes triggers error trace helps eventlistenerlisten simpleeventplugindidputlistener eventpluginhubputlistener putlistener assignnotifyall ondomreadyqueueingclose mixincloseall mixinperform mixinperform assignperform flushbatchedupdates reactupdatesflushbatchedupdates mixincloseall mixinperform reactdefaultbatchingstrategybatchedupdates batchedupdates reacteventlistenerdispatchevent returning empty div instead null fixes issue javascript render const condition thisstate", "num": "6679", "d": "5/2016"}, {"title": "dom property case warning broken nonssr", "body": "", "num": "6676", "d": "5/2016"}, {"title": "disable checkproptypes production performances issue", "body": "hello recently found taking cpu rendering massive amount object wondering way somehow improve perfs disable checkproptypes instance mainly useful development mode much production thinking right may already disabled nodeenv set prod unlikely thanks", "num": "6674", "d": "5/2016"}, {"title": "require image server side rendering", "body": "code works well webpack browser side server side function exports require module filename dirname syntaxerror unexpected token illegal exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require render reactcompositecomponentmixinrendervalidatedcomponentwithoutownerorcontext process finished exit code", "num": "6672", "d": "5/2016"}, {"title": "changelog release", "body": "neither blog changelogmd updated npm says", "num": "6671", "d": "5/2016"}, {"title": "add context support shallowcompare", "body": "add context support shallowcompare pr coming", "num": "6670", "d": "5/2016"}, {"title": "invalid ref error rendering exported react component html", "body": "encountered famous issue upgraded react code checked gist confirmed nt two copied react following component code compiled webpack config hence react library bundled output js bundle exports react components window example component rendered inside bundled code instead rendered html page bind element like code runs reactdom render components function reactdomrender reactcreateelement windoweditor documentgetelementbyid container component code pretty simple simplified lines however put render method bundle code works fine like", "num": "6667", "d": "4/2016"}, {"title": "firefox input focus problem", "body": "firefox problem ohter browser right case focus input box moved input box fire fox error code focus method thisrefsfocuselfocus debugger react code wrong setselection function input offsets var start offsetsstart var end offsetsend typeof end undefined end start input value inputselectionstart start break wrong start value inputselectionstart", "num": "6666", "d": "4/2016"}, {"title": "react rerender changes field first rerendering node", "body": "following code generates two field whose type changes respective type button clicked dependent component rendered field type value tap change field type new value react tries set value changing field type generates warning console show value definitely set changes however warning generated code html react rerender warning example react rerender warning example loading", "num": "6663", "d": "4/2016"}, {"title": "docs request detailed best practices form validation react", "body": "really awesome docs contain special section forms written pain points dealing hopefully highlighting places react ease", "num": "6658", "d": "4/2016"}, {"title": "modernize build process tooling", "body": "mostly prereq goals align build tooling right mixing grunt amp gulp commit probably gulp add watching fast rebuild test changes browser could something like webpack hot reloading move shared tooling back fbjs babel plugin custom lint rule nongoals things keep mind alternate build approaches particular flat bundling needs easy swap releasing master may want development happen feature flags used turn onoff features may want build result static flag set runtime checks would need possible target flag combination easily", "num": "6656", "d": "4/2016"}, {"title": "modernize release process", "body": "way much work react release right mostly muscle memory point easy anybody historically kept certain steps manual screwed things wanted able pause double check things contributing difficulty use reactbower repo first push target result fbme link generation cdnization needing happen internal fb infra manual steps across multiple repos manual version modification assets needing multiple places copied across branches ideas able differentiate pre final releases single command ship new alpha point lightweight final releases need little since get installed default people additional requirements eg changelogs assets multiple places things could interactive process start using github releases apis store build assets cutting steps set cdnreactjsorg host builds dropping fbme entirely risk run alternatives work existing cdns make sure versions deployed command pull based autoupdating result delays things like jsfiddle tutorial need assets available immediately investigate lerna could helpful multiple packages though ideally want disentangle releases", "num": "6655", "d": "4/2016"}, {"title": "reactcloneelement avoid warning failed proptype required prop", "body": "ok happens wrapper component wraps children clone children pass props new ones thing required warning shown even props expected using react", "num": "6653", "d": "4/2016"}, {"title": "stylesheet transform", "body": "", "num": "6652", "d": "4/2016"}, {"title": "render called componentdidmount", "body": "see", "num": "6651", "d": "4/2016"}, {"title": "sending events parents children easily", "body": "using react native half year really enjoying expert run seems like weakness framework like bring problem sending oneoff events chain parenttochild way works component lifecycle issue arises fact props semipersistent values differs nature onetime events example deeplink url received want say respond ready store url mechanism caching onetime event value breaks url sent valid event case children easy elegant way communicate back parents via callbacks nt seem way basic thing direction example cases deeplink received app wants tell child pages respond appropriately tab navigator wants tell child scroll top secondary tap list view wants trigger list items animate time page shown everything read two normal ways call method child directly using ref emit event children may listen ignore component lifecycle child nt ready receive direct call event yet also feel clunky compared elegance react architecture react oneway topdown model idea passing onetime events component chain seems like would fit nicely real improvement best workarounds found add trigger state variable parent number wire children children use lifecycle method sniff change trigger prop known action done bunch handle cases listed really tacky set clear prop immediately setting yuck react way solve common need one team knows one articles found web addressing component communication suggest dispatching events calling methods directly refs thanks open discussion", "num": "6646", "d": "4/2016"}, {"title": "react support node", "body": "accept node engine version nt think regressions caused node okay", "num": "6644", "d": "4/2016"}, {"title": "null reactjs component", "body": "using reactjs create org chart create chart see want add zoom drag behavior chart used see method zoomed called null tried attaching zoom behavior div svg g nothing helps zoomed behavior called event null aspnet project made sure nt reference systemjs configuration many stackoverflow answers mentioned issue related null code similar example like uses old version reactjs systemjs configuration javascript systemdefaultjsextensions true systemconfig map rx react reactdom systemimport appappjs javascript import react component react import rx rx import import person person class orgchart extends component renders org chart render export default orgchart", "num": "6641", "d": "4/2016"}, {"title": "blank space line feed jsx", "body": "know render function return htmlthe problem type space return connect html fragment problembut error type enter generate new line connect html fragmenti also checkout currently component render return one node say list divs return must wrap components within div span component dontforget jsx compiles regular js returning two functions nt really make syntactic sense likewise nt put one child ternary understand problem", "num": "6637", "d": "4/2016"}, {"title": "react breaks support type extension syntax webcomponents custom elements", "body": "attribute lost jsx attribute present needs passed documentcreateelement second parameter", "num": "6635", "d": "4/2016"}, {"title": "change reactperfprintwasted reactperfprintoperations work", "body": "rewrite reactperf aims provide existing features reactperf testable futureproof way however things scope important fix later shipped today prints informations dom native events supposedly happened later information used following way component rendered dom events children emitted batch render considered wasted problems discussed overemphasize overhead dom operations actually often negligible incremental reconciliation assumption dom operations happen batch rendering might become incorrect might want get rid relying batches know would good solution considering constraints people widely consider useful method helps finding sweet spots remove reliance dom offer equivalent eg deeply comparing react elements useful friendly incremental reconciliation", "num": "6632", "d": "4/2016"}, {"title": "reacttransitiongroup lifecycle hooks work", "body": "reacttransitiongroup lifecycle hooks fire examples appear appear logs log think bug react javascript class extends component constructor props super props componentwillappear callback callback consolelog appear componentdidappear consolelog appear componentwillenter callback callback consolelog enter componentdidenter consolelog appear componentwillleave callback callback consolelog leave componentdidleave consolelog appear render return hi class extends component render return", "num": "6631", "d": "4/2016"}, {"title": "refs components working", "body": "refs components using inline function working ref returns lifecycle method however using alternate method refs element returned expected ref domelement", "num": "6630", "d": "4/2016"}, {"title": "new dom renderer inserts parameters creation ie", "body": "new renderer causing flash objects instantiated nested param nodes added read parsed creation never touched edit assuming flash object loaded immediately upon insertion dom next tick happens ie afaik versions including edge related performancespecialcase renderer cc spicyj", "num": "6629", "d": "4/2016"}, {"title": "introduce profile build", "body": "discussed plan add new build configuration overhead comes new enabled means developer warnings etc need gated component tree events eg need gated curious could implemented right system simple current system variables development build except production build see omitted assume mode sensible assumption one want change projects today specify anything development want suddenly lose developer warnings therefore propose following new system proposed system variables development build except profile build production build would let us three separate build configurations use pattern projects well desired would say unlikely ever want add separate fourth configuration cover needs thoughts would bad idea implement cc facebookreactcore", "num": "6627", "d": "4/2016"}, {"title": "ssr warn onscroll", "body": "ref little surprising codepath even hit maybe bug clearly sort check area", "num": "6626", "d": "4/2016"}, {"title": "formal type definitions uptodate", "body": "hey noticed formal type definitions uptodate nt account stateless components probably something like", "num": "6624", "d": "4/2016"}, {"title": "react ignore specific dom element", "body": "per chat gaearon filing issue discuss would like avoid specific element rendered server beeing updated react reaches client one specific use case rendering ad server tags kind pain ars using things like etc render using sometimes react reconciliation client side get rerender stop executing managed track cases fixing render differences server client would trigger dom patching still seems happen advice", "num": "6622", "d": "4/2016"}, {"title": "ability hide component devtools", "body": "react devtools great get convoluted using community libraries times eg reactrouter redux coflux could blessed api allows components show dev tools something simple like using react devtools generally want see components business logic things like helpful see things times though nt imagine components become completely opaque probably checkbox devtools defaults show components assuming something guys busy like concept work implementation", "num": "6621", "d": "4/2016"}, {"title": "typeerror using reactcsstransitiongroup", "body": "react see browser tests never manually triggered bug seemingly timing sensitive cases returns null", "num": "6619", "d": "4/2016"}, {"title": "preserving state propsturtleshell", "body": "preserving state propsturtleshell experimenting bit migrating props state together watch changes could used preserve state multiple render passes addressed like see approach would turn props much better pass values state people use feature would exciting hopefully see first point flaws needs fix order fully function perspective special method keeps track state called upon entire tree loose state wrappers go indepth later explaining would look fetching state passing props used deepexpensive method stylussake used function wrapper make approachable like see picture lot sketchy things going attribute highly experimental really good solution nt nest states children proposals rather passes state updates prop based previous state honestly nt clue added code intended use case avoid state children parent state children methods code also highly reusable perfected notsohighly performancefriendly reuse mainly using expensive task also breaks used long term like state props lifecycle functions mentioned used could also used really feature feature good way keep track state like see following statetoprops lifecycle set existing state new prop returned would allow us take previous state ignore value passed previous states would allow us much faster transition update state new value prop rather rerendering entire state tree propstostate lifecycle need insurance state valid state maybe callback function takes current props allows set new state value like props arguments covered maybe one thing add nt need keep track entire state tree long get previous returned state valid brings issue sure react set right state wrappers think need fixes implementedconsidered tried making addon without breaking encapsulation nt work trying make lifecycle functionsmethods external modules yeah terrible programming citizen clarify need new lifecycle functions making sure people gets informed issue sebmarkbage gaearon zpao jimfb", "num": "6616", "d": "4/2016"}, {"title": "virtual dom", "body": "hi like reactjs much guys tell guys implemented logic code sure create patch using js code also uses facebook calls virtual dom increased performance writing full render virtually checking difference virtual render actually dom creating patch", "num": "6615", "d": "4/2016"}, {"title": "upgrading react breaks autofill behavior controlled inputs", "body": "sign form controlled inputs works fine using react upgrade react autofill behavior longer triggers onchange strangely change document mode edge default react still behaves expected reading changelog change sounds like could related input events handled reliably ie ie spurious events longer fire using placeholder jquense", "num": "6614", "d": "4/2016"}, {"title": "warning looks like using minified copy development build react", "body": "looks like using minified copy development build react deploying react apps production make sure use production build skips development warnings faster see details", "num": "6611", "d": "4/2016"}, {"title": "isnotrequired", "body": "happens every want something like js class mygenericcomponent static proptypes score reactproptypesnumberisrequired text reactproptypesstringisrequired class mymorespecializedcomponent static proptypes score mygenericcomponentproptypesscore text mygenericcomponentproptypestextisrequired however despite looking especially wrong code nt work expected two reasons prop retains flag declaration issue could solved adding flag would simply return nonrequired version validator prop nt flag already required issue could solved adding noop flag would return exact validator feel like two changes would help safely forward proptypes improving code readability process minimal cost term line code would look like js class mymorespecializedcomponent static proptypes score mygenericcomponentproptypesscoreisnotrequired text mygenericcomponentproptypestextisrequired", "num": "6610", "d": "4/2016"}, {"title": "parent component call methods child components", "body": "", "num": "6609", "d": "4/2016"}, {"title": "purerendermixin ignore function props", "body": "use purerendermixin mycomponent updates every time rootref maybe store function like seems redundant function ignored helpful", "num": "6601", "d": "4/2016"}, {"title": "context update using", "body": "use render portal javascript class modal extends reactcomponent componentdidmount thisnode documentcreateelement div documentbodyappendchild thisnode thisrenderportal thisprops componentwillreceiveprops nextprops thisrenderportal nextprops componentwillunmount reactdomunmountcomponentatnode thisnode documentbodyremovechild thisnode renderportal props gt rendersubtreeintocontainer thisnode render return null root component javascript class app extends reactcomponent static childcontexttypes highlightcolor reactproptypesobject context root component updated passed children changed right access correct context component first render context passed change context root component changed access correct context every render wrong code", "num": "6599", "d": "4/2016"}, {"title": "context undefined use constructor", "body": "issue code import react component proptypes react import reactdom reactdom import router route link browserhistory reactrouter export default class app extends component use constructor thiscontext undefined otherwise comment constructor statement thiscontext null uncaught typeerror read property router undefined router thiscontextrouter constructor props super props consolelog render return reactdemo static contexttypes router proptypesobjectisrequired reactdomrender documentgetelementbyid root react versioin remember previous version without problem bug usage problem demo git thanks", "num": "6598", "d": "4/2016"}, {"title": "removechild error renderersdom domchildrenoperations lib adds wrappers dom", "body": "get uncaught notfounderror failed execute removechild node node removed child node source problem lib uikitjs transform dom mounted parentnode greatparent childnode direct parent guess intermediate nodes removed parentnode possible fix edit probably could responsibility lib clean dom componentwillunmount", "num": "6593", "d": "4/2016"}, {"title": "update reactdomserverrendertostaticmarkup documentation", "body": "rendertostaticmarkup described similar except nt create extra dom attributes react uses internally react probably time change clarify still advantages", "num": "6589", "d": "4/2016"}, {"title": "lifecycle compatibilityrecommendation table", "body": "call setstate within ref callback answer yes though probably good idea really confusing permitted good bad illegal especially different things legal different times lifecycles even something legal might bad idea clarify", "num": "6586", "d": "4/2016"}, {"title": "additions props", "body": "working workaround props think props advantages merge props split props way could make thing react mentioned work tweak meaning like react components ultimately like see official react feature thoughts repo", "num": "6583", "d": "4/2016"}, {"title": "proposal replace nodeenv reactenv dev replacement", "body": "come couple times lately issue think perhaps added minification warning people ending seeing nt getting prod code expected also argument want react production still use nodeenv purposes would things figure make sure envify works deciding projects currently also use nodeenv pattern eg relay fbjs thirdparty code etc might good idea though definitely nt happening immediately wanted start discussion", "num": "6582", "d": "4/2016"}, {"title": "possible improvements nodeenv staging warning minification", "body": "hello using react projects found staging servers start generate warning looks like using minified copy development build react deploying react apps production make sure use production build skips development warnings faster still need possible warnings proptypes controlleduncontrolled components debug issues environment close possible production still production case staging environment builded minification check app delivering production proposal remove warning env possible thanks", "num": "6581", "d": "4/2016"}, {"title": "reactcreateelement accept functional component", "body": "relying test suite since accept functional component ca nt longer use functional component project", "num": "6579", "d": "4/2016"}, {"title": "bug title ie", "body": "div title attribute ie environment becomes caton", "num": "6578", "d": "4/2016"}, {"title": "rename form components", "body": "docs say defaultvalue defaultchecked props used initial render need update value subsequent render need use controlled component note docs say used rendering think would better name describes behaviour property better translating terms german means something static ca nt changed runtime input element might mutate runtime eg prefill form current time english native speaker might english language nt differentiate two terms german language", "num": "6577", "d": "4/2016"}, {"title": "dynamically setting background", "body": "consider code var css background url backgroundurl norepeat center center backgroundsize backgroundsize backgroundcolor backgroundcolor css rendered expected change backgroundurl also removes backgroundsize backgroundcolor result becomes", "num": "6575", "d": "4/2016"}, {"title": "componentwillunmount ever called", "body": "error boundries might help someone using using error boundaries nt ever attempt unmount single component instance reason infinite loop eventually run stack space p good tail recursion jsvm could become infinite loop anyway contrived example reactrouterredux combination creates situations type thing happens", "num": "6574", "d": "4/2016"}, {"title": "purerendermixin respect changes context", "body": "accidentally applied purerendermixin page rendered result given props state however broke page since context changed isuserloggedin", "num": "6571", "d": "4/2016"}, {"title": "validatedomnesting", "body": "warning validatedomnesting appear descendant see createapps gt form gt gt connect uploadbtn gt uploadbtn gt connect resourcemodal gt resourcemodal gt connect resource gt resource gt form warning", "num": "6567", "d": "4/2016"}, {"title": "add reactjs repository description appear github search results searching reactjs", "body": "performing global search query github query reactjs repository appear list think people expect appear suggest adding bit text repository description keyword proposal", "num": "6566", "d": "4/2016"}, {"title": "proposal component render required property missing", "body": "reactjs application often repeat following pattern component relying required property const mycomponent props gt propsuser return null return username mycomponentproptypes user proptypesobjectisrequired pattern present also redux pattern reactonlyif trying centralize would nt clear component would render without required property warning could still present development mode", "num": "6564", "d": "4/2016"}, {"title": "issue resulting loss cursor position controlled inputs nt fixed", "body": "release see fixed issue resulting loss cursor position controlled inputs spicyj actually bug nt fixed please consider example steps reproduce input set cursor position input something see cursor moved end", "num": "6563", "d": "4/2016"}, {"title": "trying read property undefined render log error", "body": "trying read property undefined render log error eg add render function even outside return block nothing happens would expected get error message console", "num": "6562", "d": "4/2016"}, {"title": "add commentsattribute indicating component rendered", "body": "per discussion today sometimes developing platform nt devtools safari etc problem looking whole pile markup ca nt tell components rendered without devtools output markup really hard navigate would cool comment nodes attribute helps users navigate output nodes would rendered dev mode flag turned something", "num": "6559", "d": "4/2016"}, {"title": "warn calling setstate ref callback", "body": "refs dom nodes thus suggest nt store state right always store somewhere instance assuming calling setstate ref callback sounds like antipattern", "num": "6557", "d": "4/2016"}, {"title": "controlled number input nt handle e properly", "body": "controlled number input without corresponding function still allows entered numbers inputted afterwards could incorrect nt believe desired behavior jsfiddle demonstrating issue", "num": "6556", "d": "4/2016"}, {"title": "keydown event listener performance slower", "body": "use case rendering x grid components changing state parent component via event per docs like componentdidmount windowaddeventlistener keydown thishandlekeypress componentwillunmount windowremoveeventlistener keydown thishandlekeypress chrome example react taking rerender takes view console examples see mean example example", "num": "6554", "d": "4/2016"}, {"title": "react select value working optgroups", "body": "since upgrading react rendering optgroups value set dom correctly first option always get picked examples react fiddle broken react fiddle works react without optgroup fiddle works environment os x safari version chrome version firefox edit also noticed behavior occurs using", "num": "6552", "d": "4/2016"}, {"title": "warning fieldset element without form parent element", "body": "element present without wrapping element somewhere tree ios chrome throws kills execution much like suggestions would nice react threw warnings scenario development", "num": "6551", "d": "4/2016"}, {"title": "upgrade addons", "body": "upgrading react get following error running think due two addons include would intuitively upgrade since breaking change version like check changelog addon ensure code break however find changelog gitrepo belonging theese addons right approach simply follow react version number every time thanks advance bit lost", "num": "6548", "d": "4/2016"}, {"title": "react regression controlled select elements optgroup displaying value initial render", "body": "using react controlled select elements optgroup elements displaying selecting value provided initial render see following jsfiddle simple test case another fiddle working using react", "num": "6547", "d": "4/2016"}, {"title": "react browserjs nt work csp", "body": "would like react work csp content security policy without adding unsafeeval policy browserjs line contains call function violates csp policy code transformrun function code var opts argumentslength lt arguments undefined arguments optssourcemaps inline return new function transform code opts code possible rewrite browserjs nt violate csp", "num": "6546", "d": "4/2016"}, {"title": "react props value changed string", "body": "", "num": "6545", "d": "4/2016"}, {"title": "video tag support muted parameter", "body": "unable use muted parameter parameters video seems fine", "num": "6544", "d": "4/2016"}, {"title": "maintaining state render passes", "body": "someone interested trying fix meaning would still reference key ish state render pass destructed would reference left destruction rerender state rebuilds previous one kinda like hot reloading watches previous state rendered tries rerender builds changes made new render dunno inaction though something worth chasing", "num": "6543", "d": "4/2016"}, {"title": "iframe load event firing chrome safari src blank", "body": "see trigger alert chrome safari work firefox even react issue webkit issue webkit issue fix react given want consistent events across browsers ps jsfiddle based isuse", "num": "6541", "d": "4/2016"}, {"title": "allow mutating component state using proxies", "body": "instead could used utilizing proxies see", "num": "6540", "d": "4/2016"}, {"title": "react update uncaught typeerror read property addeventlistener null", "body": "hello updating react getting following error", "num": "6538", "d": "4/2016"}, {"title": "reactdomrender documentgetelementbyid target throws error registercomponent", "body": "use reactdomrender documentgetelementbyid renderapp meteor start set render target like error thrown using firefox browser", "num": "6537", "d": "4/2016"}, {"title": "modal aftermodalopen", "body": "", "num": "6533", "d": "4/2016"}, {"title": "got react update error", "body": "run command npm install save react reactdom", "num": "6530", "d": "4/2016"}, {"title": "reactdomserver swaps element props", "body": "example rendered client props pushed beggining attr list making dom different server client", "num": "6526", "d": "4/2016"}, {"title": "react contexttypes proptypes using already static typed language like typescript", "body": "set validation fine concept already using language like typescript takes care typing extremely redundant painful keep updating particular however alteast optional nt please provide option make optional using languages provide static typing top js pointless redundancy eliminated", "num": "6525", "d": "4/2016"}, {"title": "react inline styling producing concatenated style properties separate unique object keys", "body": "assume following styles object provided component prior would result browser computed styles react results chrome chrome results means chrome red background chrome background entirely sure whowhat fault would able shed light change bug intended feature", "num": "6524", "d": "4/2016"}, {"title": "errors using hoc helpful", "body": "put object component decorated say hoc called styledcomponent get error like problem many components decorated like effect error nothing help figure error came would like see things first step think would show full path second would integration react devtools could actually click see highlighted pathcomponent final would possible show tagname contained object well brainstorming better react", "num": "6522", "d": "4/2016"}, {"title": "defaultvalue ignored contains optgroups", "body": "proof", "num": "6521", "d": "4/2016"}, {"title": "stop linking reactpython docs", "body": "reactpython completely deprecated probably cease function soon new versions react docs probably longer link use react jsx python applications page", "num": "6518", "d": "4/2016"}, {"title": "children nt rerender parent component optimised", "body": "seeing something looks like bug written simple test case please refer webpackbin contains test scenario", "num": "6515", "d": "4/2016"}, {"title": "update test utilities docs compatible gt", "body": "since merged docs needs update", "num": "6514", "d": "4/2016"}, {"title": "language translation react", "body": "transpiling language react partly relative react targets mainly babel could done react well think gist", "num": "6513", "d": "4/2016"}, {"title": "fail exist standalone js", "body": "using webpack project works perfectly fine however try upgrade pops error classic issue works fails could one answer", "num": "6512", "d": "4/2016"}, {"title": "minification warning production environment", "body": "minification warning react", "num": "6511", "d": "4/2016"}, {"title": "expose name options proptypes", "body": "looking way iterate component defined proptypes determine type options example like able iterate able determine actual type validator different things passed options working styleguide hoping list possible options pass component props please let know way already thanks", "num": "6507", "d": "4/2016"}, {"title": "number input goes infinite loop chrome debugger", "body": "possibly related mac chrome pretty standard number input like gt click arrow input field change number works properly however open chrome inspector throw breakpoint somewhere rendering flow get infinite loop value input field keeps incrementing possible may chrome bug well stack trace showing looping", "num": "6506", "d": "4/2016"}, {"title": "error using nashorn java", "body": "lately upgraded code java java getting following error anyone help exception thread main javalangreflectinvocationtargetexception native method sunreflectnativemethodaccessorimplinvoke sunreflectdelegatingmethodaccessorimplinvoke javalangreflectmethodinvoke orgeclipsejdtinternaljarinjarloaderjarrsrcloadermain caused javalangarraystoreexception jdknashorninternalruntimeundefined jdknashorninternalruntimearraysobjectarraydatasetempty jdknashorninternalruntimearraysobjectarraydatadelete jdknashorninternalruntimescriptobjectdelete jdknashorninternalobjectsnativearrayshift jdknashorninternalscriptsscript eval program jdknashorninternalruntimescriptfunctiondatainvoke jdknashorninternalruntimescriptfunctioninvoke jdknashorninternalruntimescriptruntimeapply jdknashornapiscriptingnashornscriptengineevalimpl jdknashornapiscriptingnashornscriptengineevalimpl jdknashornapiscriptingnashornscriptengineevalimpl jdknashornapiscriptingnashornscriptengineeval javaxscriptabstractscriptengineeval uglifyuglifyjsrun uglifyuglifyjsexec uglifyuglifyjsmain", "num": "6505", "d": "4/2016"}, {"title": "ca nt reuse server markup required vs required rendering difference", "body": "trying upgrade universal js application without warnings getting warnings however think might issue reactdom reuse markup warning looked specific issue server input field attribute rendered whereas client quick example issue node command line reactdomrendertostring reactcreateelement input required true simple input field rendered client via reactdomrender var el reactcreateelement input required true reactdomrender el documentgetelementbyid app", "num": "6503", "d": "4/2016"}, {"title": "react defined simple react component", "body": "hi using using react create universal app getting following component import component react export default class herosearchview extends component following class call import react react import connect reactredux import coupon commoncomponentscoupon import actions miscactions reduxmodulesmisc import herosearchview componentsherosearchview const mapstatetoprops state gt misc statemisc export class homeview extends reactcomponent render export default connect mapstatetoprops objectassign miscactions homeview kind scratching head following message means note remove page works fine", "num": "6501", "d": "4/2016"}, {"title": "react css manual", "body": "hi manual detailed react style found offical doc explicate well example directly use component html css supposed flex attribute parent react doc seems explain", "num": "6499", "d": "4/2016"}, {"title": "installing reactaddons best practices", "body": "various react addons express peer dependency matching react version write react component library runs multiple versions react depends specific addons implementation detail consume library host environment uses react npm still helpfully install latest version reactaddonsupdate course peerdepends react causing rather confusing unmet peer dependency warnings since consumer looking around block version issues question best practices library situation declare reactaddonsupdate peer dependency meaning consumer personally install react also every reactaddons dependents use seems annoying consumer also sort abstraction break sake version matching perhaps reactaddons independently versioned accept multiple versions maybe declare peer dependency react nt actually need like reactaddonsupdate uses couple small nonreactcore utilities", "num": "6498", "d": "4/2016"}, {"title": "breaking devtools", "body": "using react meteor open chrome console get effect like gone devtools inspector huge loss word", "num": "6497", "d": "4/2016"}, {"title": "reactcsstransitiongroup animation start issue low framerates", "body": "issue run animation issue active class added fast child added reactcsstransitiongroup happens framerate drops fps chrome version reason reason following timeout reactcsstransitiongroupchildjs line framerate low animated object appears directly animation active state browser enough time process previously added enter class fix fixed internally queing function two chained calls instead anybody else encountered issue anybody interested pull request regards mirko", "num": "6495", "d": "4/2016"}, {"title": "warning constructor changing uncontrolled input type search controlled since", "body": "noticed react complains something like changing initial state stops complaining soon put string instead undefined intended nt see big problem difference value undefined", "num": "6494", "d": "4/2016"}, {"title": "testutils better errors methods passing arguments wrong type", "body": "rather minor issue fix simple enough thought file anyway using sometimes write simple errors testutilsscryrendereddomcomponentswithclass foo expected testutilsscryrendereddomcomponentswithclass reactcomponentinstance foo throws stack trace lines type error fixing trivial first line stack trace points offending line expected error nt really obvious others nt throw reached throws bit helpful error would make sense check arguments passed valid throw immediately nt user would end errors along lines", "num": "6493", "d": "4/2016"}, {"title": "rendertostaticmarkup", "body": "said rendertostaticmarkup still docs describing use internal build still apply link docs blog post made suspicious blog post", "num": "6492", "d": "4/2016"}, {"title": "attribute supported", "body": "scene wanted put flash page attribute missing tried another way changed state though element attributes changed flash nt really change", "num": "6491", "d": "4/2016"}, {"title": "decouple old addons react internals", "body": "eg clonewithprops depends reactproptransferer thing depends ca nt delete move things around clonewithprops still uses ones might possible without reaching internals ca nt flat builds also fb still uses clonewithprops shhhh", "num": "6490", "d": "4/2016"}, {"title": "testutilsfindallinrenderedtree iterating components since react", "body": "tests rely went debugger stepped callback function components captured subcomponent coming callback", "num": "6489", "d": "4/2016"}, {"title": "react breaks server rendering checksum", "body": "developing universal app react updating started getting error warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client ut class mdinput name txtcadmus pat server ut class mdinput pattern nam seems bug reordering something like completely sure tried change bunch stuff eg force server client use polyfill using babel transform objectassign plugin nothing solved problem uninstalled react installed problem gone btw pretty simple simulate issue code javascript reactdomrender documentqueryselector main consolelog documentqueryselector main innerhtml consolelog reactdomserverrendertostring react working react working expected", "num": "6487", "d": "4/2016"}, {"title": "css transition group peer dependencies error", "body": "hi try installing react addons transition group get peer dependeincies error think transition group still depends reactaddonsclonewithprops react reactcreateelement error npm reactaddonscsstransitiongroup npm warn packagejson description npm warn packagejson repository field npm warn packagejson readme data npm warn packagejson license field npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodej nodemodulesnpmbinnpmclijs install reactaddonscsstransitiongr save npm err node npm err npm npm err code epeerinvalid npm err peerinvalid package react satisfy siblings peerdepen encies requirements npm err peerinvalid peer reactdom wants react npm err peerinvalid peer reactaddonsclonewithprops wants react npm err peerinvalid peer reactaddonscsstransitiongroup wants react", "num": "6485", "d": "4/2016"}, {"title": "unable type korean input", "body": "hi might know guess issue typing korean recent version problem try type korean letters split korean letters make group letters element example group letters like \ub9ac\uc561\ud2b8 means react composed \u3139\u3163\u3147\u3150\u3131\u314c\u3161 sort r e c first \u3139\u3163 put together make first group letter \ub9ac update type order automatically put together possible rule make type nt put together shows tried uncontrolled input nt set value worked right guess problem onchange amp setstate korean one biggest language world issue make new version react useless every korean user fixed asap found fixed thx", "num": "6484", "d": "4/2016"}, {"title": "setting selection range text input works asynchronously", "body": "hello trying implement text field fine control behavior state text field includes value selection range pass properties selection range nt exposed html attribute text input set using underlying dom element object get value using ref attribute set like note using elemental ui forminput component wrapper around regular input javascript import react react import forminput elemental export default class finecontroltextfield extends reactcomponent static proptypes value reactproptypesstringisrequired onkeypress reactproptypesfuncisrequired selection reactproptypesobjectisrequired start end onkeypressstoppropagationpreventdefault thought might help nt notice put nt call nothing however nt complete solution cursor gets moved end input regardless press keys cursor moves end input selection gets called cursor quickly moves back beginning since works asynchronously deduce react likely sets selection range called way control behavior nt common use case understand nt exposed api setting selection range workaround something aware need get work", "num": "6483", "d": "4/2016"}, {"title": "support asynchronous values like promises observables", "body": "moment quite cumbersome work promises react either write lot code update state inside callbacks use library like reactpromise works children properties based components another option traverse whole virtual dom replace promises passed react read blog post find longer obviously ideal rendering performance since promises standard think simpler way use directly view one option would introduce asyncvalue type promise implementation asyncvalue type would supported children well properties promises could simply used like javascript promise thisstatemypromise opposed supporting promises everywhere directly without promise function unexpected side effects moreover types asynchronous values example observables could added later easily creating another asynctype implementation angular takes similar route async pipe simply write attributes well normal content feature would also convinient libraries like flux allows fetch properties directly inside view avoids reptition relay javascript promise thisstatemodelget property think proposal discussed could nt find thread covers particular topic", "num": "6481", "d": "4/2016"}, {"title": "add component instance onsetstate reactdebugtool", "body": "unless cleanway sniff state without monkeypatching would great get actual component instance raised onsetstate reactdebugtool", "num": "6480", "d": "4/2016"}, {"title": "disable warning minified copy development build", "body": "hello since upgrading get place unit tests warning makes sense prod case toolchain little different use react scala build special containing external js required unit tests minimising means loads faster end valid case minimisation react dev way remove warning appears heap times tests concurrent", "num": "6479", "d": "4/2016"}, {"title": "input tags values invisible sizzlejquery since", "body": "prior input tag like would found sizzlejquery query like since query returns results reduce query check sure enough output wondering use sizzle directly unit tests assert react output indirectly domzipper library also testing", "num": "6478", "d": "4/2016"}, {"title": "immediately setting disabled attribute form submit button using caused form submission take place", "body": "form submit button user clicks submit function calls rerender sets disabled attribute submit button chrome safari network tabs shows post request even starts firefox post occurs note behaviour use codepen example issue occurs latest version react apologies browser quirk vs react issue colleague pretty confused", "num": "6477", "d": "4/2016"}, {"title": "nt warn unitless", "body": "react getting warning generally makes sense allowed unitless like css spec", "num": "6476", "d": "4/2016"}, {"title": "multiple children key warning message prepends actual key value", "body": "multiple children key example jsfiddle react prints following warning console key referenced warning prepends internallooking key specified user bit misleading ideally would mention exact key value set user", "num": "6475", "d": "4/2016"}, {"title": "use template literals", "body": "code conventionreason using template literals consistently using template literals using string concatenation couple occurrences like return prefix keycharat touppercase keysubstring", "num": "6474", "d": "4/2016"}, {"title": "react updates causing issues dom", "body": "hey fairly new developer working app version updated today update remove errorswarnings struggling great relief brought issue specifically app renders fine pages looking fine components text etc right places frozen completely nonfunctional allowing click anything etc error message see follows chrome firefox backtracked could found part node coming null absolutely clue going seems hint exactly causing issue try ripping app apart thorough debugging would nt expect much due unfamiliarity development yet really really appreciate help advance hope problem contribute somewhat improving react ecosystem", "num": "6472", "d": "4/2016"}, {"title": "unable use transpiled classes components react", "body": "following code snippet use strict import react react import render reactdom import jsdom jsdom class kendoscheduler componentdidmount consolelog thisrefscontainer render return jsdomenv function err window const el windowdocumentgetelementbyid container set globals react uses globalwindow window globaldocument windowdocument render el run emit following error code run work perfectly postcompiled code looks like use strict var createclass function function defineproperties target props var lt propslength var descriptor props descriptorenumerable descriptorenumerable false descriptorconfigurable true value descriptor descriptorwritable true objectdefineproperty target descriptorkey descriptor return function constructor protoprops staticprops protoprops defineproperties constructorprototype protoprops staticprops defineproperties constructor staticprops return constructor var react require react var interoprequiredefault react var reactdom require reactdom var jsdom require jsdom var interoprequiredefault jsdom function interoprequiredefault obj return obj amp amp objesmodule obj default obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var kendoscheduler function function kendoscheduler classcallcheck kendoscheduler createclass kendoscheduler key componentdidmount value function componentdidmount consolelog thisrefscontainer key render value function render return div ref container classname kendocontainer return kendoscheduler function err window var el windowdocumentgetelementbyid container set globals react uses globalwindow window globaldocument windowdocument reactdomrender null test el version info let know information required", "num": "6468", "d": "4/2016"}, {"title": "allow specifying multiple fallback values inline styles eg vendor prefixing ssr", "body": "using string hack override css values react components example want different values npm module polyfilling styles react components worked perfectly warnings nothing updated today everything breaking normally deprecation warnings nt notice warnings change b changelog see anything related understand changed missing something", "num": "6467", "d": "4/2016"}, {"title": "multiple checkboxtoggle affecting state", "body": "hi guys experiencing strange behaviour couple checkboxes behaves checkbox change state selecting snippet reference hand might overlooked something see advise would great javascript import default react proptypes react import mui materialui import getmuitheme materialuilibstylesgetmuitheme import checkbox materialuilibcheckbox let injecttapeventplugin require reacttapeventplugin const styles block maxwidth checkbox marginbottom toggle marginbottom class iotable extends reactcomponent constructor props super props getchildcontext return muitheme getmuitheme componentwillmount injecttapeventplugin handlechange thissetstate camera thisrefscamerainputstateswitched router thisrefsrouterinputstateswitched wifi thisrefswifiinputstateswitched render iotableproptypes camera proptypesbool cameratext proptypesstring iotabledefaultprops camera true cameratext iotablechildcontexttypes muitheme reactproptypesobject export default iotable", "num": "6466", "d": "4/2016"}, {"title": "try autoprefix something css attributes like", "body": "according test need manually add prefix inline attribute case implementing nontrivial graph animationinteraction ui programmatically calculating value manually add prefix every time possible delegate tedious task react anyone point related code try make pr", "num": "6464", "d": "4/2016"}, {"title": "rename reactlib reactprivate", "body": "suggested twitter let get broken components", "num": "6460", "d": "4/2016"}, {"title": "removal reactspread broken compatibility typescript older babel transpilers", "body": "use typescript older version babel react yields errors reactspread function see issue applications monkey patch backwards compatible reactspread function would preferable react come compatibility shim function", "num": "6457", "d": "4/2016"}, {"title": "rendering component shadow root react", "body": "quite easy render component shadow root due nodetype check reactdomcomponent however notice check completely removed always bind events element rather events cross shadow boundary retargeted appear though shadow host instead internals react event delegating fails invoke event function case event delegation correctly handled event able inspect listenerbank retargeting performed propagation event would unnecessary realise react nt support shadow dom natively however seems though taken little step back especially angular shadow dom support horizon merely wondering rationale behind removal check whether happy add back people dislike css module approach", "num": "6456", "d": "4/2016"}, {"title": "setstate obj callback callback called state mutated", "body": "fighting used called race condition sure guys call react world calling snippet component reportargs e gt consolelog later stateargs sendprintrequest e gt w stateurl arg stateargs arg komplex string manipulations goes setstate wurl w args arg consolelog sooner stateargs settimeout reportargs proves point trust either noob observation go instead documentation glitch docs says callback called state mutated eventually bug obviously rooting would way jiffy providing someone lot knowledge react would stick speak cheers walther", "num": "6455", "d": "4/2016"}, {"title": "isomorphic rendering inserted html broken", "body": "react inserted dom nodes inserted plugins adblock browser sync otherwise ignored react new nodes cause say regression since breaks full page isomorphic rendering anyone using plugins scripts insert dom loaded say react ignore anything without datareactid mounting server rendered code edit top react throws case would gracefully continue", "num": "6452", "d": "4/2016"}, {"title": "isomorphic rendering sporadically renders attributes different order", "body": "warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client status update name status value server status update value name statu using react", "num": "6451", "d": "4/2016"}, {"title": "throws warning key refs passing props", "body": "seems newest update passing props child component spread operator console throws warnings associated pull request seems throw issue component class stateless component hence passing props thisprops accessing refs keys child component", "num": "6450", "d": "4/2016"}, {"title": "render check input type", "body": "updated code using react one errors made passing class constructors error gave gave clue wrong problem course needed passed instead think might easy error catch warn help noobs like", "num": "6447", "d": "4/2016"}, {"title": "typing middle controlled text field jumps end", "body": "repro go scroll todo example type anything input field click middle text type another character notice cursor jumps end text field", "num": "6446", "d": "4/2016"}, {"title": "cursor jumping end controlled input browsers", "body": "appears working firefox least chrome amp safari broken really recent regression possible changes blame easiest repo todo list homepage", "num": "6445", "d": "4/2016"}, {"title": "warning changing type value input field", "body": "render method something like first render input number eg change input string get warning new value valid number expected behavior", "num": "6441", "d": "4/2016"}, {"title": "fails set value using", "body": "react correct sets defaultvalue using however defaults first familiar react codebase suspect something change made specifically line", "num": "6440", "d": "4/2016"}, {"title": "secretdomdonotuseoryouwillbefired", "body": "great variable name found reactsrcumdreactumdentryjs", "num": "6438", "d": "4/2016"}, {"title": "curly brackets first line return causes unexpected token error", "body": "curly brackets first line return causes unexpected token error example", "num": "6437", "d": "4/2016"}, {"title": "support passive event listeners", "body": "would good everything passive default optin active needed eg could listen text input events preventdefault used controlled behavior active listeners similarly could unify react native threading model eg one thing could synchronously block ui thread active listeners handling keystrokes cc vjeux ide", "num": "6436", "d": "4/2016"}, {"title": "debugging structure amp automatic cleanup unstablerendersubtreeintocontainer", "body": "implementing unstablerendersubtreeintocontainer use custom components things discussed initial pr would pretty fantastic specifically things debugging structure eg tooltips nt show top level react devtools rather respective subtrees automatic clean parent tree unmounted event bubbling back log nt see issues looks like unstablerendersubtreeintocontainer moment passing proper context", "num": "6435", "d": "4/2016"}, {"title": "setting select value fails using optgroup", "body": "per fiddle output select field edited brevity passing select field value midlothian still showing fife selected value however seem possibly works defaultvalue passed however work passed", "num": "6434", "d": "4/2016"}, {"title": "updates grunt", "body": "specifically released first update bumps lodash dependency", "num": "6433", "d": "4/2016"}, {"title": "componentdidunmount functionality addition componentwillunmount", "body": "would great possible run code component actually unmounted useful consider following component parent service service child child component child componentwillmount starts listening service throw exception child componentwillunmount since parent gets unmounted first service already destroyed existed componentdidunmount service destroyed children unmounted ie component parent service service child child component child componentwillmount starts listening service", "num": "6424", "d": "4/2016"}, {"title": "setstate componentwillmount causes typeerror rendering rendertostring preceded component renders rendertostring", "body": "calling component causes error rendering serverside preceded component renders content using causes typeerror works", "num": "6423", "d": "4/2016"}, {"title": "callback setstate second parameter get mouseclick event handler", "body": "hi use setstate click function pass callback function second parameter please look callback function get event handler reasonable try pass event handler callback like state wrong get event handler right state setstate callback function correctly thank help advance", "num": "6422", "d": "4/2016"}, {"title": "npm install save reactdom throws error", "body": "npm install save reactdom npm http get npm http npm err registry error parsing json npm err syntaxerror unexpected token npm err gt l lt gt lt lt npm err amp amp amp ph amp amp l amp c j amp kt amp gt amp amp x amp amp npm err z b npm err \u02carr amp gt n lt l lt amp amp npm err objectparse native npm err regclient npm err requestselfcallback npm err requesteventemitteremit npm err request npm err requesteventemitteremit npm err incomingmessage npm err incomingmessageeventemitteremit npm err npm err processtickcallback npm err need help may report log npm err npm err email npm err npm googlegroupscom npm err system linux npm err command usrbinnodejs usrbinnpm install save reactdom npm err cwd homekarircodelatihanreactjs npm err node v npm err npm v npm err type unexpectedtoken npm err npm err additional logging details found npm err homekarircodelatihanreactjsnpmdebuglog npm err ok code problem json funny characters id reactdom rev name reactdom description react package working dom disttags latest next versions name reactdom version description dom wrapper subjectively sanity awesome helpers author funny characters located beside word subjectively npm version nodejs version", "num": "6421", "d": "4/2016"}, {"title": "proposal reactdomserver render stream", "body": "tl dr like know much enthusiasm core react team accepting pr ability render markup stream nt need guarantee course like get sense something react team might spending ton time working background currently server rendering accomplished synchronous functions return string server render methods somewhat slow large web pages easily take render depending server also since node single threaded singlecore performance improving rapidly problem moore law eventually solve slowness turn causes two problems production websites large somewhat large html pages first methods return string completely render entire component return even first byte browser meaning browser waiting idle render method called second methods synchronous node single threaded server unresponsive rendering means large page render easily starve renders smaller pages may take ms asynchronous render method would let large page renders yield cpu small pages improving average response time proposed solution proposal add two methods reactdomserver return node readable stream terms behavior methods would return readable stream outputs markup respectively methods could solve problems stream begin emitting content immediately send browser keeping ttfb constant components get larger streams also inherently asynchronous allows large pages starve smaller ones months back forked react library called reactdomstream exact thing fairly well received stars github though modest actual downloads npm also wishlist bug thread repo however maintaining fork less desirable position wonder get integrated core code base implementation ideal ended copying basically every implementation making copied versions asynchronous benefit approach nt affect performance obvious drawback code changes bug fixes would performed forks code ideal recently figured way share code better way result slowed relatively significantly plus minus trying figure tune carefully looking great yet questions think questions like ask team assuming perfectly implemented performance degradation current code even something willing accept pr feature accept important string stream versions code follow code path willing accept degradation performance string version server rendering order get stream rendering constant ttfb keep single code path thanks time thanks great work react tagging spicyj gaearon sebmarkbage instructed react irc channel", "num": "6420", "d": "4/2016"}, {"title": "release", "body": "one thing left blocker list get merged shortly code complete everything else considering nt regression got booted catch later real code changes x remaining regression simulating events x fix failing test fallout x upgrade deps docs x update properties amp attributes removed deprecated methods add new deprecation notes x add notes potentially confusing version mismatches eg returning null functional component actual release x create branch x shrinkwrap x update changelog sync blog post x publish x update travis build docs new branch part release everything published postrelease x update tutorial repo x update fiddles x ensure master release resource synced", "num": "6417", "d": "4/2016"}, {"title": "official method transforming components", "body": "goal eventually kill technology favor less hacky technologies baked react running problem want able transform components regardless babel ie components may may touched babel either already transpiled dependency within etc official way transform components would solve problem immediately could enable incredibly useful functionality realm reusability extensibility managing application state via context curious whether anyone put official thought towards willing accept pull request", "num": "6416", "d": "4/2016"}, {"title": "warning messages use consolewarn", "body": "currently use consoleerror overestimates severity causes devs react strongly message might imply example", "num": "6414", "d": "4/2016"}, {"title": "transitiongroup", "body": "var reacttransitiongroup reactaddonstransitiongroup var content reactcreateclass componentwillappear function consolelog componentwillappear componentdidappear function consolelog componentdidappear componentwillenter function consolelog myboxcomponentwillenter componentdidenter function consolelog myboxcomponentdidenter componentwillleave function consolelog myboxcomponentwillleave componentdidleave function consolelog myboxcomponentdidleave render function return content var todolist reactcreateclass getinitialstate function return show false show function thissetstate show true hide function thissetstate show false render function var items thisstateshow return items could tell problem", "num": "6412", "d": "4/2016"}, {"title": "add support css variables style attributes", "body": "css variables supported chromium use rendering enable us write cleaner flexible code sadly seem use react without resorting various tricks ideally would like able use like would make variable available inside scope div able add using following syntax nt updated try assigning new ruins much point using variable able add remove using reactdom gets sync dom updates addition pretty questions usefulness css variables happy explain", "num": "6411", "d": "4/2016"}, {"title": "onfocusinonfocusout events", "body": "like mouse enterleave almost always want events currently expose run semifrequently actually product work add", "num": "6410", "d": "4/2016"}, {"title": "documentation regarding refs", "body": "would saved alot time documentation refs made clear really work accessing one child one parent unless wrong understanding would good documentation dealt refs explained", "num": "6409", "d": "4/2016"}, {"title": "warning defining proptypes production", "body": "production warning proptypes defined nonempty object could spark change community proptypes conditional nodeenv could automated babel plugin similar build systems would result react apps significantly smaller production warning defined proptypes componentname component production build code consider using plugin babelplugin pluginname third party library open issue alternative saveallbytes text warning proptypes defined componentname", "num": "6402", "d": "4/2016"}, {"title": "deprecate return value", "body": "tracking issue ready deprecate return value yet likely longerterm objective immediate issue reference start get ball rolling reasoning working towards new incremental reconciler means render may complete prior returning anyone relying return value would race condition returned instance potentially fully mounted safelooking code might work time fail time sole discretion scheduler clear issue today become issue start utilizing incremental renderer iff people rely return value prepare new reconciliation algorithm start encouraging people start avoiding return value people instead attach callback ref root component rendering component thus allowing get reference instance mounting complete first step process update documentation state return value legacy people attach ref instead similar string refs", "num": "6397", "d": "4/2016"}, {"title": "proposal externalize inlinestyles", "body": "meeting notes tons different ways render js styles see radium css modules react native web etc see tremendous opportunity powerful thirdparty stylesheet packages without burying lead much react dom nt manage inline styles external inlinestyle library would responsible producing valid response send prop renderer maybe renderer expecting object form could also create expectation around returning primitive object could look something like javascript import react react import stylesheet mystylesheetlibrary var stylesheet stylesheetcreate color blue fontsize consolelog stylesheettostring gt color blue fontsize export default function reactdom call stylesheet produce valid style attribute invariants warnings errors associated stylesheet handled library return react could provide addon maintains existing functionality get things started similarly shifted community however puts react place inline stylesheet package maintainers greater control static inline styles compiled ahead time react spend dev effort maintaining inline style support heavily using inline styles use template strings benefit lighter weight react though nt really huge deal", "num": "6395", "d": "4/2016"}, {"title": "allow arrays css properties take multiple values", "body": "would nice people able write", "num": "6393", "d": "4/2016"}, {"title": "flattenchildren encountered two children key", "body": "struggling trying figure nothing find helps got function renders component every item array pretty much works perfectly fine except fact gives bunch warnings saying keys never change matter try set code see set key component nt even use know fact raceid unique tried adding removing keys elements code well setting different values still always prints warnings keys also using react could make difference", "num": "6390", "d": "3/2016"}, {"title": "support question serverside rendering rerender client", "body": "alright kind react newb react following principle least surprises one ask team really wants serverside rendering particular project nt need much special client however far learned need reference react components client server order actually get dynamic behavior events bound etc client question nt react setup frontend could call without react component first argument nt could nt react enough info go already need actual reference react component frontend well long react frontend reference root dom node could nt nt enough whole thing rerender client kinda unexpected sure missing something must good reason lib works way nt know want know writing thanks", "num": "6386", "d": "3/2016"}, {"title": "new proptype proptypesstyle would make sense", "body": "would implementing proptypesstyle make sense think useful many scenarios example one implements component accepting property valid object", "num": "6385", "d": "3/2016"}, {"title": "testutilsrenderintodocument lifecycle", "body": "hi everybody something nt understand testutils library want test react component testutils lifecycle component getinitialstate componentwillmount render componentdidmount componentwillreceiveprops shouldcomponentupdate componentwillupdate render componentdidupdate componentwillunmount use testutilsrenderintodocument methods never call componentwillreceiveprops shouldcomponentupdate componentwillupdate componentdidupdate new container recreated call renderintodocument renderintodocument function areactelement var div documentcreateelement div return reactdomrender areactelements div see fiddle nt understand suggest use renderintodocument method test reacts component think better use method likes create container let container documentcreateelement div call render method let component reactdomrender reactelement container test react components see fiddle opinion best regards", "num": "6384", "d": "3/2016"}, {"title": "server running include export line throwing error", "body": "facing weird error server running include export line throwing error able see application even shows webpack valid export sportstopportion including line start server facing error error invariant violation using webpack node react since using webpack build thinking error due webpack checked react code errors problem syntax tell fix reason using export write unit test case whole code test code seen gist debugging past four days able find", "num": "6382", "d": "3/2016"}, {"title": "reacttestutilssimulate logs unexpected console error", "body": "reproduce open error logged browser dev tools chrome amp firefox somehow safari happens latest master version assignment additional event data newly created syntheticevent triggers console error warning synthetic event reused performance reasons", "num": "6379", "d": "3/2016"}, {"title": "dangerouslysetinnerhtml issue", "body": "hello caught following issue today following get next one result lt p datareactid lt strong gt lt strong gt lt p gt lt p gt lt strong gt vluchtdetails en voorwaarden lt strong gt lt p gt beschikbaarheid bij het selecteren van een vlucht word je vlucht nog niet meteen geboekt je vlucht wordt definitief bevestigd na een succesvolle betaling op onze website lt p gt lt p gt see nt rendered one inside another change lt p gt lt div gt get right markup correct rendered data tried add key classname lt p gt nt help", "num": "6378", "d": "3/2016"}, {"title": "component setstate nt allow symbol keys", "body": "trying something like invoked properly undefined running confirmed define symbol properties", "num": "6372", "d": "3/2016"}, {"title": "uncaught invariant violation must mounted trap events replacing image link image", "body": "hard time narrowing repro seem lot required moving parts try give much information relevant snippet packagejson routes look something like simply wraps passes additional prop component rendered reactredux connected component dispatches action ultimately toggles go invariant violation fires action dispatch appears work fine replace appears work fine invariant violation tag tried building repro codepen similar structure calls simulate reactrouter redux suspect would require actually build repro w technologies would helpful work time hopefully repro maybe enough info however thanks", "num": "6371", "d": "3/2016"}, {"title": "reacttransisitiongroup nt allow option append prepend child siblings", "body": "reacttransistiongroup assumes children prepended siblings inserted parent think add optional prop allows configuration prepend append children working code submit pull request wanted make sure nt missing something", "num": "6369", "d": "3/2016"}, {"title": "input type email controlled component control white spaces", "body": "controlled input filed type email behave differently controlled field type text manage controlled input field type email actual state rendered dom different user digit spaces eg input element like try digit letters spaces always get rendered string stringfromthestate input element like try digit letters always get rendered string stringfromthestate try digit spaces get new rendered string compose state spaces problematic saving state need validate field force something smart like strip white spaces", "num": "6368", "d": "3/2016"}, {"title": "translate thinkinginreactmd japanese", "body": "", "num": "6366", "d": "3/2016"}, {"title": "text components reacttransitiongroup give element type invalid", "body": "throws invariant violation element type invalid expected string builtin components classfunction composite components got undefined check render method sure least error message terrible", "num": "6365", "d": "3/2016"}, {"title": "react appends", "body": "designnecessary seems inconsistent since append etc amp results empty duplicate", "num": "6358", "d": "3/2016"}, {"title": "make respondereventplugin crossplatform", "body": "dieppe worked making work dom put hold brings relevant files react repo start thinking creating issue keep track whether want happen plan regarding consensus look rebasing cc sebmarkbage jordwalke", "num": "6352", "d": "3/2016"}, {"title": "bundle react flat file", "body": "previously considered bundling react flat file without module map example somewhat outdated implementation rollup another tool mistaken bundles modules way really want problems solve us want try plan evaluate whether switch worth", "num": "6351", "d": "3/2016"}, {"title": "remove reactcurrentowner", "body": "remember twitter conversations sebmarkbage problematic several reasons intend remove point problems related sure whether solution used warnings profiler even new one helpful messages used string refs need deprecate started work outdated try avoid stale prs give much context anyways creating issue track work instead", "num": "6350", "d": "3/2016"}, {"title": "warn using overlapping styles eg border borderbottom", "body": "good first bug taken supertinou nt work unless discussed times think conclusion prs intending solve issue merged various reasons would like close prs outdated reboot discussion performance considered conclusion sebmarkbage syranide seems consider allowing conflicting style rules imho things considered better disallow overlapping warn dev radium ianobermiller came conclusion backlash afterwards react native seems allow style expansions attributes eg closing old pull requests creating issue track implementation behavior seem agree upon warn used time discuss specifics either ignored allow whitelisted properties warn others issue migration strategy suggest people use something like really need shortcuts also something need decide upon implementing integrated styling related issues related prs", "num": "6348", "d": "3/2016"}, {"title": "invalid unitless properties", "body": "noticed unitless properties invalid eg prefix added style name style names converted weird names prefix needed anymore unitless properties", "num": "6347", "d": "3/2016"}, {"title": "attract contributors sharing first contribution stories", "body": "dan abramov asked main reason holding back contributing react far answers code approachable directly related think current contributors shared stories first contributions react explaining got involved would encouraging others even linked official docs", "num": "6346", "d": "3/2016"}, {"title": "nested properties issue", "body": "hello code javascript class component extends reactcomponent render thispropsnestedprop thispropsparsenestedprop return component componentdidmount consolelog thispropsnestedprop componentdefaultprops nested prop default const nested prop const nested prop class application extends reactcomponent render return reactrender documentgetelementbyid app console output get variable reference separate components instead instanses every component saves last setted value instanses component mounting normal behavior think correct behavior different property values different instanses ps tested code", "num": "6344", "d": "3/2016"}, {"title": "requiring reactaddonscsstransitiongroup includes react webpack builds exclude react", "body": "trying use addon layout component react reactdom peer dependencies include build goes published npm module simply line code look reactlibreacttransitiongroup see line causes webpack pull react since defined external module could make reactaddonscsstransitiongroup external webpack build distributed script addon adds window variable similar including script adds adds module depends problem", "num": "6343", "d": "3/2016"}, {"title": "css values important", "body": "seems style values important doesnt work fiddle", "num": "6342", "d": "3/2016"}, {"title": "clarify usage dynamic children key prop", "body": "seen lot people dynamic lists items addremove actions like static lists probably ok index key using index key dynamic list wrong even article info docs added warning docs somewhere people could clearly see ca nt use index key dynamic lists", "num": "6339", "d": "3/2016"}, {"title": "get rid providesmodule", "body": "great us fb much everybody else long goal get rid use common js modules nt put time yet change require changes internally fb probably work fbjs going assign", "num": "6336", "d": "3/2016"}, {"title": "write contribution guide documenting design decisions", "body": "historically good explaining contribute react small guide offer crucial information build process design constraints guide gets conventions like infra around introduce breaking changes deprecations syncing react native facebook website affects contributions basic directory organization go either directory unfortunate decisions codebase want get away actively worked internal glossary elements public instances internal instances composite components native components reconciliation transactions update queue synthetic events think especially interested hearing people considered contributing react turned away internal complexity", "num": "6335", "d": "3/2016"}, {"title": "explore possibilities emmetstyle react plugin allows succinct templating", "body": "using emmet sublime occurred angle brackets repurposed actually provide useful utility nesting consider jsx component returning xmllike syntax return thispropsheader thispropscontent thispropsbutton vs see would much succinct remove brackets although easily readable much faster write currently angle brackets serving purpose delineating tag assume returned output tag therefore could useful repurpose usage stating nested hierarchy idea thought worth mentioning", "num": "6334", "d": "3/2016"}, {"title": "log warning console components written functions implemented incorrectly", "body": "example component throw errors ever actually render silly error make think warning cases like called warning incorrect usage mycomponent see return statement mycomponent fwiw correct code see easy miss sure difficult something like figure going continue looking someone idea go creating warning scenario please feel free point right direction smile", "num": "6329", "d": "3/2016"}, {"title": "stop exporting secret dom server stuff", "body": "reactjs export isomorphic stuff dependencies dom secret export stuff browserify package special case file rename way nt take dom dependencies npm package help react native unification", "num": "6328", "d": "3/2016"}, {"title": "deleting selection range input work", "body": "steps reproduce visit erase hello input box type lowercase transformed apple pple selected press delete backspace expectation pple erased instead nothing happens continue typing ir instance pple selection erased correctly though", "num": "6327", "d": "3/2016"}, {"title": "consider special casing certain dom attributes accept elements", "body": "use case example translation components rendering string content html spec unfortunate attributes behave kind like content seems like able accept react elements design similar react component would allow accept react elements since normalize usage could theory builtin react certain attributes like etc could accept react components render strings would probably go figure way render strings root react composite component", "num": "6325", "d": "3/2016"}, {"title": "firefox issue expected flush transaction stored dirtycomponents length match dirtycomponents array length", "body": "able come repro bug rely weird interactions js flash though happens firefox summary repro react component updating via setinterval loop input focused zoom inout trigger resize handler rerenders react component error triggered note happens firefox input focused seem happen chrome workaround suggested also applies ie wrapping resize handler body settimeout", "num": "6324", "d": "3/2016"}, {"title": "defined", "body": "using react redux relay trying achieve server render found following problem however right okay browser side debugging found valid difference classes browser side transform babel babelpolyfill add transformation node side turns okay wonder anything react bugs nodejs plz help", "num": "6323", "d": "3/2016"}, {"title": "performance improvement intensive react apps", "body": "realtime reduxreact app performance critical lot components page may update frequently noticed animations running jerkily general component updates lagging lots actions dispatched small space time say per second run mac latest chrome ran performance diagnostics using react tools optimised app much possible mainly using shouldcomponentupdate making sure time wasted unnecessary dom reconciliation rendering even app still lagging dug deeper running cpu profile chrome devtools noticed times animations running jerkily slow react setstate method calls taking ms ms average would allow maximum component updates second performance hits wall case unacceptable limit also ran timeline see browser painting slow turns see majority work done inside scripts rendering seemed odd looked function stack example setstate method took ms purely scripting rendering see large chuck spent reactinputselectionhasselectioncapabilities light blue method bottom row tracing back called reactreconciletransactionjs module supposedly react uses reactinputselection restore input selection components get updated naturally wanted see would happen turned took selectionrestoration task transaction wrapper guess happened extract setstate calls took notice aggregated total time went first example ms turning selectionrestoration others word gt performance increase app huge afterwards everything ran perfectly smooth questions reactinputselection called ferociously almost every element render even elements components reactinput selection restoration take long bug necessary cost way disable selection restoration performance critical apps need make use feature", "num": "6322", "d": "3/2016"}, {"title": "ca nt update checked attribute", "body": "consider input onchange function e thissetstate value etargetvalue first time component rendered input remain forever dom even appears unchecked visually instance happen using react", "num": "6321", "d": "3/2016"}, {"title": "document setstate callback guaranteed called component unmounts", "body": "currently info could find argument method second optional parameter callback function executed setstate completed component rerendered working small tool relies callbacks called found cases never happened state set callback pushed queue component unmounted callback lost never called nt say ca nt infer possibility scenario description info exactly callback considered lost would helpful findings suggest right place confident assurance creators react also description suggests returns component rerendered callback called case callback still gets called using react", "num": "6320", "d": "3/2016"}, {"title": "accessing params nonprimitive proptypes shape oneof etc", "body": "hi use case read proptypes component enhance development process way access arguments types like", "num": "6319", "d": "3/2016"}, {"title": "js click", "body": "", "num": "6318", "d": "3/2016"}, {"title": "input type color fires continuous change events", "body": "native color picker fire lot events single closing picker react version fires rate", "num": "6308", "d": "3/2016"}, {"title": "bind result errors onclick handler", "body": "create react component add attribute click report error uncaught invariant violation enqueuecallback called callback nt callable actually working state correctly updated nothing wrong annoying error think bug image could work exactly things", "num": "6306", "d": "3/2016"}, {"title": "disabled input button fire onclick", "body": "following button fire chrome mozilla ok using normal dom without react ok see plunker example reproduces issue open ie", "num": "6304", "d": "3/2016"}, {"title": "html tags missing content wrapped comments", "body": "notices since longer spans everything element wrapper comments content fails display ie edge", "num": "6299", "d": "3/2016"}, {"title": "require stateless functional component fails", "body": "behavior webpack differs regular react components react stateless functional components work see simple project reproduces issue apologies advance making obvious mistake configuration", "num": "6298", "d": "3/2016"}, {"title": "distinguish react elements plain old objects", "body": "using shorthand functions rapid prototyping need check arguments react elements objects normal ones using typeof moment reliable", "num": "6297", "d": "3/2016"}, {"title": "validatedomnesting figure inside p tag", "body": "hi using markdown jsx parser everything works ok see warning console react dom validation checking specs seems allows see permitted parent elements element accepts flow content valid flow content element question reason warning aware fyi using react", "num": "6295", "d": "3/2016"}, {"title": "incorrectly displaying html entities", "body": "bit jsx looks like compiles using babel however showing browser idea going", "num": "6294", "d": "3/2016"}, {"title": "checkproptypes suppresses repeat warning messages missing required proptypes", "body": "writing tests around behaviour required prop types supplied react component noticed added test suite break expected first tests check number times called failed number would increase following tests supply newly required prop trigger increase demonstrate behaviour browser please see jsfiddle discovered cause reactelementvalidator actually suppressing repeat warning messages missing proptypes see source even comment issue monitor failure tends lot error perspective nondeterministic behaviour unexpected would expect warnings appear time render component without props specified required even tends lot discussed team feel greater community may expect type behaviour point appreciate could either get perspective behaviour exists may missing something protects find solution patch behaviour remove suppression would optimal eyes relevant commit behaviour added quite ago", "num": "6293", "d": "3/2016"}, {"title": "wierd functionality try display complex array", "body": "hello got one strange errorlike thing got array commands special component eg class scenarioform extends component constructor props super props thisstate scenario propsscenario componentwillreceiveprops props thissetstate scenario propsscenario commandsupdated commandsarray thisstatescenariocommandscommandsarray thisforceupdate render thisstatescenario return nothing return skipped skipped command export class command extends component constructor props super props componentwillreceiveprops props thisprops props thisforceupdate render let children array parent command ix thisprops changeorder e let array command thisprops let index commandid arraysort b gt aid bid thiscommandsupdated array remove let array command thisprops let index commandid clone let array thisprops let array thispropsindex let newme jsonparse jsonstringify newmeid arraysplice newme let ix ix lt arraylength ix array ix id thiscommandsupdated commandsupdated args let parent thisprops parentcommandsupdated args class unknowncommand extends component constructor props consolelog props props super props componentwillreceiveprops props thispropsprops thisforceupdate render let command array parent thisprops consoleinfo unknow command command array parent let index commandid return select command type commandtypesmap c ix gt selecttype e let command array parent thisprops let index commandid consoleinfo unknow command st command array parent let id ecurrenttargetvalue let type commandtypes id consolelog change array array index typetype parentcommandsupdated array remove button command root main idea remove certain element array redraw sometimes see array spliced correctly identity stored correctly sometimes wrong element deleted exception explanation exception elements putted keys commands seems react nt handle elements property correctly try look available elements exists function called idea incorrect dom element removed since removed element left page correct array items method", "num": "6292", "d": "3/2016"}, {"title": "breaking error ie", "body": "replicate issue run windows ie virtualbox clone repo run npm start open ie try select different options select component error appear although fancy still need support ie months thanks", "num": "6291", "d": "3/2016"}, {"title": "fix coverage testing enable", "body": "introduced disabled consistently got test failures master appear caused processes running memory due coverage instrumentation overhead figure way add coverage reporting back heard cpojer potential optimizations made jest help mitigate overhead look helping jest deal way increase memory cap react tests travis maybe could one thing sure removing present branch used handle master removed consistent branch handles prs however sure first place maybe add back love learn let keep issue open specific plan integrate coverage without red time", "num": "6290", "d": "3/2016"}, {"title": "reactperfprintdom throws uncaught typeerror converting circular structure json", "body": "identical app call app loaded react react master fix releasing", "num": "6288", "d": "3/2016"}, {"title": "form input namenodename breaks onsubmit event handling", "body": "happened stumbled following edge case add attribute form input point react event handling call coincidentally property refers input invocation fails jsfiddle example", "num": "6284", "d": "3/2016"}, {"title": "react reactdom blocked chrome even running python", "body": "pasting exact code html file opening python http server reason gives following error chrome redirect origin blocked loading crossorigin resource sharing policy accesscontrolalloworigin header present requested resource origin therefore allowed access able work around completely removing attributes react reactdom script tags never issue chrome frequently include external scripts attributes problem lead believe may something way fbme configured", "num": "6283", "d": "3/2016"}, {"title": "testing pure function vs createclass component using scryrenderedcomponentswithtype", "body": "assumed although different ways creating components results would able find document uniform manner try use test utility method ca nt find components created using pure function const wrapper reactcreateclass render return thispropschildren const errormessage reactcreateclass render return thispropserrortostring const errormessagepurefunction error gt errortostring describe rendering pure function components gt able find document gt const output utilsrenderintodocument expect utilsscryrenderedcomponentswithtype output errormessage length tobe succeeds test pass another way getting pure function components document", "num": "6282", "d": "3/2016"}, {"title": "server rendering svg foreignobject body tag w results missing id error", "body": "using need svg tags rendering foreignobject svg tag according mdn put body tag inside tag whatever html want rendertostring server leaves body tag place gives reactdataid however rendered client body tag removed look live elements body inside foreignobjects gone along datareactid server source ie view page source shows body tag rendered missing reactdataid result get invariant violation unable find element id xx page updates somethings nt work removing body inside foreignobject tag seems solve problem nt know ok solution body tag necessary scenarios either case seems scenario server rendering results different domhtml client rendering problem body tag supposed anyway todd", "num": "6280", "d": "3/2016"}, {"title": "rendertostring still put datareacid markup", "body": "looks like reactdomserverrendertostring still puts datareacid attributes everywhere intended quick tests reactdomserverrendertostaticmarkup seems job since longer needs reactdataid need render methods going forward todd", "num": "6279", "d": "3/2016"}, {"title": "attempted assign readonly property", "body": "getting crash report react native app crashing react code ca nt really provide much detail stack trace know frequent crash far crashes one anyone else run", "num": "6277", "d": "3/2016"}, {"title": "add warning onfocusin onfocusout", "body": "per warn attributes used", "num": "6275", "d": "3/2016"}, {"title": "react issue unable get property nextsibling undefined null reference", "body": "nt know yet exactly causes update ticket find got long stack trace call stack trace enters reactjs code looks like render method pagecontainer component looks follows simplified code works fine chrome fails try see make minimal example displaying problem", "num": "6271", "d": "3/2016"}, {"title": "node warning possible eventemitter memory leak detected listeners added", "body": "hi classic fix time seems like removelistener method remove callbacks store javascript import eventemitter events let focusformid let class formfocusstoreclass extends eventemitter emitchange thisemit change addchangelistener callback consolelog added count count thison change callback removechangelistener callback count consolelog removed count thisremovelistener change callback updateformfocus action focusformid actionnextformid thisemitchange getformfocus return formid focusformid changing url react router forms removed dom new forms added corresponding add remove change listeners correctly catched store however seems like listeners removed since get message corresponding form component javascript export class form extends reactcomponent", "num": "6266", "d": "3/2016"}, {"title": "ie react", "body": "weird noticed today debugging wrapping hello label inside span ie would course trick guess issue also present perhaps", "num": "6265", "d": "3/2016"}, {"title": "support dom nodes children", "body": "would nice able equivalent seems entirely doable new fancy renderer think obviously would nt supported ssr though would provide fallback necessary", "num": "6263", "d": "3/2016"}, {"title": "break", "body": "hi fairly trivial application running reactjs since moved continues work perfectly chrome however appears render critical parts empty relevant piece code failing error output debug console dom explorer appears render missing data see application relevant behaviour running live enter network yield fastest return see issue edit non ie users see ss", "num": "6262", "d": "3/2016"}, {"title": "set input value got warning input uncontrolled using react", "body": "", "num": "6261", "d": "3/2016"}, {"title": "use life cycle hooks animation using react low level api", "body": "need work around bit animation react using low level api react ie react transition group want use provides life cycle hooks like componentwillenter callback componentwillleave callback struck problem use life cycle hooks herre mine code export default class app extends component componentwillleave callback consolelog component leaving componentwillenter callback consolelog component entering render const styles require appscss return life cycle hook function componentwillenter componentwillleave getting called please let know mistake making", "num": "6254", "d": "3/2016"}, {"title": "feature request innerhtml alternative", "body": "think many people agree api gross even though great reasoning behind issues beyond verbosity think could added static method react class issues verbose always dangerous ca nt mix safe unsafe html ca nt mix html react elements manually concat html strings better solution would provide way mark html safe js var react require react use marksafe method bypass reacts automatic html escaping var myreactel reactmarksafe still explicitly telling react trust html solves problems js mixing safe unsafe html reactmarksafe mixing html react elements reactmarksafe hello multiple innerhtml sets reactmarksafe reactmarksafe think api would much friendlier current html api probably would nt even require major version bump thoughts", "num": "6253", "d": "3/2016"}, {"title": "docs question refs callback vs string", "body": "reading docs clear difference defining ref callback vs string vs someone clarify please", "num": "6250", "d": "3/2016"}, {"title": "callback attribute behaving expected", "body": "seems callback nt behaving expected based docs docs say called component mounted times called called parameter however put one callback one callback called every whereas called component reffing nt even changing props misunderstanding something using react var value reactcreateclass componentdidmount consolelog mounted render return dummy var hello reactcreateclass getinitialstate return value componentdidmount setinterval gt thissetstate value thisstatevalue render function return thisstatevalue reactdomrender documentgetelementbyid container", "num": "6249", "d": "3/2016"}, {"title": "run least subset tests inbrowser releases", "body": "frankly scares little substantial ie text node bug made release candidate tests could fairly easily run saucelabs similar service actual browser verification", "num": "6248", "d": "3/2016"}, {"title": "seems skip text nodes ie", "body": "following results hello written jsfiddle realize changes way text nodes work update code use wanted check intended behavior since test written chrome", "num": "6246", "d": "3/2016"}, {"title": "gui automation testing react without datareactid", "body": "hi sorry open issue used leverage mechanism identify element gui automation testing framework like selenium using inlinestyle add several unique keys different components works well current version seems gon na removed react tried new rc version yet wondering react", "num": "6244", "d": "3/2016"}, {"title": "dangerouslysetinnerhtml error nesting html within react component", "body": "using library provides component called inputpassword returns input area need place block right beneath block animations work far made possible via following works like charm however console complains following message every keypress avoid error simply rewriting way trick", "num": "6241", "d": "3/2016"}, {"title": "pipe console logs specified logger", "body": "would great could pipe console errorwarnings specified logger treated logging application", "num": "6239", "d": "3/2016"}, {"title": "reactaddonscsstransitiongroup use require browser environment", "body": "reactdom library checks ran browser env uses window global get react reference reactaddonscsstransitiongroup library probably addons also supply dist folder important optimizing webpack development want set react library noparse alias react directly distreactminjs saves lot time however since libraries like csstransitiongroup require reactlib possible know reactdom addons truly divided separate packages future estimate reactaddonscsstransitiongroup reactdom javascript function f commonjs typeof exports object amp amp typeof module undefined moduleexports f require react requirejs else typeof define function amp amp defineamd define react f", "num": "6238", "d": "3/2016"}, {"title": "click event work correctly", "body": "", "num": "6237", "d": "3/2016"}, {"title": "enhance proptypes xor", "body": "hello tries react declare xor behavior props used component succeeded somehow post solution result lack simplicity could include react think think", "num": "6236", "d": "3/2016"}, {"title": "css unrepaint chrome rerendering", "body": "hi found issue chrome rerendering mobile desktop react component css properties repainted go inspector change property like fontsize color whatever see repaint ideas", "num": "6235", "d": "3/2016"}, {"title": "syntax error ca nt detected jsxtransformerjs keyword", "body": "think extends reactcomponent right syntax version react chrome browser version", "num": "6234", "d": "3/2016"}, {"title": "react dom tree root always node reference", "body": "built task execution pipeline utilizing react begun testing react noticed sudden getting invariant error react dom tree root always node reference comment line causing error everything works unit tests pass assume check important new internal updates made since able make work hacky bit code adds properties instance see believe issue able use server rendering code longer call without errors occurring way bypassing error using client renderer way calling server renderer", "num": "6232", "d": "3/2016"}, {"title": "onpaste div annoyances", "body": "certain react issue quite annoying help would greatly appreciate want able autofocus div onpaste register automatically ie immediately able press ctrlv trigger handlepaste handler component mounted however way able achieve combination hacks div needs tabindex set div needs contenteditable true throws really annoying warnings addition introducing blinking cursor also makes everything mutable terrible still need add dummy text source var hello reactcreateclass handlepaste function evt evtpreventdefault consolelog handling paste render function return text reactdomrender documentgetelementbyid container jsfiddle", "num": "6231", "d": "3/2016"}, {"title": "react reactaddonscsstransitiongroup reactaddonstransitiongroup warn", "body": "update react terminal show message build fix", "num": "6229", "d": "3/2016"}, {"title": "error trying run uiexplorer android", "body": "trying run uiexplore example app android steps followed cloned start package manager running device soon app launches get error stating unknown module named invariant required definitely nodemodulesfbjslib stack trace", "num": "6227", "d": "3/2016"}, {"title": "controlled inputs potential value", "body": "upgraded react today new warning appears cropped component referring indeed controlled component duration lifetime problem realized first render returns value populated text put input expect pretty common pattern controlled components otherwise loving release svg attributes disposal exciting", "num": "6222", "d": "3/2016"}, {"title": "react regression ontouchtap working", "body": "ontouchtap stops working react prepared reduction difference pane pane b version react used open touchscreen device devtools emulation see ontouchtap worked react ceases work react", "num": "6221", "d": "3/2016"}, {"title": "use semvar", "body": "react jumping developers ca nt make heads tails whether guys finally switched semantic versioning start using project please make clear first full version release many us consider react production usage able push past corporate overlords makes version later", "num": "6220", "d": "3/2016"}, {"title": "select option empty value regression", "body": "react emits empty string change react emits string value empty change react cuts option tag", "num": "6219", "d": "3/2016"}, {"title": "onrespondergrant called onresponderterminate", "body": "responder captures active responder seems called seems like wrong thing reasons behavior", "num": "6217", "d": "3/2016"}, {"title": "css property warnings nt contain contextorigin", "body": "version fiddle check console example providing css property result nan invalid value fontsize css style property aware error code idea component check would like something like nan invalid value fontsize style property check render method header happy try solve something want", "num": "6216", "d": "3/2016"}, {"title": "codemod svg attributes", "body": "previously whitelist supported svg attributes incomplete rather constantly playing catch svg attributes whitelist decided would better pass attributes directly example attribute deprecated favor attribute standard attribute svg elements would good codemod help svg users migrate rewrite known attributes including svg elements", "num": "6213", "d": "3/2016"}, {"title": "svg support focusable attribute", "body": "currently supply attribute svg shrinks seems happens key svgdompropertyconfigjs chance merge pr adds property list", "num": "6212", "d": "3/2016"}, {"title": "warning svg property classname deprecated", "body": "changed svg attribute logic pass svg attributes unchanged means example instead write reason change want maintain whitelist attributes since released rc saw report twitter saying also prints warning warning svg property deprecated use original attribute name svg tags instead way makes sense consistent us maintaining whitelist treat custom components hand svg elements seem special asking people use instead invites old discussion dom elements well would like doublecheck indeed change want make svg elements alternatively leave introducing special case alone", "num": "6211", "d": "3/2016"}, {"title": "rendertostring fails terminate comment node", "body": "run get foo sure bug thought friends gone also testing old project using much complex scenario returned following causing blank page wondering behavior server rendering changing thanks", "num": "6209", "d": "3/2016"}, {"title": "prebinding problematic binding causes performance issues", "body": "per article posted stackoverflow feel like use event handlers pattern could performance issues rerendering use method described article ca nt pass arguments single dry function create several functions handle different scenarios one answers post solution", "num": "6205", "d": "3/2016"}, {"title": "nested renders invalid html", "body": "nt really make sense nest instances happen unintentionally case react renders invalid html setup hmr ends causing invariant violations might worth adding warning case react version fixed due changes", "num": "6204", "d": "3/2016"}, {"title": "investigate travis failed build js files", "body": "parse error website important js files deleted manually restored maybe fluke looks like babel installed could nonissue branch cut switch babel wanted get books case somebody else notices knows", "num": "6203", "d": "3/2016"}, {"title": "jasmine broken", "body": "looks like broken fresh checkout locally results running running commands fresh checkout attempts run results failing unit tests", "num": "6198", "d": "3/2016"}, {"title": "svg textpath startoffset parameter ignored", "body": "see top image pure svg text displayed middle second image svg rendered react pictures show text location seems startoffset stripped react recognised within svg namespace textpath element startoffset valid attribute treated attributes react", "num": "6197", "d": "3/2016"}, {"title": "remove fbjs dependency", "body": "sure one linked reasons reactjs using fbjs core ca nt see way need coexist unless base code shared case become part reacjs shared library among", "num": "6196", "d": "3/2016"}, {"title": "shallow rendering stateless components vs stateful components different owner", "body": "related see test case reproduce reproduce issue rendered shallowrenderer outputs differ key see test output tap version compare statelesscomponent shallowrenderer getrenderoutput ok equivalent compare statefulcomponent shallowrenderer getrenderoutput ok equivalent tests pass fail", "num": "6194", "d": "3/2016"}, {"title": "react root index mathrandom causes invariant violations react compiled snapshot", "body": "using backend snapshots enabled optimize performance beneficial create snapshots improve server side rendering performance creating snapshot reactjs reactserverjs resulting server side component rendering errors follows logic causing error mathrandom function issues snapshots areas function used moment biggest problem server side rendering following location however also impact code reached mathrandom runtime js size reactroot id space generate random numbers react root ids collision events dom update system get confused future need way generate guids work smaller scale var globalmountpointmax mathpow var serverreactrootindex createreactrootindex function return mathceil mathrandom globalmountpointmax would possible fix server side heap snapshots generated without worry issues server could sort algorithm nt rely mathrandom used generate nodes root indexes etc os ubuntu react", "num": "6192", "d": "3/2016"}, {"title": "proposal get rid pooling synthetic event system", "body": "staring confusing mess synthetic event system today talking sebmarkbage longer confident need pooling system currently uses gcs gotten pretty good may experiencing diminishing returns point maybe losing benefits consider still support older browsers gcs nt benefit last several years worth innovations might premature probably worth investigating", "num": "6190", "d": "3/2016"}, {"title": "provide way defer checksum check initial mount", "body": "developed custom server side rendering solution allow asynchronous data loading everything done flush final html browser along asynchronously loaded data written dom also generating checksum way react server side rendering initial mount browser data needed app available data contract layer uses promises provide data request components nt know whether data available data layer components use following pseudocode loading data underneath hood model layer knows whether data available uses data otherwise makes ajax request data react render synchronous promises asynchronous way us take advantage reuseexistingmarkup logic within react tested return synchronous promise shimhack everything works expected know dangers way defer checksum checks somehow way render vdom memory trigger mounting logic nt want detached dom real dom nodes wanting react construct vdom mount tell thanks", "num": "6188", "d": "3/2016"}, {"title": "synthetic events proxy nt work normal synthetic events", "body": "blames cc kentcdodds sure yet affecting load events ones attached directly nodes eg image problem intercept operations subclasses like nt simplest repro still fail wo load listener", "num": "6187", "d": "3/2016"}, {"title": "document context param reactclass", "body": "param es documented particularly classes extending documentation bit scattered sure relevant places would think context react virtual dom terminology perhaps reusable components gt classes currently context nt mentioned reusable components authored component classes nt mentioned context", "num": "6186", "d": "3/2016"}, {"title": "title tab value rendering using react", "body": "hello react way show rendered element value title like var title title value output like value", "num": "6182", "d": "3/2016"}, {"title": "reconciliation chapter wrong description", "body": "reconciliation chapter wrong description guide react description react takes attributes new component calls component willdid receiveprops previous one react nt componentdidreceiveprops methond", "num": "6181", "d": "3/2016"}, {"title": "async thissetstate", "body": "since thissetstate callback would sweet could use await thissetstate", "num": "6179", "d": "3/2016"}, {"title": "setstate called", "body": "api call setstate triggered first consolelog statement works expected displays empty objects constructor function callback setstate never triggered state updated let sit like console errors strange part working another part app magically begins working idea missing something obvious componentdidmount thisinit init getdashboard function data consolelog thisstate thissetstate dashboard datadashboard learning datalearning items dataitems gt consolelog thisstate bind get result remove second callback simply place directly", "num": "6178", "d": "3/2016"}, {"title": "keyboard events behave expected mobile", "body": "onkeypress never triggered onkeydown eventkey always unidentified eventkeycode always eventcharcode always eventwhich always tested google nexus android google chrome", "num": "6176", "d": "3/2016"}, {"title": "request better documentation reactaddonsperf", "body": "imo insufficient supposed place api calls example code would great", "num": "6174", "d": "3/2016"}, {"title": "new core algorithm", "body": "going start thread give everyone notice work put core reconciliation algorithm need include features like incremental updates chunks maybe even two different versions tree time back forth yielding prerender support layout probably also includes new type context error boundaries catches updates make work existing tooling dev tools perf tools server rendering various renderers working fixing issues lifecycles core reconciliation parts like child reconciliation might want aware moving target might requests changes unrelated status quo related future work might require lot context commitment able contribute parts however fixing dom issues packaging builds diffing props styles react native etc probably unrelated work feel free send prs", "num": "6170", "d": "3/2016"}, {"title": "proposal remove reactdom dom component factories api release new module", "body": "api confused make sense greater scheme react api used rendering environments like react native gl api meant universal sense never going add reactios however factories nt actually implementation details rely actual dom details essentially map like ended universal react package reactdom would impact people nt currently use jsx held using function call syntax year transforms conveniences function syntax big deal many people especially coffeescript users strongly antijsx nt want break anybody would like migrate core react api proposal would new package exports exact set things currently makes available would require small changes code new package dependency otherwise identical change might look like js div span reactdom div span require reactsomeotherpackage", "num": "6169", "d": "3/2016"}, {"title": "nesting components", "body": "hello wanted add two another components one something like used like nt work required use reactcreatefactory message tried something like works fine however wanted add children like reference using nt work got message logged console looked like went react code find set false everything works correctly however guess problems approach future belive autobinding useful useful somewhere else outer component bug something wrong thank", "num": "6168", "d": "3/2016"}, {"title": "childrentypedisplayname impossible nodejs", "body": "import react component react import render reactdom class parent extends component render const children thispropschildren consolelog typeof childrentype function consolelog typeof childrentypedisplayname undefined return class child extends component render return children render", "num": "6167", "d": "3/2016"}, {"title": "proposals new reactproptypes", "body": "proptypesexactly took use case gitter chat justblackbird wanted property exactly maybe add comments use case instead proptypesrange common case need prop number range let say percent value inputs type range example use cases even another example", "num": "6166", "d": "3/2016"}, {"title": "svg renders children object object dom", "body": "see basic example assuming step new svg code need remove key consume react prop", "num": "6165", "d": "3/2016"}, {"title": "add detail missingkey warning", "body": "component must using array setting keys get warning problem render methods nt always simple sometimes quite hard find problematic array would awesome warning could enhanced provide information problematic dom something like even", "num": "6163", "d": "3/2016"}, {"title": "bug componentwillunmount overwritten extended inheritance chain", "body": "hi happen run odd issue regarding called top constructor leaves issue cleanups extended component sure bug dumb base components method called top level component one small line codepen reproduction issue jsx extending base component let composerfunction function component stuff class composercomponent extends component constructor super return composercomponent toplevel component constructor class mycomponent extends composerfunction reactcomponent method defined composercomponent never called uncomment composercomponent componentwillunmount called never componentwillunmount consolelog mycomponent componentwillunmount render return click unmount mycomponent check console logs render canvas mountunmount clicking see logs one log message shown class myapp extends reactcomponent constructor super thisstate show true handleshow thissetstate show thisstateshow render return remount reactrender documentgetelementbyid app console output clicking remounting js mycomponent componentwillunmount happend composercomponent componentwillunmount", "num": "6162", "d": "3/2016"}, {"title": "incorrect warning without handler render readonly field", "body": "use event handler accomplishes thing event handler humaninput purposes warning suppressed presence", "num": "6160", "d": "3/2016"}, {"title": "reactelement tests explicitly using jsx", "body": "reactelement tests beginning number instances jsx file example test note removed clarified jsx purged file adding tests file free jsx certain contexts others", "num": "6157", "d": "3/2016"}, {"title": "reactchildrenonly handle mapped children", "body": "let say component expects get single child works expected render since maps single child happily return child however using like throws gets array one element expecting also handle case return child array obviously write instead design miss something", "num": "6156", "d": "3/2016"}, {"title": "docs build bundle exec rake working babel update", "body": "commit babel updated change broke command necessary build examples docs since babel nt inbrowser transformation would replacement", "num": "6155", "d": "3/2016"}, {"title": "warn proptypes nt exist exist different case", "body": "js const foo onaction gt fooproptypes onaction proptypesfunction const bar gt warn currently nt warn properties nt exist set ie nt catch typos mostly legacy artifact many components nt define full set props eg spread used components also define prop even though use warning might much work initially however start small find missing properties corresponding properties different case suggest developer use instead essentially always bug technically possible property name two different case considered bad practice allow causes overhead test diffingrendering causes styleguide issues people pick style use also makes worth tooling searchreplace easily miss less commonly used variants react allows single case ideally custom components", "num": "6153", "d": "3/2016"}, {"title": "jest failed travis passed", "body": "calling separate issue nt get lost noise jest clearly failed travis says everything green discovered cc zpao spicyj", "num": "6150", "d": "2/2016"}, {"title": "svg elements missing", "body": "built run alpha still use svg elements like issue closure messages implied related tiedin issues fixed closed issues fixed passed reopen general svg issue ticket address", "num": "6146", "d": "2/2016"}, {"title": "way update react child components", "body": "parent element child component child elements showing anything componetwillrecieveprops componentdidupdate code working well change code like use first one code make wizard like content thanks advance", "num": "6145", "d": "2/2016"}, {"title": "componen render call lifecycle functions", "body": "project creates html layout based json file step components call lifecycle functions example component code basenode empty class rendering result console output mini project reproducible error project", "num": "6144", "d": "2/2016"}, {"title": "allow specifying new children append vs prepend reacttransitiongroup", "body": "reacttransitiongroup given dynamic array children eg first reacttransitiongroup holds exiting dom nodes see dom called see fine however transition entirely new array dom see instead see following fiddle seems next child mappings merged previous child mappings order probably fine cases would great could control order got version working locally adding prop type boolean defaults false happy turn pr perhaps another way achieve missing edit looking clear currently works actually intended behaviour looks comment like fact trying add new item existing ones object preserving intended source order bug implementation", "num": "6142", "d": "2/2016"}, {"title": "validation reactproptypesoneof compare values using objectis", "body": "check value proper also related", "num": "6131", "d": "2/2016"}, {"title": "implement reactproptypesexactly", "body": "took use case gitter chat justblackbird wanted property exactly use case instead implement make sense", "num": "6130", "d": "2/2016"}, {"title": "reactdom cost extra bytes", "body": "reactdom react good separation concerns however except special cases react applications almost always require reactdom well special cases obviously builds remove unnecessary dependency react officially serve single library includes reactdom single resource absolutely makes sense extra network request library bytes gzipped cost even multiplied since official cdns seem already redirection place moment filing issue request ends similar redirects reactdom requests place could requests mere bytes words taking overhead tcpip http add fact included part file due binary compression honestly quite surprised even decided separate libraries terms deployment", "num": "6128", "d": "2/2016"}, {"title": "spanish docs", "body": "hi noticed docs translated multiple languages right see italian japanese chinese korean would like contribute spanish version start", "num": "6126", "d": "2/2016"}, {"title": "use static get proptypes classes", "body": "regarding could something like jsx class thing extends component static get proptypes return name proptypesstringisrequired render return hello thispropsname", "num": "6125", "d": "2/2016"}, {"title": "elements visible user chrome hidpi displays", "body": "chrome hidpi displays elements exist dom react components properly displayed exist dom visible part dynamic list filtered try link recreation issue soon", "num": "6122", "d": "2/2016"}, {"title": "improve error message objects valid react child found object keys", "body": "error takes significant amount time debug reason offending object put tree information error message could provide keys would help know line code setting object child stack trace reference code render forced step thru lines code always reveal culprit least starting given line would speed process elimination keys help still enough determine precise cause code would help way detect condition debugger tried things like references", "num": "6120", "d": "2/2016"}, {"title": "requires value attribute property due inputs", "body": "landed still one final issue fix ironically initial reason problem managed property purpose requires attribute attribute correctly removed null discussed second comment seems right approach actually remove special property logic dompropertyoperations instead implement appropriate wrappers instead reactdominput etc repro original issue cc jimfb spicyj", "num": "6119", "d": "2/2016"}, {"title": "datatransfergetdata xxx handler ondragover available chrome", "body": "ca nt get data handler ondragover eventdatatransfergetdata", "num": "6118", "d": "2/2016"}, {"title": "demo page rendering properly", "body": "happening chrome safari os x", "num": "6117", "d": "2/2016"}, {"title": "way render subcomponents different dom roots would huge win", "body": "trying accomplish something could figure way would killer paradigm elegant reusable view components gotten habit rendering views like etc magic components actually render component injected via context means instance one fell swoop reskin view bootstrap modal panel etc jsx class modal extends component static childcontexttypes headerskin proptypesany titleskin proptypesany getchildcontext return headerskin modalheaderskin adds modalheader class titleskin modaltitleskin adds modaltitle class class panel extends component const modalview const panelview awesome highly recommend one pesky little thing ca nt cases animate transitions individually switching views created component provides special animate transitions one view another crossfades header pans body horizontally like typical drilldowns transitions work two views react component type different react ca nt keep component instance mounted wondering could welldesigned system rendering components like etc kind wormhole placeholder controlled ancestor component capability would possible drop view components type animate transitions subcomponents remember trying create wormhole less experienced react quickly became hacky never got working completely basically revolved around passing elements callback inside methods callback would put rendered element desired location ancestor seem remember problem things like refs though also needing use delay rendering wormholed component since triggering rendering kosher anyone tried similar things thoughts", "num": "6116", "d": "2/2016"}, {"title": "cloneelement vs createelement", "body": "anyone let know using cloneelement exist element instance createelement react element class one better term performance sometimes cloning something faster create new instance please let know thanks", "num": "6115", "d": "2/2016"}, {"title": "warn calling setstate getchildcontext", "body": "code causes maximum call stack getchildcontext thissetstate foo bar return foo thisstatefoo sort errors hard track stack trace deep react place give user invariant let know wrong", "num": "6114", "d": "2/2016"}, {"title": "button href updated component rerendered", "body": "using react seems reason react diffs dom buttons replaces text updating href attribute anchors correctly updating text href attribute code illustrates issue component cycles internal state renders link button move state next stage link works fine button href updated text var bug reactcreateclass", "num": "6111", "d": "2/2016"}, {"title": "html jsx compiler broken", "body": "displays referenceerror htmltojsx defined", "num": "6110", "d": "2/2016"}, {"title": "test swipe testutils", "body": "anyone knows simulate swipe using testutils event simulation", "num": "6108", "d": "2/2016"}, {"title": "navigator defined", "body": "running tests watch mode results eventual error navigator defined happening test run executionenvironmentcanusedom becomes true", "num": "6107", "d": "2/2016"}, {"title": "proposal bind component syntheticevent", "body": "common way send additional properties onclick handlers jsx thispropsitemsmap x gt x eslint suggests constant bind calls render good performance recommends pass data child onclick handler back parent handler jsx var list reactcreateclass render return thispropsitemsmap item gt var listitem reactcreateclass render return onclick thispropsonitemclick thispropsitemid however feel bit detrimental readability mention bit pain write something simple partial functions get used everywhere seemingly another programmer need go child definition could well another file find exactly child passing parameter list mention complex onclick handler may become another developer coming modifying code handle event properly well god help propagate amp modify params multiple layers example jsx function foo text return text class bar extends reactcomponent handleclick e consolelog ecomponentpropstext idea attach component event originated synthetic event would something like possiblefeasibleeven needed bind really bring much impact another better way without", "num": "6105", "d": "2/2016"}, {"title": "string proptype proptypesstring boolean proptype proptypesbool", "body": "one abbreviated match typeof", "num": "6103", "d": "2/2016"}, {"title": "way handle setstate changes output ssr", "body": "wondering best way render serverside without rendering client handle state changes mean get html server component state changing example server gets requests generate html server requires react component passing props react component renders server ajaxsocket query get info event sent response comes later react component changes state changing output hmtl generated ready latest state changes happening reactdomrendertostaticmarkup expected nt wait component finish state changes case wait data rerender achieve queries first passing data props way thanks", "num": "6102", "d": "2/2016"}, {"title": "testutils simulate nt set synthetic event type", "body": "undefined received handler nativeevent type matter needs added somewhere realize sustainable set possible fields simulated event type least makes sense verification getting right sort event", "num": "6100", "d": "2/2016"}, {"title": "warning iecompatibilitymode undefind", "body": "read snippet source reactdomjs pic show confused documentdocumentmode value undefined running react compatibility mode got errors like pic show without warning compatibilty mode may know meaning snippet whether add code deal case suffered", "num": "6098", "d": "2/2016"}, {"title": "shouldcomponentupdate vs componentshouldupdate", "body": "choose former latter matches bit better componentdidmount", "num": "6096", "d": "2/2016"}, {"title": "react addons make react code imported application bundle", "body": "stumbled problem days getting really famous error two copies react inside project nt know project decided bundle react one file application code another one happening even explicitly saying wanted react external browserify still getting inside application bundle two bundles react addons something like following entry point reacttransitiongroup statement telling browserify webpack treat react external still get react code inside application bundle forget treat addon external since last importing react inside npm package declared external browserifywebpack chance changing future like example exporting addon code completely outside react code imports react npm package concern react project developers using asking saw dozens questions addcomponentasrefto error people asking seem error described demo", "num": "6093", "d": "2/2016"}, {"title": "testutils search custom component within dom element", "body": "old issue invariant violation findallinrenderedtree instance must composite component know brought somehow declared ok keeps causing trouble tests thought give one shot problem search custom component within dom node made sample illustrate problem sample simplified version real problem facing datagrid component renders bunch row components turn render bunch cell components cell either render readonly text custom component passed via props custom editor want turn cell functional stateless component better performance problem tests given row find custom editor cell given index previously react v lt think possible find div rendered given cell within div find custom editor longer possible also since cell stateless functional component locate using test api really believe testing api incomplete right change guys could take another look", "num": "6088", "d": "2/2016"}, {"title": "onchange event input type number", "body": "seen altering value input type number element triggered thing case react pen illustrate case view console", "num": "6087", "d": "2/2016"}, {"title": "allow cite attribute blockquote element", "body": "currently supported element attribute since unknown react thrown away render cite url designates source document message information quoted attribute intended point information explaining context reference quote", "num": "6084", "d": "2/2016"}, {"title": "calling rendertostring twice second time nt fire lifecycle events", "body": "trying implement server side rendering reactredux components use start fetching data rest api use simple counter redux store see many fetching requests pending code server side javascript reactdomrendertostring rootele storesubscribe gt const state storegetstate statewait const html reactdomrendertostring rootele resrender html would work except fact second fires componentwillmount events increase wait counter results infinite loop ideally wondering way call wait seconds wait counter go zero edit temporary fix unsubscribing redux store reach wait javascript reactdomrendertostring rootele const unsubscribe storesubscribe gt const state storegetstate statewait unsubscribe const html reactdomrendertostring rootele ressend html though still bunch useless async calls second rendertostring calls componentwillmount methods", "num": "6083", "d": "2/2016"}, {"title": "add optout contenteditable warning", "body": "", "num": "6081", "d": "2/2016"}, {"title": "environment checks done", "body": "going source react npm install noticed blocks like calls warning feature ternary environment check wrapping environment conditional seems unnecessary already gone foundreplaced instances wanted see philosophical reason submitting pr thanks", "num": "6080", "d": "2/2016"}, {"title": "issue native change event select valuelink", "body": "hello trying make validator forms want make possible usage linkedstatemixin validator inputs validation use native events addeventlistener make following actions approximate algorithm event handlers change blur keyup code perform setstate method valid state chaged input tag works fine value changed expected select tag stateselectvalue changed one time problem think issue possible make things work wrong way jest tests share needed", "num": "6079", "d": "2/2016"}, {"title": "frameworks", "body": "facebook recommend good backend go react maybe something already login page features built", "num": "6078", "d": "2/2016"}, {"title": "html jsx compiler broken", "body": "hi today tried use html jsx compiler looks broken", "num": "6077", "d": "2/2016"}, {"title": "reactjs setstate bugmy fault", "body": "hello guys made exemple see exactly talking used context storeinput function app passes one component sorry short message nt best writing english skills easier show nt understand something please let know thanks", "num": "6075", "d": "2/2016"}, {"title": "thispropschildren rerender", "body": "example js class parent extends reactcomponent componentdidmount settimeout gt thisforceupdate render return thispropschildren class child extends reactcomponent render return thispropsrandom class app extends reactcomponent render return", "num": "6072", "d": "2/2016"}, {"title": "disabled radio button fires onchange event double click internet explorer", "body": "internet explorer disabled radio button fire onchange event double clicked checked state change onchange event fires nonetheless", "num": "6069", "d": "2/2016"}, {"title": "proposal componentwillprepareunmount continuecallback", "body": "edit discussion thread amended proposal working lot animations combination react lately lifecycle methods make transitions components walk park struggled get scenario unmounting pleasant experience end though come lifecycle method proposal could incredibly powerful would declared component delay actual unmount nothing happened component calls provided callback would resume actual unmounting component pending unmount state restored actual unmount takes place unmount canceled component treats change regular update fires etc addition called give chance react specifically event edge case mitigation ancestors override descendants ancestor component using unmount preparation unmounts descendant unmounts instantly without preparation unless ancestor also utilizes would give arbitrary time prepare would allow us gracefully perform animation components right really unmounted letting component specific code decide disappear example javascript var styles styling var tweenoptions tween options menu item fades scales mount fades scales unmount class menuitem extends reactcomponent componentwillmount thistweens opacity new tween tweenoptions scaley new tween tweenoptions thisanimateshow usage javascript class menu extends reactcomponent render var itemelements thispropsitemsmap item gt return return menuproptypes items reactproptypesarrayof reactproptypesshape id reactproptypesany label reactproptypesstring isrequired think", "num": "6067", "d": "2/2016"}, {"title": "dynamic proptypes", "body": "hi trying construct mixin takes devdefined component specification constructs proptypes defaults accordingly trying something like code work anyway something similar many thanks", "num": "6066", "d": "2/2016"}, {"title": "locate line number react makes warning like unknown dom property class mean classname", "body": "locate line number react makes warning like unknown dom property class mean classname hint code made warning", "num": "6062", "d": "2/2016"}, {"title": "seperate react reactdom original react", "body": "past import react react import hello componentjsx main function main reactrender documentgetelementbyid app import react react import hello componentjsx import reactdom reactdom main function main reactdomrender documentgetelementbyid app look like past easy import react post indicate react change", "num": "6061", "d": "2/2016"}, {"title": "try statements vs perf", "body": "profiling app noticed warnings app reallly slow code tryfinally even without catch reasons use", "num": "6057", "d": "2/2016"}, {"title": "performance unmounting amp mounting component vs hiding", "body": "preferred method performance benefit hiding node dom via css vs mounting unmounting example render function following code javascript const map thiscontext let selectedfeature let content infer selected feature info window mapinfowindow amp amp mapinfowindowgetselectedfeature selectedfeature mapinfowindowgetselectedfeature selectedfeature undefined content else content return content wondering preferred something like first snippet mounts unmounts node feel cleaner analysis component since know selectedfeature always defined nt need conditional code snippet analysis component change frequently application wondering one method preferred performant performance probably go first snippet feels cleaner im guaranteed value selectedfeature", "num": "6056", "d": "2/2016"}, {"title": "react unmount components upon event", "body": "event fired eg tabwindow closed page reloaded react unmount components prevent memory leaks", "num": "6055", "d": "2/2016"}, {"title": "elements altattribute default true used without value", "body": "consider following result fails load user displayed instead nothing fiddle alt attribute defines alternative text describing image users see displayed image url wrong image one supported formats image yet gt downloaded usage note omitting attribute indicates image key part content textual equivalent available setting attribute empty string indicates image key part content nonvisual browsers may omit rendering", "num": "6054", "d": "2/2016"}, {"title": "reactdom define react", "body": "reactrender works fine reactdomrender name version description main indexjs scripts test echo error test specified amp amp exit build webpack dev webpackdevserver devtool eval progress colors hot contentbase build author eason license isc dependencies babelcore babelloader react webpack webpackdevserver devdependencies babelpresetreact", "num": "6053", "d": "2/2016"}, {"title": "programmatically access warnings errors rendering", "body": "let say component proptypes want ensure contract broken test unfortunately nt throw error display warning statement like warning statement available thus able alter test thus ensuring contract maintained", "num": "6051", "d": "2/2016"}, {"title": "breaking change testing events", "body": "test passing context selectchange function var eventstub var rendered assertion last line failing seems related change perhaps cleaning error objects next tick mean time work around", "num": "6050", "d": "2/2016"}, {"title": "oncancel event", "body": "nt see event list supported events would possible add list used dialog element already available chrome", "num": "6049", "d": "2/2016"}, {"title": "following npm getting started guide incomplete results errors", "body": "decided try react today began following getting started guide using react npm unfortunately unable get example running first problem encountered missing html file scavenged lower page adapted however loaded file html page received following error browser console step missed somewhere", "num": "6047", "d": "2/2016"}, {"title": "property key allowed", "body": "heads anybody going debugging hell fancy component eg think smart passing prop named component set know one react complains needing multiple elements level undefined within component key ref reserved words allowed passed props renaming prop resolves issue bad react nt warn many things would great would reflected prominently docs reserved names similar", "num": "6045", "d": "2/2016"}, {"title": "failed execute write document", "body": "try something like react example append embedcode render return examplejs like raise error failed execute write document insert script tag like react", "num": "6043", "d": "2/2016"}, {"title": "react lenient returning jsx expression render", "body": "random hello react fiddle plucked google var hello reactcreateclass render function return hello thispropsname reactdomrender documentgetelementbyid container reference suppose formattingstylistic purposes want format inline return expression like var hello reactcreateclass render function return hello thispropsname reactdomrender documentgetelementbyid container react throws invariant violation put actual expression new line instead line return statement reference react made lenient example allowed react version referenced fiddles", "num": "6042", "d": "2/2016"}, {"title": "async routes cause serverside checksum invalid error", "body": "note may issue react router instead please inform notify using webpack reactrouter react got error using reactrouter async routes serverside rendering routescjsx coffee routes path game getcomponent location cb gt requireensure require gt cb null require viewsgame change longer get error coffee routes path game getcomponent location cb gt cb null require viewsgame bug something else", "num": "6041", "d": "2/2016"}, {"title": "dangerouslysetinnerhtml warn markup invalid", "body": "expects valid sanitized markup library like may able guarantee markup sanitized spot many obvious errors indication markup unsanitized things like instead per also good thing warn catch subtle ssr markup checksum issues markup nt validate warn tricky part nt want markup validation library required production build", "num": "6040", "d": "2/2016"}, {"title": "use mixed arrays strings warning", "body": "js var hello reactcreateclass render function return thispropsname reactrender working gt documentbody warning jsfiddle", "num": "6038", "d": "2/2016"}, {"title": "libraries version jquery marked old tutorial", "body": "seeing indexhtml found libraries jquery marked version old jquery latest version version indexhtml marked latest version version indexhtml nt update libraries", "num": "6036", "d": "2/2016"}, {"title": "dynamic pure components reinitialized despite key attribute using jsx", "body": "hello using pure components generating dynamically registers change react diffing algorithm despite key attribute therefore components state ex focus resets rerender example expect weird way using components example function internal work assign state event handlers form components returns bound components array additional props provided assigned using destructuring case functions return input controls stateevent handling work bit repetitive depending number fields lot trying new ways extracting components used elements diffed get reinstantiated time lose focus key stroke alternatively write view portion follows everything works fine since components functions bit odd looking especially considering old deprecated component syntax suspect issue something changed way appreciate help thanks", "num": "6035", "d": "2/2016"}, {"title": "extending reactdom", "body": "would like create renderer extends reactdom overrides parts goal able keep reactdom swap parts ultimately since reactdom buried inside react created script downloads reactdom files created jscodeshift transform rewrites imports files like customize fun seems react bring significant changes regarding reactdom react separation work around end custom try render something custom get error since injection called custom injection possible missing something suspect global tying things somehow ca nt figure created repo little experiment", "num": "6033", "d": "2/2016"}, {"title": "profile attribute supported", "body": "profile missing meanwhile profile attributes standards kind blatant copy hey worked also anticipating need glance mozilla developer site one day closed wo nt issue anymore", "num": "6029", "d": "2/2016"}, {"title": "render reconciliation causes npe", "body": "view controlled select onchange event fires resulting function actually changes view removing select get error reproduced react also noticed nt get error older version line throws reactdomselect javascript function handlechange event var props thiscurrentelementprops wrapper state null var returnvalue linkedvalueutilsexecuteonchange props event thiswrapperstatependingupdate true wrapperstate null executeonchange happens reactupdatesasap updateoptionsifpendingupdateandmounted return returnvalue able see fix similar situation nt know similar check could applied maybe nt remove select result onchange event", "num": "6027", "d": "2/2016"}, {"title": "optional href property removed render set empty", "body": "optional specific meaning set without value ie vs former link back current uri latter placeholder link especially irksome react app unexpectedly set easily change meant full page reload fiddle demoing bug see rendered instead", "num": "6026", "d": "2/2016"}, {"title": "getting started docs ambiguous", "body": "working user new would run following nt work webpack throws error correct webpack invocation know note default react development mode slower advised production use react production mode set environment variable nodeenv production using envify webpack defineplugin example new webpackdefineplugin processenv content go filename", "num": "6025", "d": "2/2016"}, {"title": "reactjs app wo nt run android webview", "body": "getting following error upon loading app runs well modern browsers pcmac ios uiwebview mobile safari android also chrome android gt consulting table shows android supports well run reactjs applications fine ideas", "num": "6024", "d": "2/2016"}, {"title": "setters preserved reactcreateclass", "body": "setters ignored work class syntax would nt possible create component class object given preserve settersgetters", "num": "6023", "d": "2/2016"}, {"title": "respondereventplugin assumes touch events", "body": "based comment implemented dragndrop browser respondereventplugin worked like charm upgrading breaks plugin problem assumption plugin used touch events besides plugin referencing touch events throughout code breaking line expects properties enabling also breaks reactbrowsereventemittertest multiple tests break adding respondereventplugin commenting call appears fix plugin like continue using plugin concerned longer intended used use case expected reactnative configurationconcept missing nt tested releases believe case", "num": "6021", "d": "2/2016"}, {"title": "porting reactperf new devtools api", "body": "concerns heard order importance gated react native wants way enable production builds pass accumulated info systrace often broken refactoring appears generic depends specific module method names obscure bugs hard fix coupling visualization poor working new devtools api align mistaken please let know started introducing new set apis firstclass instrumentation makes sense transition new api fix issues talked people react native understand far asap want remove function wrapping completely addresses somewhat mitigates overhead fixing want create devtool like eg addresses unlike gated addresses methods profiling functions addresses granular methods specific parts react lifecycle needed addresses calls gated runtime flag eg addresses future rather reach profiled functions accept arbitrary arguments addresses would separate generating usermeaningful data accumulation would easy test addresses bonus use noop decorator babel plugin insert calls mitigates pain potential breakage addressing bonus rather api provide component interprets data displays overlay web native addresses decorator babel plugin part one sure would involve complicating tooling hand allow adding performance measurement functions codebase without risking early missing calls similar breakage refactorings first actionable step opinion would remove function wrapping gate existing replace explicit calls gated wherever used would still pass function argument rewrite everything would give rn team freedom unlock future refactorings also combine introducing decorator babel transform way want go avoid adding manual calls place make sense missed", "num": "6015", "d": "2/2016"}, {"title": "input rerender happen expected value null", "body": "building app series singlecharacter text inputs auto advances input app syncs data servers input one list characters null minimal demo illustrate happening const clearedvalue null const component reactcreatecomponent getinitialstate function return myinputvalue clearedvalue validateinput function value return value valuematch g getstorablevalue function value value return clearedvalue return value onchange function e consolelog onchange event fired thisvalidateinput etargetvalue consolelog onchange event accepted thissetstate myinputvalue thisgetstorablevalue etargetvalue else consolelog onchange event rejected epreventdefault render function return notice clear field type anything valid onchange fired suspect something culprit since tells react component nt controlled nt know rerender input correct state changing empty string corrects issue issue really nt want convert nulls empty strings since data server nulls intentionally obviously nothing stopping getinputvalue function thisstatemyinputvalue null return return thisstatemyinputvalue return workarounds discussion tell input element controlled avoiding constant lt null conversion would ideal situation since lot moving parts app may times per render definitely edge case multicharacter input validation second character would kick validation would good", "num": "6014", "d": "2/2016"}, {"title": "closer control reconciliation", "body": "running use case nt seem supported react using redux reactredux example problem could potentially extend component takes children trying build set components independent one another point included page script tags component stateless component container connects redux store const widget data update gt data data const widgetcontainer connect state gt data statedata dispatch gt update val gt dispatch type update payload val widget redux store present welldefined location want render component way store present want render way written helper functions generic way initially render component target dom node store becomes present fires event helper functions listening render container component wrapped target dom node works great dom state however want allow user interact widget store present instance example able enter text dom state persist rendered place currently possible due react reconciliation algorithm two components different react attempt reconcile subtrees relevant code causes existing node thrown away along anything user may typed way tell react want two components reconciled foreknowledge generate identical dom structure want know workaround issue nt valid enough use case consider adding way force react reconcile two elements different one potential solution may infeasible due unfamiliarity codebase consider two elements different identical candidates reconciliation", "num": "6013", "d": "2/2016"}, {"title": "svg clippath wrong namespace", "body": "hi svgclippath created dynamically ie via button click wrong namespace details press button test use react latest react thought work thanks pull request see added works ok", "num": "6012", "d": "2/2016"}, {"title": "link expired", "body": "hi link got expired update", "num": "6010", "d": "2/2016"}, {"title": "remove event listener used bind syntax", "body": "trying communicate iframe postmessage api issue eventlisteners management stated docs react every method automatically bound component instance except using class syntax problem done event ca nt remove listener ca nt keep reference handler could try encapsulate function encapsulating function would also need binding could try super constructor sure good idea plus nt know args need quite sure missing important point help would much appreciated export default class somecomponent extends component handleiframedata event stuff need set component context get props example componentdidmount windowaddeventlistener message thishandleiframedatabind false componentwillunmount wo nt work thishandleiframedatabind thishandleiframedata windowremoveeventlistener message thishandleiframedata false render return thanks anyway", "num": "6007", "d": "2/2016"}, {"title": "reactcloneelement onclick work", "body": "hi im trying add onclick handler already existing element example jsx render let element return reactcloneelement element onclick function consolelog test result nothing happens click element setting directly works", "num": "6006", "d": "2/2016"}, {"title": "defer execution unmount life cycle hooks", "body": "unmounting take significant unbounded time traverse tree call lifecycles smallest problem incremental reconciliation mount arbitrary location gt update boundary gt mount boundary gt unmount theory remove node tree first call lifecycles later idle time means refs wo nt access nodes document anymore reading information would longer work problem space might also related animations exit animations want componentnode exist tree long needs finish animation offscreen asynchronously get deleted tree eventually get cleaned calling unmount lifecycles", "num": "6003", "d": "2/2016"}, {"title": "fails called spec created", "body": "hi react team right following code fails fails function called references created nt regular prototype methods like patch fixes issue let know based explanation agree worth fixing submit pr motivation fixing experimenting building react bindings language called skew skew compiles javascript among languages maptype skew compiles instances skew code translates roughly sensible need map inherit skew like able something like regular function defined react library fails passes skew map javascript instead something like wrap input something inherits passing real works means api wo nt mirror react directly means harder people learn", "num": "6002", "d": "2/2016"}, {"title": "eventpersist present running tests", "body": "nt seem give event function result event handler debouncedthrottled becomes null actual handler called", "num": "5998", "d": "2/2016"}, {"title": "console shows error uncaught invariant violation", "body": "making app based boilerplate ref gist app building fine console shows error uncaught invariant violation element type invalid expected string builtin components classfunction composite components got undefined", "num": "5995", "d": "2/2016"}, {"title": "license offline use", "body": "hi react utilized offline commercial product free needs done license file cryptic understand xdvarpunen", "num": "5993", "d": "2/2016"}, {"title": "visit official site writing language default english", "body": "visit link gettingstarted english page read page writing language", "num": "5991", "d": "2/2016"}, {"title": "updates queued properly using unstablerendersubtreeintocontainer", "body": "cursor jump end text field editing text probably nt need fixed milestone get fixed point cc jquense", "num": "5990", "d": "2/2016"}, {"title": "pull request htmltojsx", "body": "hi put pull request htmltojsx reactmagic fix improperrenderingofbrackets issue days ago wondering typical timeline reviewing cheers", "num": "5985", "d": "2/2016"}, {"title": "chrome dev tools warning reactdomcomponent access props dom node", "body": "created component uses ref attribute read width height dom node looks like javascript import styles makewrappercss import react component react import makeheader makeheadermakeheader import makebarchart makebarchartmakebarchart export default class makewrapper extends component render return resize width height offsettop offsetleft thispropsonresizemakewrapper width height offsettop offsetleft everything looks good open chrome dev tools look properties div element get following warning console warning reactdomcomponent access props dom node instead recreate props render originally read dom propertiesattributes directly node eg thisrefsboxclassname dom node rendered message actually shown twice console also noticed two different properties exists might causing error show twice chrome looping dom properties something wrong code side effect using chrome dev tools", "num": "5984", "d": "2/2016"}, {"title": "error boundary catch errors componentwillunmount", "body": "", "num": "5983", "d": "2/2016"}, {"title": "finddom audio tag nt work", "body": "assuming audio tag correctly playing audio file currenttime seconds run following code output console replace first line everything works expected beginning thought deep copy issue would nt explain consolelog inside try", "num": "5981", "d": "2/2016"}, {"title": "error boundaries attempting unmount notyetmounted siblings", "body": "shows failing component composite sibling within error boundary yet rendered", "num": "5980", "d": "2/2016"}, {"title": "componentdidmount called visual rendered", "body": "trying get visual attributes width precise component rendered css applied trying width still sure wrong output click header button reroute back page ie trigger update called proper width missing something bug thanks lots folks javascript import react component react export default class ribbonheader extends component componentdidmount consolelog component mount ribbon width thisrefsribbonsvgwidthanimvalvalue thispaintinsvg shouldcomponentupdate consolelog component update never called return true componentdidupdate automatically called generate routing event updates consolelog component update ribbon width thisrefsribbonsvgwidthanimvalvalue width good thispaintinsvg paintinsvg const refribbon thisrefsribbonsvg dosomesvgmagicthatdependsonthewidth refribbon render consolelog rendering edit adding timeout componentdidmount job although probably normal", "num": "5979", "d": "2/2016"}, {"title": "defined", "body": "class trying get request componentdidmount function however initially load page component get following error followed example xxx changed perhaps using something improperly class nativeapp extends reactcomponent state banners loadbanners thisserverrequest get apibanners function res thissetstate res bind componentdidmount thisloadbanners render return manually load banners export default nativeapp", "num": "5975", "d": "2/2016"}, {"title": "react reactdom split proposal", "body": "following bit planning understand reactdom split completely react shared global owner referenced sebmarkbage gist relevant part owner owner concept relies able track shared global state flag time creating elements means create dependency single shared global stateful module react components also means effectively react render function truly pure function since creating element depends global state idempotent means ca nt reliably use things like memoized functions kind functional goodies react native currently appears migration path following two files reactlibreactnativejs reactlibreactdomnativejs solutions need way share module rn get free understand works correctly future npm solution reactdom apply rn react reactdom npm distro shared npm module accomplish shared dependency react reactdom browser distro likely need similar hack current first two pretty straightforward create new package purely file split published never changed add react reactdom packagejson files publish fin carry browser distro need custom build files current idea react browser distro gets hook reactdom hook onto majority purely chore work curious would provide attack vector leaking internal state current reactdom hook leak internals far aware although may important since reactdevtoolshook also allows visitor react page get internal state continuing work proposal make sense alternative solutions team considered", "num": "5974", "d": "2/2016"}, {"title": "touch events android", "body": "hello touch events android nt working using react according issue fixed still working ideas", "num": "5972", "d": "2/2016"}, {"title": "docs run demo code get false true docs", "body": "doc code test comes false somebody help", "num": "5971", "d": "2/2016"}, {"title": "include sri hashes fbme links download page", "body": "need little bit hard code since actually want generate release time could least manually generate hashes need docs display sri", "num": "5970", "d": "2/2016"}, {"title": "uiexplorer crash", "body": "execute gradlew examples uiexplorer android app installdebug open uiexplorer app crash crash log reacttxt", "num": "5969", "d": "2/2016"}, {"title": "typeerror set property initialvalue null reactdomselectpostupdatewrapper", "body": "issue using latest running issue error select navigating away one place another place causing select throw even though unmounted error reports happening setup currently integrating app pieces render empty container renders components render appropriate dom containers seemingly error narrowed calling occurs removed error stops happening realize mounting existing node react root cause unmount mount correct things repro attempted reproduce luck moment even though narrowed call click originating different reactdomrender container sure eventing thing clicks different reactdom roots applying everywhere else stack trace code code causing issue looks like import react component proptypes react import render unmountcomponentatnode reactdom import provider reactredux import applicationsrenderer applications let getcontainer gt documentgetelementbyid dashboardbody export default class dashboardrenderer extends component constructor props context super props context thisrenderintocontainer thisrenderintocontainerbind componentdidmount thisrenderintocontainer renderintocontainer let store container container thispropsroute let router thiscontext thissection getcontainer thissection unmountcomponentatnode thissection render thissection componentdidupdate prevprops let container thispropsroute let container prevcontainer prevpropsroute componentwillunmount unmountcomponentatnode thissection render return null dashboardrenderercontexttypes router proptypesobject", "num": "5968", "d": "2/2016"}, {"title": "", "body": "looking tests stating nt get fired click button disabled nt seem shown anywhere documentation slightly tangental parent element somebody clicks button fired parent element", "num": "5967", "d": "2/2016"}, {"title": "attributes set ssr used", "body": "maybe nt care attributes currently set ssr used sure worse old behavior different initial render compared subsequent renders could tricky one people debug hit since depends subtle difference ssr vs csr imagine people frequently fail test components ssr difference likely catch surprise", "num": "5966", "d": "2/2016"}, {"title": "bug jsx allow tag use property", "body": "node ver babel deps babelcli babelcore babeleslint babelloader babelpluginaddmoduleexports babelpolyfill babelpresetreact babelpresetreacthmre seems cause custom html tag", "num": "5964", "d": "2/2016"}, {"title": "validate attributes element", "body": "mistakenly used attribute style element html label required color red soon found attribute removed running code attribute still element realize attribute standard attribute elements like etc think allowed render component mount phase like arbitrary names xyz else cause people confusion notice solves problem flag rendered component mount removed correctly inconsistent attributes selectchecked rendered react validate attributes element like", "num": "5963", "d": "2/2016"}, {"title": "jquerybootstrap example uses exist", "body": "introduced", "num": "5959", "d": "2/2016"}, {"title": "enhancement build way generate function sets state variable", "body": "created mixin morning handle creating functions call setstate component mounted would nice built react component since think pretty common pattern handle ui events setting state variable", "num": "5958", "d": "2/2016"}, {"title": "bug resolving default props htmlallcollection fix", "body": "introduction found bug resolving default props component props property htmlallcollection react ignores value uses default value take collection look end topic simple function test internet explorer version lower simple use case chromefirefoxmodern ie yeah know returns htmlallcolection documentall old ie returns true htmlallcollection weird collection source bug fix release file reactjs line code bug typeof props propname undefined code fix props propname undefined btw undefined faster typeof undefined chrome ie reproduction open firefox chrome higher fiddle raw workaround change", "num": "5957", "d": "2/2016"}, {"title": "nesting components fails latest stable react typescript amdrequirejs", "body": "currently working example project uses latest react typescript using tsx files together amd module loading system requirejs buildingrunningdebugging visual studio ce however try nest react components parent react component getting exceptions requirejs running app child react components working fine individually problem really seems come nesting run project using older version react using amd modules app works fine also nesting react components made test repository public hellopenguin old project using react using amd new project latest react using amd remove lines applicationviewtsx see app runs fine individual react components also work fine must something overlooking ca nt seem pin anyone know could wrong fix problem thanks", "num": "5956", "d": "2/2016"}, {"title": "add new without namespace", "body": "list elements push new elements added without namespace ideas", "num": "5954", "d": "2/2016"}, {"title": "controlled inputs update order causing cursor jump", "body": "subtle change introduced dominput component switched current lighter weight wrappers order ensure things like nt happen inputs defer update updates flushed controlled gives incoming props chance make component inadvertently resets value last essentially old set dom node new chance pushed input props causes cursor jump end originally seen addressed however recent changes removed call directly difference enqueues update queue whereas updatewrapper leads cases input actually updates parents finished updating related issue however cause nothing actually async relevant userland implementations uncontrolled components create situations parent component input also deferring update tried bit put together pr address nt know easy fix long domcomponent using something like test case demonstrating bug expected set manually set actual set js var wrapper reactcreateclass eventuallyupdate e thisvalue etargetvalue render return var inst reacttestutilsrenderintodocument var inputnode reactdomfinddomnode instrefsinput var setcount inputnodevalue bar var desc objectgetownpropertydescriptor inputnodeconstructorprototype value objectdefineproperty inputnode value get function return descgetcall set function val setcount descsetcall val reacttestutilssimulatechange input target value bar expect setcount tobe", "num": "5952", "d": "2/2016"}, {"title": "declaratively specificy select position controlled input elements", "body": "working component controlled element component handler manipulates user input setting value back prop result manipulation caret position restored react may different user typing control situation keep track caret position component state set back desired position component updates componentdidupdate const selectionstart selectionend thisstate const input thisrefs api desire however would like pretty simple implement abstraction seems like something actually missing react think goes along well idea react api declaratively controlling ui components state", "num": "5951", "d": "1/2016"}, {"title": "docs make stateless functions prominent", "body": "way bottom reusable components page section stateless functions section note ideal world components would stateless functions future also able make performance optimizations specific components avoiding unnecessary checks memory allocations recommended pattern possible emphasis mine indeed recommended pattern made much much prominent example using section homepage component visitor first example react component function qualifies stateless function component bonus much much simpler postpones introduction later examples go indepth let start teaching people right patterns", "num": "5949", "d": "1/2016"}, {"title": "node value setter called many times", "body": "background see good first bug", "num": "5944", "d": "1/2016"}, {"title": "cascading props", "body": "using react came strange idea support kind cascading props parent component child component call parent component following prop would render going would propse use csslike traversal selectors props ie gt firstchild know looks much like kind mad antipattern would like hear besides obvious performance isssues main reason behind lot times change little bit insides component one particular place implement new methodsprops declare parent component anyways", "num": "5943", "d": "1/2016"}, {"title": "react expose prop types validator", "body": "potential feature could react expose method like", "num": "5942", "d": "1/2016"}, {"title": "provide way register lastchance exception handler", "body": "react provide way us register lastchance exception handler errors thrown react event handlers lastchance exception handlers registered eventhandling frameworks proved extremely useful making us aware unexpected error conditions", "num": "5941", "d": "1/2016"}, {"title": "warn reading event returned pool", "body": "title assumption based experience upgrading example seeing js const app reactcreateclass getinitialstate return clicked handleclick e consolelog etarget callback null etarget null etarget null thissetstate clicked thisstateclicked gt consolelog etarget callback null etarget null etarget null render return reactdomrender documentgetelementbyid root jsbin demonstrates behavior jsbin notice console log inside callback logging evaluates app passing handler utilizes update breaks situation may may bug may necessary avoiding memory leak case support request smile handle passing another callback want event references things like", "num": "5939", "d": "1/2016"}, {"title": "rendering form nt work safari", "body": "", "num": "5938", "d": "1/2016"}, {"title": "wrong highlight code react docs", "body": "example", "num": "5937", "d": "1/2016"}, {"title": "eslint related error", "body": "npm install npm err found npm err npm err eslintpluginreactinternal npm registry npm err bug author publish npm err specified dependency reactbuild installed eslint eslintpluginreact locally well globally yet error persists", "num": "5936", "d": "1/2016"}, {"title": "modularity", "body": "work going make react bit modular laugh suggesting react based thousands microlibs things never used nt need server side rendering use react non seo critical projects also absolutely convinced socalled performance benefits nt use node begin support older browsers fast moving target people drop support ie lt completely nowadays especially rich apps would complete bother anyway synthetic events patch old browsers quirks proptypes runtime type checks impossible remove production nowadays use typescript flow quicker compilation feedback without size overhead thoughts meant critic wondering design direction react know might remove dozens kbytes grand scheme things hugely important like think every little detail count", "num": "5935", "d": "1/2016"}, {"title": "bug value never updated unit test", "body": "say component renders try unit test using component gets updated value attribute dom nt get update see", "num": "5934", "d": "1/2016"}, {"title": "reactcloneelement handles props differently reactcreateelement", "body": "sure expected caught earlier without clone function mycomponent mycomponentdefaultprops foo foo let element reactcreateelement mycomponent foo undefined consolelog elementpropsfoo foo clone function mycomponent mycomponentdefaultprops foo foo let element reactcreateelement mycomponent element reactcloneelement element foo undefined consolelog elementpropsfoo undefined", "num": "5929", "d": "1/2016"}, {"title": "invariant violation element type invalid expected string builtin components classfunction composite components got object", "body": "simple react component fail instant react component exmaplejs js import react component react import exampleactions actionsexampleactions import styles cssappcss class example extends component render const title dispatch thisprops const actions bindactioncreators exampleactions dispatch return exampletestjs js jestdontmock example import react react import reactdom reactdom import renderintodocument simulate findrendereddomcomponentwithtag reactaddonstestutils const example require example describe example gt rendering gt var example renderintodocument jest output", "num": "5927", "d": "1/2016"}, {"title": "classname class inconsistency", "body": "standard elements custom elements diverging api case attribute consistent aid developer use would suggest customelement naming better solution keywords obviously mitigated fact used object properties", "num": "5926", "d": "1/2016"}, {"title": "save flag someplace checksum invalid", "body": "tests insure prerendering client rendering right real cludge override consolewarn watch see checksum warnings output instead adding datachecksuminvalid outer element", "num": "5924", "d": "1/2016"}, {"title": "syntheticevents leaking dom nodes", "body": "nulled event put events instance pool reuse unmounting instance pool events remains nodes pointed target property become detached nodes example click header times generate events seconds component removed via open chrome dev tools take heap snapshot notice detached nodes held syntheticevents screenshot attached", "num": "5921", "d": "1/2016"}, {"title": "getting called google chrome", "body": "getting errors console attempting render components errors get thrown methods run legacy ie browsers correct issue google chrome mac", "num": "5920", "d": "1/2016"}, {"title": "add reactdefaultperfanalysisjs export reactaddonsperf", "body": "would like submit pr adding export source located", "num": "5919", "d": "1/2016"}, {"title": "reactdom npm install production error", "body": "specific reason need bundle reactdom browserify however faced problem installing dependencies check steps download reactdom file npm registry unpack go reactdom folder run results error bash reactdom dmitri npm install production npm err darwin npm err argv node usrlocalbinnpm install production npm err node npm err npm npm err read property react undefined npm err npm err need help may report error npm err npm err please include following file support request npm err usersdmitrigithubbrowserifycdntestnodemodulesreactdomnpmdebuglog interesting fact run without flag gets peer dependencies without errors though issue peer deps returns weird error maybe related reactdom packaging ask need check url service", "num": "5918", "d": "1/2016"}, {"title": "optional required values proptypesshape", "body": "sure already good way would nice able instead latter get quite big multiple optional values", "num": "5916", "d": "1/2016"}, {"title": "reactcsstransitiongroup add transition lifecycle hooks", "body": "using reactcsstransitiongroup implement simple nested expandcollapse ui since animating element height ca nt animate auto value css need get auto height dom set explicit height nesting child expands collapses need communicate height change child ancestors also using iscroll library implement scrolling height transition completes need refresh iscroll component easy implement css transitions reactcsstransitiongroup require reactcsstransitiongroup notify child component transitions begin end much way lowlevel reacttransitiongroup calls lifecycle hooks child propose reactcsstransitiongroup call following functions child component animationtype appear enter leave componentwilltransition called first css transition class eg exampleenter exampleleave added element componentdidtransition called css transition classes removed element implemented simple code changes reactcsstransitiongroupchildjs please see pull request feedback welcome", "num": "5914", "d": "1/2016"}, {"title": "escaped equal server side id rendering", "body": "hello got strange problem server side rendering react add slash make checksum invalid", "num": "5913", "d": "1/2016"}, {"title": "htmltojsx convert curly brackets", "body": "hi experiencing problem htmltojsx converter converter officially displayed htmlcode compiled following jsxcode jsx jsx code fails following error javascript uncaught syntaxerror embedded unexpected token var hello reactcreateclass render function return test anyone know solution problem best regards jan jaap", "num": "5910", "d": "1/2016"}, {"title": "question update parentless component outside", "body": "copy stackoverflow question properly update component nt parent found two ways first method update component changing component state var hello reactcreateclass render function thisstate return null return hello thisstatename var component reactdomrender documentgetelementbyid container componentsetstate name world settimeout function componentsetstate name stackoverflow second method update component method var hello reactcreateclass render function return hello thispropsname reactdomrender documentgetelementbyid container settimeout function reactdomrender documentgetelementbyid container method correct maybe third correct way know flux etc want know simplest way simplest example", "num": "5906", "d": "1/2016"}, {"title": "render every element different render function", "body": "need element html need datareactid nt except render two element different function eg rendertostaticmarkup rendertostring combine element could include many element render split combine could cause mistake element much could set attribute compoment new pure html compoment javascript class defaultlayout extends reactpurehtmlcomponent render return export default defaultlayout write render function auto swap render function render elements graceful solution", "num": "5902", "d": "1/2016"}, {"title": "testutils render stateless function components", "body": "using react babel react test utils addon jasmine testing framework choice seems though stateless function component tested testutilsrenderintocomponent testutilscreaterenderer render either returns null rendering function component test stateless function component yield result component test error expected null truthy", "num": "5901", "d": "1/2016"}, {"title": "reactcsstransitiongroup inline styles", "body": "possible use react inline styles reactcsstransitiongroup tried nt seem work react v render", "num": "5898", "d": "1/2016"}, {"title": "bound function reused across multiple instance react component", "body": "hi met problem event handler binding react class syntax javascript render parent component render const trades contracts thisprops const allid objectkeys trades return allidmap id gt return child component class class tradepanel extends component e const id thisprops problem happens create instance child component incorrectly bounded instance props pass properly problems event handlers render called binding reevaluate parent component rerender destroy old children reconstruct new one regards", "num": "5897", "d": "1/2016"}, {"title": "legal licence ghpages site facebook opensource", "body": "willing use facebook gihubio templates mit licensed project ghpages site licence main repository asked twitter luck far cc vjeux", "num": "5896", "d": "1/2016"}, {"title": "getinitialstate reactcreateclass warning", "body": "hi migrated react encounter warning switching reactminjs sample component const testcomponent reactcreateclass getinitialstate return number render return hello world export default testcomponent using reactminjs receive using reactjs warning tried refactor everything state becomes null thanks", "num": "5893", "d": "1/2016"}, {"title": "react support svg attributes", "body": "svg attributes support lacking noticed mask filter missing mozilla list svg core attributes", "num": "5889", "d": "1/2016"}, {"title": "props undefined getinitialstate", "body": "first know antipattern please forgive something like recently noticed first render eventually get populated available next render however ever called always going fixed issue setting however wonder bug nt always available", "num": "5888", "d": "1/2016"}, {"title": "react rendertostaticmarkup customcomponent", "body": "hi rendertostaticmarkup outputs classname markup customcomponent hyphenated tagnames jsx reactrendertostaticmarkup reactcreateelement mydiv classname bobi outputs expected", "num": "5883", "d": "1/2016"}, {"title": "request supporting element", "body": "hi plan support lt noindex gt tag even better valid type necessary every seo needs type feature request component dom general issues", "num": "5882", "d": "1/2016"}, {"title": "atouppercase function", "body": "using smallgrid gives error typeerror atouppercase function ion return ocreateclass tagname atouppercase render function return library built grunt babelify works fine examples", "num": "5881", "d": "1/2016"}, {"title": "react inline styles blocked csp policy stylesrc", "body": "working application strict csp policy including stylesrc prevents possibility using inline styles attempt use react builtin css templater following component styling blocked error class somecomponent extends reactcomponent constructor super domrender documentgetelementbyid main get around manually manipulating dom style object every react render class somecomponent extends reactcomponent constructor super domrender documentgetelementbyid main wondering react dom engine set style object instead serializing string inserting style attribute markup would make react adhere tightly csp would pull request welcomed", "num": "5878", "d": "1/2016"}, {"title": "simulatefocus classes component", "body": "hi try use input wrapped inside class nt work maybe limitation nt find anything subject reproduce issue", "num": "5876", "d": "1/2016"}, {"title": "onclick change render", "body": "hi new reactif want click button dom change rendered class commentbox commenttext using simple onclick function something like btnclick reactdomrender documentgetelementbyid content else reactdomrender documentgetelementbyid content var commentbox reactcreateclass render function return comments var commenttext reactcreateclass render function return text", "num": "5875", "d": "1/2016"}, {"title": "csstransitiongroup inconsistency fallback behaviour warning message", "body": "minor issue deprecation warning shown property transitiontimeout null undefined behaviour falls back deprecated behaviour falsey value following use deprecated behaviour without printing warning", "num": "5873", "d": "1/2016"}, {"title": "assertions left production mode", "body": "assertions left production output using webpack p matters located inside block could squeeze bytes examples", "num": "5871", "d": "1/2016"}, {"title": "datareactid alternative", "body": "know longer uses keys part issue however like bring forward different way link dom initial render keep text nodes regular nodes separate implemented something like simple virtual dom sure react works way essentially recursively mounts nodes top splits text nodes using ensure server produced dom matches virtual structure curious something like feasible react since allowed implement bootstrapping server side code producing clean html output without checksums ids", "num": "5869", "d": "1/2016"}, {"title": "generating unique id ssr", "body": "howdy ya tl dr please provide way coordinate pseudorandom identifiers across client server issue discussed bit continually run issue trying build libraries provide accessible components default react component model generally speaking offers big opportunity raise often low bar accessibility library widget world see experiments like ryanflorence better worse aria api browser heavily based using id link components together need id different world would generate ids needed move however serverside rendering makes complicated generated id going cause mismatch clientserver tried different approaches address one making id required props components need gets kinda ugly components need id moreso annoys users unfortunate could generate deterministic id could provide accessible components default frustrating part component generally information needs set various aria info necessary make component usable screen reader stymied user provide bunch globally unique ids far really reasonable approaches seen syranide solution root id store using latter obviously problems former nt scale well library authors everyones root app component already wrapped router provider etc every library use root level id provider probably super feasible annoying users seems like best way would react react addon could provide consistent first class way get unique identifier component even node rootid thanks hard work everyone", "num": "5867", "d": "1/2016"}, {"title": "render static html clientside", "body": "way get string plain html react component client side app design editor lets click elements edit style nothing new remaking ground using react app templates edited inside iframe rendered elsewhere attaching click handlers every editable element conditionally eg view rendered inside iframe editor would nightmare ca nt use jquery iseditable click like used virtual dom taking account seems solution rendering wouldbeedited view plain html use iseditable click approach inside editor insights similar experiences", "num": "5863", "d": "1/2016"}, {"title": "binding event inside onclick prop", "body": "ref jsx alert windowaddeventlistener click gt alert thisrefsfilepaneltoggle gt \u53d1\u9001\u6587\u4ef6 react alerted reactlite alerted case wrap second binding make work react", "num": "5862", "d": "1/2016"}, {"title": "move devtool warnings standalone test", "body": "talked jimfb hopefully lead clearer distinction tested move towards integrating devtools api throughout", "num": "5860", "d": "1/2016"}, {"title": "callback method nt refer right", "body": "let say component add listener componentwillmount method callback method declared component listener gets kicked method executed inside method nt refer component want heres full component javascript import react component proptypes react import emptyfunction fbjslibemptyfunction import appscss import header header import feedback feedback import footer footer import mediaquery reactresponsive import sidebar reactsidebar import canusedom fbjslibexecutionenvironment import nodemodulesbootstrapdistcssbootstrapmincss import bootstrap style whole project import publicmybootstrapdistcssmybootstrapcss class app extends component constructor props super props thisstate sidebaropen false sidebardocked false static proptypes context proptypesshape insertcss proptypesfunc onsettitle proptypesfunc onsetmeta proptypesfunc onpagenotfound proptypesfunc children proptypeselementisrequired error proptypesobject static childcontexttypes insertcss proptypesfuncisrequired onsettitle proptypesfuncisrequired onsetmeta proptypesfuncisrequired onpagenotfound proptypesfuncisrequired getchildcontext const context thispropscontext return insertcss contextinsertcss emptyfunction onsettitle contextonsettitle emptyfunction onsetmeta contextonsetmeta emptyfunction onpagenotfound contextonpagenotfound emptyfunction componentwillmount consolelog component app mount thisremovecss thispropscontextinsertcss componentwillunmount thisremovecss open side bar onsetsidebaropen open consolelog set sidebar open thissetstate sidebaropen open media query changed ie mobile version comes changes state sidebar mediaquerychanged canusedom thissetstate sidebardocked thisstatemqlmatches consolelog media query changed sidebardocked thisstatemqlmatches render var sidebarcontent sidebar content export default app componentwillmount trigger mediaquerychanged mediaquerychanged trigger set state nt refer app component supposed set state component thanks", "num": "5858", "d": "1/2016"}, {"title": "controlled components value reflected dom", "body": "noticed input value updated dom implementing controlled component normal expected behavior thissetstate term eventtargetvalue link example jsbin first loads press run js button output section", "num": "5857", "d": "1/2016"}, {"title": "consider applying html namespace default", "body": "currently creating elements react checks various namespaces like svg uses html apply namespace least checks places without checking firefox starting use react xul pages trying get xul fast need migration path using react xul page create xul elements default default namespace xul different html chance could apply html namespace creating elements would look like instead normal call possible anything react help us going fork react change calls nt hard already done wanted ask first fork fine forking mostly html drop fork", "num": "5856", "d": "1/2016"}, {"title": "issue reactcsstransitiongroup", "body": "getting error uncaught invariant violation addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded details installing reactcsstransitiongroup seems one copy react running using gulp browserify package app babelpresetreact babelplugintransformreactdisplayname babelplugintransformreactjsx babelplugintransformreactjsxsource eslintpluginreact formsyreact react reactaddonscsstransitiongroup reactdom reactrouter", "num": "5855", "d": "1/2016"}, {"title": "allow propsstate types object", "body": "hello author scalajsreact facilitates using react staticallytyped scala language use immutable scala values components props state react requires js objects wrap propsvalues singlekey object example instead setting component state wrap also understand react performs additional work objects receives like component state receiving actually merge two create new object feature useful developing js useless consumers library perhaps others om maybe maybe reason case merging propsstate done via scala static types invariants checked compiler would much efficient us use react via languages allow components use types object propsstate even simple check like newstate object mergestates else blindlyreplacestate would sufficient wdyt", "num": "5854", "d": "1/2016"}, {"title": "seal pooled events", "body": "kind related old anyone trying smart adding properties pooled nonpersisted event cause properties remain pool causing memory leak sorts could make sense events way ensure users ca nt mess event object bad unsupported ways probably instead", "num": "5853", "d": "1/2016"}, {"title": "scryrendereddomcomponentswithclass allow assert props found components scryrenderedcomponentswithtype", "body": "trivial example assume component render code helper method makes test pass helper makes fail seem like expected behavior expected think probably explicitly mentioned docs", "num": "5852", "d": "1/2016"}, {"title": "tips documentation accessing props children", "body": "eg something avoid", "num": "5850", "d": "1/2016"}, {"title": "scryrendereddomcomponentswithtag throws error ff", "body": "name input field props test fails anything else seems fine ff though failed form test find button htmlformelement nt named property setter props reactdomcomponentmixingetpublicinstance findallinrenderedtreeinternal findallinrenderedtreeinternal reacttestutilsfindallinrenderedtree reacttestutilsscryrendereddomcomponentswithtag test case jsx import react dom component react import reactdom reactdom import expect expect import renderintodocument scryrenderedcomponentswithtype withtype scryrendereddomcomponentswithtag withtag reactaddonstestutils function node debug debug documentcreateelement div documentbodyappendchild debug return reactdomrender node debug class app extends component render return hello describe form test function", "num": "5848", "d": "1/2016"}, {"title": "issues installing master npm", "body": "installer tries run build script folder inside using flat structure c repo npm install save facebookreact npm warn install could nt install optional dependency unsupported reactbuild postinstall c reponodemodulesreactbuild node nodemodulesfbjsscriptsnodecheckdevenginesjs packagejson throw err error find module c reponodemodulesreactbuildnodemodulesfbjsscriptsnodecheckdevenginesjs functionmoduleresolvefilename functionmoduleload functionmodulerunmain startup additional info npm nodejs windows ruru trying check resolution question", "num": "5847", "d": "1/2016"}, {"title": "enormous datareactid", "body": "developing big gui application chrome developer tools lagging reaching hundred kilobytes size small example wrong computed roughly could create paragraph somewhere performance manual issue", "num": "5846", "d": "1/2016"}, {"title": "onwheel stop bubbling happening", "body": "target div scrolls coming top bottom scrolling div scrolling starts happening entire page nt want think happening due event propagation trying stop following manner implementation using extends component way create components put onwheel event listener consoling scrolling fine able stop propagating event parent sure stoppropagation happening exactly whether issue happening propagation nt want use libraries used mixins please nt suggest way", "num": "5845", "d": "1/2016"}, {"title": "unhelpful error caught typeerror read property refs null", "body": "adding child element stateless component yields caught typeerror read property refs null see really hard debug could better error message", "num": "5841", "d": "1/2016"}, {"title": "", "body": "error event elements nt work looking seems like ca nt tell supposed work error event useful deduce format browser using", "num": "5839", "d": "1/2016"}, {"title": "way disable contenteditable warnings", "body": "react warns component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional writing rich text editor using react written ensure nodes modified browser capturing input events performing modifications internal document format rerendering using react however render react still warns would awesome able disable warning somehow specific value contenteditable prop another name something sure best approach take thought create issue discussion around", "num": "5837", "d": "1/2016"}, {"title": "componentdidmount called render completly done", "body": "hi much understand react component lifecycle fire done found today case sure bug lack understanding side call function return inside always run setup always finish jsx export default class table extends reactcomponent componentdidmount render const content thispropsvalid thisrendertable thisrendermessage return content rendertable rendermessage missing something bug thanks", "num": "5828", "d": "1/2016"}, {"title": "using immutable state breaks testutilssimulate", "body": "simple react component checkbox inputs table component managing state using immutable library like described simple handlechange listener updates state component looks like handlechange e consolelog handling change attempting simulate onchange event component using testutilssimulatechange like import react react import testutils reactlibreacttestutils import channelstable appcomponentschannelstableindexjsx describe channesltable gt let channelstablecomponent let inputs let testonchange sinonspy gt channelstablecomponent testutilsrenderintodocument inputs testutils scryrendereddomcomponentswithtag channelstablecomponent input max audience size increase channel selected gt testutilssimulatechange inputs testutilssimulatechange inputs running test handlechange called handling change logged one time remove either line line setting state changes simulating successfully handling change logged twice simplified version code brought attention produces results none less racking brain day trying figure causing unfortunately success remedying issue", "num": "5827", "d": "1/2016"}, {"title": "selects lot default values nt running efficiently", "body": "app building requires lot checked default appears issue react performance situation jsfiddle builds options selected takes second run computer remove see runs almost instantly set options takes minutes run problem appears get exponentially worse selected options realize edge case also seems like bug", "num": "5825", "d": "1/2016"}, {"title": "ca nt seem update name attribute", "body": "using rerendering element new value attribute keeps old value still returns know old versions ie considered readonly new browsers however works fine react", "num": "5824", "d": "1/2016"}, {"title": "warn input switches controlled uncontrolled", "body": "component either using uncontrolled inputs controlled inputs pick single paradigm lifetime component result instance input never switch controlled uncontrolled vice versa warn input previously controlled becomes uncontrolled vice versa", "num": "5821", "d": "1/2016"}, {"title": "warn specified", "body": "illegal users need decide using controlled uncontrolled inputs warn properties specified", "num": "5819", "d": "1/2016"}, {"title": "ontouchstart fire extremely slow", "body": "ontouchstart fire extremely slow onclick bug", "num": "5817", "d": "1/2016"}, {"title": "event handlers arguments", "body": "page mention events may receive foreign arguments unexpected normal browser events example event handler like function handlethis e somethingelse browser lt img onerror handlethis argument somethingelse always undefined react lt img onerror handlethis argument somethingelse things nt expect like string content would possible add property event like eventsecretdomdonotaddrandomunexpectedargumentstoeventsoryouwillbefired", "num": "5815", "d": "1/2016"}, {"title": "stuck", "body": "number inputs react nt follow normal html conventions seems though number inputs set value stuck set value case demo issue", "num": "5812", "d": "1/2016"}, {"title": "improve documentation translation management", "body": "really ad hoc right make better huge deal since shitty job exposing translations groups people actively contributing best make easier thejameskyle great success using crowdin set project work next days get syncing gh based article go thanks inspiration james", "num": "5810", "d": "1/2016"}, {"title": "synthetic keyboard event spacebar press improper eventkey value", "body": "made pen react translating spacebar press instead per listing mdn look like many characters nt detected though wondering reliable use actually", "num": "5809", "d": "1/2016"}, {"title": "ctrlz broken asynchronous setstate", "body": "example simple page one element typing goes fine however ctrlz undo broken chrome ie chrome nt remove first typed letter ie actually adds stuff javascript var react require react var myinput reactcreateclass render function var return reactcreateelement input onchange function event var value eventtargetvalue settimeout function thissetstate value value type text value thisstatevalue reactdomrender reactcreateelement myinput null documentgetelementbyid allcontent culprit asynchronous setstate call remove settimeout works properly however react breaks browsers handle async updates fine without react example works fine even settimeout present simplified examples actual use case fluxlike store framework sends updates asynchronously animation frame reactaddonsbatchedupdates able condense change events improve performance", "num": "5807", "d": "1/2016"}, {"title": "drag n drop elements sorting", "body": "hello need advice drag n drop sorting react start data rendered dom html one two three manual sorting drag n drop data rendered dom html three one two changing data data react apply changes array dom html two three one reason refund dom element place html three one two problem deep nesting components html one two react full rerender longer needed left falls error longer exist whether normal way dnd sorting react", "num": "5805", "d": "1/2016"}, {"title": "testutilssimulate propagate click events labels change events associated inputs", "body": "using click event trigger change event associated action browser trigger change event javascript import react react import reactdom reactdom import simulate reactaddonstestutils const id foo let changed false const onchange gt changed true let clicked false const onclick gt clicked true reactdomrender documentbodyappendchild documentcreateelement div const labelnode documentqueryselector label simulateclick labelnode consolelog clicked clicked true consolelog changed changed false true", "num": "5804", "d": "1/2016"}, {"title": "babel semicolons arrow functions class", "body": "would like share diff everyone nt seen babel post transpile broke today change spec compliancy throw parse error class properties semicolon practise means class constructor needs semicolon arrow functions well used arrow functions fall changed normal functions add bind call needed using node coding style", "num": "5802", "d": "1/2016"}, {"title": "componentwillreceiveprops happening immediately loading mobile browsers", "body": "seeing issue load component componentwillreceiveprops called almost immediately happening mobile browsers desktop seeing issue anyone else experiencing", "num": "5800", "d": "1/2016"}, {"title": "starter kit link readme points version", "body": "starter kit link readme file points version instead make change hasnt done yet", "num": "5798", "d": "1/2016"}, {"title": "react transition removing leave classes removal", "body": "came accross issue reactcsstransitiongroup component classes removed component removed dom situation caused flicker due styles briefly changed element removed wondering behaviour purpose leave classes kept way dom removal never removing", "num": "5796", "d": "1/2016"}, {"title": "really need write call", "body": "discovered excitingly last release stateless functional components think unleash react power js functional programming realm accordingly found fact write use components since long stick stateless functional components need call stateless functional components normal js way importantly avoiding write legacy way write like js var childnumbercomponent number gt child number var gt var mount reactdomrender documentgetelementbyid container js var childnumbercomponent number gt child number var gt var mount reactdomrender documentgetelementbyid container although often encounter warning says warning child array iterator unique key prop check toplevel render call using see information think another issue obvious express use components vanilla js function wrapping expression appears potentially much powerful write js legacy functional way rather write html way jsx simpler straightforward call receive args less rules react need follow although nt intention deny still wide option legacy html tag way thought using anymore stateless functional components another discovery using anymore stateful components major reason stateless functional components recently fact need deal state real world wrote little helper component event system time engine js react state life cycle stateless sequence var seqcomponent seq gt helper component hidden place write react system special component deal stateful mutable component pure functional components js var physicscomponent gt var mount reactrender physicscomponent documentgetelementbyid container working live demo code hopefully could show potential new stateful components help others want seek way write stateful components stateless functional components overall would like hear thought thanks", "num": "5794", "d": "1/2016"}, {"title": "rendering style tag selectors", "body": "trying dynamically inject tag dynamically style inline svg element render directly react renders converts gt breaks css dangeroslysetinnerhtml style tag causes error", "num": "5792", "d": "1/2016"}, {"title": "eventtargetselectedoptions ie bug", "body": "currently synthetic event fired select element onchange prop selectedoptions property likely earlier versions well eventnativeeventsrcelementvalue appears work browsers works chrome ie polyfilled consistent across browsers assumption developers use eventnativeeventsrcelementvalue", "num": "5791", "d": "1/2016"}, {"title": "forceupdate nt cause rerender", "body": "bail rerender props object tripleequalsequal lead unintuitive results user dropped references string yet old data still visible renderforceupdate example invoking insufficient need call seems like api violation already issue tracking would fix sebmarkbage spicyj zpao", "num": "5789", "d": "1/2016"}, {"title": "purerender static property", "body": "majority components purerendermixinlike behavior classes function components easy way use mixins common use case think part core react think encourage people use pure render lot simpler add good compromise requests make pure render default behavior js class x extends reactcomponent static purerender true render", "num": "5788", "d": "1/2016"}, {"title": "shallow rendering broken", "body": "upgrading find test cases failing looking see reads document object defined globally fixed issue fixes issue problem however test case passes running individually running bunch test cases even defined", "num": "5786", "d": "1/2016"}, {"title": "event", "body": "event fire user dragging mouse release would nice event fired immediately whenever selection changed including dragging mouse useful example syncing selections multiple collaborators ala google docs native selectionchange event supported cross browser way back ie chrome safari recently firefox something react could polyfill expose components", "num": "5785", "d": "1/2016"}, {"title": "inline styles browserspecific values", "body": "would nice could define inline style array parser would expand duplicate styles props example let mystyles display webkitflex msflexbox flex specifying style mystyles component would expand style display webkitflex display msflexbox display flex thanks", "num": "5783", "d": "1/2016"}, {"title": "deprecate immutability helpers", "body": "thought getting rid api pretty complicated probably better idea cases either use immutable js powerful complete proposal object spread syntax simpler eventually built js long continue immutability helper addon docs feel steering people new react towards solution know bad tradeoff", "num": "5780", "d": "1/2016"}, {"title": "react setstate nt work shallow render", "body": "use gist reproducing issue test want make async request component going mounted use result request updating state see test report nt happen test believe issue fixed recently shallow render ca nt recognize sync state updates please tell see mistakes code trying fix problems many ways hope example code simple enough", "num": "5779", "d": "1/2016"}, {"title": "testutilssimulateblur reset documentactiveelement", "body": "title describes simulating blur event reset probably way aware get element caused blur event context", "num": "5778", "d": "1/2016"}, {"title": "dom rendered different virtual dom", "body": "happened virtual dom inspected react devtool html rendered dom got html real react code javascript render let slides thispropsstoremap slide gt section inserted section using warning error console", "num": "5777", "d": "1/2016"}, {"title": "warn style value nan", "body": "passing value nan value css style seems indicate error turns nt warn initial render give confusing error update per spec discovered anyway probably warn someone passes initial render warn update previousnext values nan", "num": "5773", "d": "1/2016"}, {"title": "props constructor match props render", "body": "expected actual code js class helloworldcomponent extends reactcomponent constructor props super merge foo bar props consolelog constructor thisprops render consolelog render thisprops return hello thispropsname reactrender documentgetelementbyid reactexample", "num": "5772", "d": "1/2016"}, {"title": "please tag", "body": "latest version npm latest tag github really scary get untagged version library idea commit released", "num": "5771", "d": "1/2016"}, {"title": "composing containers", "body": "building apps found containers plays major roll apps course relay redux make easy create data sources caches manages state apps clean clear way compose containers important created reactkomposer see let compose react containers basically could compose new kind data source including promises rxjs observables amp even meteor tracker based data sources check demos looking forward feedback", "num": "5770", "d": "1/2016"}, {"title": "import scope available child class", "body": "base class import scopes available inherited class basejs import react react import export default class base extends reactcomponent testjs import base base export default class test extends base const need reexport default modules every component used next component", "num": "5769", "d": "1/2016"}, {"title": "using two different renderers script", "body": "hello react team due way injects dependencies notably component one one use two different renderers nodejs scripts let say instance need use reactblessed display nice cli interface render html http request crash second renderer override first one dependencies solution would overlooked related yomguitherealreactblessed", "num": "5768", "d": "1/2016"}, {"title": "external jsx files executed synchronously", "body": "following code html reactdomrender documentbody throwing error app component defined seems inline script executed external appjsx file loaded however used work html reactrender documentbody", "num": "5766", "d": "1/2016"}, {"title": "dynamically added unmount handlers", "body": "react components could use way dynamically add handler called unmount either event handler like way way register destructordestroy method object component holding exists scale well every time hold something maintain two sections code cleanup code separate rest code try cleanup code using helpers adding cleanup code could done function nt allow sometimes end adding component would nt normally need hold destructor use ca nt add cleanup code closure set one sample use case mine unmount handlers react discouraging use mixins trying move towards alternative patterns new code helpers make sense component wont work special component higherorder component needs come pattern involves passing component helper function mutate component provide sort service linked component two examples codebase provides component version internal api scoped component component unmounted api requests http requests aborted adds key pending state set returns unset intended passed handler pattern provides buttons etc pending text spinners waiting http requests email resendconfirmation problem helpers often need cleanup unmount needs abort requests unmount needs break references nt called nt prevent gc require call cleanup function placed unnecessary boilerplate easy forget would much preferable helpers able register unmount handler component instance implicitly clean", "num": "5765", "d": "1/2016"}, {"title": "svg attributes getting ignored", "body": "input output missing properties", "num": "5763", "d": "1/2016"}, {"title": "load initial data via ajax ismounted", "body": "load initial data via ajax uses ismounted nt exist classes sure best update example probably changed maybe abort jqxhr", "num": "5761", "d": "12/2015"}, {"title": "setstate called twice trigger render twice", "body": "use examplesbasicclickcounterindexhtml change method add method click element invoked twice invoked one time invoked callback invoked multi times", "num": "5760", "d": "12/2015"}, {"title": "internal components", "body": "facebook plans releasing reusable components websites like reactive native know community making happen would good see components used internally facebookinstagram", "num": "5757", "d": "12/2015"}, {"title": "trigger new context changes", "body": "method triggers props change however situations context changes props method trigger makes really difficult alter state update ca nt perhaps new method like added previous simply renamed something like always called propstatecontext changed", "num": "5756", "d": "12/2015"}, {"title": "ie unable render elements popup window state changed", "body": "using encountered issue ie examplified following piece code javascript import react react import reactdom reactdom class example extends reactcomponent render return class anothercoolcomponent extends reactcomponent constructor props super props thisstate showsomething false showsomething thissetstate showsomething thisstateshowsomething render return thisstateshowsomething amp amp paragraph class popoutwindow extends reactcomponent constructor props super props thisstate openedwindow null componentdidmount var win container openedwindow componentdidupdate thisstateopenedwindowupdate thispropschildren render return windowaddeventlistener load function var container documentcreateelement div documentbodyappendchild container reactdomrender container issue state changes react tries render paragraph fails throwing error line state changes another error thrown probably happens element nt rendered tested chrome ff works fine", "num": "5755", "d": "12/2015"}, {"title": "way create pluggable decorating component", "body": "possible make pluggable aopstyle component transforms props transmits child precisely pass props child element parent render method want use like javascript scalablejs example aopstyle decorating component import react react const scalable children gt const scaleddata childrenpropsdatamap e gt e example transformation childrenpropsdata scaleddata children want scalableproptypes children reactproptypeselementisrequired javascript scalableplotjs plug transform data passed render transformed data import react react const scalableplot data gt js plotjs import react react const plot data paint plot using data plotproptypes data reactproptypesarrayof reactproptypesnumber however react renders child element without data props upd solution used reactcloneelement", "num": "5754", "d": "12/2015"}, {"title": "better tools debug needed", "body": "better tools debug needed rather current", "num": "5752", "d": "12/2015"}, {"title": "wrong version npm", "body": "instead versions npm indeed", "num": "5751", "d": "12/2015"}, {"title": "copyright messages need updated year", "body": "previously copyright messages needed updated every year see prevent need yearly copyright message updates touching almost every file adopt copyright message react native copyright becomes copyright", "num": "5747", "d": "12/2015"}, {"title": "replace native improve performance chrome", "body": "react autobinds methods components created slow chrome chromium derived browsers post discussing adaption test code one test google chrome finding calling bound function overhead even larger heavy math computation long fixes long standing issue new version adopted en masse meanwhile react may improve performance chrome writing", "num": "5745", "d": "12/2015"}, {"title": "ca nt use variable containing html set inner contents tag", "body": "getting error babel trying use dangerouslyset inner html div using gulpfile watch jsx files gulpfile const gulp require gulp const react require gulpbabel const babel require gulpbabel path object convenience var paths jsx staticjsxjsx js staticjs gulptask transform gt return gulpsrc pathsjsx pipe babel presets react pipe gulpdest staticjs gulptask watch function gulpwatch pathsjsx transform gulptask default watch problem try use code complains tokens unexpected array mapping return list elements item list string containing html tags paragraph interpreted html instead rendered literal text content nt hoping react problem babel linter stack trace starting transform throw er unhandled error event syntaxerror usersdaviddesktopmeetupprojectstaticjsxparentjsx unexpected token localeventsmap function item consolelog item return parserppraise parserppunexpected parserppexpect parserppjsxparseexpressioncontainer parserppjsxparseattributevalue parserppjsxparseattribute parserppjsxparseopeningelementat parserppjsxparseelementat parserppjsxparseelementat parserppjsxparseelement", "num": "5743", "d": "12/2015"}, {"title": "warn access", "body": "props reserved react used internally component authors may attempt access properties thinking could read value per could use dev mode warn accessed point user notediscussion somewhere way users actually run issue always get timely message sends directly relevant explanationdiscussion would good first bug decide actually want", "num": "5742", "d": "12/2015"}, {"title": "mouseenter event bubbling happens reverse order", "body": "expect mouseenter event bubble top element bottom way onclick event contrary bubbles bottom element top element chrome ff native mouseenter bubbling works expected top bottom also mouseover bubbles top bottom expected either native react", "num": "5739", "d": "12/2015"}, {"title": "react props change object array", "body": "", "num": "5738", "d": "12/2015"}, {"title": "children component mounted parent compoent", "body": "hi page want get host detail main view think actually", "num": "5737", "d": "12/2015"}, {"title": "svg attributes set namespace", "body": "say view rendering loop first render displays instances fine newly appended would show also calling would return returning initial nodes jsbin example reproducible issue", "num": "5734", "d": "12/2015"}, {"title": "difference currenttarget target syntheticevent", "body": "properties syntheticevent currenttarget target identical usage difference", "num": "5733", "d": "12/2015"}, {"title": "support svg strokelinejoin attribute", "body": "support svg attribute", "num": "5726", "d": "12/2015"}, {"title": "error invariant violation findallinrenderedtree instance must composite component", "body": "hello writing test cases project new jest taken long time configure days started writing test case written test case mentioned test giving error stuck facing error since days error ran command please help resolve problem thanks jameer khan", "num": "5723", "d": "12/2015"}, {"title": "bug componentwillunmount called componentdidmount", "body": "called must impossible additional check calling inside causes code example output jsbin example javascript import react component react import render finddomnode reactdom let buggyuid class buggybehavior extends component constructor super thisbuggy buggyuid componentdidmount consolelog didmount thisbuggy finddomnode componentwillunmount consolelog willunmount thisbuggy render return class willreceiveupdater extends component componentwillreceiveprops nextprops nextpropsinterval nextpropsprop nextpropssetinterval nextpropsinterval nextpropsprop render return class main extends component constructor super thisuid thisstate data interval b uid componentdidmount settimeout gt thissetstate data uid thisuid setinterval value gt thissetstate interval value uid thisuid render return const app gt render documentgetelementbyid root code output example", "num": "5719", "d": "12/2015"}, {"title": "server client render markup react still indicates checksum invalid", "body": "", "num": "5717", "d": "12/2015"}, {"title": "diffpatch markdown preview", "body": "preview huge markdown file changes dangerouslysetinnerhtml slow use react smart innerhtml nt know thx", "num": "5710", "d": "12/2015"}, {"title": "add code coverage reporting", "body": "jest report coveralls code climate nt matter nt require much work need finishing touches ben travisci integration plan soon nobody else jumps", "num": "5704", "d": "12/2015"}, {"title": "add inbrowser unit testing", "body": "currently nt run unit test suite browsers open source run internal web driver suites facebook however nt helpful external contributors helpful browser vendors since ca nt run tests builds disabled solve issues replace new runner would great community", "num": "5703", "d": "12/2015"}, {"title": "datatransfer dropeffect working ieedge minified version reactjs", "body": "code exmaple nonminified version minified version code html js difference referenced different version reactjs files three boxes dragging drag box show start top show dragged either normal drop drop react box show end drop two drop boxes everything works fine firefox minified version works fine ie edge thing dose work nonminified version ieedge dragging drop react box shows console see lines get result thought also accessible ieedge nonminified version reactjs files", "num": "5700", "d": "12/2015"}, {"title": "consequences unsynchronized clientserver renders", "body": "consequences client render sync server render example button want users javascript disabled able access nt want react client app takes would like minimize file size using instead two questions basically summarized performance consequences rendering slightly different dom tree server mounting nonempty dom", "num": "5696", "d": "12/2015"}, {"title": "testutils shallowrenderer automatically call componentdidmount", "body": "hi got case try use shallowrenderer test component ex test consolelog called wo nt work componentjsx class testcomponent extends reactcomponent componentdidmount consolelog componentdidmount render return componenttestjs", "num": "5690", "d": "12/2015"}, {"title": "would one pass latex code component", "body": "fairly rare given internet means unusual situation need embed latex code needs interpreted later mathjax katex etc following code nt work due jsx intepretation bits inside point point distance ratio frac percentage new point distance cdot ratio using tempating strings also nt work gets interpreted instead point point distance ratio frac percentage new point distance cdot ratio coure double escaping works becomes impossible read write point point distance ratio frac percentage new point distance cdot ratio jsx feature turns interpretation element something like treats text inside element untouchable point point distance ratio frac percentage new point distance cdot ratio", "num": "5688", "d": "12/2015"}, {"title": "invalid string style definition breaks ie safari", "body": "pesky bug hard track react defining key twice element finally discovered defined element like clearly mistaketypo part production code caused duplicate entry object breaks ie safari would nice see invariant warning something may using sure", "num": "5684", "d": "12/2015"}, {"title": "click events delayed render causing clicks incorrect nodes", "body": "got weird one take bit explain app filter drop menu opened shows options appears large chunk content composed number clickable tiles one appears underneath filter menu filter menu opened clicked react watching onclick event responds triggering url update tiles rerender blocking manner per react way life works fine single click tricky part comes two clicks happen dead dropdown menu element rest page rerendering since tiles numerous contain complex graphs page takes upwards seconds render new macbook pro blocking ui entire time react executes gigantic amount pure javascript recalculate render graphs oof graphs recalculated gigantic blocking function completes additional clicks menu execute way would expect instead clicking menu seem click whatever appeared result rerendering case clickable tiles double click causes app switch pages view details tile seems though react keeping track xy coordinates click applying whatever rerender happens things tried nt helped tried capturing click many levels filter drop menu try prevent event propogation realized nt even clicking menu deferred executing hopefully clicks could pile rendering solved making menu go away keep clicking tiles rerender rerendered actually clicked new tiles confusing expected behavior understand events queued later would expect click events apply elements events happened whatever shows render expected suggestions working around", "num": "5682", "d": "12/2015"}, {"title": "remove reactlibwebcomponentsjs npm package", "body": "react file nt shipped part npm package looks like changes happened build system since file shipped npm perhaps unintentionally less sophisticated build systems nt ignore unused files might bundling client perhaps nt change could worth investigating unused files", "num": "5681", "d": "12/2015"}, {"title": "improve documentation using react webpack", "body": "made clear could better improved situation slightly still nt discuss actually use things together quickest short term fix would explicitly describe would use defineplugin envify nice concise longer term like flushed docs around using react start finish browserify webpack maybe needed let start simple", "num": "5679", "d": "12/2015"}, {"title": "style property lineheight pixels problem", "body": "hello setting lineheight number value dom set pixels would great work like height set value dom pixels attached jsfiddle link thanks", "num": "5678", "d": "12/2015"}, {"title": "stateless functional components shouldcomponentupdate", "body": "probably question documentation issue places doc read ideal world components would stateless functions stateless components follow faster code path within react core recommended pattern possible pattern designed encourage creation simple components comprise large portions apps future also able make performance optimizations specific components avoiding unnecessary checks memory allocations find unclear explainations react optimize rendering using stateless functional components good sense would react uses something similar know call function react enforce strict immutability yet mean purerendermixin actually option default wonder functional components behave think better documented memoization technique used rendering functional components obvious app perform almost better choose replace components using purerendermixin statelifecycle methods functional components nt much insights internal working optimizations done", "num": "5677", "d": "12/2015"}, {"title": "declare proptypes recursive data structures like tree", "body": "hi like something like guess really work ends calling know probably javascript limitation due implementing lazy evaluation way declare structure properly proptypes seen documented", "num": "5676", "d": "12/2015"}, {"title": "changelog upcoming release changes added", "body": "check diff current last stable release upcoming one master branch lot changes could changelog file updated along dev process way possible anticipate deprecations example", "num": "5675", "d": "12/2015"}, {"title": "get index clicked element", "body": "list item want know one clicked user set onclik every item user get node clicked get issue items children nodes user click children inside element element want fix code js var react require react var reactdom require reactdom var cc reactcreateclass var app reactcreateclass getinitialstate function return arr reactdomrender documentgetelementbyid app user click inside return fix add attribute element children like nt think elegant way", "num": "5674", "d": "12/2015"}, {"title": "unclear documentation generating production build", "body": "mentioned react downloads page needs set production development warnings disabled suggests using searching quite bit found petehunt webpackhowto project could declare like tried setting nt work manually debug setting nodeenv nt removing warning like said would takes around generate production build every small change make need wait check change finally found react code check setting nodeenv passed global variable code since passed global variable code react checks uninitialised seems like actually need set process variable using tried got cyclic dependency error finally hack processenvnodeenv processenvnodeenv development new webpackdefineplugin process jsonstringify env processenv works development warnings removed turns quite small without setting nodeenv nodeenvproduction setting nodeenvproduction actually increases file size", "num": "5672", "d": "12/2015"}, {"title": "add alias methods react lifecycle components", "body": "classic example creating react class js export class counter extends reactcomponent componentwillreceiveprops nextprops nextcontext shouldcomponentupdate nextprops nextstate nextcontext render things find bothersome lifecycle method names problem including component method name redundant since extending class liskov substitution tells us subclass implementing implement behaviors since know class component saying redundant could well say redundancy may seem trivial typing boilerplate thus errorprone name nonorthogonal lt confused end typing often would like admit best distraction worst subtle source bugs proposed solution add alias methods fore lifecycle methods obviously require deprecation cycle need warn users using method names reasons seems somewhat common quick search github shows many people conclusion although may seem like bikeshedding think important save timeagony long future react users old new heart", "num": "5671", "d": "12/2015"}, {"title": "bug syntaxerror unexpected token", "body": "getting syntax error code js reactdomrender error happens line says written comments incorrectly may bug babel transformer", "num": "5670", "d": "12/2015"}, {"title": "value attributes invalid components rerendered properly", "body": "add attribute tag tag nt attribute work add attribute updated properly depends state trigger render wo nt change value real dom guessing incompatibilities virtual real dom allowed tags virtual dom knows ca nt add value real dom allows either way think bad fails silently believe either work completely give always error simple example reproduces problem see click button content div updated attribute dom happens chrome dev firefox", "num": "5669", "d": "12/2015"}, {"title": "remove install warning reacttools prefers installed globally", "body": "npm runs package script calls etc execution environment appended dir cli packages nt need installed globally work propery currently installation warning necessary npm major versions worth removing warning keep install log clean", "num": "5668", "d": "12/2015"}, {"title": "plan decouple reactdom react", "body": "since reactdom introduced sorry really buggy bundle react projects following line indexjs means require file directly require source code however save time bundle react make react component unaware whether always bundle directly use browserify expose module makes component always start following line usually bundle react sitecorejs app website sitecorejs completely independent use browserify expose module require components want react components want reactaddons till end require reactaddons component need get nothing expose problem reactcom always want require require duplicated react bundle see temp solution asking plan decouple reactdom react sorry asking", "num": "5667", "d": "12/2015"}, {"title": "react js display data text field particular selected id", "body": "following react render works successfully get single input tag error occurs error parse error line adjacent jsx elements must wrapped enclosing tag gt param object options options pass jstransform render multiple input text fields render function var currentid thisstatecurrentid", "num": "5665", "d": "12/2015"}, {"title": "", "body": "noticed calls function often wrapped conditional compiled redundant gates build process eg code compiled nt matter end since whole block removed dead code elimination uglify guess source files could cleaned nt checks missing something", "num": "5664", "d": "12/2015"}, {"title": "event order changes input field present initial render", "body": "difficult explain created jsfiddle code runs fine changing first variable null rerunning display issue experiencing sure expected behavior thanks advance guidance note experiencing version created fiddle version sure upgrading nt going resolve problem", "num": "5662", "d": "12/2015"}, {"title": "rules allowed static properties classes method", "body": "see", "num": "5661", "d": "12/2015"}, {"title": "stateless component performance", "body": "stateless components optimized using reactcreateelement arent rerendered props havent changed would nice mention docs significant difference following js somecomponent props gt return propshugelistmap performant props gt return notperformant props gt return somecomponent hugelist propsfriends may seem evident someone thinking functions", "num": "5660", "d": "12/2015"}, {"title": "reactcloneelement breaks children lifecycle events", "body": "try make easy understand probably pretty lengthy process converting toolkit library react started accordion component accordion components parent wrapper handles state events etc nested within rendered within seen rough implemented import accordion uicomponentsaccordionjsx phasellus viverra convallis ex sit amet convallis sed accumsan dignissim massa eu volutpat tellus semper quisque non lectus sit amet lectus consectetur tincidunt nec sem fusce lobortis blandit turpis vel vestibulum nulla egestas vitae vivamus quis orci vitae odio elementum facilisis vestibulum suscipit quam dictum ullamcorper sed lectus quam faucibus id pellentesque nec suscipit elit issue running pass props information parent children seeing implemented manually developer generated parent component simply ca nt define explicit props way currently solved cloning children passing custom props seen suggested google problem approach children recloned every time parent renders breaks child lifecycle events lifecycle event like receive props every render making extremely difficult see exactly changed top constantly recloning everything seems like expensive process also tried modifying child props readonly course quite annoying instance tried cloning children first render attempting update single props subsequent render turned really difficult nigh impossible thought using event system within parent hook children listen still could nt figure looking contexts seem new unstable feel like basic common use case supported yet giant pain right one issue either stackoverflow exactly best approach solving contexts deal cloning issue advice would appreciated", "num": "5659", "d": "12/2015"}, {"title": "use server side rendering react expressjs app", "body": "documentation nt neither examples links examples want know step step use react server expressjs application component files look connected templates layouts expressjs behave render react server include react components template components compiled advance many questions particularly dustjs template rendered way controller compile concat assets one file include template like want know use react server need change current routine compilerender react template server use get errors nt know mean react documentation nt errors explanations", "num": "5656", "d": "12/2015"}, {"title": "warning validatedomnesting appear child", "body": "using component renders getting error message console ideas", "num": "5652", "d": "12/2015"}, {"title": "optimizing componentwillreceiveprops shouldcomponentupdate", "body": "react component lifecycle dictates new props roll gets called calculate new state set without second cycle afterwards shouldcomponentupdate gets called compare props state last cycle next one however state product props makes sense check whether props changed calculating state unnecessary calculations avoided produces ugly looking code first runs code would otherwise based result sets new state terminates simplified example componentwillreceiveprops function nextprops nextprops thisprops return shouldcomponentupdate function nextprops nextstate return thisstate nextstate cleaner way approaching resources wasted unnecessary state calculations", "num": "5650", "d": "12/2015"}, {"title": "include testutils production version react", "body": "mozilla testing infrastructure firefox forces us use production build firefox represents exact build nightly user would use problem uses production version react testutils included need run js tests reason js code size included dev version forcefully include production version react work fine custom build right switch use dev version want fix asap", "num": "5649", "d": "12/2015"}, {"title": "image request pending frequently refreshing page", "body": "use server rendering write dynamic value function may proper react shows warning console refresh tab frequently image request tab pending problem dose disappear even remove dynamic value env react chrome osx babel", "num": "5645", "d": "12/2015"}, {"title": "reflects", "body": "note works perfectly fine earlier versions windows mac os x code js var test reactcreateclass getinitialstate function return value onchange function e thissetstate value etargetvalue consolelog etargetvalue render function return whenever onchange triggered assuming value starts changes correctly change value", "num": "5641", "d": "12/2015"}, {"title": "way disable getinitialstate warning", "body": "really like convenience api react decided reimplement simple wrapper around get annoying warning way disable warning since intentionally providing functionality", "num": "5639", "d": "12/2015"}, {"title": "inline event handlers get lost", "body": "bit hacking render function function need replace node react injects component making sure wo nt break ui layout components injected contain keep extra wrapping div dataregion breaks ui used function weird inline event handler nt work anymore works addeventhandler though style preserved seems inconsistent", "num": "5638", "d": "12/2015"}, {"title": "typeerror instrender function testing stateless functional components", "body": "functional component looks like included conventional component causes component test failing react jest npm node suggestions get rid", "num": "5637", "d": "12/2015"}, {"title": "anchor download attribute handling filename correct", "body": "according download attribute set download dialog box prompt filename set attribute file referred href tried react nt seem like change fixing issue master branch example expected behavior browser download dialog box imagejpg actual behavior browser download dialog box testjpg", "num": "5635", "d": "12/2015"}, {"title": "delete", "body": "oops sorry wrong place", "num": "5634", "d": "12/2015"}, {"title": "stop showing warnings errors", "body": "ca nt debug code warnings spam warning spam beyond control react router conflicts history nt resolved frustrating experience without recourse short installing date deps show warnings warnings", "num": "5632", "d": "12/2015"}, {"title": "null owner addcomponentasrefto hard fix", "body": "migrating ui encountered following error messages loading page tried fix still following simple component const test reactcreateclass handleclick consolelog thisrefstestvalue render return export default render targetid return reactdomrender documentgetelementbyid targetid clearly ref set method code fails investigated possibility twice react loaded one line sure proves anything since complex build generates code probably issue somewhere build ensured react code output script also put breakpoint reactcurrentowner line hit nt know sufficient load react went deeper debugging see call put breakpoints set non null value reactcompositecomponent lines reactmultichild line start application breakpoint hit twice time thiscurrentelementprops time reset null line call addcomponentasrefto done outside two windows owner null investigate", "num": "5631", "d": "12/2015"}, {"title": "react virtual dom v ios", "body": "hi sorting table works expected site opened desktop browser android device ios browsers safari chrome nothing happens sort icon changes state idea sorted source items map custom itemrow component implements shouldcomponentupdate avoid unnecessary renderings sort order change missed ios browsers", "num": "5627", "d": "12/2015"}, {"title": "missing onload onerror events svg tag", "body": "svg supposed far know support least onload onerror events supports looking react code events handled specific elements would easy create pull request add image cases seems separation js files handle dom svg codebase might collide correct adding cases functions right place also handle svg image", "num": "5626", "d": "12/2015"}, {"title": "prevent child onclick event parent onmouseup event", "body": "click mouse move click events apply within element area events defined parent element try prevent event component way via see need prevent childs event parent component via using", "num": "5625", "d": "12/2015"}, {"title": "reactaddonsupdate requires peer react none installed", "body": "get reactaddonsupdate requires peer react none installed error latests react update npm install reactaddonsupdate save working", "num": "5624", "d": "12/2015"}, {"title": "event bubbling onscroll appear consistent native behavior", "body": "two nested elements scrolled want listen parent scroll event textarea scrolled event bubbles parent onscroll event working example bug feature appears like ought bubble according spec workaround verify target element handling scroll event maybe preventing textarea sending scroll events tested react", "num": "5622", "d": "12/2015"}, {"title": "documentation refs shallow rendering", "body": "docs say refs shallow rendering shallow testing currently limitations namely supporting refs however shallow render component property present correctly using reactshallowtestutils like feature stable rely present", "num": "5620", "d": "12/2015"}, {"title": "webkitinputplaceholder", "body": "webkitinputplaceholder seems work add simple css works fine job anyone issue popular css attribute need customization options btw nt think react could crossbrowser support prefixed css stuff remove webkitinput moz ms prefix together react let think dom much still think browser prefixes", "num": "5619", "d": "12/2015"}, {"title": "stateless functions declared using named function statements", "body": "arrow function syntax suggested docs components declared using nt proper name say reactdevtools used instead guess could issue debugging", "num": "5618", "d": "12/2015"}, {"title": "svg attributes aria attributes different pattern", "body": "following jsx sample svg element raw html represented seems jsx attributes follow camelcase format immediately thought adding instead question pattern jsx attributes yes follow pattern fact like idea nt preprocess raw svg reactjs understand could expected behavior trying understand patterns different aria svg", "num": "5617", "d": "12/2015"}, {"title": "dangerouslysetinnerhtml nt apply style properties", "body": "hi guys got issue dangerouslysetinnerhtml problem decode html entities nt apply style properties thanks advance guys", "num": "5616", "d": "12/2015"}, {"title": "svg attributes support missing filter attribute", "body": "svg attributes support missing filter attribute crossbrowser way apply svg filters ie edge", "num": "5612", "d": "12/2015"}, {"title": "change devtools install message file urls", "body": "visiting file url devtools installed chrome get download react devtools better development experience nt work file urls might fixed chrome side could improve message say something like download react devtools use http server instead file url better development experience", "num": "5608", "d": "12/2015"}, {"title": "simulateclick nt propagate event", "body": "using components component renders something like jsx save new password test call handler gets called js var submitbutton testutilsfindrenderedcomponentwithtype renderedform button var submitbuttondom reactdomfinddomnode submitbutton testutilssimulateclick submitbuttondom", "num": "5606", "d": "12/2015"}, {"title": "rendering snap svg image", "body": "hi new react looking use snap svg rendering svg images views however quite sure best set using babel transpiler could explain best way add snap svg render view please really looking best practise rather completely wrong way thanks", "num": "5604", "d": "12/2015"}, {"title": "slow first user click handler", "body": "hello screen see profiler timeline react app first click handler slow think", "num": "5598", "d": "12/2015"}, {"title": "input onchange mounting", "body": "onchange event fired mounting input component dom occur chrome firefox new value event actual nothing changed scenario initial app render mounting component nested input user event action haschanged reproduction react min nonmin browser probably tested specific component structures could find minimum structure simple reproduce input looks like stack trace using nonminified reactwithaddons onchange event handlechange line col numericinputjsx linkedvalueutilsexecuteonchange line col reactwithaddonsjs handlechange line col reactwithaddonsjs reacterrorutilsinvokeguardedcallback line col reactwithaddonsjs executedispatch line col reactwithaddonsjs executedispatchesinorder line col reactwithaddonsjs executedispatchesandrelease line col reactwithaddonsjs executedispatchesandreleasetoplevel line col reactwithaddonsjs foreachaccumulated line col reactwithaddonsjs eventpluginhubprocesseventqueue line col reactwithaddonsjs runeventqueueinbatch line col reactwithaddonsjs reacteventemittermixinhandletoplevel line col reactwithaddonsjs handletoplevelwithoutpath line col reactwithaddonsjs handletoplevelimpl line col reactwithaddonsjs mixinperform line col reactwithaddonsjs reactdefaultbatchingstrategybatchedupdates line col reactwithaddonsjs batchedupdates line col reactwithaddonsjs reacteventlistenerdispatchevent line col reactwithaddonsjs", "num": "5597", "d": "12/2015"}, {"title": "always remove keys children shallow rendering", "body": "component alters children jsx compjs import react proptypes react const comp reactcreateclass proptypes children proptypesnodeisrequired export default comp testing whether children jsx comptestjs jestdontmock comp import react react import testutils reactaddonstestutils const comp require comp describe comp gt outputs given children gt const renderer testutilscreaterenderer rendererrender const result renderergetrenderoutput keys differ using would work fine want able alter shallow rendering try harder remove keys something wrong", "num": "5594", "d": "12/2015"}, {"title": "controlled reflecting correct state selection", "body": "case value depending state select baz item combobox nt anything onchange handler combobox suddenly displays first element even though state still state combobox inconsistent state value property seems happen least chrome safari", "num": "5592", "d": "12/2015"}, {"title": "calling setstate render causes infinite loop", "body": "may seem really silly call render however possible happen component callback called immediately render callback handler call", "num": "5591", "d": "12/2015"}, {"title": "svg display new elements state update", "body": "hello component way var iconessvg reactcreateclass getinitialstate function return icones positions componentdidmount function var c settimeout function csetstate icones positions component mounted everything works espected different locations rendered properly state updated sec demonstration new elements displayed fact present dom displayed probably due issues namespace cut amp paste firefox tools place suddenly appear", "num": "5586", "d": "12/2015"}, {"title": "reacttestutilssimulate nt fire portals", "body": "trying simulate event element portal event never fires simulate browser dispatchevent var mycomponent reactcreateclass handlemousedown function consolelog mouse pushed render function return rendered reacttestutilsrenderintodocument var mydiv renderedrefsmydiv reacttestutilssimulatemousedown mydiv var downevent documentcreateevent mouseevents downeventinitevent mousedown true true mydivdispatchevent downevent mouse pushed", "num": "5585", "d": "12/2015"}, {"title": "isomorphic code require different code server", "body": "docs example server side code example client side code thought isomorphic code supposed work automatically", "num": "5583", "d": "12/2015"}, {"title": "document recommended eslint config", "body": "sure intended nt see anything documentation using reactdom requires import react even react never required example project backbone shim view use merely render page component reactspecific transform occurs page however fails react available assume problem fact reactcreateelement needed conversion jsx js deduceable intuitive also causes linters fail import react without actually using anywhere cases imagine desirable behavior recommendations think bare minimum called explicitly somewhere apologies already missed", "num": "5582", "d": "12/2015"}, {"title": "could reactcsstransitiongroup use getcomputedstyle get transition timeouts automatically", "body": "reading new etc thought struck get timeout directly css transitioning classes applied transition group child anyone foresee problem approach", "num": "5580", "d": "12/2015"}, {"title": "android emulator displays weird error messages", "body": "delete please confused repository reactnative", "num": "5579", "d": "12/2015"}, {"title": "basic example precompiled jsx unexpected token", "body": "trying compile example ran two issues first seemed needed install babelcli able run next set commands get error syntaxerror examplejs unexpected token react successfully running seconds seconds return message still new using react probably user error figured put issue case", "num": "5578", "d": "12/2015"}, {"title": "onmouseover work chrome", "body": "using react something like render return trackmouseposition event object consolelog change eventclientx eventclienty firefox works chrome nt", "num": "5577", "d": "12/2015"}, {"title": "reactcsstransitiongroup delayed animation", "body": "something similar handle sliding updown content kind accordion like behaviour works fine content mounted problem occurs nodes need hidden replaced value case seems onenter animation fired empty node executing onleave animation previous node making leaving animation delayed time enter animation empty node nt happening think empty node nt animated entering dom onenter onleave animation triggered simultaneously using version", "num": "5575", "d": "12/2015"}, {"title": "inside render return comments placed first line cause various errors", "body": "using one comment placed first line render return causes nothing rendered browser code causing two comments cause unexpected token error code causing causes errors", "num": "5573", "d": "11/2015"}, {"title": "react component got lost attached html node angular uirouter changed state", "body": "first time angular uirouter runs default uiview react component working fine state changed react component lost dom clues greatly appreciated", "num": "5572", "d": "11/2015"}, {"title": "replace scry less fancy word", "body": "think scryrendereddomcomponentswithclass methods starting scry deprecated favor obvious names like findrendereddomcomponentswithclass", "num": "5571", "d": "11/2015"}, {"title": "reactnative bundle server process multi request got errors create reactpackager step", "body": "created reactpackager error error error unable find file path null fastfsreadfile moduleread cacheget modulegetdependencies collect trycallone flush see logs socketclienthandlemessage bunserbuf emitone bunserbufemit bunserbufprocess processtickcallback slove", "num": "5566", "d": "11/2015"}, {"title": "arrow function event callback invoked target element removed", "body": "results invariant violation example app lines reproduces issue reproduce start app select user radio button list call stack time invariant violation looks like react batching click events guess time batch processed target element removed dom click handler arrow function removed event processing queue tried testing variations example setting state using bound method instead arrow function define event handler cases invariant violation occur", "num": "5563", "d": "11/2015"}, {"title": "way error props passed nt proptypes", "body": "found accidentally specifying components props nt used components would nice way runtime check reactproptypes nt allow additional props passed", "num": "5562", "d": "11/2015"}, {"title": "serverside rendering style attribute always causes invalid checksum", "body": "working serverside rendering react app using nashorn going ok got basic skeleton app running however getting warning lot warning react attempted reuse markup container checksum invalid find strange cases problem seems revolve around attribute instead figure markup generated different client server client scrollspacerbefore style da server scrollspacerbefore datareactid fragment missing serverrendered piece remove setting style prop issue always resolved gives warning fixes notice commented two style props intended behavior", "num": "5560", "d": "11/2015"}, {"title": "singleton react component", "body": "hey guys application writing component called help section basically box shows predefined texts component user messing want able tell help section component component show help using flux actions store nt bad works quite nicely however quite large setup files defined specifically cause also number issues experienced help section actions dispatching actions raises dispatch middle dispatch error however could define help section singleton could done since get instance help section expose method sets properties want change call know breaks react unidirectional data flow component changing another component maybe worth sometimes way think sort combination store actions component one object lot components get instantiated run time maybe quite useful cases could nt find reference web jsfiddle seems work nicely bit unclear imo good way quite novice javascript react might missing obvious points hopefully think thanks reading ps sorry ambiguousness english native language smile", "num": "5558", "d": "11/2015"}, {"title": "testutilsfindrenderedcomponentwithtype nt work functional stateless component", "body": "changed component one tests failing ca nt find instance component one line code gives error guessing function importing test file ie one used create component actual code place imports function gets instance means types never match according testutils must worked classes unique somehow always import thing expected behaviour using functional components something missing", "num": "5555", "d": "11/2015"}, {"title": "inputs deselected firing callback onchange", "body": "issue text based inputs react react dom event fired input input deselected looks like ui example jsbin components toplevel component describes fields form component also holds state form component extends field form child child form also one component clicked fire function state form exception components stateless functional components components controlled get value top level form component state properly updated top level event would expect things typically work controlled form state passed via props input trying figure could possibly cause weird deselection issue nt made progress ideas thanks", "num": "5554", "d": "11/2015"}, {"title": "extract addons real remove warning", "body": "upgrading react comes warning among others says addons requires reactaddons instead required package first would like point think good change put addons separate packages however also noticed addons fact really put separate packages link implementation still existing within react package brings trouble build browserify addon currently using transition group bundle include react causes error running app alternative us import gets rid error leaves us red warnings consider non option think important leave number warningserrors mentioned think step right direction extract addons also think wrong require user update import change actually made could reconsidered", "num": "5553", "d": "11/2015"}, {"title": "component tag span text without tag tag within span", "body": "", "num": "5552", "d": "11/2015"}, {"title": "component test test child component already functionbind prop", "body": "hi guys got case class pagination extends reactcomponent onpageselect event selectedevent test let shallowrenderer testutilscreaterenderer result instance expect bootstrappaginationpropsonselect toequal instanceonpageselect using thisonpageselectbind ca nt expect true react automatically bind render nt need use bind", "num": "5551", "d": "11/2015"}, {"title": "hard catch errors", "body": "related essentially wrap render call try catch works first time seems like called second time update case work seems async updating existing component tree may missing something seems like leaves way developers catch errors rendering children components jsbin demoing issue", "num": "5549", "d": "11/2015"}, {"title": "reactdefaultperfprintwasted nt work", "body": "calling results page internally facebook assume fairly recent react version", "num": "5548", "d": "11/2015"}, {"title": "disable specific warning", "body": "explain issue briefly instead extending reactcomponent class gets state getinitialstate function exists using component looks like triggers warning react warning getinitialstate defined somecomponent plain javascript class supported classes created using reactcreateclass mean define state property instead question way disable warning happening cheers", "num": "5545", "d": "11/2015"}, {"title": "change state always fire function render", "body": "example use page var applist var reactrender containera second update found values inputs ca nt change according state pass second time also want know ui operation happened two calls render possible react reserve users refresh whole component according state", "num": "5544", "d": "11/2015"}, {"title": "react updates dom diff ignore state detail change", "body": "came across problem using react change state array nt change dom based array component nt updates suggest dom diff algrithom way update details dom", "num": "5542", "d": "11/2015"}, {"title": "reactchildrentoarray changes elementkey", "body": "reactchildrentoarray changing childrens key property ex sometimes dont know exactly event without got even weirder keys parsing children ex foo gt foo foo nt found mention things yet documented somewhere get original key somehow", "num": "5541", "d": "11/2015"}, {"title": "missing css pointer events", "body": "pointerevents working", "num": "5540", "d": "11/2015"}, {"title": "uncaught error invariant violation addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded details", "body": "talked answer nt run two copies react got thing running two copies react building react component npm module installed larger project within module including react peer dependency marked external webpackconfigjs actually working fine time one exception components refs gone far use documentqueryselector yikes get rid error message better way opening issue though want use reactwidgets package uses refs breaking project ca nt react smart enough associate refs running copy react missing something thanks ben", "num": "5538", "d": "11/2015"}, {"title": "infinite loop number input", "body": "internal thread debugging issue ie react could go infinite loop thus hanging main thread observed ie chrome firefox minimal reproducible fiddle ie press back space number input override current number anything else select press key observe ie main thread hangs immediately issue seems caused setting nan type number input nt fully figured avoiding setting nonnumeric string value mitigate issue speculation due ie raises propertychange event whenever input value set js set nonnumerical value number input value reset empty string upon retrieval enter loop retrieving empty string parseint setting nan propertychange retrieving empty string setting nan nan", "num": "5537", "d": "11/2015"}, {"title": "checksum invalid entity", "body": "using react render server client client getting error message besides checksum present server rendered html rendered html exactly client server visual issue rendering still rendered server client react doco says html entities literal text work fine removing html entity makes checksum error message go away something wrong bug using react rendered express viewed chrome", "num": "5535", "d": "11/2015"}, {"title": "autofocus attribute triggered render", "body": "hello autofocus attribute triggered render therefor impossible change focus attribute multiple fields currently way change focus give input ref change componentdidupdate componentdidupdate thispropsisautofocus true thisrefs input thispropsline focus autofocus attribute work initial render", "num": "5534", "d": "11/2015"}, {"title": "componentdidmount ca nt throw error", "body": "type code componentdidmount defined ca nt see error throw use try catch like componentdidmount console printed", "num": "5532", "d": "11/2015"}, {"title": "onmouseup triggered right click context menu", "body": "explanation codepen click link counter increment onmousedown onmousedown onmouseup event logged try clicking right mouse button open context menu link onmousedown triggered counter incremented onmouseup skipped entirely found old webkit bug resolved helps", "num": "5531", "d": "11/2015"}, {"title": "reactproptypesnode accept stateless component function", "body": "replaced react components defined using classes getting warnings react stateless component fuction reactnode validating components using need use seems bit long say anything rendered component supposed cover right doc maybe added reason nt handle well", "num": "5527", "d": "11/2015"}, {"title": "react functional components", "body": "hello possible use reacts lifecycle methods reacts new functional components", "num": "5525", "d": "11/2015"}, {"title": "allow use class style string", "body": "nt like fact react nt allow use asinlinestring attributes fork hard modify react support reason nt like manually rename without inline styles string ca nt use webstorm feature really nice developing new styles", "num": "5522", "d": "11/2015"}, {"title": "creating new element key null creates element key null", "body": "sure intentional run resulting inner div set resulting dom string remove key result used key result latter", "num": "5519", "d": "11/2015"}, {"title": "reactchildisnull ability check component rendered null", "body": "suppose want component concatenates children together using separator prop javascript import react react import lodash class concatenate extends reactcomponent render var children reactchildrentoarray thispropschildren var separated childrenreduce previous current index gt previouspush current index childrenlength previouspush thispropsseparator index return previous concatenatedefaultprops separator key gt return export default concatenate would like choose render separator corresponding child decides render null possible reactchildisnull functionality", "num": "5517", "d": "11/2015"}, {"title": "separate website release", "body": "working issue react native found react also issue website mkonicek people often send pull requests update code docs makes sense however pr merged docs go live immediately code released weeks means docs inconsistent apis cli commands people get using react native", "num": "5516", "d": "11/2015"}, {"title": "randering large amount elements slowly", "body": "recently using react project rendering elements list always elements becomes sluggish ca nt find solution help", "num": "5515", "d": "11/2015"}, {"title": "input defaultvalue always evaluated", "body": "rerender two similar views contain input regardless type defaultvalue evaluated happens element tree structure samesimilar input even inputs two different types see simple example new old views inputs inside div", "num": "5509", "d": "11/2015"}, {"title": "thispropschildren nt always inherit context parent", "body": "assumed would always inherit context parent always case works expected change parent use context transferred children anymore also created simple jsfiddle demonstrate would assume inside parent inherit context meant way change context second example would also work", "num": "5507", "d": "11/2015"}, {"title": "validatedomnesting generates warnings components return null inside tbody", "body": "according doc render ok components return nothing needs rendered causes warning used inside tbody javascript var component reactcreateclass render function return null var table reactcreateclass render function return reactdomrender documentgetelementbyid container gives us following warning", "num": "5506", "d": "11/2015"}, {"title": "htmlaudioelement partially supported confusing", "body": "attempting render tag element rendered attribute understand correctly pr introduced lots different attributes rejected however presently react violates principle least surprise agreeing render rendering attributes included work planned media tags react willing render part attributes would nt better drop support completely", "num": "5505", "d": "11/2015"}, {"title": "reactcsstransitiongroup throws error using timeout element removed", "body": "using react render method exception thrown becomes elapsed exception occurs tries find component empty guessing exit early components gone", "num": "5499", "d": "11/2015"}, {"title": "transform jsx browser", "body": "babel removed react documentation using babelcore plan supporting jsx transformer browser deprecated thanks", "num": "5497", "d": "11/2015"}, {"title": "dom elements switched order", "body": "component among many things includes two components following order thispropsowner boolean problem react prints componentsnewlistbox element componentslistsmenu dom see dom looks div class newlist printed ul class lists reactids show order way around change thispropsowner true print element expected position dom missing something basic pretty weird issue", "num": "5494", "d": "11/2015"}, {"title": "way create pure stateless components", "body": "discovered stateless components nt pure works well long parent component rerendered often enough think publishing unpure stateless components lost good opportunity teach community write fast pure components many talks mentioned cool powerful principles immutable data must say dissapointed keep adding functionality react allows people write think sloppy code looks like stateless components still undocumented feature official place find infromation release article blog could possible change behaviour stateless components make pure later release would really like another way write pure stateless functions probably something like", "num": "5492", "d": "11/2015"}, {"title": "npm install peerdependencies fail update fails reactdom", "body": "updated react latest build order use library hard dependency get errors versioning seems though pass corresponding versioning logic uninstalled reinstalled nodemodules make sure latest versions nothing working npm err peerinvalid package react satisfy siblings peerdependencies requirements npm err peerinvalid peer marty wants react npm err peerinvalid peer reactleaflet wants react npm err peerinvalid peer reactsparklines wants react gt npm err peerinvalid peer reactdom wants react", "num": "5491", "d": "11/2015"}, {"title": "reactdomserver available globals", "body": "recently code moved react reactdom get idea behind move server side rendering use neatly available global object use problem afaik object available global scope nt access function problematic serverside code nashorn currently still working upgrade newest react version scoured whole internet react source code found way gain access without possible function available maybe add property get global object", "num": "5490", "d": "11/2015"}, {"title": "issue simulateclick invoking function spying", "body": "lots trouble testing whether clicking rendered button element invoking onclick handler code component tested use strict library dependencies const react require react const categoryclearbutton reactcreateclass render return clearallselectedcategories thispropshandleclick moduleexports categoryclearbutton test case using jasmine use strict const react require react const reactdom require reactdom const testutils require reactaddonstestutils const categoryclearbutton require categoryclearbuttonjsx const actions require actionsdashboardactions let element describe categoryclearbutton gt beforeeach gt element testutilsrenderintodocument call clearallselectedcategories method clicked gt let renderedbutton testutilsfindrendereddomcomponentwithtag element button spyon element clearallselectedcategories testutilssimulateclick renderedbutton expect elementclearallselectedcategories tohavebeencalled error message getting console phantomjs mac os x categoryclearbutton call clearallselectedcategories method clicked failed typeerror undefined funtion phantomjs mac os x executed failed secs secs pretty sure issue simulate click event firing make test pass following leads believe spy job anybuddy give newbie guidance thanks andrew", "num": "5487", "d": "11/2015"}, {"title": "warn tag rendered component", "body": "example warn rendered good reason edit server rendering react seems cause click handlers placed inside fauxbody get called", "num": "5484", "d": "11/2015"}, {"title": "shouldcomponentupdate child components", "body": "couple wrapper components dynamically calculate size position need normally works performs great soon add children inside components longer use method return false wrapper needing update children never get updated example jsx good way around idea add new method shouldupdatechildren like question detailed", "num": "5483", "d": "11/2015"}, {"title": "recursion dispatchevent", "body": "using dispatchevent trigger react event handler causes recursion created repository code checkboxes event handlers attached clicking select trigger mentioned causes recursion javascript javascript const boxname testname var cb reactcreateclass oncheckclick function el consolelog clicked el var nav reactcreateclass handlecheckclick function consolelog select reactdomrender documentgetelementbyid container", "num": "5482", "d": "11/2015"}, {"title": "dangerouslysetinnerhtml reconciling p tags likely due nested p tags", "body": "noticed trying use dangerouslysetinnerhtml p tag tutorial app building weird behaviour content changed able get desired behaviour using div span instead using react might similar view check branch steps repro run app add post click edit icon next new post edit text hit update post see old post text still displayed along newly updated text", "num": "5479", "d": "11/2015"}, {"title": "potential inconsistency docs regarding", "body": "docs dispatcher example note absence callback elsewhere docs note specified implementation dispatcher includes cb promise return could made consistent single canonical example dispatcher dependency work", "num": "5478", "d": "11/2015"}, {"title": "reactdomserverrendertostring presence onclick handler causes errors async update", "body": "code javascript class comp extends reactcomponent componentwillmount settimeout gt thissetstate render return reactdomserverrendertostring produces errors warning react ca nt find root component node datareactid value seeing message probably means loaded two copies react page time single copy react loaded time uncaught typeerror read property firstchild undefined remove handler errors go away see demo", "num": "5473", "d": "11/2015"}, {"title": "include flow type definitions", "body": "per comments samwgoldman following issue flow builtin react type definitions lagging behind recommendation definitions included maintained react repo flow maintainers excellent job implementing new js syntaxfeatures would great also need maintain file one could course also relegate definition yet another repo", "num": "5472", "d": "11/2015"}, {"title": "ondoubleclick event invalid set onmousedown event", "body": "help", "num": "5471", "d": "11/2015"}, {"title": "component getting rendered name nt get started capital letter", "body": "hi small react code var newprop reactcreateclass render function return hello reactrender documentgetelementbyid container works expected moment changes change variable name refresh page nothing get displayed dom warnings console change name places code looks like var newprop reactcreateclass render function return hello reactrender documentgetelementbyid container expect display however nt show anything error message console tested code even master branch thanks", "num": "5469", "d": "11/2015"}, {"title": "validate proptype definitions sooner", "body": "right validate proptype definitions nt surface issue component class consumed instead validate warnings class created means call results immediate warning logged relatively contained bit code would good candidate somebody looking start contributing react", "num": "5468", "d": "11/2015"}, {"title": "keymirror exposed", "body": "keymirror utils could exposed reactutilskeymirror way want many people include package separated could optimized", "num": "5467", "d": "11/2015"}, {"title": "react rewrite dom component changes", "body": "hard search wondering intended behavior root component call nt change anything render yet chrome seems flicker dom node get break subtree changes intended something strange", "num": "5466", "d": "11/2015"}, {"title": "deprecate", "body": "already unavailable classes already warning saying might remove nt actually github issue deprecate per discussions today basically agreed going start moving away deprecate still need figure good stories around promises related use cases issue track progress toward goal background please read", "num": "5465", "d": "11/2015"}, {"title": "available default", "body": "happy move question elsewhere point right direction get error nt call initial render error goes away simply call empty object nt part core react component api would nt present default", "num": "5464", "d": "11/2015"}, {"title": "componentdidmount fired ismounted false release mouse button released", "body": "context drag drop tree components dragging siblings items example works fine avoiding bugs need access dragged item dimensions offsetwidthheight works mounted works fine items parent dragging item one container list one element gets successively removed list added root component added list even see componentdidmount fired console ismounted returns false continuing drag list strange switching still works less userfriendly releasing drag dragging inside list work well ismounted true point ondragend fired parent drag changes code nothing particular could explain sudddenly works releasing button simply sets dragged component global state everything happens", "num": "5463", "d": "11/2015"}, {"title": "please add source url reactaddons npm packages", "body": "please add repository property react addons like reactaddonsperf required import jars webjarsorg", "num": "5461", "d": "11/2015"}, {"title": "exceptionally deep react stack traces", "body": "looking cpu profile react app chrome get layers deep react without ever reaching code every layer lose little bit performance deep call stacks also make difficult debug parts code need work expected behavior debug build react nt see anything different production version call stacks deep names functions mangled possible inline function calls production react ca nt say whether genuinely performance issue certainly makes debugging performance issues unpleasant react", "num": "5460", "d": "11/2015"}, {"title": "setstate passed component state provided callback", "body": "apologize discussed however unable dig anything proposing following javascript var parent reactcreateclass onupdate state state passed function called setstate component consolelog state clicked true render return var child reactcreateclass onclick thissetstate clicked true thispropsonupdate render return concrete example came following pr reactrouter prop passed router component invoke ever updates new route state instead forwarding along state callback provided must intentionally provided like happy firm investigated see would look like add react seems like part trouble nt great way enqueued callbacks specific parameters queue callbacks managed component property may totally wrong still learning quite bit queued updates happen rate thought might good conversation around", "num": "5459", "d": "11/2015"}, {"title": "inline style interferes reactcsstransitiongroup css", "body": "", "num": "5457", "d": "11/2015"}, {"title": "reactdomrender returns null pure functions", "body": "thrown behavior figured warranted issue js function component return var result reactdomrender el result null attempting result", "num": "5455", "d": "11/2015"}, {"title": "testutilrenderintodocument issue refs", "body": "quite unsure error coming using coffeescript tests written coffeescript tried jsx error matter anyways component ref test using jasmine karma phantomjs coffee testutils require reactaddonstestutils dollarinput reactcreatefactory require userportalsrcscriptsuidollarinput describe react dollar input gt dollarinput testutilsrenderintodocument dollarinput ideas error comes trouble shooting says maybe may two instances react loaded well using bower adding proper files karma configuration nt believe includes another version react wouldnt imagine karma loading react either nt believe adding ref outside component render function either remove ref dont get error component wont work properly", "num": "5453", "d": "11/2015"}, {"title": "expose component functions", "body": "running issue react regards exposing component functions perhaps something wrong unless stale piece documentation earlier version react react component exposes piece state function eg coffeescript selectionscontroller reactcreateclass proptypes values array getinitialstate selections getselections stateselections render rendervalue value handlechangecurry value checked gt checked setstate selections union stateselections value else setstate selections without stateselections value create instance component later try fetch selections via coffeescript controller reactcreateelement selectionscontroller values one two three user event handler consolelog controllergetselections console log line results error uncaught typeerror controllergetselections function something wrong", "num": "5452", "d": "11/2015"}, {"title": "undocumented change instances components rerendered anymore", "body": "noticed undocumented change least nt find react react nt rerender component exactly instance ie save variable look react react even using reactrender components nt state neither props try rerender instance forceupdate setstate example rendering skipped look react react could nt find react update changelog maybe falls clear work components instantiates new children render method like react", "num": "5450", "d": "11/2015"}, {"title": "react invariant violation findcomponentroot state update", "body": "code works first load state updated following error console remove reference inside prop works normally sure actual issue react could understand first time works second time fails help appreciated", "num": "5448", "d": "11/2015"}, {"title": "componentdidupdate fires references triggered associated", "body": "feel like componentdidupdate references executing wrong order background working situation list input fields blank row fields bottom press enter field moves focus next one talking register keeps track fields positions shiftenter goes reverse well press enter final field kicks flux like action results next blank field rendered want move focus row set callback fire next componentdidupdate knowing happens access new field registers componentwillmount works fine access component fine however want use method direct focus dom element within early make use references references yet bound even though componentdidmountupdate stage lifecycle seems indicate reference binding happens synchronously could easily get around using reactdomfinddomnode using queryselector find target nt clean way go solving issue believe based know api references boundexecuted componentdidupdatemount fires occur design mistake incompatibility goals", "num": "5447", "d": "11/2015"}, {"title": "adapting docs reactrb", "body": "apologize best place ask getting ready document ruby reactjs adapter reactrb would like take current reactjs docs starting point change examples etc use ruby dsl syntax believe within docs creativecommons license correct", "num": "5446", "d": "11/2015"}, {"title": "use controlled components tutorial", "body": "based discussions outside github going move away use refs tutorial use controlled components instead reacty way done tutorial avoids escape hatch refs", "num": "5443", "d": "11/2015"}, {"title": "warn duplicate copy react", "body": "looks like lost duplicatereact warning due merging contained", "num": "5441", "d": "11/2015"}, {"title": "input element focus edit", "body": "hi guys get problem write react component render virtual selector body bootstrap modal edit input focus online example", "num": "5440", "d": "11/2015"}, {"title": "reactdom apple tv", "body": "playing lately getting react work building clientserver apps new apple tv opening thread start conversation around issue case people also looking unfamiliar subject sdk new apple tv lets build javascript applications get loaded server evaluated js context device building interfaces came dom implementation flavour xml called tvml bridges native ui components apis much like react native way also small javascript api called tvjs creating documents making http calls etc way building apps alternative traditional ios development also apple tv swiftobjc uikit frameworks interesting thing default apple tv apps like music tv shows etc built js clientserver apps browserify handlebars templates first try react kind works platform might need shim available start getting details realise limitations atv dom model example noticed idl attributes working might problem elements conflicting html elements name issue property names conclusion think custom react renderer apple tv would solution strange thing would still dom renderer like configured atv elements attributes patched dom implementation quirks guys think feasible", "num": "5439", "d": "11/2015"}, {"title": "onchange text input placeholder fires without modifications internet explorer", "body": "using ie one component attribute handler onchange handler called clicking input without typing anything clicking made reproducible case codepen one opens ie look console clicks input placeholder see event handler seems known issue microsoft unwilling fix however one react goals normalize onchange event documentation implies needs workaround one possible solution would check input triggered event focused moment", "num": "5438", "d": "11/2015"}, {"title": "issues autocorrect attribute set property", "body": "hey far see attribute set html property give issues input elements check chrome documentcreateelement input false safari documentcreateelement input false mobile safari ios simulator documentcreateelement input true identical issues browsers well tested ios", "num": "5436", "d": "11/2015"}, {"title": "react testutils phantomjs error invariant violation valid reactcomponent must returned", "body": "use chrome driver everything works use phantomjs get error error invariant violation userverificationrender valid reactcomponent must returned may returned undefined array invalid object lt lt reactcompositecomponentrendervalidatedcomponent lt lt reactcompositecomponentmountcomponent lt lt lt reactcompositecomponentmountcomponent lt lt mountcomponentintonode lt lt batchedmountcomponentintonode lt lt lt batchedupdates lt lt reactmountrendernewrootcomponent lt lt lt reactrender lt lt lt test js let showerror clearerror oncomplete uv renderer beforeeach function showerror jasminecreatespy showerror clearerror jasminecreatespy clearerror oncomplete jasminecreatespy oncomplete initiateverification type function testutilssimulatechange testutilsfindrendereddomcomponentwithtag uv select target value license expect apiinitiateverification tohavebeencalledwith license", "num": "5435", "d": "11/2015"}, {"title": "allow attribute scriptstyle tags", "body": "nonce attribute helpful increasing coverage pages content security policy allowing script tags evaluated inline without enabling entire page right believe way create script tag nonce attribute use parent element", "num": "5432", "d": "11/2015"}, {"title": "force react update dom class renders", "body": "problem using reactrouter going rerendering trees use external lib api produces video mark totally hands modify dom problem comes routing changes rerenders tree wipes custom dom put third party api tried things like returning false always using blank string hoping react would internally diff nothing seems work anything stop", "num": "5429", "d": "11/2015"}, {"title": "test child props without triggering access props dom node", "body": "component whose job add certain properties child javascript const parent reactcreateclass dostuff render const child reactcloneelement thispropschildren dostuff thisdostuff return child could test like way testing ps test behavior elsewhere also need ensure given child gets reference method", "num": "5428", "d": "11/2015"}, {"title": "update tutorial use callback refs", "body": "page refs components documentation stated react also supports using string instead callback ref prop component although approach mostly legacy point yet tutorial uses stringbased refs comment box inputs since tutorial aimed newcomers may good idea explain stringbased refs considered legacy andor b use another approach", "num": "5427", "d": "11/2015"}, {"title": "license file included react reactdom npm packages", "body": "please add files full license text npm distribution packages unfortunately legal standpoint simply specifying name license enough unclear get exact legally binding text license major roadblock way using module seriously thanks lot great code thanks advance fixing blocker", "num": "5426", "d": "11/2015"}, {"title": "calling class instance argument thisstate became plain object", "body": "react component getinitialstate method returns class instance everything works fine thisstate render mthod right type call class instance argument thisstate becomes plain object javascript class state constructor text thistext text get value return thistext var main reactcreateclass getinitialstate return new state handleclick var state new state react thissetstate state bad case emerged render consolelog return thisstatevalue reactdomrender documentgetelementbyid reactwrap react gulpbabel", "num": "5425", "d": "11/2015"}, {"title": "change element css loop result", "body": "recently developed using react found ca nt change element css value certain fields class name loop result example js const data thisprops map data result index gt resultname x want remove element via change class name like change produce animation effects way help solve expecting answer", "num": "5423", "d": "11/2015"}, {"title": "links docs changelog working", "body": "especially bad links concerning migrate example changelog page breaking changes link helper points exist link section suffers fate possibly others", "num": "5421", "d": "11/2015"}, {"title": "jsx add", "body": "currently jsx supports following syntax works analogously proposing extend syntax write shorthand think analogous syntax jsx would handy shorthand also furthermore allowing following would even better shorthand", "num": "5419", "d": "11/2015"}, {"title": "onupdateonchangeoninput working input type range ie windows", "body": "onchange working chrome though following working chrome ie react version react", "num": "5415", "d": "11/2015"}, {"title": "add jsx support reversed attribute", "body": "wanted used attribute tags seems like jsx compiler nt support could supported use would make easier creating list numbers thanks", "num": "5414", "d": "11/2015"}, {"title": "reactdom separate file cdn", "body": "loading react cdn need include two separate files html given primary use react via cdn browsers nt bundle together would ever load via cdn without loading", "num": "5413", "d": "11/2015"}, {"title": "trigger eventlistener registered outside react component", "body": "trigger eventlistener registered outside react component", "num": "5410", "d": "11/2015"}, {"title": "nt exist", "body": "page mentions run installing new version reactnative says option upgrade unrecognized usage reactnative commands start starts webserver install installs npm react components bundle builds javascript bundle offline use newlibrary generates native library bridge android generates android project app confused", "num": "5409", "d": "11/2015"}, {"title": "internet explorer import syntax returns invalid component", "body": "hey broke keyboard two bug seems using babel syntax declare app way js import component react class app extends component render return app ie throws whereas instead previous works using react loaded page shimmed browserify could come well know bugfeature causing world pain inside app pretty big app lot components higher order components thanks", "num": "5407", "d": "11/2015"}, {"title": "nicer docs site", "body": "using react awhile loving front end developer would like contribute back react community would like ask react core team guys open simple reskinning prettifying docs page ideas mind make sidebar items collapsible mobile friendly vibrant color theme changes drastic mostly playing css example past work skinning site let know thoughts make pr address issues smile", "num": "5404", "d": "11/2015"}, {"title": "api reference useful", "body": "due lot text explicit explanation way search stuff api makes library extremely hard use hard someone read much rather stuff done", "num": "5402", "d": "11/2015"}, {"title": "inconsistent error messages test utilities functions", "body": "noticed returns error message find exactly one match found class classname returns error message find exactly one match tag tagname would preferrable consistent errror messages would personally prefer first format number matches reported parantheses", "num": "5401", "d": "11/2015"}, {"title": "client side usage api", "body": "hi process migrating codebase react encountered problem fact client side uses render react components passing results around strings know ideal given codebase previously sadly needed us cases however given understanding structural changes packages tell supposed simply call api accessible package use webpack yet moment using appropriate supported way calling browser using prebuilt packages", "num": "5400", "d": "11/2015"}, {"title": "document context stateless functional components", "body": "set functional component second argument function parent context undocumented unsupported unstable behavior missing documentation far tell", "num": "5399", "d": "11/2015"}, {"title": "use instead setting css properties individually", "body": "based discussion currently diff css properties imperatively set individual properties value differs previous render long claimed performance reason benchmarks nt seem support claim instance consider ben perf test realistically cases one technique faster vice versa probably wash using several advantages current approach notably solves correctness issues related various css shorthand properties noted also cleanly solves vendor prefixing variety edge cases plus added bonus means react core less work therefore simplercleanermoremaintainable", "num": "5397", "d": "11/2015"}, {"title": "changelog", "body": "npm says see sign github changelog would help understand whether upgrade later", "num": "5393", "d": "11/2015"}, {"title": "reactaddonstestutils generates warning warning", "body": "specified documentation however following warning generated due fact module exports", "num": "5392", "d": "11/2015"}, {"title": "add addons", "body": "followup reactaddons packages entry files", "num": "5388", "d": "11/2015"}, {"title": "async value updates inputs reset cursor position", "body": "hello strikes bug certainly annoying difficult workaround control input set value asynchronously say settimeout example cursor position reset end input jsfiddle try typing middle input text cursor reset end line addendum see native inputs exhibit behavior say use jquery setinterval tho still behavior want since controlled input scenario know value actually changing", "num": "5386", "d": "11/2015"}, {"title": "requestupdate setstate use deep merge", "body": "currently think common case deferred rendering way render period time see renders immediately issue lets say wanted update two css properties render course could use however since uses shallow merging updating states would cause overwriting previous state example next render render resolved state would order solve could circumvent object create second object contains computed styles render requests could happen call function like course ignoring state using another object manage style would create side effect state contained two objects nice end deep merge state would best however obviously huge change may create large performance drawbacks", "num": "5384", "d": "11/2015"}, {"title": "serverside rendertostring component claims ismounted", "body": "keep reference lifecycle method component rendered later documentation however claims serverside components nt really mounted since never called think behavior changed react might wrong", "num": "5383", "d": "11/2015"}, {"title": "componentwillreceiveprops nt detect object prop mutated", "body": "passing object owner child like nt detect change looks like taking reference passed object works nt tried using non object react intended behavior", "num": "5382", "d": "11/2015"}, {"title": "support attribute tag", "body": "implementing solution allows label act behalf checkbox ca nt add jsx", "num": "5380", "d": "11/2015"}, {"title": "docs changing rendering backend", "body": "reactfamous worked creating invisible dom structure using componentdidmount related lifecycle methods create famous scene graph another tree structure mirroring structure hidden dom bit unnecessary extra dom read somewhere alternate rendering backends place read make alternate rendering backend would completely ignore dom case scene graph example suppose like make scene graph threejs purely webgl dom wo nt come play", "num": "5379", "d": "11/2015"}, {"title": "documentation issues reactaddonsshallowcompare package", "body": "previously using method reactlib implementation used following way updating migrated using npm package reactaddonsshallowcompare assumed shallowcompare worked way anything passed shallowcompare returning true low level testing even following returning true using chrome dev tools able discover method signature expected think need better document method somewhere either npm package page addons page help others wanting make transition", "num": "5378", "d": "11/2015"}, {"title": "examplebasicjsxprecompile babel examplejs outdirbuild failed", "body": "babel version babelcore", "num": "5377", "d": "11/2015"}, {"title": "react freezing chrome task manager reports cpu tab memory increase per second", "body": "sorry vauge description ca nt think provide except source trace stack rather flummoxed edited source convey gist issue originates w onclick handler inside jsx import react component proptypes react import radium radium let row storename deals dateselected isopen toggleopen updatedateselected gt daysmap day gt row radium row import connect reactredux import updatedateselected actionsconfigactions connect null updatedateselected export default class rowcontainer extends component static proptypes updatedateselected proptypesfunc constructor super thisstate isopen false toggleopen thissetstate isopen thisstateisopen render return triggering page immediately freezes statement allows investigation calls redux reducer manages middleware called component contains rerendered w correctly updated props jsx import react component proptypes react import row viewsconfigconfigdealsrow const configdeals deals stores daterangestart dateselected gt storesmap store gt import connect reactredux connect state gt dateselected stateconfigdealsdateselected deals statecollectionsdealsentities stores statemetastores export default class configdealscontainer extends component static proptypes deals proptypesarray stores proptypesarray dateselected proptypesnumber render const deals stores dateselected thisprops return point expect react stop stuff keeps going stepping forwards w debugger yields trace stack particular function call seems trip everything comment seemed pertinent unsure large ammounts computationmutation could", "num": "5375", "d": "11/2015"}, {"title": "react objects invalid children", "body": "functions children objects react router multiple route components cases instead get makes building abstractions much easier always know find components functions objects", "num": "5371", "d": "11/2015"}, {"title": "proptypes nesting", "body": "hey using redux putting actions thispropsactions unfortunately makes hard use proptypes lacking ability nest proptypes something like solution feature upcoming", "num": "5365", "d": "11/2015"}, {"title": "onclick tag working update", "body": "none onclick handlers working development mode updating using reverting code changed reacterrorutilsjs get onclick handler working", "num": "5364", "d": "11/2015"}, {"title": "event handlers amp shadow dom", "body": "hello react currently trying make events work react components rendered within shadow dom find putting back commented lines work way enable outside library right using kind injection ones performed reactdom instance", "num": "5363", "d": "11/2015"}, {"title": "reactnative init error", "body": "use reactnative init problem githubcom errnooperation timed node version ping githubcom successful installing reactnative package npm npm err git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit cloning bare repository npm err git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit fatal unable connect githubcom npm err git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit githubcom errnooperation timed npm err darwin npm err argv install save reactnative npm err node npm err npm npm err code npm err command failed git clone templateusersguodsnpmgitremotestemplates mirror git githubcomfacebookreactgit npm err cloning bare repository npm err fatal unable connect githubcom npm err githubcom errnooperation timed npm err npm err npm err npm err need help may report error npm err npm err please include following file support request npm err usersguodsprojecttestreactnpmdebuglog ping githubcom ping githubcom data bytes bytes ms bytes ms bytes ms", "num": "5359", "d": "11/2015"}, {"title": "reason stateless function return null", "body": "return null stateless function receive error message would like know reason stateless function return null sample code thank", "num": "5355", "d": "11/2015"}, {"title": "syntaxerror trying compile mainjs described tutorial", "body": "read sudo npm install g browserify npm install save react reactdom npm install save babelify touch mainjs mainjs var react require react var reactdom require reactdom reactdomrender hello world documentgetelementbyid example next call browserify babelify mainjs bundlejs got syntaxerror nik fedora tut browserify babelify mainjs bundlejs syntaxerror unexpected token reactdomrender hello world documentgetelementbyid example parserppraise parserppunexpected parserppparseexpratom parserppparseexprsubscripts parserppparsemaybeunary parserppparseexprops parserppparsemaybeconditional parserppparsemaybeassign parserppparseexprlistitem parserppparsecallexpressionarguments", "num": "5354", "d": "11/2015"}, {"title": "uncaught referenceerror react defined", "body": "inject react js sites example insert chrome console couple seconds type", "num": "5351", "d": "10/2015"}, {"title": "inconsistency proptypes contexttypes", "body": "although contexttypes recently document react api still unstable find odd two similar annotations accept react prop validations nt work way proptypes omit proptype still receive property proptypes simply validate properties however contexttypes case receive context set validation contexttype would assume new features would given context automatically passed component similar props however forced explicitly state context component receive benefit certainly understand need validate contexts validation nt needed whats point explicitly request context unintuitive way", "num": "5349", "d": "10/2015"}, {"title": "prohibited component names", "body": "hi list reserved class names issue component named event included eventslist component tried filter list got error reserved names cheers", "num": "5347", "d": "10/2015"}, {"title": "reacterrorutilsinvokeguardedcallback appears work ms edge", "body": "looks like edge nt like fakenode nt attached body append body remove removing listener good obviously production build nt issue handler called directly click event", "num": "5345", "d": "10/2015"}, {"title": "ability call setstate constructor", "body": "design question raised another bug ideal behavior nt support constructor seems better people manually add constructor since current method encourages imperative pattern ca nt used elsewhere component cc sebmarkbage answer", "num": "5342", "d": "10/2015"}, {"title": "ok using flux", "body": "hi everybody started learning react recently often found lost limbo reading flux know concept application architecture develop website react idea use routing express use react rendering view good solution abandon flux reason use flux thanks huy", "num": "5340", "d": "10/2015"}, {"title": "performance issues", "body": "heya upgrading react using conjunction fixed data table seem taken real performance hit see fixed data table changed anything using reactdomrender function instead reactrender upgrading react going", "num": "5338", "d": "10/2015"}, {"title": "support invalid event", "body": "hi wondering invalid event currently supported tried using something like javascript handleinvalid event nt work manually attach event handler actual dom node order get working invalid event actually supported plans supporting", "num": "5337", "d": "10/2015"}, {"title": "checkboxes reacting onchange events dom checked prop provided default", "body": "js import react react export default reactcreateclass getinitialstate function return checkall false mainchange eve thissetstate checkall evetargetchecked subchecked eve consolelog evetargetchecked evetargetchecked consolelog inside else consolelog inside else render return click select deselect sub checkboxes select could alter checkboxes checked attribute provided", "num": "5336", "d": "10/2015"}, {"title": "warn people pass mutated props", "body": "constructor passing super props object differs object equality andor shallow compare original illegal warning reasonable someone assume could extend component modify props without considering ramifications bug wo nt show initial render test show component updates", "num": "5335", "d": "10/2015"}, {"title": "iframe onload event handler called chrome nonhtml documents", "body": "iframe onload event handler called firefox chrome using firefox chrome react load event fired chrome firefox onload event handler called firefox jsfiddle demonstrating issue open firefox observe dialog box appears saveopen file iframe disappears chrome iframe nt disappear tried run code debugger control never goes onload event handler chrome", "num": "5332", "d": "10/2015"}, {"title": "suggestion deprecating jsx", "body": "would like suggest deprecate jsx format pro easy match closing tag eyes fake pro designer friendly really designer still know everything javascript write web page even need know javascript tools build cons encourage ugly deeply embedded code create whole dimension ecosystem javascript every editor need syntax highlighter formatter linter every language compiles javascript might need support jsx definetelytyped better support tsx ts reactdomdiv nt check properties ts", "num": "5325", "d": "10/2015"}, {"title": "fire click event internet exproler windows", "body": "count ca nt count got issue ie windows windows ie move fine", "num": "5324", "d": "10/2015"}, {"title": "react longer works recent versions react", "body": "react wo nt load versions greater react work version time writing sure bug introduced dig root cause follow", "num": "5323", "d": "10/2015"}, {"title": "reactcsstransitiongroup warn children nt provided key attribute", "body": "docs state must provide key attribute children reactcsstransitiongroup even rendering single item react determine children entered left stayed keyattribute mandatory animations function would make sense warn key props missing direct children similarly dynamic children warn missing keys something like child reactcsstransitiongroup unique key prop check render method foo", "num": "5322", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml escapes slashes", "body": "gets turned possible avoid", "num": "5319", "d": "10/2015"}, {"title": "weird components referred", "body": "use react materialui app part code render return name notes playerlistmap function player index return index playername playernotes bind onshowinfo index var player playerlist index consolelog thisrefs thisrefsplayerinfodialogshow thisrefstxtnamesetvalue playername thisrefstxtnotessetvalue playernotes want code generate rows table player list row tapped dialog shows data row two textfield refs txtname txtnotes ca nt referred last lines produce errors pic produced consolelog onshowinfo method added ref random names test", "num": "5318", "d": "10/2015"}, {"title": "select input box combobox gets inconsistent internal state firefox", "body": "using latest firefox given following select banana state updated selected removed apple added banana visual option select box remains apple", "num": "5315", "d": "10/2015"}, {"title": "simplify definition proptypes default values", "body": "given component defined property types also would define default values property propose alternative syntax react could also reasonable default fallback property value defined bool could could strings could empty string required properties shall specify default value", "num": "5314", "d": "10/2015"}, {"title": "reactcurrentowner set constructor call causes false warnings", "body": "set constructor call constructor side effects like flux store dispatch components may get called log warning called warning misleading happened protects calls really happens one component causing side effect constructor leading component getting called nt result warning sure worth fixing something reminded original issue warning message warning setstate update existing state transition within render render methods pure function props state per issue new", "num": "5313", "d": "10/2015"}, {"title": "bugs reactaddonupdate push unshift", "body": "handlers commandpush commandunshift return new values rather let fall loop end also arguments unshift end reverse order unshifted one time rather", "num": "5312", "d": "10/2015"}, {"title": "reactdomserver nt eval java nashorn javascript engine", "body": "release modular split use code instead original results error nashorn support module system possible execute suggested code testing obtained modified use version instead executed latest version java potentially related", "num": "5311", "d": "10/2015"}, {"title": "accept color property link tag", "body": "order use safari pinned size tab icon need something like react nt support property support way handle", "num": "5307", "d": "10/2015"}, {"title": "umbrella new devtools api", "body": "per conversation sebmarkbage would cool react emitted events allowed attached devtools listen relevant events occurring core emitted events could descriptive enough devtools could track whatever internal state wants instance devtool could track perf seeing long various operations taking marked start end operation devtool could emit useful warnings core warnings could rolled devtools modulepackage tracking state internally could avoid routing onlyusefulforwarnings data throughout core anyway following relevant user wants emit custom warnings potentially slow operations executed render users want clear warnings unit testing andor hotreloading users want trackmonitor calls get statistics results gather percomponent statistics like number setstate calls renders users want fail unit tests specific warnings fire like invalid checksum warning user wants render errors using pluggable logging framework", "num": "5306", "d": "10/2015"}, {"title": "issue documentation html entities", "body": "regarding first second creates warning warning child array iterator unique key prop probably good idea manual encouraging syntax yields warning messages another approach", "num": "5305", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml inside textarea", "body": "way see example trying achieve emoji render inside text area way dangerouslysetinnerhtml value text area", "num": "5303", "d": "10/2015"}, {"title": "prevent function called within render", "body": "warning react call setstate within render method check would like add check methods project also trigger rerender expensive issue reactcurrentowner exposed react achieve current solution mind check stack trace lot expensive check would prefer something equivalent code outside react", "num": "5302", "d": "10/2015"}, {"title": "release", "body": "time let nt think anything left open milestone list enough block fixes come take em changelog could probably cleaned little bit maybe organized differently react dom fixed bug events would nt fire old browsers using react development mode fixed bug preventing use closure compiler advanced mode added support attributes elements added support attribute ensured legacy access dom nodes updated rerenders react test utils addon fixed works svg react transition group addon fix bug preventing used timeout value react bower added improve compatibility tooling x cherrypick commits x finalize changelog x ship update fiddles", "num": "5301", "d": "10/2015"}, {"title": "confusing handling within props", "body": "within listed supported htmldomproperty however including anywhere component means react treats custom component dump key value pairs without handling supported htmldom properties like etc came across trying server side rendering third party library expands nt expect react care external library overloading confusing listed valid html property release notes use also treats dom element custom", "num": "5298", "d": "10/2015"}, {"title": "reacttransitiongroup using jquery cause uncaught typeerror read property componentdidleave undefined", "body": "hi please take look adding items please click remove see consolelog cause js handledoneleaving function key var component thisrefs key check thanks", "num": "5296", "d": "10/2015"}, {"title": "text inputs manipulated multiple times unnecessarily dom", "body": "steps reproduce created js bin reproduce problem type console third pane left edit contents one text inputs rightmost pane type console show attribute edited text input updated three times dom unedited text input also updated tested code according reactaddonsperf modified input updated dom updated", "num": "5295", "d": "10/2015"}, {"title": "change owner causes issues shallow rendered tests", "body": "appears change generated causing number shallow rendered tests fail upgrading deepequals fails property simple example component exhibits issue javascript use strict fdescribe componenttest function passes fails function var components componentstester reactcreateclass assertionerror expected typeof type div key null ref null props classname foo children typeof type ul key null ref null props object owner object store owner null store deeply equal typeof type div key null ref null props classname foo children typeof type ul key null ref null props object owner null store owner null store", "num": "5292", "d": "10/2015"}, {"title": "component names displayed proxyclass react tab chrome dev tools", "body": "explicitly define component without specifying component name becomes react tab chrome dev tools running latest react dev tools", "num": "5288", "d": "10/2015"}, {"title": "event failure", "body": "button onclick event text box onchange event invalid later use jquery event bindings native binding compoentdidmount compoentdidupdate", "num": "5285", "d": "10/2015"}, {"title": "show friendly error using testutilssimulate shallow rendering", "body": "simple shallow render component button handler correctly assert properties ca nt get asserting whether button clicked using passed handler work testutils nt throw invariant violation whatever error spy never gets called manually call works expected behavior", "num": "5284", "d": "10/2015"}, {"title": "reactdom includes react", "body": "project uses react reactdom reactbootstrap reactbootstrap requires react peer dependency reactdom includes react child dependency must install react toplevel dependency order reactbootstrap work two copies react try use modal component reactbootstrap get error uncaught error invariant violation addcomponentasrefto reactowner refs might adding ref component created inside component method multiple copies react loaded fix deleting directory nodemodulesreactdomnodemodulesreact maybe reactdom changed react peer dependency instead child dependency", "num": "5282", "d": "10/2015"}, {"title": "make style attribute processing plugin custom attribute handling", "body": "experimenting different way applying styles approach easily applied angular using directive attribute react library choice radium similar example wrap function order apply logic styling suspect opportunity improve modularity react api set custom attribute handlers checkingrunning react processes node attributes current react style attribute processing could done plugin rather behavior hardcoded library make much easier libraries like radium glancing source looks easy implement behavior would glad work submit pr agreed good idea quick suggestion api", "num": "5280", "d": "10/2015"}, {"title": "equivalent reactdom", "body": "web developer using coffeescript used able div span reactdom mycomponent render gt div title span blah blah blah still available somewhere", "num": "5279", "d": "10/2015"}, {"title": "devtools make component search faster", "body": "try use search component name panel captures keystrokes suspect burning cycles filtering list nt available catch remaining keystrokes perhaps could solved web worker send searches receive keystrokes let filtering background return results ui thread thought nt know search implemented certainly missing keystrokes", "num": "5278", "d": "10/2015"}, {"title": "onclick adding handler", "body": "code like babel react dev tools seems onclick prop set correct function check function actually assigned event handler emptyfunction processenvnodeenvproduction set working since upgrading onclick stopped working use r select element react dev tools call handler works", "num": "5277", "d": "10/2015"}, {"title": "assertvalidprops breaks html name mangling", "body": "alternative would work instead html edit could remove checks production sure good idea also file", "num": "5275", "d": "10/2015"}, {"title": "component seen reactelement dom defined server side rendertostring", "body": "trying render simple hello world component server jsx babel compiled js file looks like jsx dom use strict var react require react var reactdom require reactdom var title reactcreateclass displayname title render function render return dom null hello world moduleexports reactcreatefactory title im getting invariant violation error must pass valid reactelement change createfactory createelement get dom defined", "num": "5273", "d": "10/2015"}, {"title": "immutablekeyediterable children", "body": "aware iterable support children timetable supporting keyediterable immutablejs specifically automatically providing keys children sample use case first item would end equivalent support nt roadmap somehow avoid use performance implications write helper function", "num": "5272", "d": "10/2015"}, {"title": "testutils friendly", "body": "testing docs see cjs still way pull testutils directly tried use instead like get error legacy import like get", "num": "5271", "d": "10/2015"}, {"title": "lost ime input call setstate", "body": "hi component like input english text works well input chinesejapanesekorea charaters ime breaks guess since call setstate textchanged seems call jquery directly works well question calling jquery change dom maybe good choice way refresh parts component many thanks", "num": "5270", "d": "10/2015"}, {"title": "failed parse json", "body": "failed parse packagejson data npm err packagejson must actual json javascript", "num": "5269", "d": "10/2015"}, {"title": "cursor jumps end controlled input", "body": "spicyj zpao cursor controlled element jumping end whenever format modify renders code js export default class giftpurchaseform extends component constructor props super props thisstate cardnumber cardnumberchanged event thisstatecardnumber eventtargetvalue thissetstate thisstate render return creditcardparse formatted simply turns number like card number like common usecase things like phonenumbers etc remove call pass cursor nt jump cursor still jumps even pass next value seems modification string renders means middle edits edits modification point string cause cursor jump end react chrome bug seems related line code comment bug fixed pass test even though changed", "num": "5265", "d": "10/2015"}, {"title": "calling unmountcomponentatnode recursively causes weird behavior", "body": "call unmountcomponentatnode recursively tries unmount component multiple times means componentwillunmount called weird often causes inconsistent state exception componentwillunmount fail cause stack overflow test case fails batch nested toplevel unmounts function var outer var inner reactcreateclass render function return componentwillunmount function breaks react reactdomunmountcomponentatnode container var outer reactcreateclass render function return", "num": "5262", "d": "10/2015"}, {"title": "naming reactdomserver misleading", "body": "tl dr think look actually provides two methods result static html later one gives plain html first one gives reactflavored html react quickly inject essentially get static html string understand says server name cases really want use serverside thus name based however think leads people think never use code clientside nt true nature perfectly fine use cases clientside example written lazy loader component renders nonreact static html component comes viewport rendering trick must done ca nt real dom elements inside element contents always seen string nothing ask element important lazy loading trick case allows loading images even javascript disabled addition search engines also get access images although google days support javascript idea deals lazy loading via virtual viewport also importantly using browser start fetching images resources contained within element javascript enabled use case summary server renders static html elements containing nonreactified static html client must render exact static html inside element initial render client start updating dom checking component viewport case javascript disabled still get images resources loaded wo nt lazy loaded think although might also question fact whether static rendering really abstracted dependency finally already received pull request initially attempted remove dependency purely name nt know anyone else gets noise guess quite likely happen naming things hard yet names powerful", "num": "5260", "d": "10/2015"}, {"title": "docs reactlink say note reactlink needed applications used cautiously", "body": "docs reactlink say note reactlink needed applications used cautiously assume onchange handler inputs preferred way update state reactlink et al make pattern bit less boiler plate guess wanted understand note docs start using cheers john", "num": "5259", "d": "10/2015"}, {"title": "react amp firebug playing nicely together", "body": "clear blame one lies yet couple reports react working firebug used seems affect", "num": "5258", "d": "10/2015"}, {"title": "addonsupdate push array based id", "body": "useful wonder best way use use case items indexed want use command way new may added others updated example look combine behavior advice type use case consider another command may needed", "num": "5256", "d": "10/2015"}, {"title": "selected attribute tags rendered correctly", "body": "cause selenium tests fail using getfirstselectedoption find selected item java api seems affect least forward example set selected attribute selected optiontag import react react import reactdom reactdom var app reactcreateclass getinitialstate function return value onchange function event thissetstate value eventtargetvalue render function return b reactdomrender documentgetelementbyid app", "num": "5255", "d": "10/2015"}, {"title": "perf actual react components", "body": "reactperf reactdefaultperf allow profiling react internals reactcompositecomponent really think would useful react start stop style perfing components possibly track methods automatically spit warnings long range uses would many times call shouldcomponentupdate response always returning true might insightful components many times call setstate could compare render cycles track forced renders possibly started work needed closed", "num": "5254", "d": "10/2015"}, {"title": "issue extended array componentprops", "body": "component ctor thispropsgroupby function undefinded behavior correct problem actually strange", "num": "5251", "d": "10/2015"}, {"title": "reuse component issue deal api json string different multiple files", "body": "issue reuse list component using json api load data string different multiple files example reactjs code import react react import reactdom reactdom export default class list extends reactcomponent constructor props super props thisstate data title paragraph componentdidmount getjson thispropssource function data var collection data thissetstate data collection bind render var results thisstatedata return resultsmap function result return resultposttitle resultpostexcerpt reactdomrender documentgetelementbyid list plz advise thx", "num": "5249", "d": "10/2015"}, {"title": "optimizing reconciliation unchanged dom nodes", "body": "hi sure bug feature make issue anyway seems react tries optimize reconciliation early stopping reconciliation react element reference changed however property check fails normal dom nodes practice means subtree diffed although element nt changed resulting poor performance huge subtrees tried change check little bit tried run following test application got massive performance improvement javascript import react react import render reactdom const range n gt arrayapply null length n map numbercall number const staticlist range map idx gt class app extends reactcomponent constructor props super props thisstate counter increment thissetstate counter thisstatecounter decrement thissetstate counter thisstatecounter render const counter thisstate return counter value counter staticlist render documentgetelementbyid app think optimization make sense unwanted effects unaware understood right react elements immutable strict equality check enough internalinstance yes know could solved using custom component class searching", "num": "5248", "d": "10/2015"}, {"title": "attributes support", "body": "trying use video element attributes nt work trying renders html", "num": "5246", "d": "10/2015"}, {"title": "createelement fails children node array react elements", "body": "seems silently fails using reactdom renders fine missing something", "num": "5245", "d": "10/2015"}, {"title": "change dependencies support version", "body": "set project run says required support nt installed installed nt want use reason changed file dependencies line compile comandroidsupport compile comandroidsupport works usually normal android projects nt reactnative project could find comandroidsupport error log seems bit difference says required awesomeproject app unspecified gt comfacebookreact could change dependencies support version comfacebookreact words change dependencies support version version read related issues work read page android setup dose work surely installed android support repository android support library google repository update another reason ask question day google releases support want use package still requires could make project run perfectly thank update reboot mac things changed still works put resource found matches given name android widgetmaterialbuttoncolored", "num": "5244", "d": "10/2015"}, {"title": "provide reactaddonsjs distributions", "body": "additional file distribution package multipage app could pages need without addons need addons well currently means add reactwithaddons pages avoid loading reactjs portion twice", "num": "5243", "d": "10/2015"}, {"title": "provide unminified production distribution", "body": "would nice unminified release distributions example useful web application frameworks minification runtime", "num": "5242", "d": "10/2015"}, {"title": "", "body": "example animation react fork react base fiddle jsx run another animation animation throw uncaught typeerror please try run alternately link example", "num": "5240", "d": "10/2015"}, {"title": "bugs documentcreateelement rendering", "body": "setting type textarea nt throw setting dir null div nt add attribute setting dir auto textarea throws", "num": "5238", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml escaping raw svg server", "body": "hi created following component accepts raw svg string transforms react element component works however server svg escaped import react proptypes component react export default class svg extends component static proptypes svg proptypesstringisrequired render const svg thisprops return browser console get error react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server", "num": "5232", "d": "10/2015"}, {"title": "events doesnt work", "body": "anything make clickevent work met problem every onclick event fired click happened android webview device problem thx youre help", "num": "5229", "d": "10/2015"}, {"title": "rendertostring stateless function", "body": "possible currently getting warning amp error renderrender component may accidentally tried render element whose type function nt react component warning nt set props property react element instead specify correct value initially creating element typeerror ca nt add property context object extensible object object reactcompositecomponentmixinmountcomponent object object wrapper mountcomponent reactserverrenderingtransactionmixinperform objectrendertostring let test props gt test reactrendertostring test", "num": "5228", "d": "10/2015"}, {"title": "upgrade nothing renders", "body": "hi update version want use premade component requires spent hour trying debug nothing renders tried components worked nt render either googled found need require reactdom reactdomrender nt help either render methods components called possible", "num": "5227", "d": "10/2015"}, {"title": "reactcsstransitiongroup transition wrapped around select multiple", "body": "sure happening multiple select child within reactcsstransitiongroup transition skipped completely anyone else issue", "num": "5226", "d": "10/2015"}, {"title": "issue reactdom reactaddonstestutils", "body": "hey bit trouble component tests since upgrading react particular since moving away using conjunction tests simulate clicks failing example test works uses deprecated js import react reactaddons invoke supplied function clicked function const onclick sinonspy const actionlink utility function inlined clarity const div documentcreateelement div reactrender actionlink div const element divchildren reactaddonstestutilssimulateclick element assert onclickcalled works great supplied function gets called tests pass however soon use test fails interesting combination besides passing case mentioned works example fails idea could causing problem", "num": "5225", "d": "10/2015"}, {"title": "dangerouslysetinnerhtml generates different markup client server", "body": "following code warning environments run code webpack bundle", "num": "5223", "d": "10/2015"}, {"title": "call render thisprops", "body": "would nice regular elements could get render api pure components imho nicer would also make easy move pure regular component declarations encourages thinking props immutable", "num": "5222", "d": "10/2015"}, {"title": "npm validation package install", "body": "react app folder name sports inside sports folder node modules inside node modules folder football folder react folder go football folder npm install react installing react makes application fail prevent command npm install react successful anyway right script prevent process happen work npm install react sports folder already npm packages use make automatically validated npm commands", "num": "5221", "d": "10/2015"}, {"title": "proposal nt bail reconciliation pure functions", "body": "might terrible idea throwing wall react core reconciliation principle changed nt bother reconciling understanding two goals good heuristic unlikely two different components yield similar dom one stateful component instance ca nt morph another component type however makes pure function components pretty much pain hot reload class components currently ca nt swap react bail reconciliation destroy state dom result undermines hot reloading experience crucial way keep resorting workarounds like insanely complex proxies interesting thing note pure function components longer applies stateless instances right even react bail reconciling different stateless component would weird morphing instances would probably less efficient development live hand making hot reloading easy simple tools beneficial maintaining complex solutions hard people depend infra wait upgrades maybe suggesting something crazy sure certainly important consequences outside hot reloading performance changes example transition js const button children gt children const toggle children gt children currently resets internal state proposed change would merely changing two stateless components per proposal enough bail reconciliation think", "num": "5219", "d": "10/2015"}, {"title": "return null stateless fn component nt throw error using shallow renderer", "body": "basic react application return null false inside stateless function component throws error using shallow renderer error thrown everything works expected consistent behavior error received returning inside stateless fn component using reactdom render method found returned component instance may forgotten define render returned nullfalse stateless component tried render element whose type function nt react component allowing would really great error message mentioned guess purpose", "num": "5218", "d": "10/2015"}, {"title": "plans extracting proptypes checks react", "body": "could useful variable checks like function arguments", "num": "5215", "d": "10/2015"}, {"title": "mountwrapper calls input select textarea include listeners property", "body": "per mountwrapper calls input select textarea include listeners property wrapperstate avoid changing hidden class assignment made would also better free function trying get away oo core anyway", "num": "5212", "d": "10/2015"}, {"title": "update existing input compoent value reactjs", "body": "problem posted stackoverflow answer maybe issue react please see maybe show right way solve type problems", "num": "5208", "d": "10/2015"}, {"title": "unable unittest react component", "body": "trying write unit test component using jest tried got error issue react jest", "num": "5207", "d": "10/2015"}, {"title": "getelementbyid testutils renderintodocument", "body": "writing karma tests since nt actually render may find component id", "num": "5204", "d": "10/2015"}, {"title": "please add events onfocusin amp onfocusout", "body": "subj", "num": "5202", "d": "10/2015"}, {"title": "keymirror module found error", "body": "hi using tutorial works version version require reactlibkeymirror longer works updated code use require keymirror todo example also returning find module keymirror", "num": "5201", "d": "10/2015"}, {"title": "gitter channel", "body": "know guys irc channel guys gitter channel", "num": "5200", "d": "10/2015"}, {"title": "react performance bound functions", "body": "abstracting components sometimes find necessary bind function parameter passing child component example list counters want bind increment prop increment appropriate counter always returns new function even though inccount referentially equal every time bind get new function also wouldnt make sense entirely rewrite counter accept incatindex index seems crazy create kind helper component anyways thought put would amazing help performance way perhaps nonnative way accomplish following specifially react", "num": "5197", "d": "10/2015"}, {"title": "read property componentdidleave undefined", "body": "trying get info react docs nt see anything similar getting error console everytime item deleted collection read property componentdidleave undefined using anywhere idea", "num": "5196", "d": "10/2015"}, {"title": "npm install fails windows npm", "body": "built master webstorm npm failed error fbjsscriptsnodecheckdevenginesjs assertionerror current npm version supported development expected satisfy commenting semversatisfies block line allowed build proceed", "num": "5194", "d": "10/2015"}, {"title": "dominating reactperfprintdom printwasted", "body": "believe safari hack seeing get control even elements nt updated rerendered change necessary dom also causing weird interactions reactrafbatching forked working fine fast interactions cause errors attempting run example printdom output", "num": "5189", "d": "10/2015"}, {"title": "avoid error developing external component", "body": "developing external component let say link project process need package reflect changes folder dependencies however peerdependences suppose bring project linking package however using link whole directory including project builds includes packages times begins affect component using causes error also may help understand happening problem appears one error message usual package installation bring error supposed develop external component project time", "num": "5188", "d": "10/2015"}, {"title": "bower reactdom uncaught referenceerror reactdom defined", "body": "installing reactdom adding globally html get referenceerror reactdom isnt defined", "num": "5186", "d": "10/2015"}, {"title": "reactjest mocking issue keymirror", "body": "ran issue testing jest amp npm ultimately realized since npm installs everything siblings packages react depends still get automatically mocked therefore break example error like looking file referenced file using create eventconstants since mocked return undefined thus causing error might part bigger problem jest supporting sure issue live repo immediately react could depend fbjs use keymirror implementation", "num": "5183", "d": "10/2015"}, {"title": "confused performant way key usage list fixed count", "body": "hi searched lots still confused best way get maximum performance dom operations also cpu memory usage lot assumptions would like ask please list always fixed count items lets say illustrate example list stream new elements frequently get pushed old elements removed list sample render list like example bellow react remove dom first item append new one element list unique id insert elements react remove divs appends divs q example react create destroy new component everytime push remove item maybe consumes cpu removing first div appending new one may less expensive dom operations next example render list like react remove first div update text content divs id index element list always first element q example react reuse component instead destroying creating new one everytime push remove item maybe consumes less cpu first example updating context div may expensive dom operations previous example nt know best way handle honest even sure reacts really scare browser internals image list amount elements maybe option prefered huge list elements option prefered im saying nonsense c also guess depend content div content divs always option like noop option remove append new div every time right thanks advance sorry asking", "num": "5182", "d": "10/2015"}, {"title": "double import css file closed", "body": "traditional kind issue nt know could considered traditional issue normally would turn stack overflow less oddity nt occur stumbled upon setup server side rendering webpack express babel webpack dev middleware basically setup right dev specific generates webpack resources memory express server react router place facilitate routing history api frontend basically express backend render serverside components provide backend routing frontend react app hook backend rendered components hook necessary events clientbased routing routes defined backend using node support modules default included babel hook need hook want share jsx components define frontend prerender certain routes backend seo came across something weird components import css file webpack loader import styletag page routing defined simplicity sake app welcome faq following import statement app faq welcome get following error babel syntaxerror usersmobinnidocumentsworkicappsktfrontendappstylescomponentwelcomescss unexpected token welcome color purple parserppraise parserppunexpected parserppparseexpratom parserparseexpratom parserppparseexprsubscripts parserppparsemaybeunary parserppparseexprops parserppparsemaybeconditional parserppparsemaybeassign parserppparseexpression parserppparsestatement parserparsestatement parserppparsetoplevel parserparse objectparse objectexportsdefault everything works perfectly babel parse everything remove import statement one subroutes welcome faq bundle perfectly webpack never complained running babelloader babel compile jsx js introduced hook able import frontend components backend started going haywire hoping maybe someone could explain happens know github issues nt place ask questions reiterate nt know issue", "num": "5181", "d": "10/2015"}, {"title": "data attribute working html elements custom component", "body": "hello create component try generated html find datatestid parent datatestid child root element mycomponent ca nt find may data attribute custom component maped root element thank", "num": "5180", "d": "10/2015"}, {"title": "typeerror read property touppercase undefined case instead component defined", "body": "happens meteor however almost positive versions react sure could check", "num": "5177", "d": "10/2015"}, {"title": "defaultchecked nt render check attribute second load", "body": "hi got component wo nt check radio go view id second time started list component reactrouter index site click view button element radio checked return list go another element checked anymore inspect component react developer tool radio defaultcheckedtrue property javascript import react react import connect reactredux class licenseradios extends reactcomponent buildradios let licenses activevalue thisprops render return thisbuildradios export default licenseradios happen thank", "num": "5173", "d": "10/2015"}, {"title": "enqueuecallback invariant specifyidentify actual object failure message", "body": "oddly enough two examples equal thought would js windowaddeventlistener resize thisforceupdatebind throws error windowaddeventlistener resize gt thisforceupdate works fine error follows assuming function assuming optional callback would expect code typeof check defined check change check submit pr", "num": "5172", "d": "10/2015"}, {"title": "graphql react compatibility", "body": "related every time try use graphql react together face problem graphql returns nonexisted fields react works since people gon na use react graphql think nice way handle case mb nice way hacky deal right missing something", "num": "5171", "d": "10/2015"}, {"title": "support attributes reactdom", "body": "two properties required showing subtitles video element currently nt support react attributes subtitle kind required better add different type track two add supported list nt need use render tracks", "num": "5169", "d": "10/2015"}, {"title": "invariant violation objects valid react child meant render collection children use array instead wrap object using createfragment object", "body": "component render function everything renders fine however clicking element receive following error change inside map function everything works expected", "num": "5168", "d": "10/2015"}, {"title": "react addons minified version nt testutils", "body": "include reactwithaddons available globally include minified version", "num": "5163", "d": "10/2015"}, {"title": "reactcsstransitiongroup unexpected behavior values", "body": "javascript function createtransitiontimeoutpropvalidator transitiontype var timeoutpropname transition transitiontype timeout var enabledpropname transition transitiontype return function props transition enabled props enabledpropname timeout duration provided props timeoutpropname return new error timeoutpropname wasnt supplied reactcsstransitiongroup cause unreliable animations wont supported future version react see information returning error saying value supplied value supplied checks type number late catch already succeded something like would better javascript function createtransitiontimeoutpropvalidator transitiontype var timeoutpropname transition transitiontype timeout var enabledpropname transition transitiontype return function props transition enabled props enabledpropname timeout duration provided props timeoutpropname undefined return new error timeoutpropname wasnt supplied reactcsstransitiongroup cause unreliable animations wont supported future version react see information else typeof props timeoutpropname number return new error timeoutpropname must number milliseconds", "num": "5162", "d": "10/2015"}, {"title": "reactdom nt published bower", "body": "", "num": "5161", "d": "10/2015"}, {"title": "bower distribution include nondeprecated rendertostring", "body": "corner cases within clientside application requires functionality deprecated favor unfortunately bower distribution include way reference", "num": "5159", "d": "10/2015"}, {"title": "use reactdom react", "body": "hi try upgrade packages support react reactdom understanding right want support without warnings cant support anymore without asking people workaround like aliasing webpack config right missing something", "num": "5155", "d": "10/2015"}, {"title": "jsx listeners broken react android lte nodeenvdevelopment", "body": "still quite new react guess bug react framework introduced seems like listeners attached jsx broken native android browser android lte compiling code nodeenv development everything works fine nodeenv production compilation tracked related reacterrorutils development mode guards events source code simply remove part code compiling react app listeners starts working guess intentional instead bug reproduce problem android lte code works eg chrome browser using precompiled getting started lib hello react", "num": "5153", "d": "10/2015"}, {"title": "support invalid event within form elements", "body": "invalid event fired submittable element checked nt satisfy constraints ref", "num": "5152", "d": "10/2015"}, {"title": "reactmount cache gets repopulated unmounting nodes", "body": "problem master repro slightly elaborate case crashes without new poison error unmount remount tree keys", "num": "5151", "d": "10/2015"}, {"title": "reactdefaultpreftestjs randomly fails", "body": "hello everybody relatively new project think ran issue running grunt test recently cloned copy master branch getting failed test every without touching part code error found count noop update waste happens expect summary instances tobe error message expecting instances randomly returns", "num": "5149", "d": "10/2015"}, {"title": "reactchildrenmap nt traverse stated docs", "body": "according docs however use function example something like html username reactchildrenmap thispropschildren finds elements inside misunderstood docs bug", "num": "5148", "d": "10/2015"}, {"title": "best define proptype accepting component prop", "body": "given contrived example best definition const componenttype proptypesoneoftype proptypesshape render proptypesfuncisrequired reactcreateclass reactcomponent better way describe proptypesfunc stateless function others const selector reactcreateclass", "num": "5143", "d": "10/2015"}, {"title": "react migration error", "body": "got next error migrated version exports related next string doc change code", "num": "5139", "d": "10/2015"}, {"title": "optimization breaks older browsers discussion symbols reactelementfromobject api", "body": "see associated discussion around pr nt expect merged due loader issues recap optimization requires brittle knowledge internal react values namely breaks older browsers unless developer globally polyfills polyfilled automatically babel user code polyfilled react library causes fail worse bug occurs older browsers nt implement symbol meaning many devs wo nt catch right away work fine ff chrome latest safari hard issue fix without globally polyfilling symbol giving use babel could automatically part enabling optimisation loganfsmyth better idea api function would nothing ensures using equal one used nt necessary validation caught later thoughts", "num": "5138", "d": "10/2015"}, {"title": "select value outputs selected selected option", "body": "rendering select list selected item manner render html looks like reason part output question rather anything else use capybara test app upgrading react try get value select field returning breaking large amount tests traced difference html react outputting outputting", "num": "5136", "d": "10/2015"}, {"title": "component onclick alert error invariant violation setstate", "body": "getting following error message uncaught error invariant violation setstate update existing state transition within render render methods pure function props state fix", "num": "5135", "d": "10/2015"}, {"title": "get standalone build js file reactdomserver", "body": "serverside rendering reactjsnet seeing warning upgrading library react reactjsnet uses directly ie use nodejs ca nt simply npm module within library imagine noderails situation build js file containing reactdomserver webpackbrowserify bundle", "num": "5134", "d": "10/2015"}, {"title": "react nt work defaultvalue select element", "body": "see regression ie code working fine wrong watched source code reactjs think problem", "num": "5133", "d": "10/2015"}, {"title": "building grunt build ends error", "body": "hi problem trying build react using installation manual running ends immediately windows running creates modules build folder dont know friend mine issue reason trying build react adding custom svg elements attributes thanks", "num": "5132", "d": "10/2015"}, {"title": "react ref callback sometimes gives null", "body": "expected behavior logs last two logged apart componentwillupdate componentdidupdate js class app extends reactcomponent constructor super thisstate settimeout gt thissetstate render return behavior master", "num": "5131", "d": "10/2015"}, {"title": "findrendereddomcomponentwithtag ca nt search html element", "body": "hello trying test react component renders element component test findrendereddomcomponentwithtag locate tags exist unable find element probably means dom unexpectedly mutated repeatable demo", "num": "5128", "d": "10/2015"}, {"title": "reactdomrender vs reactrender callback", "body": "ran strange problem transitioning react use promisified api internally application various reasons need handle mounted instance element big deal get handle instance react finished nondeterministic render renderer service return new promise function resolve reject reactrender reactelement node function resolve someone using renderer service return renderer element somenode function mountedelement update able swap implementations without thought right well apparently getting error message correlating help wiki scraped app looking invalid usage refs nt also ca nt see case one react page unless shenanigans caused including browser removed checked case problem loading react browserify packagejson", "num": "5122", "d": "10/2015"}, {"title": "page messed facebookgithubioreacthtmljsxhtml", "body": "know post best since weeks layout looks broken google chrome linux screenshot", "num": "5121", "d": "10/2015"}, {"title": "causes css issues", "body": "realized react replaces empty elements pretty unexpected discovered saw interesting production bug consider html set visible would expect two fields still separated margin case generated markup look something like html unexpected know guide said plans nothing status given last releases wanted bring attention", "num": "5119", "d": "10/2015"}, {"title": "object even though using class property initializers", "body": "used class property initializers get around annoying within method however react looks like props object javascript export default class test extends component constructor props context super props context whateverhandler e gt used instance object looks like children object someprop true render return actually either bind within handler bind constructor level feel like actually wrong", "num": "5118", "d": "10/2015"}, {"title": "update readme", "body": "references remain readme thanks kudos fixing fast", "num": "5117", "d": "10/2015"}, {"title": "downloads page link", "body": "use script tags directly npm use reactjs reactdomjs tutorial shows blog post download links main downloads page", "num": "5115", "d": "10/2015"}, {"title": "injectidoperations undefined", "body": "upgraded today receiving error using browserify code looks like", "num": "5112", "d": "10/2015"}, {"title": "reactcsstransitiongroup invariant violation multiple copies react error", "body": "hello react reactdom reactcsstransitiongroup addon installed using npm compiling using babel webpack code mostly copied jsx import react react import reactdom reactdom import reactcsstransitiongroup reactaddonscsstransitiongroup var todolist reactcreateclass getinitialstate function return items hello world click handleadd function var newitems thisstateitemsconcat prompt enter text thissetstate items newitems handleremove function var newitems thisstateitems newitemssplice thissetstate items newitems render function var items thisstateitemsmap function item return bind return reactdomrender documentgetelementbyid app produces error output bundle appear multiple copies react using error nt present noticed nt require react maybe cause", "num": "5110", "d": "10/2015"}, {"title": "starter kit creating react components", "body": "could helpful sample project would centralize single place react best practices build component something simple like example custom input field stateless stateful also could excellent starting point providing migration steps actual code rather bullets document like happened release additionally could evolve something like integration nodejs tooling linting eslint transpiling babel package management bundling webpack jspm small testing infrastructure etc publishing yeoman generator disclaimer issue react rather proposal better supporting react development", "num": "5108", "d": "10/2015"}, {"title": "push tag github", "body": "currently absent consequentially releases page still shows latest", "num": "5104", "d": "10/2015"}, {"title": "update changelogmd", "body": "congratulations new version would possible update reflect changes cheers", "num": "5103", "d": "10/2015"}, {"title": "componentdidupdate infinite loop better error message", "body": "caused infinite loop calling thissetstate componentdidupdate warning received maximum call stack size exceeded stack showed react code never product code result super hard time consuming track thoughts detecting bad behavior somehow giving nicer error message", "num": "5097", "d": "10/2015"}, {"title": "legacy props dom node nt updated rerender", "body": "prod mode would fix though", "num": "5095", "d": "10/2015"}, {"title": "ontouchstart event null touches", "body": "event comes ontouchstart handler null field touches eventnativeeventtouches field bug design feature", "num": "5092", "d": "10/2015"}, {"title": "thisrefs giving empty logging refs empty componentdidmount", "body": "code componentdidmount render code jsx gettablecontent function var tablecontent dialogbox var e thisstatedata var status thisstatedata e requeststatus status else thisstatedata e requeststatus status closed dialogboxpush askdjgasjk tablecontentpush return tablecontent tablecontent dialogbox dialogbox render function var content thisgettablecontent var page thisgetpage consolelog consolelog thisstate return request status content dialogbox problem", "num": "5091", "d": "10/2015"}, {"title": "custom element ca nt render independently", "body": "also possible specify component sets children attribute components child nodes independently example related superset might another motivation reconsider wanted", "num": "5090", "d": "10/2015"}, {"title": "custom elements prop gets coerced string", "body": "hello react custom tags rendered fine example would render since process migrating saw renders like set jsx property instead render attribute custom tag afraid intended behavior intended behavior please close issue give documentation tried find something related last hours", "num": "5088", "d": "10/2015"}, {"title": "rendering single node multiple places safe", "body": "want place widget multiple places dom seen code wonder safe mess react internals works minimal example want make stacked tables implementation like table placed twice placed times responsive mode stacked table row displayed keyvalue table turning table tablestacked table set combo using media query show either table stacked table set", "num": "5087", "d": "10/2015"}, {"title": "dynamic styles working", "body": "reason dynamic part component get updated dom following component error span get proper styling input tag know getinputstyle return necessary boxshadow however dom input element style attribute appear event happens", "num": "5086", "d": "10/2015"}, {"title": "feature request provide isoptional proptypes", "body": "would useful member negate use case const thinglist things gt thingsmap thing gt thingname thinglistproptypes things proptypesarrayof proptypesshape name proptypesstringisrequired isrequired const whatever things title gt title whateverproptypes things thinglistproptypesthingsisoptional title proptypesnode property required conditionally renders passed reuses proptype makes optional would alleviate need make separate variable everything referenced", "num": "5080", "d": "10/2015"}, {"title": "link reactdom cdn", "body": "version reactdom tutorial used tutorial console outputs error follow link", "num": "5079", "d": "10/2015"}, {"title": "use semvar", "body": "versioning scheme actually quite childish doesnt comply industry standard majorminorpatch major break previous libraries use minor adds new functionalityfeatures patch something broken indicates still development anything change time yet people already using product production relying heavily send message end users care compatibility issues using semantic versioning nodejs finally moved real semantic versioning iojs merged clearly explains backward compatability issues different versioning", "num": "5077", "d": "10/2015"}, {"title": "broke", "body": "function nt quite working anymore upgrading import reacttestutils reactaddonstestutils const definition const spinner reacttestutilsrenderintodocument definition line fails reacttestutilsfindrendereddomcomponentwithclass spinner uispinner error stack looks something like", "num": "5076", "d": "10/2015"}, {"title": "thisrefs returning element specific components", "body": "sure cause pattern yet components causing return following object within components fine however edit see bottom post possible cause post whole object necessary snippet component componentdidmount function consolelog thisrefsnumber consolelog thisrefslabel render function typing noticed using custom component setting ref maybe problem could bug assigning ref custom component type note works correctly albeit warning", "num": "5074", "d": "10/2015"}, {"title": "dom nesting warning confusing whitespace text general", "body": "user puts textnode whitespace illegal location warning complains element wrap text including whitespace span confusing new users since present code introduction tag implementation detail react fix warning better align code user looking", "num": "5071", "d": "10/2015"}, {"title": "order guaranteed reactcreatefragment", "body": "according react docs seems assumption maps javascript guarantee order keys afaik true see stackoverflow question could lead crossbrowser issues createfragment", "num": "5070", "d": "10/2015"}, {"title": "error synthetic event dispatch", "body": "", "num": "5069", "d": "10/2015"}, {"title": "tbody children remove error", "body": "found obscure problem rerendering tbody smaller amount children minimal example reproduce select rows press apply get table rows select lesser amount rows press apply get fix remove spaces table render line sure real bug woul nice mentioned error message", "num": "5068", "d": "10/2015"}, {"title": "proptypes metadata", "body": "great proptypes property gave vision expectations would allow easily generating documentation without parsing code easier allows flexibility like reusing proptype shapes etc also helps test automation coverage reports also related note method proptypes would allow better error messages documentation coverage report output static analysis error messages eg flow expression result react core started writing library realized tools like flow require use react proptypes would nonbreaking change think adds moderate amount value", "num": "5067", "d": "10/2015"}, {"title": "dynamic elements div textarea", "body": "trying render dynamic element using props element type text component worked older versions react however nt example getting invariant violation supply pass children using reactdom reactrouter isomorphic better way handle please let know", "num": "5064", "d": "10/2015"}, {"title": "react fails render svg children edgeie", "body": "gist illustrates issue work expected rendering red circle browsers run script phantomjs assuming page hosted however throws error error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags like using nonsvg elements parent try inspecting child nodes element react id fails insert circle", "num": "5061", "d": "10/2015"}, {"title": "refusing install", "body": "anyone today facing problem gettin react installed dependency node v npm v", "num": "5060", "d": "10/2015"}, {"title": "component nt unmount componentwillunmount returns false", "body": "implementing function returns value component nt unmount could nt find reference behaviour documentation bug design design documented", "num": "5059", "d": "10/2015"}, {"title": "traverse react components including dom components without testutilsfindallinrenderedtree", "body": "react longer give ability traverse already rendered components inside root component testutilsfindallinrenderedtree dom components excluded better practice going components inside root component", "num": "5058", "d": "10/2015"}, {"title": "incorrect reactdom package bower", "body": "tried following pick reactdom however said version available poking around github yielded repo called reactdom appears linked bower guessing nt right library dependency installation story going look like bower", "num": "5054", "d": "10/2015"}, {"title": "componentwasmountedcomponentwasupdated formerly componentdiddisplay", "body": "proposal new lifecycle fires eventloop returned reconciliation started effectively give nt block visual output could good place set timers subscriptions etc", "num": "5053", "d": "10/2015"}, {"title": "react webcomponents", "body": "see lot questions blog posts discussions around none actually official statement facebook could clarify whether going implement specs future also quite github issues around subject like enable rendering shadow roots allow rendering document fragment track upcoming dom technology upgrades proof concept shadow dom support support custom dom elements amp attributes templates add naive custom element support add support future custom elements etc nevertheless opensource projects allows aware like seems reconciliation inevitable thus part spec might need change order widely accepted among opensource community browser vendors wrapping components importing good including html pages importing less defining new markup interact way native html elements allowing extend existing native html elements giving lifecycle methods already possible even though xhtmllike syntax transpiles javascript ultimately becomes html hard cases even impossible polyfilled reason using current browser support adopting conventions even inline styles backed javascript objects remains viable alternative still different really pointless without data binding twoway data binding slow polyfill slow also twoway data binding code complexity fact dependencies components bigger complexity grows opposed unidirectional data flow oneway data flow immutable data structures potential scale highly performant especially think largescale applications complex interactions thousands entities even though opensource community looking end developer experience matters drives adoption doubt standards place therefore question strategy sebmarkbage thoughts", "num": "5052", "d": "10/2015"}, {"title": "linkedstatemixin default value link state", "body": "using default values set property since properties initialization time ca nt derive dynamically ie api call would possibility second parameter default value added way code could supported jsx assume mixin applied class foo extends reactcomponent componentdidmount settimeout gt thissetstate defaultval asyncdefault render return actual patch quite trivial however sure create new reactlink every change regardless linked value actually existing someone familiar react probably fill point diff param string key state key update note may want use keyof using google closure compiler advanced mode param defaultvalue default value use case thisstate key undefined return reactlink reactlink instance linking state linkstate function key linkstate function key defaultvalue return new reactlink thisstate key undefined thisstate key thisstate key defaultvalue reactstatesetterscreatestatekeysetter key sure future plans might interesting definitely wrap class like", "num": "5051", "d": "10/2015"}, {"title": "components able render arrays nodes", "body": "last two weeks encountered problem wanting return arrays nodes component rendering two times building tree rendering flat list node children level building table rows rendering two table rows one piece data cases hacky work arounds since component held ui state node children rows finding components returning single node limiting lead head scratching workarounds try unroll logic read issues related hope two concrete cases help reconsider loosening component principles one component one dom node since reality cases case", "num": "5050", "d": "10/2015"}, {"title": "default lifecycle methods reactcomponent", "body": "small api detail would make sense implement default empty lifecycle methods base reactcomponent class would allow homogenous implementations far super calls concerned example following throw due missing implementation parent class however overloading class missing super call might introduce bugs got think maybe safer always put supercall discovered possible heriting base class", "num": "5047", "d": "10/2015"}, {"title": "invariant violation setenabled toggle event listening worker thread", "body": "trying create unit test simple react view using testutils following react old know jsdom mocha nodejs view javascript var react require react var studentnameview reactcreateclass moduleexports studentnameview current attempt unit test javascript var sinon require sinon var expect require chai expect var jsdom require jsdom var react var testutils var view describe student name view function unfortunately unit test fails error error invariant violation setenabled toggle event listening worker thread likely bug framework please report immediately invariant objectmergesetenabled reactreconciletransactioneventsuppressioninitialize reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactcomponentmixinmountcomponentintonode object objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent objectreacttestutilsrenderintodocument context test trying learn write unit tests react components something wrong indeed react bug mentioned first error related", "num": "5046", "d": "10/2015"}, {"title": "problems rendering material design lite components", "body": "trying implement simple login page using react google material design lite mdl framework come across strange thing mdl input floating label nt work rendered using react code var login reactcreateclass try use thing directly html works fine ps works fine mean animation colored line appears text box onfocus think something synthetic event system implemented react fiddled around javascript found bit stuff native keydown onfocus events among others similar thing happening elements like expanding text field nt checked sure react mdl break many components mdl framework synthetic event system way work around get working safe assume react mdl incompatible", "num": "5044", "d": "10/2015"}, {"title": "testutilssimulateclick nt bubble window document", "body": "possibly dupe test javascript import react react import testutils reactaddonstestutils class testelement extends reactcomponent render return describe foo gt bar gt var element testutilsrenderintodocument logs thing click handlers never called something wrong thanks advance", "num": "5043", "d": "10/2015"}, {"title": "onscroll never fires", "body": "trying ca nt seem get working onwheel fires normally onscroll firing dunno missing something bug thanks", "num": "5042", "d": "10/2015"}, {"title": "becomes undefined called onclick inside class extends reactcomponent", "body": "something similar code snippet javascript class mybutton extends component comment specifies tap method got called button onclick got error basically told undefined error gone declare class using reactcreateclass intentional thank advance", "num": "5040", "d": "10/2015"}, {"title": "misleading error messages presence unnecessary", "body": "porting nonjsx react code eg coffeescript jsx forgetting remove unnecessary calls following warnings errors issued seemingly unrelated root cause renderrender component may accidentally tried render element whose type function nt react component warning nt set props property react element instead specify correct value initially creating element typeerror ca nt add property context object extensible reactcompositecomponentmixinmountcomponent wrapper mountcomponent objectreactreconcilermountcomponent mountcomponentintonode reactreconciletransactionmixinperform batchedmountcomponentintonode reactdefaultbatchingstrategytransactionmixinperform objectreactdefaultbatchingstrategybatchedupdates objectbatchedupdates objectreactmountrendernewrootcomponent repro source originally noted google many potential related issues show", "num": "5039", "d": "10/2015"}, {"title": "syntheticevents lose original property values ie clientx amp clienty", "body": "gist also tried using avail seen referenced multiple times properties null ie also worth noting client xy properties eventnativeevent also set majority clicks return events correct values small sample abnormally return", "num": "5036", "d": "10/2015"}, {"title": "bug ref nt show", "body": "setting element nt show class js constructor props super props statement fires get error", "num": "5033", "d": "10/2015"}, {"title": "errors could helpful", "body": "example error bottom see file file mainjsx renders root ui ui big obviously pointed root ui helpful great error pointed specific part render tree happening go wild goose chase", "num": "5031", "d": "10/2015"}, {"title": "css property lost rerendering image url inside adjacent property", "body": "css property shorthanded many various ways inlining multiple styles including property react seems optimize rerender example define style like initial render returns style form change state cause rerender style format changed seems break changing state url inside property also defining initial render return expected style however changing url results rendering style without example demo", "num": "5030", "d": "10/2015"}, {"title": "reacttransitiongroup inprogress transitions interruptible like css transitions", "body": "remove child calls callback nt call calls callback may intended behavior way css transitions behave least modern browsers know toggle opacity every second div never finishes going first second transition rather gets interrupted one second new transition back begins repo reproduce issue run look console see component leaving gets held components finish entering entered messages never appear components leave finish entering like spec csslike behavior internally keeps track whether component appearing entering leaving component removed entering appearing state set leaving called immediately component added back leaving state set entering called immediately calls callback action taken unless component appearing state calls callback action taken unless component entering state calls callback action taken unless component leaving state", "num": "5027", "d": "10/2015"}, {"title": "react virtual dom performance", "body": "found website comparing performance virtual dom implementations different libraries like uix citojs bobril deku others screenshot benchmarks libraries lower score better performance seems react highest score lowest performance infernojs lowest score highest performance benchmarks run way react use infernojs vdom implementation increase performance", "num": "5024", "d": "10/2015"}, {"title": "updates bailing transactional setstate call", "body": "practical reasons performance energy conservation sense react components nonidempotent side effects occasionally check state setting would like able transactional version well toy example piece component state gets updated scroll event due event batching especially rn multiple scroll events fly batch", "num": "5015", "d": "9/2015"}, {"title": "warn input value null", "body": "passing indicates user tried specify value eg database nt notice value null seems like warning normally treat null undefined case passing null indicates error therefore discouraged user decide want uncontrolled component case pass undefined want empty controlled component case pass empty string spicyj said would fine warning andor treating null empty string making errorwarning advantage easy upgrade path fix warning without us introducing subtle changes behavior break people apps", "num": "5013", "d": "9/2015"}, {"title": "make reacttransitionchildmapping flattenchildren public api", "body": "created pr issue able use long time using fork course relies looks like kind approach longer possible deeply intertwined lot react internals possible use internals people could create innovative new components example long wanted create variation automatically staggers child entry even children added time classic staggered animation effect would quite useful", "num": "5012", "d": "9/2015"}, {"title": "still seeing original setstate warning mounted component missing component name", "body": "using install warning shows call one alt stores really confused commented component listening store still see warning improved error message could help", "num": "5011", "d": "9/2015"}, {"title": "standard mixin substitute classes", "body": "well used reactonclickoutside mixin detecting mouse clicks outside react component used classes proposed wrapper functionhigherorder componentdecorator pr pomaxreactonclickoutside author pomax asked check find whether aligns might become official approach realizing mixinlike functionality classes merges seems becoming de facto standard couple larger libraries following approach including yahoo fluxible connecttostores material ui themedecorator relay syntax also appears similar intended use documented changes pr mentioned", "num": "5010", "d": "9/2015"}, {"title": "testutilssimulatekeydown trigger onchange event", "body": "hi guys testing react component js class numericinput extends reactcomponent js beforeeach gt onchange jasminecreatespy onchange numericinput rewire numericinput renderednumericinput testutilsrenderintodocument inputnode reactfinddomnode testutilsfindrendereddomcomponentwithtag renderednumericinput input call onchange user press enter key gt testutilssimulatekeydown inputnode keycode expect onchangecallscount toequal default view type onkeydown triggered onchange unit test trigger onchange", "num": "5006", "d": "9/2015"}, {"title": "strange optimization production mode", "body": "version brings performance optimisations unfortunately behave differently react compiled development production mode confusing code works one mode still work development mode fiddle logs react behavior production mode fiddle logs optimization seems trigger component reference nt change fiddle uses production build child component always new instance works expected production mode workaround", "num": "5005", "d": "9/2015"}, {"title": "findcomponentroot unable find element error thrown reactdomfinddomnode called componentwillmount new renders", "body": "recently ran error updating pile hunting thinking might related changes made nt test component right update made major changes even discarding experiment thought fault finally realized error called call made inside valid alphas change nt documented context error message would appreciated current wording mislead developers looking bugs wrong places since calling nothing mutating dom changes dom setup", "num": "4999", "d": "9/2015"}, {"title": "react nt follows semver", "body": "almost every release introduces breaking changes would easier maintain react bumped first digit version every time breaking change", "num": "4998", "d": "9/2015"}, {"title": "react videoaudio support", "body": "", "num": "4997", "d": "9/2015"}, {"title": "make traverseallchildren object invariant nicer passing probablyoldreactelement type props typeof", "body": "", "num": "4996", "d": "9/2015"}, {"title": "prefixed order css style get px appended", "body": "explained doc style one appended safari work need specify get appended even coerce integer string", "num": "4994", "d": "9/2015"}, {"title": "find performant way update without building whole element tree", "body": "scroll animations react components found state passing via props terribly slow wo nt help change instead using refs let new scroll position trickle via works well one big downside declarative anymore need keep things sync manually bummer opening issue discuss ways could drastically improve animations react could also benefit modules reactmotion basically know nothing internals react apiuser perspective imagine following allow percomponent opt separation react elements property new react element maybe sth like styleless plain find name allow warns debug mode new component similar component accepts props maybe state also requires parent component method returns plain object style keyvalue rerendering style diffed previous changes applied parent component node style component updated independent parent gives performance boost move fastchanging props like away actual component stylecomponent boom thoughts top end simple demo make point screenshot looks like toggle based animation refs based approach animated items believe separating property rest result similar performance gains still declarative single source truth allowing clean separation", "num": "4992", "d": "9/2015"}, {"title": "reactchildrenmap return fragment", "body": "found issue today would like talk seems like issue relies fact possible transform another object passed mostly works thinks single opaque child time cases someone would like something else result ie get element index iterate problem unlikely authors write legit workaround issue one replicate approach children exactly found internal methods implementation allow something like fills essentially map tackle issue authors would need implement method hand rely fact nt change approach nt return array nt seem break backward compatibility nt another returns array", "num": "4991", "d": "9/2015"}, {"title": "warning component react component classes must extend reactcomponent", "body": "transpiled babeljs observed modern browsers js class example extends reactcomponent render return null reactdomrender reactcreateelement example documentbody warning component react component classes must extend reactcomponent possible actually issue babeljs really sure cc spicyj", "num": "4990", "d": "9/2015"}, {"title": "provide arguments render function", "body": "since would convenient transition statefull ones minimal changes", "num": "4989", "d": "9/2015"}, {"title": "question following guide reactnative native modules android throws error", "body": "hi devs process creating native modules android following mentioned get error app compilation error anexamplereactpackage abstract override abstract method createviewmanagers reactapplicationcontext reactpackage thanks", "num": "4986", "d": "9/2015"}, {"title": "context documented", "body": "gamechanger incredibly useful piece functionality saves adding extra complexity app using fluxreduxetc curious documented", "num": "4984", "d": "9/2015"}, {"title": "throwing components difficult debug", "body": "ran similar situation couple times component throws reason got weird prop got upset stack trace however nt tell anything nt even point nonreact frames one outermost component throwing component would great situation like easier debug particular seeing state parent component would help lot", "num": "4982", "d": "9/2015"}, {"title": "htmldompropertyconfig include integrity sri", "body": "subresource integrity defines integrity attribute attribute defined htmldompropertyconfig included html rendered server", "num": "4979", "d": "9/2015"}, {"title": "docswebsite request performance statistics", "body": "would valuable react performance stats documented mean whole page petehunt content would great callouts details around performance", "num": "4974", "d": "9/2015"}, {"title": "better test facilities stateless components", "body": "originally left comment felt might better separate issue completely agree rationale behind backing instances refs stateless components want use pure stateless components much possible however running instances testing stateless components gets tricky part using shallow renderer render stateless component fine make assertions expected props children reduce duplication abstract shallow renderer process helper function want test events though take different route component takes prop wrap class component access dom node simulate click event nt huge deal abstract wraprender process helper function bring feel would nice better facilities stateless components nt think answer allowing work stateless components opens abuse normal application code open allowing extra functions simplify process testing stateless components creating code smell testing happy create pr think helper functions stateless components would beneficial", "num": "4972", "d": "9/2015"}, {"title": "testing scrolling events scrolltop scrollheight", "body": "ca nt seem set scrolltop even simulate scroll component within unit tests example debugging seems scrolltop set still scroll handler get called scrolltop still returns scrollheight also returns normally thats cant scroll elements seem right height smaller contained object height etc render function elements html", "num": "4971", "d": "9/2015"}, {"title": "style working newly constructed component", "body": "trying pass higher order component wraps another component want construct new div one new properties injected especially interested style property styles apply react treats like another properties proper behavior", "num": "4970", "d": "9/2015"}, {"title": "release version update semver", "body": "react proven stable technology amazing thriving community around think update semver", "num": "4969", "d": "9/2015"}, {"title": "click events swallowed svg elements ie", "body": "managed replicate edge lt chrome firefox created demo issue jsbin using common svg element linking common svg icons linking icons tag inside anchor click events icon bubble onclick handlers anchor example common svg element icon make link containing icon nt supported react yet use click svg onclick handlers anchor run temporary workaround setting svg element inside anchor might dupe", "num": "4963", "d": "9/2015"}, {"title": "reuse", "body": "look code want reuse invoked every time means totally new could one explain behaviour thanks import react react class indexcomponent extends reactcomponent constructor props context super props context consolelog constructor called called many times class detailcomponent extends reactcomponent render return detail back index let indexelement let detailelement let let app reactcreateclass reactrender documentgetelementbyid mountdom", "num": "4962", "d": "9/2015"}, {"title": "expected flush transaction stored dirtycomponents length match dirtycomponents array length", "body": "seen error handful times production since switching idea causing point", "num": "4958", "d": "9/2015"}, {"title": "invariant violation reactowner refs", "body": "get error whenever try use plugin references yuanyanboron casesandbergreactbounds since others nt complaining issue repos bound think might something setup someone help resolve issue", "num": "4957", "d": "9/2015"}, {"title": "reacttransitiongroup consume prop", "body": "given prop pass prop passing factory component also uses prop similar fashion result warning legitimate use consuming prop doubles problem since causes warning requires component child must also make sure component prop nt equal whoops forgot exists", "num": "4954", "d": "9/2015"}, {"title": "scryrendereddomcomponentswithclass multiple class names", "body": "tests failing accept multiple class names anymore eg testing node multiple classes giving result change api necessary test kind nodes", "num": "4952", "d": "9/2015"}, {"title": "eventcurrenttarget ca nt specified testutilssimulate", "body": "element listener uses currenttarget stuff test saw using simulate trigger event matter specify currenttarget always original element dumb example click log target tagname currenttarget tagname expecting listener checked currenttargettagname would get current get actual element target got think right value target name instead element", "num": "4950", "d": "9/2015"}, {"title": "csstransitiongroup animation nt occur one operated", "body": "demo say wan na remove first item list transition occurred last item instead first one could confusing since users might think remove wrong one miss something suggest would appreciated", "num": "4949", "d": "9/2015"}, {"title": "reactaddonstestutils invariant violation body tag", "body": "latest react trying render component body tag get simple component var instance testutilsrenderintodocument reactcreateelement testcomponent null var elements testutilsscryrendereddomcomponentswithtag instance button consolelog elements returns error replace body tags something else everything works", "num": "4948", "d": "9/2015"}, {"title": "warn ref attached stateless component", "body": "warn ref attached stateless component background see", "num": "4939", "d": "9/2015"}, {"title": "reactjs requires reactdomjs", "body": "means custom react implementations use reactdependent libraries reactrouter without preventing reactdefaultinjectioninject running also results fair amount bloat unnecessary domrelated files included build understand react core reactdom separate prevent issue would react core transitively require reactdom would nt also prevent someone using reactrouter reactnative cc mjackson ryanflorence case missing obvious solution thanks", "num": "4938", "d": "9/2015"}, {"title": "classes nt bring anything table", "body": "see advantages disadvantages implemented already hate bind dealing constructors foo extends bar extends extends baz extends base mixins nice way mixin traitlike objects nt deal constructors messing things huge step backwards backbone era brainwashing another generations prejava noobs think side effect sputtering class hierarchies somehow better rant", "num": "4937", "d": "9/2015"}, {"title": "refs nt work stateless components", "body": "realize extent intended behavior stateless components public instance could nt find much way conversation around behavior chosen right good way parent component even know ref going work component rational behind allowing dom access stateless component seems like instance expose proper behavior would return dom node whatever underlying thing directly like dom components current behavior surprising seems inverted component never going reasonably able know parent needs access dom node parent way knowing components stateless know wrap right need wait something silently nt work least stateless component ref throw though would last resort concession mind", "num": "4936", "d": "9/2015"}, {"title": "refs child inside function", "body": "using ref inside child function refs set inside result function undefined owner normal js class container extends component render return thispropschildren class demo extends reactcomponent componentdidmount consolelog thisrefsinner undefined render return gt gt", "num": "4934", "d": "9/2015"}, {"title": "classname prop working custom dom elements", "body": "prop appear get mapped correctly applied custom dom elements jsfiddle", "num": "4933", "d": "9/2015"}, {"title": "controlled radio button component update", "body": "running across issue one components used showing group radio buttons radio button elements controlled using checked defaultchecked use callback prop change state parent component determines one selected first click radio button works second subsequent clicks update radio button show checked example code exhibits issue thought might related key element using radio button value key element unique help appreciated", "num": "4930", "d": "9/2015"}, {"title": "remove eventpath synthetic events", "body": "nt meant stick around disabled pathbased bubbling", "num": "4929", "d": "9/2015"}, {"title": "whitespace preceding inline comment table", "body": "put inline comment jsx document table cell first time renders everything looks fine rerenders hits error cant find dom node happening space turned additional whitespace child browser throws unintuitive thing comment nt line trailing whitespace whitespace would instead stripped understand jsx transformer contentunaware totally makes sense happening bit gotcha coming programmingmarkup languages figured would report see come solution maybe tablerelated components could smarter filtering whitespace children since invalid far know obviously work around butting comment cell", "num": "4928", "d": "9/2015"}, {"title": "switch entirely gulp", "body": "build process sort resembles frankenstein monster point bad nt shell gulp grunt move utils zertosh already working", "num": "4927", "d": "9/2015"}, {"title": "invalid checksum textarea redux form", "body": "hi guys error quite new react helps much appreciated thanks", "num": "4926", "d": "9/2015"}, {"title": "trigger unmount action tests render returned null", "body": "hey way found unmount component tests render component return method also returns able unmount component workarounds ps talking", "num": "4925", "d": "9/2015"}, {"title": "guide implement new rendering option", "body": "hi want know whether guide implement new rendering option react like way react native say use features react render new kind objects instead html dom found session find detail", "num": "4924", "d": "9/2015"}, {"title": "opensource textarea editor build react", "body": "good opensource textarea editor build react need function like make header like italic introduce thank", "num": "4923", "d": "9/2015"}, {"title": "css hover state sticks removing dom elements", "body": "got bunch tags using click tag remove hover state maintained see screencap mac os chrome", "num": "4922", "d": "9/2015"}, {"title": "proposal alternative reactcreateelement api jsx output", "body": "problem current reactcreateelement api quite limiting regards control flow statements consider following example happily transformed soon try wrap jsx statement component ex div blows javascript condition hello world would transformed invalid js reactcreateelement set workarounds course workaround issue using ternary expression usable trivial bodies javascript condition hello null temporary variable body complicated javascript var conditionresult condition conditionresult hello conditionresult splitting html hurts readability quite lot eyes worse forced splitting choice least proposed solution change overload reactcreateelement signature list childrens single append function appendfn approach work let explain examples javascript simple jsx hello world current js output reactcreateelement div id msg hello reactcreateelement b null world proposed js output using new signature reactcreateelement div id msg append gt append hello append reactcreateelement b null world append nothing happens children old signature anyway appends component big difference function body instead limiting parameter list gt big win examples control flow statements javascript example hello condition world current js output valid reactcreateelement div id msg hello condition reactcreateelement b null world proposed js output valid reactcreateelement div id msg append gt append hello condition append reactcreateelement b null world javascript switch example hello switch value case foo foooo break case bar baaar break default world current js output valid proposed js output reactcreateelement div id msg append gt append hello switch value case foo append reactcreateelement b null foooo break case bar append reactcreateelement b null baaar break default append reactcreateelement b null world javascript example hello var person persons personname current js output valid proposed js output use native js loops instead depending arraymap reactcreateelement div id msg append gt append hello var person persons append reactcreateelement b null personname background roots web developer lie razor template syntax allows mix c html much like jsx js html felt strong connection towards react right first day mixing programming language html already felt natural gap left feel flexible back old days razor issue try address post hope consider approach make react even awesome already", "num": "4920", "d": "9/2015"}, {"title": "support full component lifecycle shallow rendering", "body": "extracted separate issue put together sidebyside comparison lifecycle support normal rendering shallow rendering output using normal rendering output using shallow rendering happy look pr although sure quite start would done shallow renderer pushed custom transaction mentioned", "num": "4919", "d": "9/2015"}, {"title": "support symbols proptype", "body": "would open support symbols proptype moment testing custom proptype functions", "num": "4917", "d": "9/2015"}, {"title": "displayname set minifiying stateless function components via webpack", "body": "given component defined minified webpack uglifyjsplugin get components displayname react browser tools", "num": "4915", "d": "9/2015"}, {"title": "document reactrender may return null component nt instancestate", "body": "assuming keep behavior worth noting documentation reactrender may return null cases component nt instance state", "num": "4913", "d": "9/2015"}, {"title": "reacttestutils scryrendereddomcomponentswithclassfindrendereddomcomponentwithclass handle svg classnames", "body": "svg classnames raw strings reacttestutils handle format svg elements classname ie", "num": "4912", "d": "9/2015"}, {"title": "instances reactperf correlate", "body": "issues trying figure reference reactperf refer amount times component created refer amount children components component created something else entirely thanks", "num": "4911", "d": "9/2015"}, {"title": "confusing stack traces exceptions render", "body": "put inside render function got stacktrace none code wrote none points component failed using classes instead reactcreateclass may may relevant", "num": "4910", "d": "9/2015"}, {"title": "reactaddonscreatefragment warning message", "body": "got message warning use keyed object wrapped reactaddonscreatefragment object passed child wondering easy would add sort stack trace could see offending code", "num": "4909", "d": "9/2015"}, {"title": "xmlns xlink svg namespaced attrs supported", "body": "moment try use element get following error namespace tags supported reactjsx xml namespaces required effective use svg design decision allow namespaced tags feature needs implementing", "num": "4908", "d": "9/2015"}, {"title": "csstransitiongroup remove dom elements reliably inc video example", "body": "started playing around csstransitiongroup encountering intermittent bug appears result race condition bug results classes added causing warning appear console issue appears trigging many updates csstransitiongroup relatively quick succession using latest version chrome ubuntu created video demoing bug", "num": "4907", "d": "9/2015"}, {"title": "schema tags different client server", "body": "hi guys getting annoying error currently following giving following warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client tdetails itemscope itemtype schema server tdetails itemscope itemtype sche", "num": "4906", "d": "9/2015"}, {"title": "video fire onend event video end", "body": "used react test video noticed onend event fired video end fiddle", "num": "4905", "d": "9/2015"}, {"title": "invalid property access rendering serverside babel optimisationreactinlineelements enabled", "body": "trying render page serverside get error like using babel transformer manually fixing however using transformer client code runs fine browser even complex componentspages complete list babel options server might help track fact worked browser leads believe babel issue though currently using build react master branch thirty minutes ago", "num": "4902", "d": "9/2015"}, {"title": "broad defensive termination clause patents", "body": "current defensive termination clause far broader defensive original apache license makes difficult use enterprise covering actions part facebook previous apache license covers project nt know address issue eg could nt find contact created issue please forward issue facebook legal opensource team patent related part license related", "num": "4900", "d": "9/2015"}, {"title": "ca nt disable transitions elements initial load", "body": "hello following along docs adding transitions via everything working great problem transition fires even mount component despite docs say nothing turn component wrong", "num": "4898", "d": "9/2015"}, {"title": "error performing device", "body": "get following error nodeawesomeproject reactnative runandroid js server already running building installing app device cd android amp amp gradlew installdebug failure build failed exception went wrong problem occurred configuring project app could resolve dependencies configuration app debugcompile could find comandroidsupport searched following locations file file required awesomeproject app unspecified could find comandroidsupport searched following locations file file required awesomeproject app unspecified gt comfacebookreact could find comandroidsupport searched following locations file file required awesomeproject app unspecified gt comfacebookreact gt comfacebookfresco gt comfacebookfresco awesomeproject app unspecified gt comfacebookreact gt comfacebookfresco gt comfacebookfresco try run stacktrace option get stack trace run info debug option get log output build failed total time mins secs could install app device see error", "num": "4897", "d": "9/2015"}, {"title": "reactaddonscsstransitiongroup nt remove element dom", "body": "problem component use react babel incriminated piece code listenter opacity listentergamelistenteractive opacity transition opacity easein listleave opacity listleaveexampleleaveactive opacity transition opacity easein entering animation works false component remains dom works without animations obviously without reactcsstransitiongroup wrapper", "num": "4896", "d": "9/2015"}, {"title": "reactdom wrong package npm", "body": "hi executed reactdom package version downloaded seems right package watching packagejson pointing something wrong something going wrong best regards", "num": "4895", "d": "9/2015"}, {"title": "anchors onclick executed anchor url present", "body": "spent significant time checking onclick events anchors triggered contacted parties whose packages use point basic react functionality idea onclick triggered triggered triggered triggered idea problem thanks", "num": "4894", "d": "9/2015"}, {"title": "unmountcomponentatnode nt unbind inflight listeners throws opaque error", "body": "react app triggering following error navigation events error occurring function failed find component event callback app happening would navigate blur event call rendering order refresh page docs say remove mounted react component dom clean event handlers state however seem case refresh page reactbound callbacks still react queue event leading error docs intuition seem imply clear callbacks since knows components longer exist handle", "num": "4892", "d": "9/2015"}, {"title": "reactisvalidelement validate elementpropschildren single reactelement", "body": "produces even though regular happening", "num": "4890", "d": "9/2015"}, {"title": "reactchildrencount throws invariant error", "body": "throws uncaught error invariant violation objects valid react child found object keys type key ref owner props store meant render collection children use array instead wrap object using reactaddonscreatefragment object invariant traverseallchildrenimpl traverseallchildrenimpl traverseallchildren countchildren linkclass render reactcompositecomponentmixinrendervalidatedcomponentwithoutownerorcontext reactcompositecomponentmixinrendervalidatedcomponent reactperfmeasurewrapper reactcompositecomponentmixinmountcomponent reactperfmeasurewrapper reactreconcilermountcomponent reactmultichildmixinmountchildren reactdomcomponentmixincreatecontentmarkup reactdomcomponentmixinmountcomponent reactreconcilermountcomponent reactcompositecomponentmixinmountcomponent reactperfmeasurewrapper reactreconcilermountcomponent mountcomponentintonode mixinperform batchedmountcomponentintonode mixinperform reactdefaultbatchingstrategybatchedupdates batchedupdates reactmountrendernewrootcomponent reactperfmeasurewrapper reactmountrendersubtreeintocontainer reactmountrender reactperfmeasurewrapper moduleexportscar webpackrequire bootstrap moduleexports bootstrap webpackrequire bootstrap anonymous function bootstrap anonymous function bootstrap equal", "num": "4889", "d": "9/2015"}, {"title": "chrome extension error", "body": "rc reactrouter getting error changing routes sure problem extension react reactrouter hotloader narrow extension disabled eg incognito error nt happen error cause render fail view nt update", "num": "4886", "d": "9/2015"}, {"title": "creating logiconly components", "body": "developing app want dynamically load content application using flux fairly defined pipeline getting managing data want something like currently get around using rendered component nt work well lazy load table chome probably browsers push loading div outside table force browser inject corrected html react lose root since dom gets modified without react consent way something similar realize pass react component loader tell wrap content component think quite messy tl dr want component logic current component implementation without rendering still rendering children", "num": "4885", "d": "9/2015"}, {"title": "incorrect warning link", "body": "short url redirect error src incorrect page redirects", "num": "4883", "d": "9/2015"}, {"title": "reacttestutilsiscompositecomponent called scry throws stateless components", "body": "example js const gt foo class extends reactcomponent render return foo const instance reacttestutilsrenderintodocument const div reacttestutilsfindrendereddomcomponentwithtag instance div expect div toexist works", "num": "4882", "d": "9/2015"}, {"title": "warn calling reactdomrender without global document etc available", "body": "basically every time called rerender happens get error created bare repo recreate issue component test suite small copypaste javascript import react component reactaddons import jsdomify jsdomify import expect unexpected class mycomponent extends component constructor props super props thisdisplayname mycomponent thisstate bananas bananas render return thisstatebananas describe setstate test gt gt leaks document window global jsdomifycreate render gt let instance reactaddonstestutilsrenderintodocument expect instance defined throw gt let instance reactaddonstestutilsrenderintodocument let foo gt instancesetstate bananas apples expect foo throw idea happening anything", "num": "4881", "d": "9/2015"}, {"title": "react ui like ios navigation bar", "body": "anyone share react ui like ios navigation bar thanks lot", "num": "4879", "d": "9/2015"}, {"title": "react component classes must extend reactcomponent", "body": "ends exposed instances reactswf correct way set inheritance thought missing something", "num": "4878", "d": "9/2015"}, {"title": "invalid mutating deprecated warning", "body": "get following warning warning passed style object previously mutated mutating deprecated consider cloning beforehand check previous style color backgroundcolor fontsize null fontweight mutated style color backgroundcolor fontsize null fontweight confused warning appears previous style mutated style look exactly reproduce issue open browser type font size field blur field see warning console warning displayed could fix", "num": "4877", "d": "9/2015"}, {"title": "csstransitiongroup throws warnings component unmounted", "body": "using get following errors component unmounted animation done transitionentertimeout transitionleavetimeout set uncaught typeerror read property componentdidenter undefined reactcreateclasshandledoneentering reactcreateclasstransitionendlistener uncaught typeerror read property componentdidleave undefined reactcreateclasshandledoneleaving reactcreateclasstransitionendlistener", "num": "4876", "d": "9/2015"}, {"title": "revamp tutorial", "body": "huge number issues come tutorial repo inconsistencies confusing parts especially sort works fine without server initially requires half way talked maybe rewriting entirely maybe mean time clean make easier people learn react without getting tripped ideas welcome especially people front lines mailing list irc slack stack overflow github couple ideas provide running api server people use probably randomly generated api key make sure people clean environment require local server beginning done remove bit paginate steps separated better", "num": "4875", "d": "9/2015"}, {"title": "setstate fails callback via componentwillmount server", "body": "need render react components server seo component fetches data based query parameters server node fails request callback error reproduced simpler code example found numerous discussion web relating complications react serverside rendering working two workaround approaches removing ajax requests server instead rendering result request directly global variable embedded firstserve html moving ajax request prior initialization react components server request would still live client version please let know alternative recommended approach instead nb reason chose react say angular ensure search engines index page bit bother right var react require react reproduced react var reactdomserver require reactdomserver var reactcreateclass componentwillmount function var example ajax call fetch data based request parameters settimeout function err res state set based results thissetstate render function return reactcreateelement div null reactdomserverrendertostring reactcreateelement null node indexjs return documentbody referenceerror document defined getactiveelement reactreconciletransactionreactinputselectiongetselectioninformation reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactupdatesflushtransactionmixinperform reactupdatesflushtransactionassignperform objectflushbatchedupdates objectwrapper flushbatchedupdates reactdefaultbatchingstrategytransactionmixincloseall reactdefaultbatchingstrategytransactionmixinperform", "num": "4873", "d": "9/2015"}, {"title": "npm install save reactdom installs", "body": "think resolved rc meantime confusing since readme says", "num": "4872", "d": "9/2015"}, {"title": "please use symbols fields values", "body": "react special symbol uset mark instances unfortunately symbol used value field rather name would really great way round like js symbol used tag reactelement type native symbol polyfill plain number used performance var isreactelement typeof symbol function amp amp symbolfor amp amp symbolfor reactelement var reactelement function type key ref self source owner props var element tag allow us uniquely identify react element isreactelement true would allow instances implement multiple interfaces vs exclusive matter would great fields also symbols", "num": "4871", "d": "9/2015"}, {"title": "memory leak reactdominput server rendering", "body": "react seen massive memory leak appears entire app retained time profiler narrowed reactdominput radio input app removing entirely source fixes leak diagnose added log statements javascript mountwrapper function inst props linkedvalueutilscheckproptypes input props instcurrentelementowner unmountwrapper function inst consolelog unmounted input id instrootnodeid delete instancesbyreactid instrootnodeid ran app notice unmount never logs instances stay forever simply rendering using", "num": "4870", "d": "9/2015"}, {"title": "children filter null values map function", "body": "currently implementing component something like jsx return childrenmap children thisrenderchild autobind renderchild element index return cloneelement element key elementkey index selected thispropsselected onclick thisclickhandler business requirement put situation created list item component jsx using map array return array rendermenuitem key key whatever checking return return use case could give error propose remove filtering time values whenever situation understand think best implementation end change function alright", "num": "4867", "d": "9/2015"}, {"title": "unexpected detached subtree found possible regression", "body": "since upgrading seen error times production nt able trace source yet though cc spicyj", "num": "4865", "d": "9/2015"}, {"title": "convert react class class error use context", "body": "class created createclass transform class caught err original class code var reactcreateclass childcontexttypes name reactproptypesstring getchildcontext function return name jonas render function return class class extends reactcomponent childcontexttypes name reactproptypesstring getchildcontext return name jonas render return may something wrong childcontexttypes defining method", "num": "4864", "d": "9/2015"}, {"title": "reactdom example nt work", "body": "js var react require react var reactdomserver require reactdomserver class mycomponent extends reactcomponent render return hello world reactdomserverrendertostring yields", "num": "4863", "d": "9/2015"}, {"title": "npm update breaks", "body": "working project utilizing react reactdom reactaddonscsstransitiongroup reactaddonstransitiongroup project works fine install packages command line like installed listing packagejson entering given following error even first install packages separately terminal run project breaks", "num": "4862", "d": "9/2015"}, {"title": "warning rendered unknown unknown using key", "body": "following message mean exactly warning rendered unknown unknown using key place currently means nt preserve state behavior rare considering deprecating please contact react team explain use case take consideration", "num": "4860", "d": "9/2015"}, {"title": "stateless function components work native arrow functions", "body": "blacklist babel following stop working get error uncaught typeerror constructor js import react react import reactdom reactdom const app gt hello world reactdomrender documentgetelementbyid root", "num": "4856", "d": "9/2015"}, {"title": "pressing spacebar checked radio button fires click browsers", "body": "focus textbox press shifttab move focus radio button group press spacebar check radio button observe click event console press spacebar redundantly check radio button chrome osx observe additional click event console firefox osx observe additional click event console entirely browsers fault since react synthetic event system trying fully normalize inconsistencies like obscure one list least prefer firefox behavior expect real clicks synthetic keyboardoriginated clicks conditions firing incidentally feels like might accident chrome rather explicit decision place file bug feel like pretty pieinthesky though p", "num": "4854", "d": "9/2015"}, {"title": "longer possible blank using selectedindex", "body": "change noticed essentially component something like componentdidmount thispropsvalue thisrefs select getdomnode selectedindex render return yes meant blank value provided select would display nothing setting however added effectively kills behavior think understand changed since better matches browser shows default trying figure way still able blank select element without adding extra blank option element", "num": "4852", "d": "9/2015"}, {"title": "incomplete key escape", "body": "expected result html b actual result html environment win chrome example first following react elements rendered div app html next causes following rendered html b however element returns causes uncaught error", "num": "4850", "d": "9/2015"}, {"title": "input value state still update onchange", "body": "came across intriguing problem trying set value input state want input get value state connected store also want update onchange value store action updateinputfield type e actiontostore type etargetvalue store trigger modification type variable state huge problem approach presents input get slow typing new characters due fact requires new render component started implementing onblur method drop onchange got warning saying component read nt onchange method also looked two way binding handles setting state updating value component got laggish result also another big problem whenever set state new value ie type new characters typing cursor reset end text input try edit inside current text get enter one character cursor moves end better official approach problems known problem set solved react next versions", "num": "4848", "d": "9/2015"}, {"title": "possible use symbol component key", "body": "last time tried still wo nt work reason thanks", "num": "4847", "d": "9/2015"}, {"title": "nt componentwillmount called getinitialstate", "body": "noticed cleaning older code one components cleaning needs happen loads originally placed within getinitialstate works fine really nt feel like right place put componentwillmount sounds like better alternative seems thought called later lifecycle fact hook getinitialstate realise might bit edge case feels like two hooks either reordered different hook added", "num": "4844", "d": "9/2015"}, {"title": "info error message react component classes must extend reactcomponent", "body": "hard find component throwing error improve message somehow", "num": "4843", "d": "9/2015"}, {"title": "warn using dev build minified", "body": "want sebmarkbage mentioned forgot morning", "num": "4842", "d": "9/2015"}, {"title": "reactdom builds live reactdomdist reactdist", "body": "", "num": "4841", "d": "9/2015"}, {"title": "createfragment warning rendering date", "body": "new date looks hitting typeof object check sure cast string toisostring error", "num": "4840", "d": "9/2015"}, {"title": "finddomnode statelesscomponent work testutilsrenderintodocument", "body": "unsure also impacts browser wrote example wrote two components one test case identical class component test passes function component test fails javascript import react react class component extends reactcomponent render var onclick text thisprops return componentproptypes onclick reactproptypesfuncisrequired text reactproptypesstringisrequired export default component javascript import react react var component onclick text gt componentproptypes onclick reactproptypesfuncisrequired text reactproptypesstringisrequired export default component output failure due interactions jest also exists another project using jest although still using jsdom", "num": "4839", "d": "9/2015"}, {"title": "repo wiki full spam", "body": "repo wiki full pages created last hour spammy titles like service ariston cempaka putih also top google result sites using react missing wiki page github asking fill guessing wiki permissions incorrectly opened public", "num": "4838", "d": "9/2015"}, {"title": "question foreachaccumulated docs", "body": "hi checking file definition foreachaccumulated saw documentation entry vague case nt call function used basically events queues probably expected value maybe would nice comment function expects objects think would leave change docs ensure item object cheers", "num": "4837", "d": "9/2015"}, {"title": "warning react component classes must extend reactcomponent", "body": "", "num": "4836", "d": "9/2015"}, {"title": "allow reactshallowrenderer expose jsx test debugging", "body": "hi making use reactshallowrenderer testing really like mention docs would appreciate react community feedback evolve suggestion one problem comes investigating failing tests first little digression using vanilla jasmine testing comes deep objects matching using custom matcher wrote called import jsondiffpatch jsondiffpatch const jdp jsondiffpatchcreate arrays detectmove true const custommatchers toequalasobject util customequalitytesters return compare actual expected const result pass utilequals actual expected customequalitytesters expected jsonstringify expected null actual jsonstringify actual null difference jsonstringify delta null difference format info found export default custommatchers matcher builds jsondiffpatch help isolate difference objects lie really useful general testing nt help particularly comes jsx testing like reason subtle difference jsx result fairly different objects constructed comparing massively revealing investigation take time suggestion would really handy could extract jsx representation object renderer output imagining ability something like would would produce string like would allow writing custom matcher used comparing jsx would upon failure use report helpful error message spent time would like digging differences object structure investigating failing tests think feature like could real win think", "num": "4835", "d": "9/2015"}, {"title": "modding reacttransitiongroup work wrapped component", "body": "sure right repo ask question figured start somewhere working app uses reactrouter redux using library called reactredux exposes decorator wrap component pass data store props component gets passed reacttransitiongroup actually class called connect property called wrappedcomponent actual component lives since reacttransitiongroup lifecycle methods inplemented wrappedcomponent reacttransitiongroup finding tired extending reacttransitiongroup overriding perform handle methods also look lifecycle methods wrappedcomponent get following error gist extended class created anyone could point right direction would appreciate thanks", "num": "4831", "d": "9/2015"}, {"title": "seems something wrong using important inline style", "body": "code still removed code like everything goes well miss something", "num": "4830", "d": "9/2015"}, {"title": "reactrender reloads iframes rendering new component", "body": "run issue integrating live reloading toolchain example obviously convoluted tries capture setup also illustrate issue problem swap modules end new sets react component definitions even though keys render output equal iframe still seem get reloaded js var thunk function props context reactcomponentcall props context thunkfor function view key var reactcomponent function props context thunkcall props context reactcomponentprototype objectcreate thunkprototype reactcomponentdisplayname keysplit return reactcomponent thunkprototype objectcreate reactcomponentprototype thunkprototypeshouldcomponentupdate function props thispropsmodel propsmodel thunkprototyperender function return thispropsview thispropsmodel let render key view model gt let component viewreactcomponent viewreactcomponent thunkfor view key return reactcreateelement component key view model let redframe src gt reactdomiframe key frame style border solid red src let blueframe src gt reactdomiframe key frame style border solid blue src reactrender render main redframe src documentbody settimeout function reactrender render main blueframe src documentbody ps also tried keep root component keep identical attributes across calls iframes still reload edit updated example props used note stored property class seemed cause confusion", "num": "4826", "d": "9/2015"}, {"title": "reactdomrender reactdom throws invariant error using refs", "body": "error minimal example repository using webpack steps reproduce spin http server point indexhtml error mitigated using deprecated method instead", "num": "4822", "d": "9/2015"}, {"title": "parent vs owner context", "body": "sorry bring cause lot changes codebase notice context switched parentbased context beta lot libraries especially reactrouter depends context lot components usually render children body instead inside current component beta get context router breaks wonder syntax get inherited context render element example maybe file issue directly reactrouter", "num": "4819", "d": "9/2015"}, {"title": "chrome ff performs code old ie", "body": "hi customer reported bugs react found problem dont know happened must say bugs appear pc go customers office try machines machines work fine following code reactjs set isinputeventsupported variable false chrome firefox fix temporarily work allright really dont know newest chrome v performed code old ie something wrong condition depending new chromeff", "num": "4812", "d": "9/2015"}, {"title": "proptype function argument type checking", "body": "really like able define type arguments prop function called think last missing piece need really define react component interface might one feel need comment signatures way programmatically would much better first attempt tried create new proptypes able wrapping function given prop working receiving pretty straightforward warning message yeh mutating prop nice way way found without modifying react core", "num": "4811", "d": "9/2015"}, {"title": "dynamically require bundle", "body": "react bundle code single js file used view apps multiple views using single combined file multiple static build file tend low efficient hope way build multiple bundle something like able dynamically require running build code", "num": "4810", "d": "9/2015"}, {"title": "best practice debug project based react", "body": "hi everyone planing rebuild project using react tried use translate jsx gulp pack js files problems using watchify gulp change code take seconds repack feeling terrible need using breakpoints js file used gulp file chrome able split packed js file raw files developer tools sources tab case something wrong raw files breakpoints work seriously error info developer tools console tab obvious marked wrong line also tried find proper config please share idea debug project based react thanks lot", "num": "4809", "d": "9/2015"}, {"title": "handle empty model", "body": "jsx something like statecurrentusername whereas user already loaded ajax get uncaught typeerror read property name undefined handle properly good practices would horrible trash jsx tons checking like statecurrentuser null statecurrentusername", "num": "4808", "d": "9/2015"}, {"title": "add search documentation", "body": "hey folks algolia use react projects internally found searching react documentation could improved considering sending pr adds search documentation saw website using jekyll actually jekyll plugin nt known algolia saas provider offering hosted search engine accessible rest api pushing data api easy see live demo similar currently pending pr bootstrap documentation already provided free accounts popular opensource projects love use laravel hackernews fontawesome cdnjs example wanted check first something would interested react documentation start coding anything start hacking something like could move forward together would course give full access unlimited free account ask small powered algolia logo hit reply questions really happy make happen", "num": "4807", "d": "9/2015"}, {"title": "passing props via super props extending another component working", "body": "sure real issue behavior unexpected react version two components shape circle shape general concept circle special case shape using class syntax define components trying override shape defaultprops passing props circle constructor using nt working see following code jsbin js import react react class shape extends reactcomponent constructor props point propsshapetype circle circle component used super props shapedefaultprops shapetype null class circle extends shape constructor props let propscopy objectassign props propscopyshapetype circle super propscopy reactrender documentqueryselector body", "num": "4806", "d": "9/2015"}, {"title": "reactjs involuntary executable command problem", "body": "hello executable command written curly brackets normal possibility creating vulnerability thank react js sandbox bypass var mycomponent reactcreateclass render function return lt gt hello function constructor alert ptsx lt gt lt p gt reactrender lt mycomponent name handsome gt documentgetelementbyid mydiv", "num": "4805", "d": "9/2015"}, {"title": "csstransitiongroup work appropriately classname modified", "body": "entering element modified transition enter enteractive gets deleted likely kill transition cause problems element sync keep added appropriately example click add item multiple items transition ends var reactcsstransitiongroup reactaddonscsstransitiongroup var c var todolist reactcreateclass getinitialstate function return items hello world click handleadd function var newitems thisstateitemsconcat abc c thissetstate items newitems handleremove function var newitems thisstateitems newitemssplice thissetstate items newitems render function var r mathrandom var items thisstateitemsmap function item return bind", "num": "4804", "d": "9/2015"}, {"title": "formal grammar jsx", "body": "information exactly es grammar changed", "num": "4803", "d": "9/2015"}, {"title": "seems react nt allow render script tag inline code", "body": "sometimes useful far know way render inline javascript script dangerouslysetinnerhtml innerhtml evaluate script solution", "num": "4801", "d": "9/2015"}, {"title": "react flush batch work", "body": "read source code understand react flush batch work", "num": "4800", "d": "9/2015"}, {"title": "warning use keyed object wrapped", "body": "hi help understand following giving warning warning use keyed object wrapped reactaddonscreatefragment object passed child setup babelcore react babelloader code handler consolelog thissetstate body thispropsdata render return thisstatebody", "num": "4799", "d": "9/2015"}, {"title": "use typescript ts tests", "body": "get past anyway use jsx tests simplify little bit", "num": "4795", "d": "9/2015"}, {"title": "proptypes outside react independent type checks module", "body": "using react proptypes awesome help catching errors early stage sometimes application pretty large always flow data structures big size like web email client application type passed place multiple components accept props solution usually creating type file eg js typesmessagejs import react react export default reactproptypesshape id reactproptypesstringisrequired subject reactproptypesstring isrequired reusing type components get messages props js import messagetype typesmessage messagepreviewproptypes message messagetype sometimes data flows components elements example flux stores action creators usually requires duplication types using immutablejs records similar would really nice could use type checks parts application example js storesmessagejs import messagetype typesmessage import checktypes reactchecktypes param array payloadmessages array message objects received api ondatareceived payload gt payloadmessagesforeach message gt checktypes message messagetype addtostore message good guess architectually means making proptypesjs independent creating adapter propcontext validating", "num": "4794", "d": "9/2015"}, {"title": "large number render performance", "body": "seeing issue large numbers take long time render almost nt believe happening seems worsethanlinear increase render time add digits numbers formatting string first seems fix problem tried build fiddle exemplify issue think exacerbated pretty far dom tree nt seem matter app numbers nt formatted get digits takes seconds render finish let know ca nt reproduce try carve example app try setting component real app something like seems enough slow", "num": "4792", "d": "9/2015"}, {"title": "refactor away opaque uncaught typeerror typetouppercase function messages jsx misused", "body": "appears nt mapped everything developer bungles jsx syntax using jsx sigils jsx compiler nt expect jsx sigils error message likely unhelpful opaque uncaught typeerror typetouppercase function developer written post culprit cases user given jsxlike syntax context expected could useful descriptive error message preferably probable line number jsx compiler encounters jsx syntax addons expected", "num": "4791", "d": "9/2015"}, {"title": "suggestion increase performance providing initial virtualdom similar linux init ram image", "body": "suggestion really sure whether functionality already exists think yet also really sure whether proposed mechanism would indeed improve performance react according understanding virtualdom created reactjs application load applications large virtual dom creating consume time virtual dom could provided server already similar init ram images used linux init performance could possibly increased cases init dom image probably provided json would static might cases work would plenty options prepare server side indeed transmission virtual dom image would slower creating scratch client side make sense case depends network speed could also option client starts build dom abandons virtual dom creation process image received server case request would canceled hope makes sense user react conference discussion developers use react idea accepted propose", "num": "4790", "d": "9/2015"}, {"title": "support attribute", "body": "trying use gt capture attribute getting rendered nt look like supported list information capture", "num": "4784", "d": "9/2015"}, {"title": "onclick fires element button android", "body": "hope wasting folks time encountered situation web app work android chrome etc unless onclick attached button element li div etc fire onclick however using react tappable inside element event handler", "num": "4783", "d": "9/2015"}, {"title": "responsivegridlayout reset nt anything", "body": "layout nt get reset", "num": "4782", "d": "9/2015"}, {"title": "check babel inlining transform works", "body": "", "num": "4778", "d": "9/2015"}, {"title": "write changelog", "body": "", "num": "4777", "d": "9/2015"}, {"title": "iterable numbers breaks react", "body": "issue reproducible example full build contains nonstandard iterator theoretical added es future added already added another libraries take account possibility iterable numbers", "num": "4776", "d": "9/2015"}, {"title": "validatedomnesting message confusing using portals", "body": "js var foo reactcreateclass render function return var bar reactcreateclass render function return var baz reactcreateclass render function return null componentdidmount function reactrender reactchildrenonly thispropschildren documentcreateelement reactrender documentgetelementbyid container logs bit foo bar nt inside new tree", "num": "4775", "d": "9/2015"}, {"title": "tell firefox users get devtools", "body": "", "num": "4774", "d": "9/2015"}, {"title": "setting custom data attributes starting numbers removed", "body": "setting custom data attribute datatest works whereas would fail expected behaviour", "num": "4772", "d": "9/2015"}, {"title": "transform jsxtwig jstwig", "body": "using framework view part using reactjs since twig also uses use twig following try transform jsx js get error wherever used braces twig transform jsx code twig variables twig braces js", "num": "4771", "d": "9/2015"}, {"title": "instance stay instantiated componentwillunmount", "body": "destroy instance", "num": "4770", "d": "9/2015"}, {"title": "consider using providing fragment warning", "body": "updated started getting warning everywhere warning use keyed object wrapped passed child took realize using instances jsx wonder would acceptable apply first present legalize situation", "num": "4769", "d": "9/2015"}, {"title": "fire native listeners", "body": "surprised log anything hand dispatching events nt seem trigger react events general documentation expected work seems however like react event system parallel browser events nt really interact way", "num": "4766", "d": "9/2015"}, {"title": "rendering", "body": "react code reproduce problem javascript processenvnodeenv production class foo extends component render return foo reactrender documentgetelementbyid app run error thrown following callstack javascript function definewarningproperty object key objectdefineproperty object key invoked javascript var reactelement function type key ref owner context props builtin properties belong element thistype type thiskey key thisref ref see defined mode still addressed missing something", "num": "4765", "d": "9/2015"}, {"title": "react work reactart", "body": "opened issue reactart incompatibility reactart react", "num": "4758", "d": "9/2015"}, {"title": "allow x prefixed attributes", "body": "currently custom html attributes start x allowed test case allowing custom attributes would helpful example things like firefox os use provide hint keyboard contain digits", "num": "4757", "d": "9/2015"}, {"title": "allow disabling omitted close tags", "body": "similar elements like also called void elements react omits close tags xhtml produces invalid markup throw even break whole page prevent would nice disable omission close tags eg option like", "num": "4756", "d": "9/2015"}, {"title": "browser builds reactdom", "body": "", "num": "4754", "d": "9/2015"}, {"title": "make react reactdom codemod", "body": "already need add repo", "num": "4753", "d": "9/2015"}, {"title": "bug componentwillunmount calls called owning parent", "body": "details see basically seems component unmounted method needs called elements owns issue related probably addressed although part mixins ignored", "num": "4752", "d": "9/2015"}, {"title": "play nicely dom event system legacy anyway", "body": "currently react implements plugin system event bubbling rules important systems like responder system since dom event system incapable implementing proper event negotiation support however desktop nt really take full advantage custom event system polyfill mouseenterleave implement bubbling plenty things wrong dom instead patching maybe would better build new view system top dom integrates custom event system similarly react native handles things way lowest level could dom would however broken may question though handle things like onchange cc spicyj syranide since know always wanted", "num": "4751", "d": "9/2015"}, {"title": "context changing parent nt update child", "body": "component sets context child gets passed props supports context render context updates render component passes child call render update child example another example one works parent context one parent removes context", "num": "4749", "d": "9/2015"}, {"title": "fails silently nonexistent srcdest", "body": "root srvautopipelineapp jsx version root srvautopipelineapp ls foo bar ls access foo file directory ls access bar file directory root srvautopipelineapp jsx x jsx foo bar root srvautopipelineapp echo really confusing trying debug static assets nt built", "num": "4748", "d": "8/2015"}, {"title": "target value sometimes undefined", "body": "loop product list map create react component item click button sometimes etargetvalue defined sometimes undefined totally random clicking button times value sets magically undefined", "num": "4745", "d": "8/2015"}, {"title": "listen props parent component", "body": "hi want listen props parent component like parent component parent component let chartbox reactcreateclass mixins reactaddonslinkedstatemixin getinitialstate return chartstyle componentdidmount let chartwidth thisrefschartboxgetdomnode offsetwidth let chartheight thisrefschartboxgetdomnode offsetheight let chartstyle width chartwidth height chartheight thissetstate chartstyle chartstyle render return child component child component let chart reactcreateclass componentdidmount render return", "num": "4742", "d": "8/2015"}, {"title": "make test utils aware subtrees rendered containers rendersubtreeintocontainer", "body": "using react reactoverlay modal uses portal portal using appears test utils aware subtrees rendered containers search children nt get crawled means order test components first get instead able use testutils directly looked related discussions nt able find anything plans make test utils aware feature nice convenience", "num": "4741", "d": "8/2015"}, {"title": "getting dangerouslyreplacenodewithmarkup error unit tests jsdom jasmine", "body": "happens executing unit tests works fine browser though using dangerouslysetinnerhtml attribute solve problem exception thrown soon add new test case observations happens jsdom webkit working fine happens rendering view event simulated happens rendering string variables inside markup dangerouslysetinnerhtml solve fyi need exact steps explaining exact steps following series blog posts referring solving problem using dangerouslysetinnerhtml property regards nripendra", "num": "4740", "d": "8/2015"}, {"title": "reactbuild postinstall throw assertassertionerror", "body": "reactbuild postinstall usersjohndifooldevelopfacebookreact node scriptscheckdevenginesjs throw new assertassertionerror assertionerror current node version supported development expected satisfy object modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup npm err darwin npm err argv node usrlocalbinnpm install npm err node npm err npm npm err code elifecycle npm err reactbuild postinstall npm err exit status npm err npm err failed reactbuild postinstall script node scriptscheckdevenginesjs npm err likely problem reactbuild package npm err npm npm err tell author fails system npm err node scriptscheckdevenginesjs npm err get info via npm err npm owner ls reactbuild npm err likely additional logging output npm err please include following file support request npm err usersjohndifooldevelopfacebookreactnpmdebuglog", "num": "4738", "d": "8/2015"}, {"title": "datetime field nt register changes", "body": "using datetimelocal field setting date nt register change value setting value react nt know change fix would always set value datetime fields even virtual dom shows change accept limitation tested chrome supported ff", "num": "4733", "d": "8/2015"}, {"title": "shallow rendering uses throws deprecations", "body": "calling get seems places wonder broke entirely", "num": "4730", "d": "8/2015"}, {"title": "rendering input element string setting html dangerously nt fire onchange anymore", "body": "following input element return like callback fired input change however following onchange called preserve onchange", "num": "4729", "d": "8/2015"}, {"title": "question mapping children key prop child moves unmount remount", "body": "example suppose something like following render function happens change order things rerender component affected elements get methods called followed new foos getting methods called react keep elements reorder calling lifecycle methods", "num": "4728", "d": "8/2015"}, {"title": "reactelementvalidatorloggedtypefailures prevents test isolation", "body": "running react testing jasminecore testing component validation use jasmine method mock check trigger warning correct message validation fails use check validation working run unit test two separate test suites expects warning occur react globally tracks warnings triggered avoid spamming console seems nt send warning second time thus fails would expect would setup isolation render warnings checked properly", "num": "4725", "d": "8/2015"}, {"title": "using jsx reactelement children presented array opposed map", "body": "came across making test cases make sure mutating unexpected ways making clone notice property list attempt clone tree presumably something child nodes js let targetelement newchildren clonedelement targetelement newchildren reactchildrenmap targetelementpropschildren node gt something children nodes return reactcloneelement node clonedelement reactcloneelement targetelement undefined newchildren consolelog clonedelement get notice property map consider unexpected mutation tried remediating using ie js let targetelement newchildren clonedelement targetelement newchildren reactchildrenmap targetelementpropschildren node gt something children nodes return reactcloneelement node clonedelement reactcloneelement targetelement undefined objectvalues newchildren consolelog clonedelement produces identical object original also prompts following error bit odd considering create identical copy original jsx output object appears unexpected jsx parser behaviour might babel issue", "num": "4723", "d": "8/2015"}, {"title": "react component lose context seqmap", "body": "originally posted issue immutablejs advised move original react components lose context used within seqmap possibly due lazy evaluation fails resolving sequence explicitly like works expected behavior understanding converting immutables sequences recommended procedure passing react", "num": "4722", "d": "8/2015"}, {"title": "shallow rendering wo nt render primitive nodes", "body": "might intentional technically breaking change figured report following script js var react require react var testutils reactversionsubstring testutils require reactaddons addonstestutils else testutils require reactaddonstestutils var renderer testutilscreaterenderer rendererrender reactcreateelement hello consolelog renderergetrenderoutput js node samplejs type key null ref null owner null context null store props children hello originalprops children hello js node samplejs var inst new component publicprops publiccontext reactupdatequeue typeerror string function reactcompositecomponentmixinmountcomponent wrapper mountcomponent reactshallowrendererrender reactshallowrendererrender object modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain", "num": "4721", "d": "8/2015"}, {"title": "bug refs showing", "body": "component jsx class root extends reactcomponent render let cards thisdatacards let boardid thispropsboardid let index return mount like result consolelog statement componentdidmount method camera ref shows might", "num": "4718", "d": "8/2015"}, {"title": "communication betwen components", "body": "application list filters button change layout using two components lt filters change settings lt filters want trigger method update view make components interact", "num": "4715", "d": "8/2015"}, {"title": "incorrect handling prefixed styles", "body": "rendering react dom element style properties style object treated special eg adding px numbers particular styles however provided prefixed style like blacklist styles used would pretty awesome style prefixed like first converted nonprefixed kind lookup blacklist", "num": "4714", "d": "8/2015"}, {"title": "requires extra configuration typecheck flow", "body": "create brand new project directory create type check simple file faced bunch errors return missing annotation deferred required module found invariant required module found executionenvironment required module found sprintf required module found fetch required module found warning required module found easy work around add following configuration exactly relay project however great people could follow steps beginning issue create turnkey working system without required configuration maybe fbjs bug react bug nt sure best place file one belongs somewhere else happy redirect thanks", "num": "4713", "d": "8/2015"}, {"title": "use reactid get instance associated component", "body": "iterating react dom tree distinguish dom generated different components eg foo iterate distinguish children target component nodes thinking could use retrieve instance associated component api data held", "num": "4711", "d": "8/2015"}, {"title": "misleading warning message using getdomnode", "body": "says warning getdomnode deprecated plain javascript react classes use reactfinddomnode component instead use get warning deprecated please use instead therefore error message warning getdomnode deprecated plain javascript react classes use instead", "num": "4710", "d": "8/2015"}, {"title": "input losing focus render", "body": "works fine chrome etc issues basically onvalidchange event fired form becomes either valid invalid sets state ie onvalidchange fires rerenders form lose focus input seen people similar problems unable find good solution important parts class look bit like renderlogin var self render var self consolelog rerendering loginisvalid return thisstateloginvalid checkloginvalid var loginform thisrefs loginformref isvalid loginformisvalid", "num": "4709", "d": "8/2015"}, {"title": "reactdnd proxyquire invariant violation could find drag drop manager context mycomponent", "body": "using proxyquire stub subcomponents stores ran invariant violation components wrapped reactdnd contexts warning failed context types required context dragdropmanager specified dragsource card error invariant violation could find drag drop manager context card make sure wrap toplevel component app dragdropcontext read put together repo demonstrate error see run", "num": "4707", "d": "8/2015"}, {"title": "transfer context", "body": "hello project using technique similar take render inside another react tree connected child node problem descendants may want context empty separate tree use fresh call right using function like js export function extractcontext component let context componentreactinternalinstance amp amp componentreactinternalinstancecontext let internalcontext componentreactinternalinstancecontext let key internalcontext internalcontexthasownproperty key amp amp key context key internalcontext key extract context inside popup create wrapper takes context pushes new tree maybe better way transfer entire context without knowledge context internals", "num": "4706", "d": "8/2015"}, {"title": "best way get state value", "body": "hi want get value state immediately setting state value know callback method setstate taken correct current state value nt want write callback get value need provide two interfaces setvalue change state value getvalue get value state good practice", "num": "4705", "d": "8/2015"}, {"title": "components classes methods bound", "body": "writing components classes trying understand methods bind constructor say something like following code js import component react export default class componentname extends component constructor super thishandleclick thishandleclickbind handleclick e render return understand must explicitly bind constructor short using stage features examples seen looks like method bound default nt need something like constructor right lifecycle methods like documentation unclear also anything planned would change behavior", "num": "4699", "d": "8/2015"}, {"title": "reactjs ascii art issue jsx transformation", "body": "trying get ascii art properly rendered react application jsxtransformer executed art looses format renders pretty strange browser seems related identifying line breaks properly hello world var app reactcreateclass render function return lt pre gt lt code gt ditaa text diagram document magic lt code gt lt pre gt var element documentgetelementbyid content reactrender reactcreateelement app element example real context website generator starts markdown gt html gt jsx said change reactcreateclass element someone proposed var app reactcreateclass render function var ascii ditaa text diagram document magic join n fixes problem edit markdown elements reflect interested know jsx transformation identifying line breaks inside code blocks alan", "num": "4698", "d": "8/2015"}, {"title": "unfold children", "body": "hi writing library uses jsx abstract dsl bit like bit like others primitives explain question take example user could define customroute component render use like afaik wo nt detected traversing propschildren enough router see wo nt understand know possible solve basically want descent render tree stop user component native component like reach looking", "num": "4697", "d": "8/2015"}, {"title": "using server rendering invariant violation reactmount two valid unequal nodes", "body": "building gem enable use react redux rails webpack server rendering pretty far along gotten gem work turbolinks however running issue fragment caching created branch demonstrates issue note verified caching without turbolinks works ok see branch also caching turbolinks works issue reproduced following clone repo switch branch cachingfailure visit see server rendering worked open console see tracing messages click link top click back link react top see error message invariant violation reactmount two valid unequal nodes datareactid full error notes open specdummyappviewspagesindexhtmlerb remove cache block around line see working without fragment caching fragment caching removing react dom elements prior rendering reloading cache left tracing statements see rendering called unlikely caching changed rendering part includes call addremove listeners invoke client side rendering dom elements placed server generated html shown includes setup js hooks code inserted dom turbolinks possible reason guessing problem calling react exact code second time seems state maintained maybe page unloaded need tell react view helper looks like html html cdata windowappdata helloworlddata name prop rails server rendering var renderifdomnodepresent function var appdomnode documentgetelementbyid appdomnode consolelog zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz consolelog client side render consolelog zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz var reactcomponent app appdata reactrender reactcomponent appdomnode var turbolinksinstalled typeof turbolinks undefined consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog turbolinksinstalled turbolinksinstalled consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy turbolinksinstalled consolelog warning turbolinks detected js gemfile documentaddeventlistener domcontentloaded function event consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog domcontentloaded event fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy renderifdomnodepresent else function onpagechange event consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog page change event fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy var removepagechangelistener function consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog removed page change event listener fired consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy documentremoveeventlistener page change onpagechange documentremoveeventlistener page beforeunload removepagechangelistener consolelog removed event listeners documentaddeventlistener page beforeunload removepagechangelistener documentaddeventlistener page afterremove function consolelog page afterremove called renderifdomnodepresent consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy consolelog add turbolinks handler page change handler consolelog yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy documentaddeventlistener page change onpagechange gt hello prop rails server rendering say hello", "num": "4696", "d": "8/2015"}, {"title": "react classes starting lowercase nt call methods inside class", "body": "react class name starts lowercase letter methods inside class get called ie nothing renders nt get error message browser console see element dom empty contents case rename class change works see simple example get nothing browser console web page change btw drove nuts ran things try thought way could lower vs uppercase issue var myheader reactcreateclass componentwillmount function consolelog myheader componentwillmount componentdidmount function consolelog myheader componentdidmount render function consolelog myheader render return test reactrender documentbody", "num": "4695", "d": "8/2015"}, {"title": "take", "body": "props bit awkwardrandom per prior conversations jordwalke ie prop children special cased deciding factor certainly bit irksume theoretical computer science perspective feels cleaner current api bit ambiguous regards result since children specified two potentially conflicting values imagine third argument different value nt actually know would happen top head especially null case null treated like undefined third argument override second props means props object saved reactelement ca nt hoisted intelligent runtime would otherwise possible runtimestranspilers see nonchild props nt depend particular render could save thousands allocations per render importantly string compares expensive children occurs props means need additional string compare property iterate since need handle children prop special case mostly rfc issue something consider inline elements cc sebmarkbage", "num": "4694", "d": "8/2015"}, {"title": "get reactdom run webpack", "body": "hi always get message naive put console got mayor issues webpack mentioned answer wrong repository get correct reactdom module", "num": "4693", "d": "8/2015"}, {"title": "error invariant violation findallinrenderedtree instance must composite component", "body": "writing test case using mocha jsdom js import react react import testutils reactaddonstestutils describe reactoutsideevent gt captures mousedown event gt let detachedcoponent like obtain reference generated domnode foo produces also tried got error using", "num": "4692", "d": "8/2015"}, {"title": "know whether object reactelement", "body": "find like", "num": "4690", "d": "8/2015"}, {"title": "weird output rendering react server typescript", "body": "get result browser execute code server javascript import express require express import react react import helloworld appcomponentshelloworld var router expressrouter get home page routerget req expressrequest res expressresponse next function gt resrender index output reactrendertostring reactcreatefactory helloworld export default router javascript import react react interface props class helloworld extends reactcomponenthello world export default helloworld know issue react module", "num": "4689", "d": "8/2015"}, {"title": "disable checksumming sanity checks", "body": "nt seem documented anywhere mentioned possible parameters line code change etc also welcome insight things disable make render process faster cpu wise", "num": "4681", "d": "8/2015"}, {"title": "remove jsxtransformer reacttools website", "body": "pieces flight putting together track sanity x recommend babel talk transforming already landed x remove use jsxtransformer transforming site x redirect jsxcompiler babel repl remove links jsxcompiler x update tutorial tutorial repo x land back", "num": "4677", "d": "8/2015"}, {"title": "webkitplaysinline attribute jsx supported", "body": "hi webkitplaysinline jsx ignored solution solve problem", "num": "4676", "d": "8/2015"}, {"title": "createelement mode fails updates", "body": "stupid node js var flip reactcreateclass render function return thispropsx var container documentcreateelement div reactrender container reactrender b container throws", "num": "4674", "d": "8/2015"}, {"title": "commentsjson location confusing tutorial docs", "body": "tutorial says create static json file however tutorial repository file root directory use node server implementation repo create file directory server crashes submitting comment everything works fine file root directory tutorial repo documentation location file consistent repo user grab server implementation go", "num": "4673", "d": "8/2015"}, {"title": "change event fire ie edge certain circumstances", "body": "put together simple example demonstrate issue problem happening elements mouse event listeners attached would trigger render handler never gets called looks like unlike browsers ie edge trigger mouse events element clicking options prevent event triggering", "num": "4672", "d": "8/2015"}, {"title": "handle without ref passing back react component", "body": "hello take following snippit javascript component export default reactcreateclass getinitialstate function return error valid true isvalid function return thisstatevalid setvalid function isvalid thissetstate valid isvalid render function return parent export default reactcreateclass handleclick function var comp thisrefscomp update refs passed back react component able access helper methods class handle certain pieces state like component valid error message displayed actually returns dom node understand everything done javascript modify dom ie take message change node innerhtml message adds extra must done feel good fit modifying state way thinking antipattern considered due seeing many people accomplishing sort thing", "num": "4671", "d": "8/2015"}, {"title": "load javascript file cdn server component", "body": "want load javascript file form cdn server nt want put tag wrote component like nt worked", "num": "4670", "d": "8/2015"}, {"title": "jsx extra semicolon bug", "body": "use semicolon jsx code strange print html page could somebody tell", "num": "4667", "d": "8/2015"}, {"title": "suppressing component warning", "body": "writing wysiwyg editor react order place cursor inside rich document use understandably react nt fare well contenteditable get around framework confusion contenteditable children modified force rerenders new keys work restore selection practice working pretty well getting new warning component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional case guarantee nodes unexpectedly modified duplicated intentional way suppress warning unlike factory warning warning appears time component instantiated think least slowly fills consoles considered alternative using children contenteditable component update set outside react would likely sidestep warning get us much else", "num": "4662", "d": "8/2015"}, {"title": "dom props match spec fix give saying props match dom spec", "body": "props react dom elements supposed based dom properties hence used supposedly prop names however eager camelcasing decided react nt actually match spec number cases number cases spec defines noncamelcase properties used browser react defines nonspec camelcase prop htmlimageelement srcset actually srcset htmlformelement autocomplete actually autocomplete enctype actually enctype htmlmediaelement autoplay actually autoplay etc leaves us awkward situation react dom props based dom property names html attribute names used justify sticking number props nt actually use name use dom want fix think two options keep saying react uses dom property names deprecate etc warnings get using jsx b stop saying react dom props based dom properties start saying something like react dom props html elements camelcased props loosely based dom property names often always camelcased aligns common practice using camelcased properties javascript avoids need quote prop names attributes use characters illegal js without forcing developers continually consult html spec know property supposed camelcase however choose b probably going people arguing reason used became invalid reserved words made valid property names object literals react start supporting sticking rules nt make sense react requires environment shimmed shamed fit users react use jsx either part environment least incorporates syntax jsx syntax", "num": "4653", "d": "8/2015"}, {"title": "returns callback rendering multiple times", "body": "trying use attribute described unfortunately sometimes returns called multiple times mwe javascript import react react class view extends reactcomponent render return function render reactrender documentgetelementbyid container setinterval render alternating beween null", "num": "4651", "d": "8/2015"}, {"title": "update facebook blog", "body": "reading following page stupidly failed notice key words uptodate version post available part flux documentation spent struggling code fault surely would better update blog post", "num": "4650", "d": "8/2015"}, {"title": "failing unmount nested render trees throw exceptions event handling", "body": "code js var leakyportal reactcreateclass render function return componentdidmount function reactrender thisrefsdiv var container documentgetelementbyid container reactrender container reactrender container reactrender container works fine implement componentwillunmount", "num": "4648", "d": "8/2015"}, {"title": "checkbox checked html attribute set underlying prop changes", "body": "rendering checkbox html attribute properly set reflect prop component problem seems method link sets property dom node object update html attribute seen fiddle suggestion instead use set property set underlying node property html attribute seen fiddle", "num": "4646", "d": "8/2015"}, {"title": "support custom nonstandard dom events", "body": "please add support custom nonstandard dom events ideally public api go least way would require forking code base attempt exposing nonstandard events getting insights irc unfortunately still work event listeners registered sure whitelists somewhere skips custom events ps help changing snippet make work also greatly appreciated", "num": "4645", "d": "8/2015"}, {"title": "time merge classname react", "body": "well react good like question time fixed support style object support classname think classname support string array object classname repertoryi want write code like javascript var classname reactaddonsclassname var somevar classname puzzled think opened true cloth red support feture", "num": "4644", "d": "8/2015"}, {"title": "transplant react react root manually", "body": "need something react api work domdiff properly example js reactrender foo somediv settimeout function somediv appendto someotherdiv react still works okay", "num": "4640", "d": "8/2015"}, {"title": "reference error render swallowed results", "body": "using rendering following reproduce import missing thus causing react seems swallow error instead reports pretty frustrating debug hope fixable", "num": "4639", "d": "8/2015"}, {"title": "error messages swallowed", "body": "given following components trigger error map component first time renders get plain old error like trigger component receives new props get complicated error trigger error child component render method error message messages thrown child components swallowed render method map looks like javascript render consolecount render render leafletlayer looks like javascript render throw new error hey lt raise error anyone idea might going also using react router webpack think might react problem", "num": "4638", "d": "8/2015"}, {"title": "onchange event fired pollfilled", "body": "used pollyfill onchange event broken", "num": "4637", "d": "8/2015"}, {"title": "add refchildren access support transitiongroup", "body": "transitiongroup clone children change refs therefore nt seem exist easy hack directly access instance call methods especially makes filtering intercepting dispatching events almost impossible great could make way fix figured hard use refs children cloned implementing method could easy way around transitiongroupgetchildwithref child ref gt return child ref", "num": "4636", "d": "8/2015"}, {"title": "update webcomponentsjs latest version", "body": "current used version webpomponents nov bit time change log quite long posting enchancement request test bump prepare pr also sure good idea push react", "num": "4630", "d": "8/2015"}, {"title": "codemods nt apply using modules", "body": "note branch mine cpojer react currently code mods detect require add detection import react", "num": "4629", "d": "8/2015"}, {"title": "react class codemod", "body": "right hand side method definition expression gets dropped completely code mod example result code mod completely dropping method", "num": "4628", "d": "8/2015"}, {"title": "support fontweight svg attribute", "body": "already supported addition would great", "num": "4625", "d": "8/2015"}, {"title": "reacttestutils working", "body": "hello everyone try test react components use found component use cause error test case look like import react reactaddons import expect expect const reacttestutils reactaddonstestutils import root javascriptsalbatrossroot describe root function click working function var root reacttestutilsrenderintodocument reacttestutilssimulateclick reactfinddomnode root expect rootstatecount tobe write like working var react require react var root reactcreateclass displayname root getinitialstate function return count tick function consolelog click thissetstate count thisstatecount render function return moduleexports root change test die import react react export default class root extends reactcomponent constructor props super props thisstate count tick consolelog click thissetstate count thisstatecount render return somebody tell", "num": "4621", "d": "8/2015"}, {"title": "ca nt update defaultcheckeddefaultvalue", "body": "rerender component defaultchecked defaultvalue react fails update value checked attribute accordingly say use controlled input would argue bug basically disallows uncontrolled forms reset buttons always reset whatever initial default value", "num": "4618", "d": "8/2015"}, {"title": "react renders differently server client", "body": "read seemed like maybe another related problem browser tries bootstrap react rerender page get warning apart case unnecessary escape quote seems render differently server browser static content nt really understand markup render element like next test come rendered different", "num": "4616", "d": "8/2015"}, {"title": "links translated docs", "body": "translated docs japanese korean chinese docs links add links translated doc getting started links added get reactjs users feedbacks", "num": "4614", "d": "8/2015"}, {"title": "checksum issue encoded characters chrome", "body": "recently started seeing issues checksums server rendered markup even though client server encoding characters correctly reactmount triggering checksum warning replacing dom seems chrome may changed behavior innerhtmlouterhtml returns encoded character rather encoding causes comparison incorrect see issue firefox correctly renders dom shows warning first thought messages mixed actually existing root node returning decoded string perhaps bug chrome", "num": "4608", "d": "8/2015"}, {"title": "getboundingclientrect nt work jasminejest testing", "body": "every time try test rect always empty tried jasmine jest case something different one neither work hoping something wrong ca nt find version var react require reactaddons var testutils reactaddonstestutils var findclass testutilsfindrendereddomcomponentwithclass describe react tests function return proper bounding rectangle height function var component testutilsrenderintodocument hello world test works fine though works normally normal dom manipulation function var div documentcreateelement div var text documentcreatetextnode hello world divappendchild text documentbodyappendchild div var rect divgetboundingclientrect expect rectheight nottobe", "num": "4606", "d": "8/2015"}, {"title": "set key conditional components", "body": "example two conditional children like javascript showa amp amp showb amp amp set key children without keys diff result remove remove b insert b many conditional children like look could figure answer thanks help", "num": "4605", "d": "8/2015"}, {"title": "support jsx filenames react native", "body": "seems files extension js required jsx files following works fine rename file code jsx gives exception requiring unknown module srcviewsscreenshellojsx sure module try restarting packager restarting nt seem help problem something react native", "num": "4604", "d": "8/2015"}, {"title": "html table summary attribute", "body": "creating data table noticed summary listed react supported html attributes reason including summary attribute workaround fairly useful legacy screen readers", "num": "4603", "d": "8/2015"}, {"title": "giving partial state setstate child properties merged", "body": "docs setstate say merges nextstate current state primary method use trigger ui updates event handlers server request callbacks experienced state really merged happens properties assigned real merge short behaves like lodash assign like merge put words recursive merge shallow one suppose either fix code could break backwards compatibility update documentation clear", "num": "4601", "d": "8/2015"}, {"title": "umbrella", "body": "likely going quick release goes basically lightweight garbage collection release remove deprecated functionality x remove getdomnode setprops replaceprops monkey patching dom refs jimfb x remove getdomnode createclass jimfb x remove deprecated addons clonewithprops jimfb x remove reactrender finddomnode package jimfb deprecated functionality unlocks new features x remove support inheritless classes enables null return values plain functions jimfb spill make sure package includes isomorphic renderers nt burdened even package least make sure module dependencies nt burdened effectively make sure complete decouple dependencies react dom react isomorphic except currentowner react dom still needs set react isomorphic sebmarkbage see comment bonus react native ships copy renderer npm finally works properly", "num": "4600", "d": "8/2015"}, {"title": "warn component nt extend reactcomponent", "body": "support arrow functions plain functions components need know call new examples wo nt work js function plainfunctioncomponent props return null var arrowfunctioncomponent props gt class classcomponent render return need detect component function class calling call everything plain functions long return however wo nt work nullfalsestring return values want support also ca nt call arrow functions likewise ca nt call classes unfortunately ecmascript nt way detect something able current plan add static flag reactcomponent detect something class class pattern nt require still possible sure distinguish pattern one requires warnings though", "num": "4599", "d": "8/2015"}, {"title": "externalize state tree alternatives", "body": "react provides notion implicitly allowing child component store state using functionality however used business logic state also used remember dom state tiny ephemeral state scroll position text selection etc also used temporary state memoization kind magic black box react implementation details largely hidden people tend reinvent wheel invent state management systems eg using flux still plenty use cases flux state belongs flux stores manually managing addingremoving state nodes becomes huge burden regardless going keep manually end system something similar need convenient standard way handle across components something user space components wo nt able integrate well even think using calling setstate still relying capability undermines ecosystem eventually everyone reconverge single external state library anyway make sure gets baked react designed state tree state tree data structure would opaque optimize internals clever ways blocks many antipatterns external users breaks encapsulation boundaries touch someone else state exactly problem react programming model tries address however unfortunately state tree opaque end users means bunch legitimate use cases available external libraries eg undoredo reclaiming memory restoring state sessions debugging tools hot reloading moving state server client could provide standard externalized statetree eg using immutablejs data structure however might make clever optimizations future features difficult adopt also nt capable fully encapsulating true state tree may include dom state may ok treat state differently heuristic api need account also nt allow us enforce certain level encapsulation components another approach try add support use cases react onebyone external state tree nt become useful anymore created separate issues ones already planning supporting debugger hooks public api hibernating state serialized form else need pinging stake holders leebyron swannodette gaearon yungsters ryanflorence", "num": "4595", "d": "8/2015"}, {"title": "hibernating state necessarily serialized", "body": "relay others currently abuses internals get persistent identity component effectively used restore state component temporarily unmounted also common abuse flux stores use case basically since capability nt currently exists encouraged use flux everything case need capability later purpose issue discuss public api hibernating state component restoring component remounts use cases broken three scenarios list item view eg infinite scrolling table views one row eventually needs reclaimed save memory used tree view detail view masterdetail view clicking one item list switches state detail view click original view backforward button want save snapshot state navigate new view change state hit back button return previous state want restore original state subtree would like support least nonserialized form could imagine api serializes json data structure potential follow necessarily part one potential api basically object used key unlike normal key semantics state subtree kept memory indefinitely use weakmap keep state object ever goes away gc collect state subtree solves three use cases", "num": "4594", "d": "8/2015"}, {"title": "include devtools public api", "body": "idea multiversion extension allow attach debugger running react instance debugger protocol injects intercepted functions particular version react exposes development hooks effectively intended expose stateful reflection apis production use since negatively affect performance", "num": "4593", "d": "8/2015"}, {"title": "stop relying document", "body": "use cases support nt rely dom specific globals available shallow rendering worker renderers eg reactnative like environments server rendering setstate etc nt look document unfortunately often screw leads work arounds part problem jest comes jsdom always need test environment allow us execute domless environment also need add separate unit tests three test cases execute domless environment could potentially add lint rule using globals files folder also get rid uses since varies render tree environment", "num": "4592", "d": "8/2015"}, {"title": "warning child array iterator unique key prop provide info", "body": "hi building component complexity alot html warning gets infuriating hard solve would possible include bit context warning example tag class html parent something like", "num": "4591", "d": "8/2015"}, {"title": "broken", "body": "command broken commit error message running jest task running jest may take using jest cli fail srcaddonstestsreactfragmenttestjs typeerror read property length undefined maybereadmore processtickcallback fail srcaddonstransitionstestsreacttransitionchildmappingtestjs error attempted send message worker response last message received worker processes handle one essage time fail srcaddonslinktestsreactlinkproptypestestjs typeerror read property length undefined maybereadmore processtickcallback", "num": "4590", "d": "8/2015"}, {"title": "allow proptypesshape valid definition proptypes", "body": "short accept object valid declaration js import react react export default class extends reactcomponent static proptypes reactproptypesshape file called defines shapes used project eg js import proptypes react export let screeningshapedefinition id proptypesnumberisrequired timestamp proptypesnumberisrequired url proptypesstringisrequired position proptypesnumberisrequired export let screeninglistshapedefinition size proptypesnumberisrequired screenings proptypesarrayof proptypesshape screeningshapedefinition isrequired use modules js import react react import moment moment import screeningshapedefinition shapes export default class extends reactcomponent static proptypes screeningshapedefinition slight leaking cast shape definition object defining relations shapes definition file component definition property supported valid input could avoid leaking js import react react import moment moment import screeningshape shapes export default class extends reactcomponent static proptypes screeningshape js import proptypes react export let screeningshape proptypesshape id proptypesnumberisrequired timestamp proptypesnumberisrequired url proptypesstringisrequired position proptypesnumberisrequired export let screeninglistshape proptypesshape size proptypesnumberisrequired screenings proptypesarrayof screeningshape isrequired", "num": "4589", "d": "8/2015"}, {"title": "ie error rendering properly chrome", "body": "trying render header existing header creating div table html code deleting row header getting rendered script var stickydiv reactcreateclass mixins simplepagescrollmixin simpleresizemixin displayname stickydiv proptypes offsettop reactproptypesnumber zindex reactproptypesnumber classname reactproptypesstring getinitialstate function return fix false width null getdefaultprops function return offsettop classname zindex handleresize function thischeckwidth thischeckpositions handlescroll function thischeckwidth thischeckpositions checkpositions function var pos finddomnode react pos utilfindposrelativetoviewport reactfinddomnode else pos utilfindposrelativetoviewport thisgetdomnode pos lt thispropsoffsettop thissetstate fix true else thissetstate fix false checkwidth function var width null thisrefsduplicate finddomnode react width reactfinddomnode thisrefsduplicate getboundingclientrect width else width thisrefsduplicategetdomnode getboundingclientrect width else finddomnode react width reactfinddomnode thisrefsoriginal getboundingclientrect width else width thisrefsoriginalgetdomnode getboundingclientrect width", "num": "4586", "d": "8/2015"}, {"title": "dont rerender checkbox radiobox", "body": "make quiz app react use logic nextquiz state ok dont change checked info dont use state props manage mini project problem rerender dont rerender check info update small version", "num": "4583", "d": "8/2015"}, {"title": "give relay", "body": "\u3064", "num": "4582", "d": "8/2015"}, {"title": "investigate missing eventtarget", "body": "see cc jimfb syranide", "num": "4578", "d": "8/2015"}, {"title": "reactcreateelement null null throw", "body": "sometimes happens bug application gives warning rendering fails one warning error makes bugs harder debug cases eg serverside rendering warnings get lost log error visible saying uncaught typeerror read property touppercase undefined warnings errors suppose element type null much use element better throw meaningful error early also error thrown earlier get stacktrace function call actually passed constructor debug easier like fact give warnings stuff think cases errors would even helpful", "num": "4575", "d": "8/2015"}, {"title": "get displayname instance", "body": "hi extending reactcomponent define components scalajs react dev tools seeing display name components reason scalajs output getting name function okay modify function get displayname instance break head digging javascript prototypes constructors following code works", "num": "4574", "d": "8/2015"}, {"title": "add support types arrow functions literals", "body": "new facebook flow might missed something nt able write types arrow function literals example craps unexpected", "num": "4573", "d": "8/2015"}, {"title": "consistency propchildren type", "body": "time something like render children component need clone element something right facing problem pass child function longer object end something like time creating little layer deal problem maybe take approach always create array even pass single element unless see problem js return thisrenderchildren renderchildren arrayisarray thispropschildren return thispropschildrenmap thisrenderchild return thisrenderchild thispropschildren", "num": "4572", "d": "8/2015"}, {"title": "differ parentbased context childbased context childbased context lost", "body": "want use materialui react appi material ui says code indexjs reactappjs first use jsx tool compile two files use browserify browserify reactappjs mainjs add pages indexhtml reported get make sense solve", "num": "4571", "d": "8/2015"}, {"title": "tag attribute webkitplaysinline ca nt parsed", "body": "tag attribute webkitplaysinline supposedly prevents default go fullscreen behavior videos attribute works webview flag set native code want use attribute prevent default behavior iphone saw customeattributes doccuments like data aria works like need", "num": "4570", "d": "8/2015"}, {"title": "build folder present latest github release", "body": "indexjs references build folder exist initial install attempting install using jspm since npm version way date", "num": "4568", "d": "8/2015"}, {"title": "including react reactdom together produces warning webpack", "body": "webpack output test gajus webpack watch progress hash version webpack time asset size chunks chunk names appjs kb emitted app multi app bytes built hidden modules warning reactreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibobjectassignjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibobjectassignjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdeprecatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdeprecatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomserverjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomserverjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactisomorphicjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactisomorphicjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcurrentownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcurrentownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancehandlesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancehandlesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmountjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmountjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfinddomnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfinddomnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibrendersubtreeintocontainerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibrendersubtreeintocontainerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomfactoriesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomfactoriesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementvalidatorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactelementvalidatorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibonlychildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibonlychildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibwarningjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibwarningjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibexecutionenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibexecutionenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibbeforeinputeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibbeforeinputeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibchangeeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibchangeeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibclientreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibclientreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdefaulteventpluginorderjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdefaulteventpluginorderjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibenterleaveeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibenterleaveeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibhtmldompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibhtmldompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsercomponentmixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsercomponentmixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentbrowserenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentbrowserenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomidoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomidoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinjectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconciletransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactreconciletransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibselecteventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibselecteventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibserverreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibserverreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsimpleeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsimpleeventpluginjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsvgdompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsvgdompropertyconfigjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverrenderingtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmarkupchecksumjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmarkupchecksumjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactserverbatchingstrategyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibinstantiatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibinstantiatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibinvariantjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibinvariantjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrefjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrefjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibescapetextcontentforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibescapetextcontentforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibvalidatedomnestingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibvalidatedomnestingjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactrootindexjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdompropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsereventemitterjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactbrowsereventemitterjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactemptycomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactemptycomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancemapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinstancemapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcontainsnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcontainsnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsetinnerhtmljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsetinnerhtmljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibshouldupdatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibshouldupdatereactcomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcallbackqueuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcallbackqueuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibpooledclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibpooledclassjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtransactionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactfragmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactfragmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtraverseallchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibtraverseallchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnoopupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnoopupdatequeuejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibmapobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibmapobjectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacterrorutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacterrorutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationnamesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactproptypelocationnamesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeymirrorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeymirrorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeyofjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibkeyofjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetiteratorfnjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetiteratorfnjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyfunctionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibemptyfunctionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventconstantsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventconstantsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpropagatorsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpropagatorsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfallbackcompositionstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibfallbackcompositionstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticcompositioneventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticcompositioneventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticinputeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticinputeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginhubjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginhubjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibiseventsupportedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibiseventsupportedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibistextinputelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibistextinputelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticmouseeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticmouseeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibautofocusutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibautofocusutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdombuttonjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdombuttonjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdominputjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdominputjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomoptionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomoptionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextareajs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomtextareajs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibshallowequaljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibshallowequaljs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdomchildrenoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdomchildrenoperationsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibeventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibeventlistenerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventtargetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventtargetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetunboundedscrollpositionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetunboundedscrollpositionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcomponentenvironmentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnativecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactnativecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinputselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactinputselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetactiveelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetactiveelementjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticclipboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticclipboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticfocuseventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticfocuseventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetickeyboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetickeyboardeventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticdrageventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticdrageventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetictoucheventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsynthetictoucheventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticuieventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticuieventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticwheeleventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsyntheticwheeleventjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventcharcodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventcharcodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfanalysisjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdefaultperfanalysisjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancenowjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancenowjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcompositecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactcompositecomponentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactownerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibquoteattributevalueforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibquoteattributevalueforbrowserjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginregistryjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibeventpluginregistryjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventemittermixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreacteventemittermixinjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibviewportmetricsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibviewportmetricsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibistextnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibistextnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibaccumulateintojs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibaccumulateintojs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibforeachaccumulatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibforeachaccumulatedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgettextcontentaccessorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgettextcontentaccessorjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventmodifierstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventmodifierstatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibfocusnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibfocusnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibcsspropertyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerousstylevaluejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerousstylevaluejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatestylenamejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibmemoizestringonlyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibmemoizestringonlyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactliblinkedvalueutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactliblinkedvalueutilsjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildupdatetypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactmultichildupdatetypesjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactchildreconcilerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibdangerjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsettextcontentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibsettextcontentjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibreactdomselectionjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventkeyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgeteventkeyjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibperformancejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibisnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibisnodejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcamelizejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibhyphenatejs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibflattenchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibflattenchildrenjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatenodesfrommarkupjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatenodesfrommarkupjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetmarkupwrapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibgetmarkupwrapjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetnodeforcharacteroffsetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactlibgetnodeforcharacteroffsetjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatearrayfrommixedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibcreatearrayfrommixedjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibtoarrayjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected warning reactfbjslibtoarrayjs another module equal name case ignored lead unexpected behavior compiling filesystem casesemantic rename module multiple modules expected use equal casing one module expected", "num": "4566", "d": "8/2015"}, {"title": "emptyfunctionjs missing lib folder fresh install", "body": "sure missing appears required order react function properly issue easy recreate notice underneath jspmmodulesnpmreact emptyfunctionjs file present", "num": "4564", "d": "8/2015"}, {"title": "react facebook comments", "body": "hi page completely written react html template use comments widget facebook came code mutates dom react philosophy let assume facebook rewrites plugin react would two react apps react inside react ok include facebook comments like completely wrong path ok one react app inside another one e g video player inside page", "num": "4563", "d": "8/2015"}, {"title": "issue react jsx mocha karma webpack", "body": "trying set testing using mocha karma webpack test file results following error message error invariant violation reactrender invalid component element may caused unintentionally loading two independent copies react component files require simply", "num": "4562", "d": "8/2015"}, {"title": "children nt updated props changed", "body": "loop triggered event setting height children inline style property first time works fine subsequent updates coffee code experienced problem comments coffee react require react reactbootstrap require reactbootstrap tabbedarea reactbootstrap moduleexports reactcreateclass displayname tabbedarea proptypes height reactproptypesnumber height tabbed nav bar known calculate correct height tab panels automatically distributeheights navbar reactfinddomnode refstabbedarearefstabs tabpaneheight propsheight navbarclientheight componentdidmount distributeheights componentdidupdate distributeheights render", "num": "4560", "d": "8/2015"}, {"title": "support camelcase version webkittransform well", "body": "although pascalcase work safari actual property camelcase react nt support properly alias added handle case since nt seem obvious fact safari inspector autocomplete nt even work seems like hack works", "num": "4557", "d": "8/2015"}, {"title": "question two react based apps one page", "body": "hi video component written clojurescript based om page written javascript based react want use video component page came following code works sure ok js class page extends reactcomponent render gt return reactrender documentgetelementbyid page function video instance clojurescript application videoclientrender id abc calls reactrender documentgetelementbyid video please take look confirm eventually", "num": "4556", "d": "8/2015"}, {"title": "question dynamic context", "body": "trying locality specified throughout app thought using context could good solution achieve need let user dynamically change locale dynamically changing context negative consequences tested works want make sure negative consequences", "num": "4555", "d": "8/2015"}, {"title": "missing reactproptypesoneofshape operator", "body": "js import react react let timeshape placeholdershape timeshape reactproptypesshape type reactproptypesoneof time isrequired reactproptypesnumberisrequired url reactproptypesstringisrequired position reactproptypesnumberisrequired placeholdershape reactproptypesshape type reactproptypesoneof placeholder isrequired position reactproptypesnumberisrequired export default reactcreateclass proptypes times reactproptypesarrayof reactproptypesoneofshape timeshape placeholdershape isrequired way validate whether array property whats even worst use latter example produces error validate data expected", "num": "4553", "d": "8/2015"}, {"title": "adding example app wiki", "body": "like add reactfluximmutable demo app examples page wiki simple way pull request changes bit researching done could someone let know preferred way getting done looks like open editing anyone sure", "num": "4551", "d": "8/2015"}, {"title": "reactrendertostaticmarkup add tags", "body": "think placeholders inserted rendering rendertostaticmarkup js var react require react var demo reactcreateclass proptypes render reactproptypesboolisrequired render function return thispropsrender amp amp im demo var container reactcreateclass proptypes render reactproptypesboolisrequired render function return consolelog reactrendertostaticmarkup im demo consolelog reactrendertostaticmarkup example complex structure becomes hard use css selectors like etc", "num": "4550", "d": "8/2015"}, {"title": "import react npm compoent jsx file", "body": "hello freshman use gulp build web compile jsx files gulpreact js like want use react component registered nt know introduce jsx directly add bellow jsx filet wo nt work well import rightly thanks amp regards", "num": "4549", "d": "8/2015"}, {"title": "update checkbox defaultchecked nt work", "body": "update checkbox defaultchecked nt work please see", "num": "4548", "d": "8/2015"}, {"title": "settimeout arguments nulled", "body": "autocomplete textbox component onchange event assigned function called delaykeyup waits user stop typing seconds call handleinputchange function delaykeyup receive event react contains target property screenshot need pass event argument handleinputchange function problem event argument received handleinputchange values null might cause", "num": "4547", "d": "8/2015"}, {"title": "publish addons update npm", "body": "addons npm still importantly modules testutils perf get published thanks still nt npm makes trying bit trickier would ideal", "num": "4544", "d": "8/2015"}, {"title": "reactrender headersticky", "body": "trying render header existing header creating div table html code html deleting row header getting rendered script js var stickydiv reactcreateclass mixins simplepagescrollmixin simpleresizemixin displayname stickydiv proptypes offsettop reactproptypesnumber zindex reactproptypesnumber classname reactproptypesstring getinitialstate function return fix false width null getdefaultprops function return offsettop classname zindex handleresize function thischeckwidth thischeckpositions handlescroll function thischeckwidth thischeckpositions checkpositions function var pos finddomnode react pos utilfindposrelativetoviewport reactfinddomnode else pos utilfindposrelativetoviewport thisgetdomnode pos lt thispropsoffsettop thissetstate fix true else thissetstate fix false checkwidth function var width null thisrefsduplicate finddomnode react width reactfinddomnode thisrefsduplicate getboundingclientrect width else width thisrefsduplicategetdomnode getboundingclientrect width else finddomnode react width reactfinddomnode thisrefsoriginal getboundingclientrect width else width thisrefsoriginalgetdomnode getboundingclientrect width rendered rendered place exisitng row instead seperate row way could render new element row existing table code sticky working header coloumns misaligned since guess cordination two tables guess thanks", "num": "4543", "d": "8/2015"}, {"title": "make easier use alphabeta versions", "body": "hi think easier tryuse beta version react like lack documentation changes yet officially documented would nice github issue per beta community could discuss migration problems usually errorswarnings provided react quite explicit place discuss could also help give insight amount work needed migrate attempt jsfiddle think would nice provide base jsfiddle integration beta versions would permit users test new react behavior sandbox also report bugs beta versions easily peerdependency problem using libs declare react peerdependency problem npm match semver range see forces library author use something like order able use beta lib problem beta published library authors add new beta support mean using reactdatepicker wait lib author allow explicitly able test use shrinkwrap manually edit packagejson lib nt know good solution problem wanted react team aware", "num": "4542", "d": "8/2015"}, {"title": "support svg mask attribute svg mask tag", "body": "hi want ask support svg mask attribute unsupported react please nt mix mask tag ie next allowed using mask possible react removes attribute jsfiddle example details could found next comment created new issue instead continue long issue hot fix react users next load svgdompropertyconfig loading react ever set custom properties var svgdompropertyconfig require reactlibsvgdompropertyconfig var domproperty require reactlibdomproperty svgdompropertyconfigdomattributenamesmask mask svgdompropertyconfigpropertiesmask dompropertyinjectionmustuseattribute", "num": "4538", "d": "7/2015"}, {"title": "dynamically added svg mask wrong htmlunknownelement dom type", "body": "hi found strange issue connected svg mask elements ie mask adds dynamically ie example button click mask dom type htmlelementhtmlunknownelement see chrome devtools svgdefsmask properties mask created statically ie load see dom type svgelementsvgmaskelement svgdefsmask jsfiddle repeat problem bug description jquery", "num": "4535", "d": "7/2015"}, {"title": "callback ref passed null component", "body": "super simple react native component static root callback ref component mounted callback ref invoked root component call callback ref receives root component js class example extends reactcomponent constructor props context super props context consolelog constructor render return componentdidmount consolelog componentdidmount thissetstate console logs read ref confusing since ref view nt unmounted parent believe beta whatever rn master uses", "num": "4533", "d": "7/2015"}, {"title": "testutilssimulateclick nt work", "body": "javascript tabjsx\u7684\u6d4b\u8bd5\u7528\u4f8b jestdontmock tab var reactaddons require reactdistreactwithaddonsjs var react require reactdistreactjs var tab require tab var testutils reactaddonsaddonstestutils describe tab test function testutilssimulateclick nt work", "num": "4532", "d": "7/2015"}, {"title": "onmouseenter broken chrome", "body": "handler called mouse element jsx class box extends reactcomponent constructor props super props thisstate text leave let container documentgetelementbyid container reactrender container works browsers chrome stable canary however render list divs handler mouse enter works outside one divs", "num": "4531", "d": "7/2015"}, {"title": "feature higherlevel wormhole pattern", "body": "thinking code needs render react nodes somewhere direct dom child react component examples user tether library sometimes needs relocate dom node positioning work right react component planning render children decedent position things correctly bonus means popover component passed directly button controls react component uses party modal dialog library renders react children body created component could also slightly related need people keep dom node around even rendered assuming implementation able react render detached node current pattern kind use cases component children different dom node component unmounts understand called wormhole pattern however pattern problematic method context passed children way could add way component access internal context supposed see properties declared allow accept would expose internals ways exposed case thing internal react passed would help need higher level api declare fauxvirtualrelocated children pick name render separate dom component somewhere else dom still linked another component components simply pass api component responsible creating dom container telling reactdom would integrated react dom context piece data would flow normally component would responsible cleaning container unsure react responsible unmounting children fauxvirtualrelocated location would another function", "num": "4530", "d": "7/2015"}, {"title": "testing simple way run test individually", "body": "react git master jest srcisomorphicdeprecatedtestsclonewithpropstestjs notice node iojs merging august jest work iojs merger complete legacy node still available npm branch github using jest cli fail srcisomorphicdeprecatedtestsclonewithpropstestjs referenceerror userszhengzhongzhaodevelopreactreactscriptsjestenvironmentjs invalid lefthand side assignment test failed tests passed total react git master nodeenvtest jest well beer", "num": "4529", "d": "7/2015"}, {"title": "document onload onerror", "body": "elements support onload amp onerror nt listed eventshtml page apologies sending pull request easy thing nt sure whether new heading", "num": "4527", "d": "7/2015"}, {"title": "warning setstate unmounted component traceback", "body": "warning setstate update mounted mounting component usually means called setstate unmounted component noop would great get stack trace know warning referring", "num": "4526", "d": "7/2015"}, {"title": "deprecate reactaddonsbatchedupdates", "body": "shipped exposed master deprecate usage separately deprecation notices nt shipping standalone addon", "num": "4525", "d": "7/2015"}, {"title": "false warning use keyed object wrapped reactaddonscreatefragment object passed child", "body": "running code server side bootstraps alt stores displays warning message variable nested json objects js export default req res next gt cookiesetrawcookie reqheaderscookie let location new location reqpath reqquery routerrun routes location error state transition gt error return next error transitioniscancelled return resredirect transitionredirectinfopathname server output html react app authenticated truehomestatslogin logoutprojectsenvironment developmentplatform darwinmemoryusage snapshot variable example using source code available suggestions", "num": "4524", "d": "7/2015"}, {"title": "reactmount refactor rely dom", "body": "seen soon refactored rely dom share code two hard code id logic still wanted working project would help reactmount dependant dom different render target nt mind taking look want check wanted feature whether cases like mine go writing completely new renderer think would useful would make easier use react projects nt dom related", "num": "4523", "d": "7/2015"}, {"title": "enhance reactclass support perf functions", "body": "currently reactclass loops lifecycle methods created attaches prototype function sets null think would benefit reactclass check phase reroute lifecycle methods would allow advanced metrics line lifecycle methods executed think pr ready something core think", "num": "4521", "d": "7/2015"}, {"title": "warn checkbox element child textmarkup", "body": "seems conditionally rendering two elements ca nt different root node example switching input div order get around issue wrap everything common container element react able handle sample plunkr demonstrates behavior expect case switch showing test test activating checkbox instead ends duplicating node interestingly nt get errors simplified test case complex app react complains two unrelated nodes sharing react id activating checkbox", "num": "4520", "d": "7/2015"}, {"title": "creating element without reactcreatefactory reactcreateelement jsx", "body": "hi trying interface react scalajs scala class hello extends reactcomponent def render reactcreateelement div reactrender new hello dom node invariant violation reactrender invalid component element make work hello scala class available js world make available js world jsexport ing reactcreateelemnt jsdynamicglobalpackagepathhello props reactcreatefactory sdynamicglobalpackagepathhello props work languages compiles js interact react possible remove restrictions allow us use default class constructors create elements", "num": "4519", "d": "7/2015"}, {"title": "get lostfocus event get onfocus", "body": "get focus type something search appear click somewhere else get focus lost want disappearhow", "num": "4518", "d": "7/2015"}, {"title": "license via npm", "body": "add license npm package", "num": "4517", "d": "7/2015"}, {"title": "automatically add type button buttons without type", "body": "well known issue pressing enter input trigger click handler unrelated button somewhere else dom button nt wondering react automatically add creating elements nt already props left userland currently monkeypatching automatically add also wondering better way", "num": "4516", "d": "7/2015"}, {"title": "fixed issue happens latest stable edition", "body": "issue fixed pull comments seems works meet problem latest stable edition write todo list react use reactcsstransitiongroup animation however use button delete completed todo items last item deleted issue mentioned nt use reactcsstransitiongroup everything works fine see reacttransitiongroupjs code committed fix problem removed test case wonder happened", "num": "4515", "d": "7/2015"}, {"title": "defensive calling methods syntheticevent inside pool", "body": "known documented react syntheticevent pooled confusing many users nt understand event starts behave strangely used async callback like inside callback already attempt solve problem code syntheticevent default methods javascript preventdefault function thisdefaultprevented true var event thisnativeevent eventpreventdefault eventpreventdefault else eventreturnvalue false thisisdefaultprevented emptyfunctionthatreturnstrue stoppropagation function var event thisnativeevent eventstoppropagation eventstoppropagation else eventcancelbubble true thisispropagationstopped emptyfunctionthatreturnstrue may make sense defensive calling pooled event raise would useful add check like", "num": "4514", "d": "7/2015"}, {"title": "yet another invariant violation reactmount two valid unequal nodes", "body": "experiencing unexpected error related native dom events created owner component triggered dom elements rendered owned components number seemingly related issues closest might different edge case thought create new issue reproduction tried whittle much possible jsfiddle using get error using steps click go two click go one click go two second time component rendered react throws datareactid notes trying narrow cause found following scenarios error thrown onclick prop empty function added element component see input element component removed leaving form element see return value render methods components inlined render method component ie everything rendered single component see using form element component removed leaving input element sorry fiddle cdn still throws thanks", "num": "4511", "d": "7/2015"}, {"title": "factorytype deprecated without using type", "body": "hey using react typescript whenever use reactcreatefactory get warning despite using type anywhere smallest code reproduce issue minus imports ts export class boardappcomponent extends reactcomponent render return button null hey const boardapp reactcreatefactory boardappcomponent export default boardapp link project issue done", "num": "4510", "d": "7/2015"}, {"title": "class methods binded class instances", "body": "let say class like use baseplayer inside another component name refbaseplayer like problem class somecomponent ca nt call thisrefsbaseplayermymethod methods binded baseplayer instance fixed manually bindexpose methods baseplayer constructor like constructor props super props automatic better way achieve", "num": "4509", "d": "7/2015"}, {"title": "using braces props causes syntax error", "body": "following jsx produces following incorrect js reproducible jsx compiler page", "num": "4508", "d": "7/2015"}, {"title": "new macbook arrived trouble running test xd", "body": "beer react git master grunt test running jest task running jest may take notice node iojs merging august jest work iojs merger complete legacy node still available npm branch github using jest cli fail srcaddonstestsreactcomponentwithpurerendermixintestjs error worker process exited responding exit code null exit signal sigsegv stderr worker process quit unexpectedly bad news shutting jest failed error warning task jest failed use force continue aborted due warnings", "num": "4505", "d": "7/2015"}, {"title": "react custom rendering reactblessed", "body": "hello react team release separation rendering logic react core started scaffolding custom renderer blessed library used create terminal interfaces therefore wip nonetheless working version issue therefore way give feedback creation custom renderers ask advice check whether things correctly way would deem right one steps followed created based respectively upon creared mimicking behavior created injection file basically following js reactinjectionnativecomponentinjectgenericcomponentclass reactblessedcomponent reactinjectionnativecomponentinjecttextcomponentclass reactblessedtextcomponent reactinjectionupdatesinjectreconciletransaction reactblessedreconciletransaction screenreactserverrenderingreactcomponentenvironmentprocesschildrenupdates set noop updates work without dom working renderer working state reconciliation refs events etc things would missed would break renderer point", "num": "4500", "d": "7/2015"}, {"title": "unmount root components container", "body": "hi using react certain modules mature project primarily built around jquery serverside rendered html main routing mechanism loads particular url via replaces html content container page via using react components page noticed manually unmount root components leaving page loading new page case react components rendered deeply nested somewhere content container unmounting root components rendered content container manually via works expected concerned developers could forget unmount components could lead memory leaks unexpected behavior guess therefore would like unmount possible root components generic way directly router unfortunately nt know get dom nodes particular parent container generic way nt work components rendered directly content container somewhere content container hierarchy way retrieve root components given dom element selecting elements would select root components also child components would helpful react would directly support unmounting whole container thanks advance help keep good work benjamin", "num": "4498", "d": "7/2015"}, {"title": "reactchildrenmap index always", "body": "reactchildrenmap thispropschildren item gt consolelog im trying add event child need current index mapping get correct index thanks", "num": "4497", "d": "7/2015"}, {"title": "wrapping child elements possible need key wrapper", "body": "title may clear example easy understand javascript key set correctly var childs key set correctly var childswrapped childsmap function c return c often put wrapper components around components find often forget put back key attribute wrapper child already key wrapper could perhaps also uses key automatically nt know possible good idea wondering", "num": "4496", "d": "7/2015"}, {"title": "required props provided cloneelement still display warning console", "body": "made example easier understand basically warning displayed console missing required props props given element nt expecting get warning missing props understand could edge case though class extends reactcomponent render return reactchildrenmap thispropschildren function child return reactcloneelement child name thispropsname value thispropsvalue aproptypes name proptypesstringisrequired value proptypesstringisrequired class b extends reactcomponent render return thispropsname thispropsvalue bproptypes name proptypesstringisrequired value proptypesstringisrequired", "num": "4494", "d": "7/2015"}, {"title": "unreliable chrome", "body": "see jsfiddle chrome quickly move mouse list notice get stuck hover state works fine safari works chrome use stable key hover states think somehow nt firing underlying dom node replaced new one tick odd chromeonly bug", "num": "4492", "d": "7/2015"}, {"title": "verdict cycle js", "body": "new topic hacker news reactjs vs cyclejs anyone know", "num": "4491", "d": "7/2015"}, {"title": "onclick nt works iphone ipad works android", "body": "", "num": "4490", "d": "7/2015"}, {"title": "typeerror running nodeenv production", "body": "example repo using babelnode execute turn works fine production get error missing something really obvious", "num": "4489", "d": "7/2015"}, {"title": "animations working safari", "body": "tested basic animations working fine chrome firefox safari issues nothing seems work safari even fadeinfadeout eg", "num": "4488", "d": "7/2015"}, {"title": "implement declarative setstate handling", "body": "depend immutable library store properties triggerinvoke react rerender update properties often find need change properties corresponding state together one event handler function order keep synchronised scenarios would great able let immutable library alone responsible triggering rerender process turn automatic rerendering response setstate calls note thought moving setstate componentwillrecieveprops state values dependent given event handler would make sense able pass additional parameter setstate call allow developer explicitly control setstate handling perhaps use cases one would want batch set state property changes guaranteed processed tick something along lines x reactcreateupdatebatch xaddpropupdates many xaddstateupdates many recatsubmitupdatebatch x", "num": "4487", "d": "7/2015"}, {"title": "eventtarget set onchange event", "body": "version set event currenttarget set example works expected version intentional", "num": "4479", "d": "7/2015"}, {"title": "upgrade typescript dependency", "body": "lock since bunch apis changed nt want figure important thing still run typechecks fail appropriately using simple transpile api nt option see", "num": "4476", "d": "7/2015"}, {"title": "problem instance react", "body": "instance react empty object installation ran problems errors surrounding nt exist npm package registry deleted packagejson everything ran smoothly instance react empty object using linux version app build pipeline includes gulp commonjs", "num": "4475", "d": "7/2015"}, {"title": "implement sticky listview headers", "body": "scroll listview iosandroid apps see headers stays top replaced newest section headers scroll react native support feature investigation found jquery plugins react components modules use achieve effect react project librarypluginreact components recommend use", "num": "4468", "d": "7/2015"}, {"title": "best way access prod build webpack modules", "body": "let say including react prod build cdn script tag want get version ideal webpack config course could thinking better way seen surprisingly articles talk use production build cover dev case", "num": "4467", "d": "7/2015"}, {"title": "warning specify transition timed timeout occurs reactcsstransitiongroupchild", "body": "would great warning would specify transitionend event looking ie transitionname", "num": "4465", "d": "7/2015"}, {"title": "validatedomnesting warns optional tags missing", "body": "according html spec certain tags optional specific circumstances presence implied however getting warnings cases imagine complexity something worth accounting within wanted call", "num": "4464", "d": "7/2015"}, {"title": "perfprintwasted showing instances actual renders", "body": "hi trying analyse performance app use perfprintwasted heavily face weird behaviour usually activating perf single transition going one view another get long view performance waste digging tried get rid one single instance following example focusing index betroundgames gt game supposedly rerenders times without changing dom since using purerender curious often render betroundgames game component triggered added counter components render result betroundgames render games render different games every instance exactly rendered also saw sometimes adding new nodes still counting wasted time shown would explain wasted instances explain perf counting instances wasted time either understanding measurement wrong make wrong assumptions", "num": "4462", "d": "7/2015"}, {"title": "calling setstate componentwillmount shallow render results typeerror read property currentelement null", "body": "calling component shallow rendered result error thrown set test case javascript var expect require chai expect describe testing state function beforeeach function var window require dominolibwindow var domino require domino handle initial state function passes var react require react var reacttestutils require reactlibreacttestutils handling set state componentwillmount function fails var react require react var reacttestutils require reactlibreacttestutils", "num": "4461", "d": "7/2015"}, {"title": "block change events disabled", "body": "repro given least double click checkbox causes onchange called adding statement normalizing would nice may also affect elementsevents like misc screen readers etc workaround duplicate disabled boolean logic handler report irc verified", "num": "4457", "d": "7/2015"}, {"title": "error inside render function nt show error console", "body": "hello updated latest version react everything wonderful started notice something really important sometime components created nt started debug code found made exception inside render function something like stupid example show example never saw error console nt see anything error making crazy stated debug react code found something nt know bug need solve different way inside reactjs see try nt got catch added catch console started show errors inside render function hope ok mistake thanks", "num": "4454", "d": "7/2015"}, {"title": "chrome load events fired img tags detached trees cause infinite loop", "body": "web components", "num": "4452", "d": "7/2015"}, {"title": "getters mixin", "body": "want use style getters inside mixin blows comes line inside reactclass invokes getter method mixing unexpected behavior jsx const foomixin componentwillmount thismyfoo bar get foo return thismyfoo const mycomponent reactcreateclass mixins foomixin render return thisfoo", "num": "4450", "d": "7/2015"}, {"title": "deferred componentdidmount inside component tree", "body": "problem dom elements outside main dom document want render react components done original elements mounted main dom document need delay schedule components inside main dom document reason mainly logic inside works offsets element eg controls lazy loading images invoked seperate dom component wrong idea screen possible current version react achieve behaviour componentdidmount transaction invoked later give signal root component future refactoring allow use case", "num": "4448", "d": "7/2015"}, {"title": "contents", "body": "something like output script elements cdata content quoted", "num": "4446", "d": "7/2015"}, {"title": "jsx validator fails selfexecuting arrow functions still works", "body": "put code compiler gave syntax error however nt break app works intended jsx var hellomessage reactcreateclass render function return gt true return true else return false reactrender mountnode nt work based information section last example", "num": "4445", "d": "7/2015"}, {"title": "update data rest api", "body": "jsx var app reactcreateclass getinitialstate function return data updatedata function thissetstate function state state function state data return data function state cb get data data result statedata result cb state data render function return tried update state working way update manully commented portion even render second click tell proper way update state using rest api calls", "num": "4442", "d": "7/2015"}, {"title": "request support full range svg attributes jsx", "body": "noteworthy missing attributes include", "num": "4441", "d": "7/2015"}, {"title": "thissetstate function", "body": "running getting uncaught typeerror thissetstate function behavior something wrong please check", "num": "4440", "d": "7/2015"}, {"title": "support bgcolor td tag html emails", "body": "seems widest email client support using bgcolor attribute td tags best route would like write render emails react since building email components would alleviate pains using tables layout use inline styles via js would helpful inability use bgcolor attribute road block would ever supported future", "num": "4439", "d": "7/2015"}, {"title": "linkedvalueutils requestonchange eventtarget undefined", "body": "following example work console shows typing input field fwiw seems set correctly workaround fix thanks", "num": "4438", "d": "7/2015"}, {"title": "microsoft edge compat", "body": "hey reactors working assessing cataloging triaging library compat microsoft edge know version compat range react edge versions fully operable edge also bugs block features compat help escalate", "num": "4434", "d": "7/2015"}, {"title": "allow classname jsx element declaration", "body": "since jsx javascript identifiers class discouraged xml attribute names instead react dom components expect dom property names like classname htmlfor respectively instead able instead able true reserved keywords ecmascript however jsx part ecmascript jsx transpiled javascript jsx inlined javascript restricted limitations transpiler carry weight incompatibilities babel babel transpiler able read class attributes convert refer react support element properties throw warning", "num": "4433", "d": "7/2015"}, {"title": "mouseevent nt offsetxoffsety", "body": "try get position click relative element event nt offsetx onclick e consolelog eoffsetx returns undefined consolelog etargetoffsetx returns undefined render return get position click element", "num": "4431", "d": "7/2015"}, {"title": "component must raise error unknown property passed", "body": "component declaration contain whitelist properties eg could require list property name even assigned could mean type broader version property defined passed component declaration error must raised would provide several benefits would help catch typos would promote type declaration would prevent orphan properties catching typos suppose component generates different type input depending value component default value text js var input reactcreateclass getdefaultprops function return type text render function different logic defending type name thispropstype text instance declaration defined typo property would obvious error raising error unknown property tupe would help catch error promoting type declaration property names required listed requires little extra effort define types furthermore used think codelength terms lines code fact type declaration moment adds extra lines might discouraging developers thought boost importance earlier argument preventing orphan properties especially relevant using spread operator inheritance suppose instance simple component declared using spread operator object containing many properties apply component scenario instance would copy property values dead weight", "num": "4430", "d": "7/2015"}, {"title": "file exports single class displayname eq file name", "body": "single file used per module modules end derived equal would make sense use file name instead eg js proptypesjs jsx reactdom use strict var react require react moduleexports reactcreateclass render function return case", "num": "4429", "d": "7/2015"}, {"title": "lint unnecessarily complains trailing comma", "body": "tried write linter wants comma kind annoying anything", "num": "4428", "d": "7/2015"}, {"title": "ca nt get use classes react", "body": "new react want rewrite simple react demo seem ca nt get code javascript class timer extends reactcomponent constructor props super props thisstate elapsed methods tick thissetstate elapsed new date thispropsstart read property start undefined render var elapsed mathround thisstateelapsed var seconds elapsed tofixed return example started seconds seconds ago reactrender documentbody use thanks", "num": "4425", "d": "7/2015"}, {"title": "childrenonly called result childrenmap", "body": "intended called opaque object eg best tell intended return opaque object ca nt called return value per seems reasonable want map child another element clone element instance grab child map use render also surprising identity operation passed map thing comes semantically equivalent issue demonstrated", "num": "4424", "d": "7/2015"}, {"title": "implement custom lifecycle hooks", "body": "wondering implement custom lifecycle hooks want add fetch hook fetch data related component another hook know former use case dealt relay", "num": "4423", "d": "7/2015"}, {"title": "adjacent jsx elements must wrapped error", "body": "nt see anything wrong first two lines jsx transformer seems remove first two everything works fine someone explain going jsx new inbox sign", "num": "4418", "d": "7/2015"}, {"title": "input tag rendered self closing", "body": "", "num": "4417", "d": "7/2015"}, {"title": "invoke another component method", "body": "work reactjs meet problem divide entire page two components called xxxheader want click button xxxheader refresh xxxbody works well wrap xxxheader xxxbody parent ca nt wrap xxxheader xxxbody component try use mixin resolve mixin used wrap common give suggests", "num": "4416", "d": "7/2015"}, {"title": "could know dangerouslysetinnerhtml set innerhtml", "body": "use marked parse article get html string article use insert dom want use autoindexer generate index article code try get length content children node means innerhtml nt set time check test code content longer confused could know dangerouslysetinnerhtml set innerhtml seems short html set invoked longer html set invoked", "num": "4415", "d": "7/2015"}, {"title": "returned value weird", "body": "sure whether bug let look following code jsfiddle js var test reactcreateclass render function consolelog reactchildrenmap thispropschildren function child return child consolelog thispropschildren return thispropschildren reactrender reactcreateelement test reactcreateelement input documentbody think returned value surprise returned value something like misunderstand", "num": "4410", "d": "7/2015"}, {"title": "componentwillunmount triggered child component parent component unmounts child component", "body": "componentwillunmount triggered child component parent component unmounts child component", "num": "4406", "d": "7/2015"}, {"title": "flatten children array instead object", "body": "flattening children array times faster flattening object long list elements shows initial render flame graphs pretty hot", "num": "4405", "d": "7/2015"}, {"title": "checksum validation dev mode", "body": "validating checksums surprisingly expensive reasonable render wasting generating double checksum needs generated twice server client creating bug test waters anything else feel check dev mode failing harder dev mode fail check since would become serious problem production would longer validating checksum thus expected markup could differ actual hard justify spending many valuable milliseconds generating sanity check fully expect pass developers write code correctly", "num": "4401", "d": "7/2015"}, {"title": "inline styles rules overriding", "body": "always deal browser inconsistency still want use inline styling nice good property different name prefix like deal situation used override rule css eg", "num": "4399", "d": "7/2015"}, {"title": "chrome svg bug", "body": "chromium svg bug report july also see bug registered chromium chromium issue run reducedtestcase nt even need clone repo build folder get vickershtml vickerspackedjs save locally folder open html firefox chrom eium please note bug occurs chrome firefox app works fine firefox using chromium version ubuntu bit description app app implements minesweeper grid tiles beginning game tiles showing component currently fuzzy blue ring lightblue click tiles reveal nonmine tiles show number mined tiles show black mine glyph goldpurple gradient disk right clicking nonrevealed tile flag tile flag glyph fuzzy grey disk black background game end clicking revealing mine programmed behaviour development purposes description bug chrome clicking mined tile causes tiles revealed mine tile go completely black programmed behaviour feel free test firefox tiles stay programmed behaviour tiles go black right clicking flag tile variety possible unintended effects board fresh mines revealed first click toggle flag work second click remove flag also work third click make every tile board transparent except border region fourth click return tiles appropriate state visual state would without bug board tiles blackened revealing mine behaviour tiles revealed mines first bullet behaviour revealed mines cycle various states visual mutation decomposition svg glyph starts third toggling flag mine disappears halo ring reappears th fourth toggling fifth toggling goes subtle mutation cycles states subsequent togglings reducedtestcase attempted reducedtestcase bug unfortunately bug involves interaction logic visual detail nt able reduce much", "num": "4398", "d": "7/2015"}, {"title": "inherit class react work jest", "body": "dear use jest inherit class react cause error looks react issue jest post demo based jest example change two line add custom file paste gist errors using jest cli fail testscheckboxwithlabeltestjs checkboxwithlabel changes text click typeerror read property textcontent undefined spec jasmineblockexecute jasminequeuenext nullontimeout timerlistontimeout ontimeout test failed tests passed total run time npm err test failed see details npm err ok code node version react version jest version problem looks cause testutils always return undefined use customreact maybe use wrong way extend react works except adding testcase", "num": "4397", "d": "7/2015"}, {"title": "file", "body": "get warning latest beta npm installed warning text", "num": "4396", "d": "7/2015"}, {"title": "purerender decorator", "body": "wondering purerendermixin implemented decorator think importing another lib overkill also nt use cases pure render case nt default behavior", "num": "4394", "d": "7/2015"}, {"title": "render string slow", "body": "switched mustachelike templating isomorhpic framework building rendering server side noticed taking render whole page usually instant roughly line got props thought cause components call render function concatenate strings something hood", "num": "4392", "d": "7/2015"}, {"title": "thisstate empty render despite getinitialstate defined correctly", "body": "hey try best explain scenario making fiddle smallest possible case might hard essentially spa using reactrouter currently getting strange behavior specifically one version firefox two sidebar icons trigger change routes navigating new page occasion switch quickly getting error thisstatelist undefined list populate dropdown issue upon debugging consolelog thisstate returning empty object call errors thisstatelist happens render method however list defined getinitialstate along bunch state variables thisstate definitely nt empty thing could think would causing due quick switching confusion mountingunmounting components component still thinks mounted skips getinitialstate goes ahead tries render either bug reactrouter thoughts thanks advance help nick ps reiterate also occurs rarely quick switching normally componentdidmount getinitialstate render occurs expected simply error getinitialstate written etc edit using react react router", "num": "4391", "d": "7/2015"}, {"title": "reopening", "body": "another day development run chromium problems firefox still working fine minesweeper renders okay gameplay graphics behaviour unpredictable strange things chromium like revealing clicking mine turns every tile black repeatedly toggling flags rightclick causes tiles go transparent etc", "num": "4390", "d": "7/2015"}, {"title": "passing callback setstate using reactaddonslinkedstatemixin", "body": "think linkstate accept second argument callback passing setstate consider example widget includes couple inputs whenever inputs changes widget calls thispropsonchange based values inputs currently implement mixin passes callback setstate think would reasonable arguments linkstate consistent setstate", "num": "4389", "d": "7/2015"}, {"title": "unexpected behavior react", "body": "migrating unit tests reporting false positive failures seems though longer able find elements inside components javascript create simple component const test reactcreateclass render gt return render document const myelement reacttestutilsrenderintodocument make sure component svg element const svg reacttestutilsfindrendereddomcomponentwithtag myelement svg oops fails gt find exactly one match tag svg however works fine consolelog finddomnode myelement childnodes gt returns element", "num": "4388", "d": "7/2015"}, {"title": "css animation example", "body": "hey struggling animation issue almost hour css popenter transform translatex transition transform easein popenterpopenteractive transform translatex expert css animations simply copied docs turns solution css popenter transform translatex popenterpopenteractive transform translatex transition transform easein element rendered isnt initially set thus tried animate tag hits going back place thus appears animation occurred save someone like lot pain frustration fixed example docs", "num": "4385", "d": "7/2015"}, {"title": "add findrenderedcomponentswithattr", "body": "hello party people like find dom nodes attributes specifically ariaselected use case testing keyboard navigation around dom nodes ensure component accessible thoughts try avoid refs much possible classes nt specific enough state element thoughts made commit would accepted thanks", "num": "4380", "d": "7/2015"}, {"title": "reacttestutilsscryrenderedcomponentswithtype problem compiled code", "body": "edit react version hi trying use test result returns nt expected given components extends javascript let renderedel reacttestutilsrenderintodocument let projects reacttestutilsscryrenderedcomponentswithtype renderedel project consolelog projects get reason line evaluates reason believe minified webpack course nt equal something guys aware use incorrectly thanks", "num": "4378", "d": "7/2015"}, {"title": "random svg text tspan shows properly", "body": "app require sag text wrapping length editing functionality done computing text wrap text editing functionality thing stuck edit element width ie decrease element width make textin lines lines show ok refresh page looks ok stretch element show every thing ok ie text line looks like increase rows tspans working decrease tspans reflects oki key assigned element warning react browser console idea issue seems like react rendering new tspan properly see tspan properly dom", "num": "4376", "d": "7/2015"}, {"title": "testutilssimulate changekeydownkeypress working normal input field", "body": "hard time definitely behaving expected basically input field type text try change content click press keys rocket science editing stuff fails miserably wrote small jsbin showcase component testing also wrote small repo showcase failing tests going ps bin running repo running using still nevertheless also tried keeps failing", "num": "4375", "d": "7/2015"}, {"title": "render node client side", "body": "using isomorphic rendering app however want items present javascript disabled render method following works expected however get warning way make go away store check like however nt seem like right place live maybe wrong could also use however deprecated nt make much sense use anyone else thoughts best way approach", "num": "4374", "d": "7/2015"}, {"title": "faster way showhide components toggle component toggle display", "body": "toggle component toggle css display simple", "num": "4373", "d": "7/2015"}, {"title": "reopening chromium chokes svg path element", "body": "see", "num": "4372", "d": "7/2015"}, {"title": "walkthrough clarification", "body": "reporting bug issue wanted let know found part walkthrough unclear confusing others may get started using tutorial start editing publicindexhtml getting started tutorial use prebuilt javascript files cdn open favorite editor create new html document took figure whether supposed editing indexhtml file provided cloned repo whether make new file link two files necessary new react pretty new programming overall javascript javascript framework experience really enjoyed walkthrough simple get started thanks helpful resource", "num": "4369", "d": "7/2015"}, {"title": "react unhelpfully eats stacktraces", "body": "line code like following nt exist react code makes difficult debug going normally ask chrome debugger debuggers well pause exception halt debugger right line mouseover see however react code see errors happen swallowed losing useful stacktrace ability browser debug code understand react needs two lines finally clean would helpful could save exception thrown eg rethrow finished cleanup eg reason impossible alternative less useful solution would log error would least provide developer stacktrace although would nt let debug error", "num": "4368", "d": "7/2015"}, {"title": "checkbox rendering properly ajax", "body": "render following thispropsgenres populated ajax call body inputs doesnt get rendered populating static data render fine cases data passed array strings hopefully missing something obvious", "num": "4365", "d": "7/2015"}, {"title": "chromium chokes svg interaction", "body": "particular svg subissue related intial post solved different svg issue related post thread july opened different issue even though relate chrome svg issue findings svg related sort variable assignments function within return values may parsed span elements inside svg logically cause blowup generally issue generally still able compute usefull things within without vals turned fodder spans still think bug svg related limited path elements bug chromium firefox path command danger discarding unexpected node error chromium breaks render destroying app firefox problems svg path command render firefox renders fine chromium get danger discarding unexpected node warning render full file project context testcoffee", "num": "4364", "d": "7/2015"}, {"title": "getting started confused new starter", "body": "followed step page working need figure add steps start local server run hello world example compared angularjs getting started doc one bad waste time", "num": "4361", "d": "7/2015"}, {"title": "react testutils missing package", "body": "seems addons got separate package except testutils means get deprecation warning requiring reactaddons use expected missing something", "num": "4360", "d": "7/2015"}, {"title": "statics getdefaultprops wierdness", "body": "tripped today instead must call inside presume static method ends inside statics object hence must referenced siblings using filing bug bring attention though since user perspective behaviour bit unexpected", "num": "4359", "d": "7/2015"}, {"title": "docs getting started helloworldhtml example fails chrome osx yosemite", "body": "downloaded react starter kit today working separate file section place made following directory structure starter kit files source markup would nt load chrome console one spent time googling solutions nt seem work nt try restarting machine though however xhr worked safari include minor disclaimer case chrome since nt want barrier entry newcomers", "num": "4354", "d": "7/2015"}, {"title": "access lower leaves object loaded json put", "body": "loading json object adding manner shown react tutorial able access leaves first level given json file following results works simple keyvalue uncaught typeerror read property key undefined uncaught typeerror read property firstkey undefined putting debug variables function one see reference data fine json data structure adds full test file loading json file output work invoke error messages returns nothing html test referencing json object react state json test var contentbox reactcreateclass loadjsonfromserver function ajax url thispropsurl datatype json cache false success function data thissecondkey works thissetstate data data nt work bind error function xhr status err consoleerror thispropsurl status errtostring bind getinitialstate function return data componentdidmount function thisloadjsonfromserver render function var testvalue thisstatedatajunk return test thisstatedatasimple thissecondkey reactrender documentgetelementbyid content", "num": "4352", "d": "7/2015"}, {"title": "rerendering done efficient way data change flux architecture controller", "body": "controller consist many views controller state pass data views props problem suppose view depends number product say products product consist number properties related property also property change value subproperty rerender dispatch change event start rerendering controller process codes like condition checks loops etc time consuming achieve fluxreact architecture", "num": "4350", "d": "7/2015"}, {"title": "encoding declaration written several ways", "body": "reactexamples encoding declared described files however another example declared another writing think unify latter way possible provide short code using attribute", "num": "4347", "d": "7/2015"}, {"title": "maintain state mountunmount", "body": "really getting answer looking stackoverflow thought try possible instantiate component mount unmount remount allowing component maintain internal statecontext", "num": "4345", "d": "7/2015"}, {"title": "missing guard doublerequire invariant", "body": "tl dr propose create simple guard around doublyincluding react cause issues different blocks work different instances understand invariant nt going matter everyone two points many weeks fixed bug coworker project accidentally including react twice browser one browserify bundle standalone", "num": "4343", "d": "7/2015"}, {"title": "inherited prop classname", "body": "hey recently using react flux project approached quite intriguing problem following webcomponentslike approach try create bunch reusable components similar behaviours problem arises want put component logic different view different design different css class attached need create component different set class names usually default ones right seems possible passing props like tl dr would really cool react passed component definition actual dom elements would save us creating passing props ex initialization parent component js class parentcomponentalpha render return class parentcomponentbeta render return current way appending inherited classes js class mycomponent proptypes classes reactproptypesarrayof reactproptypesstring render var innerclasses cmp default cmp mobile nicer simpler way js class mycomponent render var innerclasses cmp default cmp mobile would love hear opinions needed functionality project ended passing inherited class names props feels little inelegant", "num": "4341", "d": "7/2015"}, {"title": "syntheticevent undefined target", "body": "syntheticevent set example works advise missing", "num": "4340", "d": "7/2015"}, {"title": "third argument reactchildrenforeach work", "body": "found optional argument could set another object toplevel api try run code javascript var obj num logs three times idea third argument work", "num": "4339", "d": "7/2015"}, {"title": "estoppropagation seems working expect", "body": "found issue attempted integrate reacjs jquery widget bind click event input element document like follow everytime click input element chrome devtool logs propagation message document element receive click event confused miss something", "num": "4335", "d": "7/2015"}, {"title": "rendertostring incorrectly supports select defaultvalue", "body": "code reproducing js var test reactcreateclass render function return var container documentgetelementbyid container var code documentgetelementbyid code var test var prerender reactrendertostring test codeinnertext prerenderreplace n lt containerinnerhtml prerender settimeout gt reactrender test container rendering server got small lag client", "num": "4333", "d": "7/2015"}, {"title": "attribute names class discouraged", "body": "docs note since jsx javascript identifiers discouraged xml attribute names instead react dom components expect dom property names like respectively jsx compiler seems smart enough quote keys like class work fine even environments problem discouraged exactly mean", "num": "4331", "d": "7/2015"}, {"title": "make eslint rule testing use jest mocha", "body": "using npm mocha necessarily thanks hoisting eg actually", "num": "4328", "d": "7/2015"}, {"title": "checksum inserted incorrectly selfclosing root tags", "body": "came diagnosing look closing adding checksum reactdomrendertostring reactcreateelement img reactdomrendertostring reactcreateelement div null reactcreateelement img", "num": "4323", "d": "7/2015"}, {"title": "reacttestutilssimulateclick react label element", "body": "dear faced issue testing collaboration label checkbox elements context custom checkbox label goal test behaviors one component fire user click title title case create link hotspots browser everything fine started cover tests faced click emulation label nt lead change checkbox value immediately works hack testing stack question happens plans improve behavior", "num": "4322", "d": "7/2015"}, {"title": "tag rendering differently client server invalidating checksum", "body": "hi tried find similar issues nt believe reduced case using react problem difference reactrender reactrendertostring dealing img tags closing kinda confuses assume exact thing hood tap inspect see difference server code const react require react reactapp require publicscriptscomponentsscaffoldappwrapper appcontent reactcreatefactory reactapp reactrendertostring appcontent client code import appwrapper componentsscaffoldappwrapper reactdomrender documentgetelementbyid appwrapper component appwrapper import react react class appwrapper extends reactcomponent export default appwrapper output markup rootmarkup note selfclosing tag something obvious incorrectly way enforce includingleaving closing tags thanks help offer", "num": "4321", "d": "7/2015"}, {"title": "example using testutilssimulatechange multiple select field", "body": "hi trying find working example driving multiple select element using react testutils single select works fine multiple select field get error instead pass array arguments nt seem triggering change handler reflected component state apologies missing something obvious anyone knows proper way help would appreciated thanks", "num": "4316", "d": "7/2015"}, {"title": "shallowcompare set reactaddons npm version", "body": "according docs reactcodemod react gt include used transformation installing npm case locally installed react node module missing line npm package date else wrong matters know error go away ca nt really upgrade beta", "num": "4315", "d": "7/2015"}, {"title": "keyboard selection nt fire onchange firefox", "body": "related bug bugzilla workaround use onkeydown allowing selection change calling handler manually wo nt bubble something could support", "num": "4313", "d": "7/2015"}, {"title": "multiple variation component mounted invariant violation reactmount", "body": "mounting component times different heading css hiding showing", "num": "4307", "d": "7/2015"}, {"title": "refs longer components", "body": "big change making release exposing refs dom components dom node means looked ref dom component realized useful thing call thisrefsgiraffegetdomnode get underlying dom node used perform custom method child component dom node accessible make longer possible better practice following call methods descendent components", "num": "4305", "d": "7/2015"}, {"title": "using extend create class react component shows error initialstate", "body": "maybe nt understand alternative warning getinitialstate defined campaignlist plain javascript class supported classes created using reactcreateclass mean define state property instead warning setstate update mounted mounting component usually means called setstate unmounted component noop", "num": "4304", "d": "7/2015"}, {"title": "add hooks warning output unit tests use cases", "body": "like configure testsuite fail react warnings triggered currently using variant answer js consolewarn function warn return function msg consolewarn basically works problem globalstate memoisation code triggers warning try trigger often could provide way clear state even better supported api optin erroring warnings", "num": "4302", "d": "7/2015"}, {"title": "problems using rendersubtreeintocontainer", "body": "nt know correct way integrate new hidden feature used used existing app migrating tooltips portals using hubspotdropjs render react components rendered content make use react context context changed ca nt use owner content anymore must use make context available see first got stacktrace undefined nt know nt get anymore tooltips efficiently displayed first requiring reactlibrendersubtreeintocontainer nt think reason right tooltips displayed works fine tooltips hovered clicked trigger actions also works fine strange thing found tooltip hovered produce lot errors tooltip produces errors first item list example imagine todo list first todo attribute tooltip hover tooltip causes errors stacktrace idea", "num": "4301", "d": "7/2015"}, {"title": "html components maintain state", "body": "say mycomp rendered dom user checks checkbox call mycomprender seems checkbox stell checked even though rerender checkbox statefullness come react handle maybe input element something like thisstatechecked apologize question covered docs suspect somewhat basic could find information", "num": "4298", "d": "7/2015"}, {"title": "issue react class variable references", "body": "weird behaviour probably undocumented done replicate react version javascript create react component var mycomponent require pathtomycomponent create reference var component mycomponent try render work reactrender target create new reference var component mycomponent try render work reactrender target desired behaviour missed something documentation", "num": "4297", "d": "7/2015"}, {"title": "proposal automatically compose refs cloneelement", "body": "currently clobbers original element ref provide new ref cloning proposal automatically compose callback refs works js var original var clone reactcloneelement original ref component gt consolelog clone ref upon mounting prints clone ref original ref implementation compose refs would look similar technique used js var element var originalref elementref originalref null amp amp typeof originalref function consolewarn string refs composable use callback ref instead ignoring ref originalref originalref null reactcloneelement element ref component gt whatever want writing higherorder components find composing refs lot write refcomposition code several times easy write utility helper thought could make sense build approaching cc spicyj sebmarkbage", "num": "4296", "d": "7/2015"}, {"title": "apps mount isomorphically rendered forms nt aware early input", "body": "consider following scenario run simple isomorphic app consists singleinput form form rendered server existing data sent browser along dehydrated state user edits form browser loads app slowly rehydrates state bootstraps form user hits save button point react found reason rerender form throw warning even though values form elements updated user app listening result app state sync form input values user resaved old data app state sees new data form values leave lose changes even though appears successfully saved decided solve problem putting ref every form input copying values app state probably make solution little dry sounds first thinking better solution might react include input values checksums technical reason isomorphic rendering already works", "num": "4293", "d": "7/2015"}, {"title": "regression etarget onchange ndefined", "body": "tried updating something changed releases making onchange synthetic event undefined", "num": "4288", "d": "7/2015"}, {"title": "guide document highlighting needs implemented create react renderer", "body": "announcement seems like one goal make easier create renderers different environments realize still beta love guide document talks interfaces need implement reading reactnative client dom renderer try get idea hard time wrapping head around everything navigating react reactnative source proven challenging", "num": "4286", "d": "7/2015"}, {"title": "error invariant violation addcomponentasrefto", "body": "code import react react import reactdom reactdom var mycomponent reactcreateclass render function return hello world var zoo reactcreateclass render function return giraffes name showname function previously var input thisrefsgiraffegetdomnode var input thisrefsgiraffe alert inputvalue var node documentgetelementbyid app reactdomrender node error msg anyone help", "num": "4281", "d": "7/2015"}, {"title": "use perf testutils", "body": "perf testutils nt publish npm package use libraries use directly ca nt find document mentioned", "num": "4279", "d": "7/2015"}, {"title": "meaning", "body": "", "num": "4277", "d": "7/2015"}, {"title": "onkeypress supported div", "body": "plain javascript div receive keyboard events see however tried react could set keyboard events see incorrectly configuring something", "num": "4274", "d": "7/2015"}, {"title": "elements know spread operator used", "body": "bug number memorized point keeps coming maintaining evergrowing whitelist infuriating baby step toward fixing bug think would nice know spread operator used element creation since primary way attributes could accidentally passed element could enforce whitelist elements using spread operator baby step toward eliminating whitelist altogether order though think need modify transform babel right want file bug issue mostly exploratory get idea would need involved effectively rfc spicyj sebmarkbage", "num": "4272", "d": "7/2015"}, {"title": "gettingstartedmd jsx watch nt work", "body": "cli command nt work windows digging found tried everything works fine doc problem miss something cli running windows node npm reacttools", "num": "4269", "d": "7/2015"}, {"title": "international symbols jsx", "body": "experimented international symbols inside react component failed simple example design behaviour javascript var helloworld reactcreateclass render function return \u7684\u306a\u3053\u3068\u306f \u0432\u0440\u0435\u043c\u044f thispropsdatetotimestring get despite jsfiddle works like charm tried os x sublime webstorm work like image", "num": "4267", "d": "7/2015"}, {"title": "documentation reactrender seems selfcontradict", "body": "correct misunderstood something documentation reactrender method says reactelement previously rendered container perform update mutate dom necessary later note reactrender replaces contents container node pass practice seems happen corresponds note", "num": "4265", "d": "7/2015"}, {"title": "testutil onmouseenter onmouseleave work", "body": "trying use testutils onmouseenter onmouseleave events like luck either simulates mouse events however found stackoverflow workaround use works also nt noticed open issue hence opening one already fix keep using workaround feel iffy using simulatenatives events opposed simulate works click events app", "num": "4264", "d": "7/2015"}, {"title": "react retain event listeners relevant elements unmounted", "body": "going make performance problem example events like retained element removed", "num": "4261", "d": "7/2015"}, {"title": "mount new page component unmounting transition old one finished", "body": "wondering anyone could provide insight achieve animated componentpage switch reactjs like achieve componentpage transition like one header transitions opacity margintop content transitions opacity new componentpage shown currently shown componentpage transition new componentpage transitioning code play around", "num": "4260", "d": "6/2015"}, {"title": "need warning onclick case", "body": "render component prop get warning console tells need use instead", "num": "4257", "d": "6/2015"}, {"title": "extend proptypes deprecate getdefaultprops", "body": "prop types easy describe via proptypes find unfortunate obvious proptype default especially null accepted value short summary get react type warnings act intended flow syntax first optional flow somestring string react proptypes somestring reactproptypesstring getdefaultprops function return nonoptional flow somestring string react proptypes somestring reactproptypesstringisrequired getdefaultprops function return optional default value flow somestring string default react proptypes somestring reactproptypesstring getdefaultprops function return somestring default nonoptional default flow somestring string default react proptypes somestring reactproptypesstringisrequired getdefaultprops function return somestring default give type warnings would expect based flow type especially nonoptional default case really hard read react perhaps alternate syntax proptypes incorporates default values considered also solves readability issue would think resolved runtime fact considered set static values discovered issue code nonrequired prop default acceptable value issue get warning overwrite react thinks acceptable putting something default value looks really funky", "num": "4256", "d": "6/2015"}, {"title": "best way properly render tags javascript date object", "body": "rendering renders format used element see mdn info willing build custom component want make sure one already exist existing way aware", "num": "4255", "d": "6/2015"}, {"title": "ca nt reactrender tbodyelement multiple times", "body": "currently trying replace parts huge angularjs application react goal speed rendering times especially comes displaying large dataviews trying ran strange problem trying call reactrender multiple times element react throws following two warnings warning render target node markup rendered react unrelated nodes well commonly caused whitespace inserted around serverrendered markup warning react attempted reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injected new markup compensate works lost many benefits server rendering instead figure markup generated different client server client created simple fiddle demonstrating issue code works render element example missing something ps thanks awesome work reactjs still love", "num": "4254", "d": "6/2015"}, {"title": "mouseenter fires disabled inputs whereas mouseleave", "body": "asymmetry enterleave event plugin since created relativetarget event fires even though target disabled since inverse ie requires disabled element fire mouseout nt fire disabled element pretty sure correct behavior neither event fire target disabled since mirrors idea nonechrome browsers behavior mouse events fire disabled elements additional caveat realized react probably also firing events case mouse leaves disabled element non disabled element", "num": "4251", "d": "6/2015"}, {"title": "mechanism listen events", "body": "already mechanism help document like method api could call listen synthetic events something like like able stoppropagation preventdefault events well", "num": "4250", "d": "6/2015"}, {"title": "bind event render function", "body": "hi friends consolelog event shows undefined access event thanks", "num": "4247", "d": "6/2015"}, {"title": "add runtime deprecation warning clonewithprops", "body": "", "num": "4245", "d": "6/2015"}, {"title": "get dom handle", "body": "trying use reactfinddomnode item error thrown small demo shows problem parent component mounted related additionally behavior didmount didupdate handlers currently undefined regards fire relation children therefore refs example componentdidupdate guaranteed fire children fully mounted sebmarkbage source", "num": "4244", "d": "6/2015"}, {"title": "force element sub tree cleaning", "body": "hi big search result set rendered make new search request server return new unique results think case need calculate optimal dom difference simply right remove dom sub tree resultset render new understand correctly attribute key solve problem thanks answer", "num": "4243", "d": "6/2015"}, {"title": "expose specpolicy user defined methods", "body": "using sets flux event listeners using unfortunately one add mixin add mixin component already using really want would set storewatchmixin method", "num": "4236", "d": "6/2015"}, {"title": "ios extra nodes still emitted react rendering result mapping immutable collection", "body": "understand considered fixed still similar issues iphone following react immutable using webpack babel stage transpiler sure might effect works properly chrome desktop however safari iphone prints number without bullet list items user agent string safari iphone thanks andy", "num": "4235", "d": "6/2015"}, {"title": "two different outputs terminal web inspector incorrect view rendered", "body": "trouble generating views two views would like generate var initials loggedin var notloggedin var initials var isloggedin false var layout reactcreateclass componentwillmount function try window amp amp windowuser initials windowusernamefirst touppercase windowusernamelast touppercase isloggedin true catch e ignore render function isloggedin consolelog windowuser consolelog initials return else consolelog logged return run code different outputs terminal web inspector terminal web inspector object username userid address name object email bradfordli gmailcom bl first second output displayed sure occurring sure handle achieve desired logic view displayed broswer", "num": "4234", "d": "6/2015"}, {"title": "cryptic error message finddomnode unmounted component", "body": "per finddomnode throws unmounted components error message cryptic expert react users honestly thought duplicate react something nt even bother check whether component mounted nt", "num": "4233", "d": "6/2015"}, {"title": "uncaught error invariant violation findcomponentroot unable find element", "body": "modal component click button trigger gives component button happen remove onclick event trigger element ca nt figure problem", "num": "4227", "d": "6/2015"}, {"title": "wrap attribute supported", "body": "wrap missing meanwhile wrap attributes standards", "num": "4226", "d": "6/2015"}, {"title": "html elements respond mobile", "body": "hello learning react meet problem integrate zepto ratchet react develop mobile use gulp build entire app gulpreact precompile jsx works concat vendor scripts zeptojs ratchetjs reactjs one vendorcss precompile jsx one file appjs gulpreact write component named login loginjsx loginhtml elements rendered remove ratchetjs works help thanks amp regards", "num": "4224", "d": "6/2015"}, {"title": "automatic bailout nt take context account", "body": "see following thread quick fix", "num": "4219", "d": "6/2015"}, {"title": "children parentbased context changes nt update", "body": "js var top reactcreateclass childcontexttypes reactproptypesany getchildcontext return thisstatenow getinitialstate return datenow componentdidmount setinterval gt thissetstate datenow render return thisstatenow reactcloneelement thispropschildren var middle reactcreateclass render return reactchildrenonly thispropschildren var child reactcreateclass contexttypes reactproptypesany shouldcomponentupdate return true render return thiscontextnow remove bailout reconciler works reactrender documentgetelementbyid example still doesnt reactrender documentgetelementbyid example", "num": "4218", "d": "6/2015"}, {"title": "sugestion make warnings dev mode output consoletrace", "body": "seeing something like warning use keyed object wrapped reactaddonscreatefragment object passed child really useful much nt know offending code trace call would really help narrow application problematic code would also obliviate need pointless trycatch needs edited even work catches error throws", "num": "4216", "d": "6/2015"}, {"title": "warning getinitialstate defined plain javascript class even using reactcreatclass", "body": "trying migrate code base one recurring warnings though seems bit weird actual component requirejs module see javascript define function require use strict var react require react var component reactcreateclass displayname component return component something wrong inadvertently", "num": "4214", "d": "6/2015"}, {"title": "forward refs support getpublicinstance", "body": "like feature allows us forward refs define public instance component way make higher order components completely transparent", "num": "4213", "d": "6/2015"}, {"title": "documentation nt inline html taint dangerouslysetinnerhtml", "body": "tutorial uses though explicitly recommend", "num": "4212", "d": "6/2015"}, {"title": "guidance storage performance reasons", "body": "sandboxed contrived example usecase rough usecase chat app character typed stored backbone model backbone collection filtering purposes etc new character typed add new model collection use set property collection map property output text specific question best way get best way react terms storing typed text state object better way avoid rerendering whole block text typing new single character", "num": "4211", "d": "6/2015"}, {"title": "calling onblur mutating state cause onclick fire", "body": "encountered trying different parts form validation happen onblur onclick seems update state onblur state element injected dom via jsx positionally button onclick onclick fire believe related issue see variation example provided enter text click button twice see click true confident order matters dom see consistently reproducable jsfiddle andeladomonori first noticed weird behavior", "num": "4210", "d": "6/2015"}, {"title": "transitiongroup persists components assigned leave", "body": "sample list items one active maybe misusing transitiongroup keeps item replaced jsx var reacttransitiongroup reactaddonstransitiongroup var active reactcreateclass render function return active var inactive reactcreateclass handleclick function e epreventdefault thispropsactivateitem thispropsid render function return var list reactcreateclass getinitialstate function return activeid activateitem function id thissetstate activeid id render function reactrender documentbody", "num": "4205", "d": "6/2015"}, {"title": "cloneelement working expected", "body": "code lays components like xaml stack panel looks layout properties calculates style based available width height sets styles properties contained child elements inside map applies children via cloneelement var paddedcontainment thiscalculatepaddedcontainment thispropslayout thispropsstylewidth thispropsstyleheight return reactchildrenmap thispropschildren function child var expandedlayout thisexpandlayout childpropslayout var size thisgetlayoutcontainment expandedlayout paddedcontainment paddedcontainment thissubtractdockcontainment paddedcontainment size var style thisgetlayoutstyle thispropsstyle expandedlayout paddedcontainment return reactcloneelement child style style passed component defined children elements defined jsx spits note component cloned keeping ref inserted underneath single object ref style applied using clonewithprops get correct final structure ie copy original lose ref ui longer works ca nt get resultant component methods first thought might ref displayname causing issue changing either effect still insert", "num": "4203", "d": "6/2015"}, {"title": "componentrender silently swallowing errors console output", "body": "piece code render function erroring simple trycatch able capture display error without react silently proceeds returning render function error makes difficult find basically error happens render fails silently displays empty component coming jsfiddle reprod simpler case debug", "num": "4199", "d": "6/2015"}, {"title": "getinitialstate static function", "body": "understand old api design ideal disagree assigning instance property constructor better function conceptually type signature ie pure function converting props state old defined instance also access however make function static therefore making pure js allows practice stateful component would look like code javascript class counter extends reactcomponent static proptypes initialcount reactproptypesnumber static defaultprops initialcount static initialstate props return count propsinitalcount tick thissetstate count thisstatecount render return another advantage construction nt override component constructor function defined declaratively straightforward easy understand way unlike example react blog post feels like much magic gives implicit function access full instance instead props illustration proposed blog post", "num": "4197", "d": "6/2015"}, {"title": "form events ff missing targetlabels", "body": "mini search mdn specs checkbox eventtargetlabels nt seem standard defined anywhere thing chrome idea worth polyfilling firefox", "num": "4195", "d": "6/2015"}, {"title": "warn class componentdidunmount method", "body": "would nice would throw warning console lifecycle method", "num": "4194", "d": "6/2015"}, {"title": "factorytype deprecated access class directly passing createfactory", "body": "getting warning unable work find documentation explanations error mean likely causes thanks", "num": "4193", "d": "6/2015"}, {"title": "change cursor position input fields", "body": "bug happens latest ff regardless platform code type something change type middle cursor position changes goes back beginning nt", "num": "4191", "d": "6/2015"}, {"title": "make react run without", "body": "ok react requiring shims include whether react needed however nt believe react require work among reasons including shams potential break libraries page hence nt sound like good practice one library demand two shams react says requires code npm one used entire codebase function invocations nt sound like good reason requiring library potential side effects best practice react would probably provide small module providing either native function internal sham would also positive internal shams would nt waste bytes trying sham functionality react nt need could emit invariant warnings misused development instead failing potentially silently way would", "num": "4189", "d": "6/2015"}, {"title": "event handler bound correctly babeljs", "body": "hi found inspect inside event handler using syntax w babeljs using jsx embeeded parser get undefined fiddle reproduce problem sure post issue also babeljs guys thanks", "num": "4187", "d": "6/2015"}, {"title": "breakword example", "body": "example convert textarea value realtime lack wordbreak breakword output", "num": "4180", "d": "6/2015"}, {"title": "using reactaddonscsstransitiongroup adds extra", "body": "may user error maybe using babel matters renders app hello world however try mess csstransitiongroup renders extra spans hello world something wrong please point right direction maybe note docs missed thanks guys keep great work", "num": "4179", "d": "6/2015"}, {"title": "sub components nt always render", "body": "campaigns component campaignform wo nt render inside sidebar outside sidebar tag render cjsx example put directly inside sidebar render function renders fine breaks whole idea loosely coupling sidebar abstract fails render campaignform render campaignform fine", "num": "4178", "d": "6/2015"}, {"title": "website issue", "body": "text nt fit many characters typed input output example", "num": "4177", "d": "6/2015"}, {"title": "jsx compiler broken pass anonymous function one args", "body": "javascript reactrender text documentbody compile jstransform wrong", "num": "4175", "d": "6/2015"}, {"title": "typeerror checker function validate", "body": "somehow weird warning printed console property produces print warning console looks like bug using react", "num": "4173", "d": "6/2015"}, {"title": "support iframe security attribute ie", "body": "attribute allows restrictions placed iframes regardless domain useful dealing ie versions less nt attribute info", "num": "4169", "d": "6/2015"}, {"title": "style prop error lacks context", "body": "error probably please check render method message give context", "num": "4168", "d": "6/2015"}, {"title": "use inline event handlers trapbubbledeventslocal ios safari click hack", "body": "currently lot work end mount find nodes attach listeners fact severely impacting initial rendering performance click handlers instead use inline event handlers innerhtml string ios safari hack trivial handler nt even anything inline event handler would need either redispatch event call event handler system probably global listeners since could potentially multiple reacts probably chain handler already one registered although multiple reacts document already pretty broken regard nt global since inline event handlers gets element added scope around equivalent add prototype makes bit hidden unobtrusive still need render string serverside rendering avoid needing change html wire handlers afterthefact client since events fire react loaded need check existence handler used critical string short innerhtml string concat performance network performance yet needs unlikely collide anything else unicode character could use", "num": "4166", "d": "6/2015"}, {"title": "ismounted returning undefined", "body": "ismounted returning undefined instead falsetrue js checks whether composite component mounted return boolean true mounted false otherwise protected final ismounted function production processenvnodeenv var owner reactcurrentownercurrent owner null production processenvnodeenv warning ownerwarnedaboutrefsinrender accessing ismounted inside render function render pure function props state never access something requires stale data previous render refs move logic componentdidmount componentdidupdate instead ownergetname component null ownerwarnedaboutrefsinrender true var internalinstance reactinstancemapget undefined case return internalinstance amp amp internalinstance reactlifecyclecurrentlymountinginstance please check long story", "num": "4163", "d": "6/2015"}, {"title": "dangerouslysetinnerhtml putting object object dom", "body": "component making method javascript contenteditablejs makemarkup const markup thispropshtmlmap reactrendertostring join consolelog markup return markup logs however actually put dom reason", "num": "4161", "d": "6/2015"}, {"title": "accept iterables children", "body": "would allow things returns iterable", "num": "4160", "d": "6/2015"}, {"title": "capturing charcode ctrl modifierspecial key key seems unclear", "body": "contenteditable element trying capture key combos ie ctrl c using nt seem possible special keys nt reported also fails get one event ctrl key one next key could check true however nt help obtaining charcode key combo jsbin demo trying achieve type ctrl c editable advice proceed would appreciated", "num": "4159", "d": "6/2015"}, {"title": "support stateful test renderer", "body": "plan move unnecessary state production renderer therefore public api introspect current state tree ie props inspection etc react devtools maintain shadow tree introspection reflection purposes however also means use run deeply rendered unit tests longer able use various reflective apis inspect state current react tree legacy utils etc recommended unit testing solution shallow testing however would possible create new renderer keeps track whole react tree including props therefore reenables stateful unit testing might helpful upgrade path eg something like would forked version primary renderer see cc spicyj dataminr", "num": "4153", "d": "6/2015"}, {"title": "form created reactcreateclass nt work onsubmit", "body": "working project using jsx make form reactcreateclass onsubmit attribute nt seem working like jsx need set onsubmit differently using jsx", "num": "4149", "d": "6/2015"}, {"title": "make sure examples work babelbrowser", "body": "currently examples depend jsxtransformer behavior eg get rid jsxtransformer examples need updated appropriately", "num": "4147", "d": "6/2015"}, {"title": "data attributes value regular attribute value", "body": "issue react one looking native html attribute value cases passing value valid experimentation dataattributes ca nt applied without value try get attempting use tablesaw jquery plugin dataattributes require without values function properly would great dataattributes could applied without values thanks", "num": "4146", "d": "6/2015"}, {"title": "using template strings throws error safari invalid character", "body": "using template strings jsx files seems supported safari nt like backtick character safari following code throws error see jsbin one solution use inbrowser transformation good practice anyway anybody know workaround tried specifying jsx script tags nt help", "num": "4143", "d": "6/2015"}, {"title": "iife mention ifelse jsx", "body": "page offers ternary expressions solution conditional logic inside jsx perhaps iifes also get mention realizing could iifes inside jsx helped flesh mental model jsx actually works suspect would aide others way well furthermore advent arrow functions nt verbose either code example utilizing iife might overkill least passing mention would nice", "num": "4141", "d": "6/2015"}, {"title": "support xul", "body": "filing issue seriously looking using react firefox devtools starting work migrating components xul weird constraints format dom edge cases hope somehow make work longterm want migrate away xul option works nicely create custom xul elements first thing ran boolean attributes xul always specify property value invalid must fixed hidden attribute changing option foresee customize object interesting solution would private api override config somehow well along enough yet suggest real solution want document things hit", "num": "4138", "d": "6/2015"}, {"title": "implications shouldcomponentupdate render callbacks", "body": "related thread discuss understand shouldcould behave rendercallback pattern example using reactstate example clicked everything updates expected however clicked nt receive new props risks stale data wo nt reflect changes state technically correct since render callback nt pure methods think work around rendercallbackcomponent alternate name please implements always return current preferred way component kinda equivalent stateful function wrapper children children would rendered anyway reactstate works also reactsprings etc render callbacks must always pure dependent arguments passed callback also fairly performant con utility pattern diminishes little rendercallbackcomponent accepts props render callback dependent sorta like method except props nt passed callback used rcc tell update based example could look like con fiddly also looks like ember model dependency syntax might bad marking explicit dependencies thoughts advice cc chenglou", "num": "4136", "d": "6/2015"}, {"title": "release", "body": "still little ways away starting list lose track less big picture like longer tail work misc x remove reacttools jsxtransformer mentions docs x update reacttutorial repo use babelbrowser polish readme react reactdom x update fbme scripts exclude jsxtransformer x update node development better moving forward stable branch maintenance x update cdnjs jsdelivr autoupdaters account documentation changes x updates refs stateless function components x update desired api usage eg final steps x create branch x shrinkwrap x actually publish places x update jsfiddles x base x thinking react x update changelogmd x make sure master branch documentation changes made x update reacttutorial repo final changes", "num": "4135", "d": "6/2015"}, {"title": "unexpected jsx whitespace handling leading trailing tags", "body": "related closed issue sure whether considered bug working intended least throw vote behavior unexpected given following example jsx var test reactcreateclass render function return demonstration unexpected whitespace handling reactjs reactrender documentbody demonstration jsbin would suggest expected rendered output component would whereas actual output whitespace unexpected whitespace reactjs would consider unexpected two primary reasons inconsistent html handling whitespace removing tags leaving newlines indentations unchanged causes whitespace preserved simply bug suppose need belabor point rationale leadingtrailing tags behaving different leadingtrailing plain text thanks", "num": "4134", "d": "6/2015"}, {"title": "oops", "body": "", "num": "4133", "d": "6/2015"}, {"title": "stop building jsxtransformer", "body": "separate cherrypicking purposes", "num": "4130", "d": "6/2015"}, {"title": "replace jsxtransformer babelbrowser website", "body": "", "num": "4129", "d": "6/2015"}, {"title": "shallow rendering testing components render callbacks", "body": "based comment thread starting thread discuss test components render callbacks consider following app js class double render return thispropschildren thispropsvalue class app extends reactcomponent render return doubled reactrender el output expected wanted test could write something like js var stateful testutilsrenderintodocument var div testutilsfindrendereddomcomponentwithtag stateful div divgetdomnode textcontentshouldeql however ca nt test beyond callback boundary unclear approach frankly shallowrenderer recognize components like marked flag thisrenderscallback true workaround use shallowrenderer cc", "num": "4127", "d": "6/2015"}, {"title": "add event behaves similar native event", "body": "react repurposed behave like way get actual event behaviour without binding nondelegated native event lifecycle events event behaviour sometimes important like behaviour make sense react uses live updating state associated anything derived use cases like triggering ajax post user finished input require standard behaviour text inputs fired user finished input use cases reasonable support within react going changed behave nonstandard way add another custom nonstandard event name lets react elements bind behaviour closer behaves react event delegation handling event name ideas onchangecommit ted oncommit ted change onvaluecommit ted oncommitvalue oncommit idea using commit name comes html spec change event fires value committed section common event behaviours", "num": "4126", "d": "6/2015"}, {"title": "omit anchors headers feed", "body": "rss feed anchors links headings looks kinda ugly feed readers nt really serve purpose feed readers modify links relative feed url links actually becoming nt anything useful remove feed", "num": "4124", "d": "6/2015"}, {"title": "invariant violation reactmount two valid unequal nodes", "body": "trying display dropdown menu composed similar one bootstrap element used generate dropdown menu store browser correctly parsingoutputting html everytime click item got error datareactid bug probably related ca nt find solution sweat iusing react also tested latest master html dom view view tree react plugin chrome screenshot result blue element nothing", "num": "4120", "d": "6/2015"}, {"title": "optional newline support", "body": "sure best place put issue good optional newline support built jsx compiler example js render function return hi whitespace important tag see giving developers power create better elements", "num": "4118", "d": "6/2015"}, {"title": "unclear whether legal read state props externally", "body": "react api documentation give mixed messages whether state safe read externally code call componentstate figure component state useful several situations particularly valuable writing unit tests javascript convention would believe public variable nt supposed read would expect called state documentation nt appear component api examples used jest examples either componentprops similar situation although admit one much less useful since nt come frequently unit tests imagine ways make clearer depending react team intentions intend public add public component api use official examples nt intend public ideally could trickery closures inside reactrender input reactcreateclass touch variables object returned reactrender nt expose barring help names started underscore engineers would know private", "num": "4116", "d": "6/2015"}, {"title": "request option issue warning prop passed unlisted proptypes", "body": "proptypes incredibly useful feature react especially option nearly every component create started proptypes option refactors occur features added progress tdd occurs found sometime add prop component forget add proptypes like see happen option make proptypes issue warning prop passed component listed proptypes object sort opposite isrequired option isrequired issues warning specified prop passed component strictproptypes option issue warning pass component prop listed proptypes example javascript var foo reactcreateclass strictproptypes true proptypes bar reactproptypesstringisrequired baz reactproptypesstring render function return reactrender foo qux quux would issue two warnings one passing required prop another passing prop thats listed proptypes strictproptypes true", "num": "4113", "d": "6/2015"}, {"title": "npm install react fails w invalid name", "body": "trying use browserify getting error got reacttools installed globally already problem package something different end npmdebuglog", "num": "4111", "d": "6/2015"}, {"title": "question using esnext modules need import var named react jsx even explicitly referenced", "body": "happened use destructuring syntax import grabbing ref like resultant code transpiled via babel contains reference variable named ends undefined seems jsx transpiler responsible setting variables internally referenced wanted ask question best tony", "num": "4110", "d": "6/2015"}, {"title": "doc use envify react", "body": "commit removed note envify documentation related pr far understand devdependency envify react used produce distributable files reactjs reactminjs seems used using react browserify webpack suppose envify run seems rather use envify case right yes would probably good idea document", "num": "4107", "d": "6/2015"}, {"title": "new function getvaluelink accompany valuelink", "body": "building components often want support valuelink valueonchange means need function like easily end duplicated components would idea include linkedstate mixin", "num": "4106", "d": "6/2015"}, {"title": "changing defaultvalue nt rerender input causes hidden state db", "body": "posted stackoverflow dearth answers makes think might bug given following simple code js const createfactory createclass dom label input button react const tester createfactory createclass render return label input defaultvalue thispropsname button onclick thischangename change changename thissetprops name wilma reactrender tester name fred documentqueryselector body clicking button nt rerender input still says fred even though wilma demo", "num": "4101", "d": "6/2015"}, {"title": "html accesskey cause control focus", "body": "usually providing accelerator keys html accesskey attribute added label tried react code control get focused expected result pressing altn focus control working plain html see jsfiddle var hellomessage reactcreateclass render function return first name reactrender mountnode", "num": "4099", "d": "6/2015"}, {"title": "error running react nodeenvproduction", "body": "getting running production tried versions reproduce looking code reactelement seems store initialized production mode", "num": "4094", "d": "6/2015"}, {"title": "reactlibclonewithprops throws warning", "body": "reactlibclonewithprops js copyright facebook inc rights reserved source code licensed bsdstyle license found license file root directory source tree additional grant patent rights found patents file directory typechecks staticonly providesmodule clonewithprops use strict var reactelement require reactelement var reactproptransferer require reactproptransferer var keyof require keyof var warning require warning var childrenprop keyof children null sometimes want change props child passed usually add css class param reactelement child child element like clone param object props props like modify classname style merged automatically return reactelement clone child props merged function clonewithprops child props production processenvnodeenv production processenvnodeenv warning childref calling clonewithprops child ref dangerous creating new child added ref parent null var newprops reactproptransferermergeprops props childprops use provided newpropshasownproperty childrenprop amp amp childpropshasownproperty childrenprop newpropschildren childpropschildren current api nt retain owner context nt use reactelementcloneandreplaceprops return reactelementcreateelement childtype newprops moduleexports clonewithprops note well", "num": "4093", "d": "6/2015"}, {"title": "externally injected content classbased components", "body": "use case creating element one place window manager passing reference application bootstrapper application responsible injecting elements since esque methods removed classes accomplish js uipaneelement instance uipane created rendered reference passed back windowmanagercreatewindow function uipaneelement myappmount uipaneelement myappmount somewhere else system function uipaneelement uipaneelementsetprops children thiscontent", "num": "4087", "d": "6/2015"}, {"title": "setting select value null undefined change placeholderlike option", "body": "maybe ugly pattern web pretty typical first option select sort placeholder like item implemented react would expect set prop select would change placeholderlike option seems pass empty string value pull sure something react maskhandle seems like oddity browser suggesting one two things value props choose empty value option warn passing noneffective jsbin example", "num": "4085", "d": "6/2015"}, {"title": "testsutilssimulatechange select nt work", "body": "hey guys trying simulate change value nt change component test value updated anything missing thanks ton", "num": "4083", "d": "6/2015"}, {"title": "reactcloneelement uses deprecated elementtype", "body": "following call complains deprecation warning seems come using react nt happen anymore change line confirm issue nt miss something glad submit pr want", "num": "4082", "d": "6/2015"}, {"title": "still use ownerbased context context forwarding", "body": "mean still warning probably possible future use tooltip positionning library accept raw html strings want able render react content inside tooltips lib positionned generally works fine parentchild relationship tooltipable content tooltip often causes troubles zindex generally want tooltips overflow code looks like var withtooltip reactcreateclass componentdidmount function setuptooltippositioninglibrary reactrender thispropstooltipcontent thisgettooltipnode render function return thispropschildren works fine problem like able use normal application context inside tooltip content somehow forward context tooltip content possible like dynamic maintain list childcontexttypes etc log frundefined", "num": "4081", "d": "6/2015"}, {"title": "errro", "body": "error created issue wrong repo sorry", "num": "4080", "d": "6/2015"}, {"title": "key events chrome android", "body": "must missing something pretty trivial ca nt get key handler events working android chrome jsfiddle reproduces behavior seeing everywhere android chrome get desired results typing input android events differentwrong devices events nt fired first character typed number events correct moving handlers input element behaves stock browser emulator seems work fine ios etc well like said imagine must simple mistake sure nt see", "num": "4079", "d": "6/2015"}, {"title": "runtime environment able purge modulescoped global caches", "body": "many hours contortions able get react components test headless nodejs mocha environment using domino js fake dom implementation component tests run seconds first time unfortunately using command leaks large number elements memory test run digging heap dumps found elements hiding nodecache variable reactmount file definitely calling every outer component render receiving boolean response added method local build simply resets cache cut memory loss number global caches hiding handful modules include reactmount proposal reset global utility method like seems like change would approved happy put together pull request update server side rendering environments might better exist real api testutils", "num": "4078", "d": "6/2015"}, {"title": "reactjs component rendering textarea state variable", "body": "faced issue recently solved using jquery please run app reproduce missed something appologies either way please share wisdom thread", "num": "4076", "d": "6/2015"}, {"title": "performance mounting reactcomponents", "body": "hi trying implement listview components run browser found react rendertostring reactrendertostring performance well need view react source code found function mountcomponent cost performance better way code function rendertostring element return transactionperform function var componentinstance instantiatereactcomponent element null low performance var markup componentinstancemountcomponent id transaction emptyobject low performance", "num": "4075", "d": "6/2015"}, {"title": "react rerenders svg html namespace", "body": "consider following code js var thing reactrender thing thisg var thing reactrender thing thisg first line rendered second one skip first rendering works", "num": "4072", "d": "6/2015"}, {"title": "stop building reactsource gem", "body": "sure much value really reactrails already stopped using builds files cc rmosolgo", "num": "4069", "d": "6/2015"}, {"title": "react leafletjs external library dom", "body": "hello trying use react library maps sure implement best know github project case need use raw javascript library order use unsupported features supports html marker following code wrote definitely react way removes unmounts everything recreates mounts everything works many hours trial error around markers cars map different criteria hide also retrieve slightly updated data server problem use method react devtools showed components added rerender components time growing despite underlying real dom divs deleted windowmapcarslayergroupclearlayers method nt removal dom divs external library also automatically unmount related mounted components way way unmount car components alltogether without looping example something like reactunmountcomponents car loop fullproof retrieve new data old items still remain mounted appear new list looped unmounting ideas approach nonreact dom div per marker needs exist need find way react component rendered use react lifecycles without unmount recreate every rerender thank componentwillupdate", "num": "4068", "d": "6/2015"}, {"title": "passthrough children nt rerender parent changes", "body": "given following components following implementations homejs routerjs js componentdidmount var self render return reactcreateelement div classname router thispropschildren routejs running situation since creating parent passing owner children rerender parent state changes best way around seems like pretty common use case", "num": "4067", "d": "6/2015"}, {"title": "using mixin object twice fails", "body": "lets take following use case utilmixin function utilfunc used mixina mixinb class uses mixina mixinb fail react thinks define utilfunc twice non working jsfiddle opinion react allow case function redefinition new definition old definition thoughts", "num": "4066", "d": "6/2015"}, {"title": "react syntax class methods bind instance context", "body": "example", "num": "4065", "d": "6/2015"}, {"title": "wrong html file name", "body": "ghpages branch gettingstartedjajphtml tutorialjajphtml files think file name must", "num": "4062", "d": "6/2015"}, {"title": "event null onpaste event", "body": "js handlepaste function event eventclipboarddataitems getasstring function string true eventpreventdefault event null raises uncaught typeerror read property preventdefault null", "num": "4057", "d": "6/2015"}, {"title": "shallow renderer expose rendered component instance", "body": "returns rendered component instance seems return rendered component expose way maybe method testing stateful components via shallow rendering assertions made state component instance", "num": "4056", "d": "6/2015"}, {"title": "automatically populate propschildren declared", "body": "currently writing code traverse form inputs collect form data put almost one problem left children nt always populated something like recursive function coffee collect form children coffee collectallchildren target children reactchildrenforeach targetpropschildren child gt childrenpush child children inside one form component nested react elements using react bootstrap like one called problem tries collect children firstlastnameinput children wish would return properties two inputs anyway would make things lot easier prevents dirty react hacks", "num": "4055", "d": "6/2015"}, {"title": "context propschildren", "body": "hi troubles understand context passed using nt know bug expected using react make work using function using simple declarative way example application using contextemitter children function children using declarative way javascript export default class myapp render return thiscontextvalue javascript export class contextconsumer extends reactcomponent static contexttypes value reactproptypesnumberrequired render return context value thiscontextvalue thispropschildren context properly passed javascript export class contextemitter extends reactcomponent static childcontexttypes value reactproptypesnumberrequired getchildcontext return value render return contextemitter thispropschildren thispropschildren context passed javascript export class extends reactcomponent static childcontexttypes value reactproptypesnumberrequired getchildcontext return value render return thispropschildren see result meaning using function way works otherwise expected difference thanks edit several warnings console nonworking case btw warning failed context types invariant violation contextemitter child context type invalid must function usually reactproptypes check render method warning ownerbased parentbased contexts differ values vs key value mounting contextconsumer see", "num": "4053", "d": "6/2015"}, {"title": "rendertostaticmarkup side effects", "body": "see seems wrong completely unexpected", "num": "4050", "d": "6/2015"}, {"title": "bug reactfinddomnode always null higherordercomponent", "body": "const higherordercomponent component gt reactcreateclass componentdidmount consolelog reactfinddomnode gt null render return", "num": "4044", "d": "6/2015"}, {"title": "componentwillrecieveprops warning", "body": "please implement warning component tries implement method instead method almost every react person know bitten always take minutes debugging find feel like dummy rest day", "num": "4039", "d": "6/2015"}, {"title": "spec information elements", "body": "seems add spec data element firefox rendering class components innerhtml component rendered note running selenium webdriver mochify nt able exclude nt issue started creating components regular classes", "num": "4038", "d": "6/2015"}, {"title": "nt add things queues unnecessarily", "body": "currently use transaction queue much build giant array mount one simple example add things queue unnecessarily", "num": "4036", "d": "6/2015"}, {"title": "typeerror read property currentelement null", "body": "maintainers problem please see explanation test case jsfiddle error function internalinstance null mountcomponent final internal unmountcomponent function internalinstance reactrefdetachrefs internalinstance internalinstancecurrentelement internalinstanceunmountcomponent managed fix bug simply checking internal state null requires modifying react mentions bug listed", "num": "4026", "d": "6/2015"}, {"title": "problems mocha jsdom react testing", "body": "entirely sure problem mocha react really need help figuring tests failing looks like leaks across siloed documents test setup using mocha individual test spins document jsdom loading react proceed run test individual component separate documents tests run fine run single file time run tests get errors like jsdom react created repository minimal setup detailed description anyone help figure problem avoid maybe even fix", "num": "4025", "d": "6/2015"}, {"title": "please deprecate mixins", "body": "mixins make things unclear example javascript reactcreateclass mixins b c anevent function thisfoo hard people find mixin come may search mixins documentation know hard trigger even use devtool trace source code", "num": "4023", "d": "6/2015"}, {"title": "referenceerror location defined", "body": "building master getting following error looks like uninitialized variable", "num": "4020", "d": "6/2015"}, {"title": "need test setstate shallow render", "body": "related rendering component like rendering via shallow render calling handler produces following ideally module realise running server skip behaviour check", "num": "4019", "d": "6/2015"}, {"title": "componentdidupdate componentwillupdate pass incorrect state", "body": "functions able react stateprops change happening objects var component reactcreateclass getinitialstate function return componentdidmount function setinterval function thisupdatestate bind componentwillupdate function nextprops nextstate consolelog consolelog consolelog result object object object object object object see numbers states different objects states identical cant rely componentdidupdate objects prevstate already modified", "num": "4018", "d": "6/2015"}, {"title": "react throwing unexpected errors", "body": "gave test current code runs throwing unexepected errors one components simple wrapper class around select dom node code js import react react class select extends reactcomponent render var options thispropschildren name selectproptypes name reactproptypesstring options reactproptypesarray labelclassname reactproptypesstring selectdefaultprops labelclassname export default select using component within others get following errors console sure code needs migration bug willing dig ya think might bug", "num": "4017", "d": "6/2015"}, {"title": "rerendering dangerouslysetinnerhtml child fails invariant violation", "body": "run dangerouslysetinnerhtml loads initial render rerender fails invariant violation problem shows component dangerouslysetinnerhtml unmounted remounted var react require react var demo reactcreateclass reactrender documentbody jsfiddle", "num": "4016", "d": "6/2015"}, {"title": "xss issue rendering link website", "body": "", "num": "4015", "d": "6/2015"}, {"title": "redundant codes reactcompositecomponentmixinmountcomponent", "body": "tracing codes found inside reactcompositecomponentmixinmountcomponent code reads however reactclasscreateclass props context set already seems reason duplicated codes remove one two code snippets keep one reason concerns would suggest move setup props context refs back class constructor make duty constructing duty mounting clear", "num": "4014", "d": "6/2015"}, {"title": "injection implementation", "body": "researching separate server implementation found able inject different component types allows bypass much reconciliation logic needed server via types injectable exception also noticed lot component injection spread different two files neither seem like good place add compositecomponent injection injection containers also contain default implementation many methods could bloat package sizes defaults overridden would likely server would propose contains method provides injection type component defaults implementations would provided would likely also derivative would also allow removal circular dependency wrapper", "num": "4012", "d": "6/2015"}, {"title": "nt preserve context deprecated", "body": "intentional right way cloning elements passed correctly thanks", "num": "4008", "d": "6/2015"}, {"title": "custom proptype validators receive props argument", "body": "instead object contains single key matches proptype key jsx var component reactcreateclass proptypes function props propname componentname props ever contain key regardless props passed component", "num": "4005", "d": "6/2015"}, {"title": "best practice css styles", "body": "constructing react component concerns dynamic part dynamic part put css styles html elements render method component extract dynamic part component want know scenario efficient would putting css styles html elements react component resolves cross browser compatibility problem", "num": "4002", "d": "6/2015"}, {"title": "method change default event plugins", "body": "hi noticed method module marked private unit test able override event plugin configure first injecting seems neither replace default event plugins add new kind event plugin without modify code react designed like good support modifyingextending event plugins injecting default ones thanks", "num": "4001", "d": "6/2015"}, {"title": "generating randomunique attributes serverside nt break clientside mounting", "body": "consider example relatively generic component javascript var fieldcounter var field reactcreateclass getinitialstate function return inputid field fieldcounter render function var props thisprops inputid thisstateinputid order tag semantically related tag obviously need match attribute tag attribute outside requirement however need attribute solution like one convenient handles internally need consuming component pass actual value problem running however causes attributes generated clientside mismatch sent server clientside restarts every load whereas serverside reference obviously keeps growing mismatch results error thrown question overlooking obvious solution would like component able simply internalize generation implementation detail ca nt seem come good mechanism matching id generation clientside thanks advance", "num": "4000", "d": "6/2015"}, {"title": "html jsx compiler convert tabindex tabindex", "body": "used converter convert div inside conversion gave notice word capitalized consolelog gives following reasonable warning may assume bug converter thanks", "num": "3996", "d": "6/2015"}, {"title": "wrong row offset yscroll position dynamically changed row height", "body": "using rowheightgetter function dynamically change row height state change unfortunately rerender rows wo nt position correctly expanded row gets negative offset value yscroll nt recalculate calling updaterowheight method getrowposition fixeddatatablescrollhelper line thisupdaterowheight rowindex fixes offset recalculation forcing yscroll recalculation commenting lines line fixeddatatablereactjs fixes yscroll problem sure elegant solutions added information purpose whats proper solution problem", "num": "3994", "d": "6/2015"}, {"title": "state update parent owner render children", "body": "say owner state updated function called owner parent child parent state updated function parent called child expected behavior till introduced behavior parent state update change return hence child needs update jsbin explaining problem owner state update renders parent child parent state update renders parent", "num": "3991", "d": "5/2015"}, {"title": "onmouseover work svg", "body": "implementing something using svg circles nt seem work found old issue following fiddle expected work spicyj commented thread makes work suppose regression", "num": "3990", "d": "5/2015"}, {"title": "sgml comments jsx", "body": "eg xml thispropsitemsmap item gt item", "num": "3989", "d": "5/2015"}, {"title": "feature request make shallow rendering slightly less shallow", "body": "writing tests components trying new feature shallow renderer example wanted assert anchor tags rendered certain inner text however rendering shallow nt even give access text show spancontents missing something assert things top level guess better rendering string feeding html parser", "num": "3987", "d": "5/2015"}, {"title": "reactjs angularjs", "body": "problem using reactjs angularjs app problem error nt know warning something calling react component directly use factory jsx instead typeerror read property reactautobindmap undefined constructor objectfn scope digest scope apply done completerequest xmlhttprequestrequestloaded anonymous function jsx reactdom function use strict mycomponentjs var mycomponent reactcreateclass displayname mycomponent render function return reactdomdiv null rendering faster angularjs thispropsframework view", "num": "3986", "d": "5/2015"}, {"title": "multi element conditionals trap developer key warnings", "body": "standard way something middle block jsx ternary boolean expression ie need conditional multiple elements natural method expect would however generates warnings like warning child array iterator unique key prop check reactrender call using see information array nt list things reordered anything set elements conditional together none alternatives avoid warning good add key element elements might even inline elements like next two strings forced add key really overboard b condition element separately nt think need explain repeating code bad thing c wrap elements one element adding extra elements code required elements exist satisfy react quirks actually needed inside dom", "num": "3983", "d": "5/2015"}, {"title": "whether method modify", "body": "special css properties accept numbers units px animationiterationcount etc notice css properties defined object modify directly whether react public method", "num": "3982", "d": "5/2015"}, {"title": "mentions input type file documentation", "body": "nowhere react documentation reference handle speciel field serialized think deserve kind mention maybe link resource like normal input saying could find issue mentioning therefore issue", "num": "3981", "d": "5/2015"}, {"title": "creating tables react annoying", "body": "due fact html tables ca nt children table rows create parts table react element however tables useful way represent tabular data especially since colspan rowspan case table comprising many sections resort calling functions instead elements meaning nt get benefits props state rendering shortcircuiting plus code looks different therefore errorprone improved react support virtual dom node nt render actual dom node children alternatively datagrid components allow rendering like table colspan rowspan", "num": "3979", "d": "5/2015"}, {"title": "reconciliation jsfiddle example working", "body": "post build react gave example reconciliation jsfiddle working understand correctly something like create pr change url fix", "num": "3978", "d": "5/2015"}, {"title": "rendering multiple tspans causes dom updates render onscreen", "body": "created component takes input generates line text seeing correct svg generated browser displays first onscreen even paste output another htmlonly fiddle see rendered correctly kind soul greenjello freenode reactjs able find workaround causes element get rerendered behaves expected rendering thought might browser bug able successfully reproduce chrome firefox something related nature svg browser bug affecting multiple browsers react something strange", "num": "3972", "d": "5/2015"}, {"title": "lint tests", "body": "next thing start linting tests historically ignored due lack parser compatibility nt problem anymore may want integrate aggressively lint jsx tests cc pipeep", "num": "3971", "d": "5/2015"}, {"title": "support reparenting", "body": "writing component contains set large subtrees stay relatively simply moved around react virtual dom diffing ca nt detect movement react end recreating huge trees simply moving example pretend large structures may made several levels children components example one could entire page contents sidebar page root jsx render var blocka aaa blockb bbb blocks nt level react see relation blocks used give react hints result changed instead two blocks moved new location entire page essentially completely unrendered rerendered scratch understand case would far expensive react able detect movement nodes like believe need pattern hint react component large blocks may moved around different levels note may component rendering component root block parent semantics scoped nearest component wo nt work need owner scoping understand react trying eliminate need reactcreateelement used owner scoping within special attributes interferes instead component scoped variant think methodobject style interface kind like might work", "num": "3965", "d": "5/2015"}, {"title": "document react onchange relates oninput", "body": "would nice forms doc explicit fact react supersedes generally used place dom builtin event people might used using instead text inputs textareas since raw dom change event controls nt fire control loses focus", "num": "3964", "d": "5/2015"}, {"title": "missing challenge keytype attributes keygen tag", "body": "using keygen tag generate client certificates missing challenge keytype attributes", "num": "3961", "d": "5/2015"}, {"title": "controlled components nt work xml", "body": "app served recent react version supports xml however looks like controlled components broken created demo two almost identical pages one named one difference diff lt one input value may changed controlled input never changes property value nt mutable works expected page", "num": "3960", "d": "5/2015"}, {"title": "selectoption elements onchange event return dataattributes", "body": "plan look deeper maybe supply pull request decide feature right text inputs onchange eventtargetgetattribute datatype return datatypes value selectoption elements return extra attributes either object seems return value name attributes", "num": "3959", "d": "5/2015"}, {"title": "upgrade eslint use babeleslint", "body": "versions back would good get upgraded changes rules bit annoying probably tweak configs make changes code cc pipeep", "num": "3958", "d": "5/2015"}, {"title": "fix disable webworker test", "body": "intermittently giving us problems seems happening since sebmarkbage reorg nt really seem related fix disable travis results meaningful", "num": "3957", "d": "5/2015"}, {"title": "display warning ref reused", "body": "spent like minutes hunting bug ended caused reusing ref line component imagine get much worse bigger components warning devmode would nice", "num": "3956", "d": "5/2015"}, {"title": "firefox flashobject intermittently getattribute", "body": "long standing bug firefox hard track still able reproduce ondemand able reproduce manual bruteforce know short using flash react every react would throw invariant calling debugging however revealed everything rarely temporarily node reason loses method probably causes react return empty string id crash updating like actually works invariants errors ever observed personally currently worked around getting dom node mount works well enough moment nt update object nt surface updates either", "num": "3955", "d": "5/2015"}, {"title": "reactjs undefined requirejs included page", "body": "reactjs undefined requirejs included page define global variable causes conflict function typeof define amp amp defineamd define n uncaught referenceerror react defined", "num": "3953", "d": "5/2015"}, {"title": "reacttestutils rename findscry pairs findonefindall similar", "body": "outside relatively unknown word scry used difficult someone tell name differ current names seem based original jxdomscry api usage based likely made sense internally person filed would much discoverable easier use names obvious back compat reasons renaming adding existing names pointers commentsjsdoc saying deprecated probably makes sense imho thanks", "num": "3951", "d": "5/2015"}, {"title": "missing attribute", "body": "consider following snippet expected dom current behaviour demo jsbin specs", "num": "3948", "d": "5/2015"}, {"title": "missing attribute", "body": "", "num": "3947", "d": "5/2015"}, {"title": "component render method get future container width height", "body": "want write layout component get future container width height", "num": "3946", "d": "5/2015"}, {"title": "missing svg attributes markers", "body": "tags supported react svg marker refx refy orient", "num": "3945", "d": "5/2015"}, {"title": "serverside rendering help", "body": "bit trouble finding reasonable way handle serverside rendering still allowing seo three approaches think send bare bones html skeleton client javascript loaded make ajax request get data render send bare bones html skeleton client bundled json data necessary render page javascript loads page rendered immediately using json send fully rendered html page bundled json data together javascript loaded react rerender page using json data first option worst second option fixes need round trip back server retrieve data step right direction third option seems best trouble figuring approach talks react conf suggestion make two separate components piece functionality datafetching component pure ui component would allow server render markup using pure ui components without including clientside logic via datafetching components concerned lead two separate versions page structure exist one server uses render markup one wrapped containers client ui components used structure need separately maintained resulting changes requiring two updates mistaken example let say component component server might look like however client components might need fetch data server recommendation wrap containers clientside code might look like idea behind children component change depending environment mean keep two versions synchronized anytime want add remove update structure established pattern avoid dipping toes react want make sure structuring correctly following best practices interested running flux server want keep client datafetching components dependencies client side recommendations missed anything", "num": "3939", "d": "5/2015"}, {"title": "long reactjs release new version", "body": "current version react long reactjs release new version api change lot new version released", "num": "3937", "d": "5/2015"}, {"title": "textarea holds old value prop updated null", "body": "textarea values set value prop prop set null undefined resetting object clear form retain old value looking source looks like intentional null behavior written behave differently form elements jsfiddle demo problem", "num": "3936", "d": "5/2015"}, {"title": "wrong data attirbute value", "body": "hello eventcurrenttarget data page return previus value react version code user reactclass render redraw three times click pagebutton eventcurrenttarget data page return previus draw value tt change code works data attribute return wrong value", "num": "3933", "d": "5/2015"}, {"title": "opaque handle replace rootnodeid", "body": "losing broke om applications like circleci used maintain snapshot entire application permitted full serialization deserialization react app state including transient component local state browsers powerful testing purposes without forcing programmers write nonmodular code via world passing understandable people might rely specifics handle need opaque identifier nt care actual representation handle may well scope would nice issue get consideration official feedback", "num": "3932", "d": "5/2015"}, {"title": "autobinding named methods shadow globals fails", "body": "bound method inside guard method gets bound reason fails var testcomponent reactcreateclass intervals render function return reactcreateelement div setinterval function setinterval fn ms thisintervalspush setinterval fn ms componentdidmount function thissetinterval function consolelog hello var testcomponent reactcreateelement testcomponent null reactrender testcomponent documentbody error message set break point first time called set instance react class hit play method gets hit second time set changing fixes issue code generated babel removing named functions little work removing source code would nice react supported syntax nt know much work involved", "num": "3928", "d": "5/2015"}, {"title": "props getinitialstate anti pattern componentwillmount", "body": "link wondering following code similar anti pattern good practice function getstate props var newstate somestate false props merge newstate totalcount propstotal items propsitems return newstate var component reactcreateclass proptypes total reactproptypesnumber items reactproptypesarray getinitialstate function return getstate componentwillmount function thissetstate getstate thisprops componentwillreceiveprops function newprops thissetstate getstate newprops basically props used props copied state copied get modified bit ex etc render method uses state one colleagues using pattern extensively funny feeling ca nt really pinpoint would actually wrongbad approach", "num": "3927", "d": "5/2015"}, {"title": "change event fires extra times ime composition ends", "body": "extra details similar discussion extra details reproducing analysis previous attempt fix includes unit tests sufficient confident fix original issue trying example chinese characters inputted chinese pinyin input method would fire many renders like actually would expect fire confirm chinese character tried another kind input method wubi input method got weird test jquery press space bar confirm character event would fire know might different implementation jquery react would expect way jquery handles chinese characters instead react", "num": "3926", "d": "5/2015"}, {"title": "dedupe warnings validatedomnesting", "body": "nt log particular parentchildownerstack trio", "num": "3921", "d": "5/2015"}, {"title": "load webcomponentsjs differently", "body": "tests currently pass browser running chrome supports webcomponents already however fail every browser think webcomponentsjs actually loaded currently getting packaged reacttest requiring creates new resulting nodes create different prototype expected webcomponents webcomponents new node prototype different implementation check nodes failing think loaded webcomponentsjs browser loaded js node create markup wrapping would right prototype", "num": "3919", "d": "5/2015"}, {"title": "async render rather async state", "body": "run several issues related reading state set yet committed component state wondering asynchronous would nt better async render instead would allow synchronously update state want performance benefits async state changes imagining mutates state immediately mechanism batching state changes invoked event originally causing state mutation simply triggers render instead thoughts", "num": "3918", "d": "5/2015"}, {"title": "react id problems", "body": "team working project sometimes inject one react application page recently noticed onclick handler specified one applications also getting applied node datareactid application way force root component use datareactid react application sort namespaced using", "num": "3916", "d": "5/2015"}, {"title": "onwheel broken", "body": "appears onwheel broken react returns event full undefined everything fiddle working fiddle working edit reproduce try using scroll wheel div xy info mac using track pad tested latest chromefirefoxsafari", "num": "3915", "d": "5/2015"}, {"title": "", "body": "", "num": "3914", "d": "5/2015"}, {"title": "get real elementnode reactel thischildrens", "body": "like scrollviewchildren return reactelement ca nt get real htmlelementnode reactelement want getcomputedstyle node", "num": "3911", "d": "5/2015"}, {"title": "click events triggered enter keypress events inside forms", "body": "triggering keypress event inside form also click listener without defined result syntheticmouseevent button hit clickhandler adding prevent behavior", "num": "3907", "d": "5/2015"}, {"title": "grunt test failing webdriverphantomjs task", "body": "run fresh copy master get error running webdriverphantomjs task phantomjs start path null args warning bad argument use force continue aborted due warnings env os mac os x phantomjs v npm v node v git revparse head clue solve", "num": "3906", "d": "5/2015"}, {"title": "update content docs tutorial code examples", "body": "working throught tutorial get section js code longer took second realize needed see result indexhtml file updating code previous code example different way explain user", "num": "3904", "d": "5/2015"}, {"title": "question reactjs file src folder", "body": "reactjs file src folder right specifying path module require statement showing dependency file caring pathmaybe stupid question seasoned developerbut ca nt figure outhope someone help understand", "num": "3903", "d": "5/2015"}, {"title": "question source code", "body": "", "num": "3902", "d": "5/2015"}, {"title": "allowing lt element gt", "body": "write almost anything jsx write javascript except case far tell instead write think would neat able write huge deal would plug last leak jsx syntax allowing people context switch think underlying transform order figure something like", "num": "3900", "d": "5/2015"}, {"title": "rfc react forceremount", "body": "support uncontrolled components although necessarily encourage seems utility relevance handful usecases especially complex situations ie stateful component need reset say richtext editor case reactswf running swf response user action edit think complement currently worked around providing monotonic really hack neat solution much obscure end spectrum seems like missing feature interms feature complete uncontrolled components really going push hard especially could really obscure hack might really best tradeoff also considering batching", "num": "3899", "d": "5/2015"}, {"title": "get original htmlelement reactelements", "body": "hi nt know get original htmlelement reactelement like getdomnode reactcomponent", "num": "3898", "d": "5/2015"}, {"title": "throw exception validation error", "body": "wrote class like javascript recordlistitemjsx const react require react const recordactions require actionsrecordactions const record reactcreateclass proptypes record reactproptypesshape id reactproptypesnumberisrequired name reactproptypesstring status reactproptypesstring isrequired moduleexports record test would cause failure whereas using correctly throws error fails test", "num": "3897", "d": "5/2015"}, {"title": "deeper events triggered ff ie ie", "body": "fiddle exception may correct click first text console log click second text within button console log chrome safari behave way expect however ff ie ie click second text within button console logs understanding event handling correct click text within button component component trigger event bubble component trigger event would ff ie trigger event handler within component triggers fine another component", "num": "3895", "d": "5/2015"}, {"title": "react child keys must unique warning", "body": "hi please see jsfiddle gt check console warning", "num": "3893", "d": "5/2015"}, {"title": "get warnings tests", "body": "unhandled warnings tests nt great clean make unhandled warnings test failures", "num": "3890", "d": "5/2015"}, {"title": "handle wouldbe duplicate keys inline styles", "body": "inline styles awesome better worse css properties vendorprefixed values write inline react example ran found building something like reminded linter wo nt work situations", "num": "3887", "d": "5/2015"}, {"title": "custom component methods lose static properties", "body": "definingmixing custom method react component loses static properties var customfunction function magic customfunctionmystaticproperty important value reactcreateclass customfunction customfunction render function thiscustomfunctionmystaticproperty undefined static properties replaced four react properties reason remove users static properties methods would possible add react properties method keeping custom properties place", "num": "3886", "d": "5/2015"}, {"title": "context warning refers missing gist", "body": "getting warnings like warning ownerbased parentbased contexts differ see however seems refer gist longer exists moved", "num": "3880", "d": "5/2015"}, {"title": "unnecessary encoding element text content", "body": "given following piece code react replaces angle brackets quotation mark apostrophe ampersands html entities ie lt gt quot amp etc nt believe necessary replace quotation mark apostrophe nt need escaping would need escaping used attribute used text content element reason noticed trying encode json html element server side read back client side javascript json contains lot double quotation marks needlessly replaced quot", "num": "3879", "d": "5/2015"}, {"title": "warning setstate update mounted mounting component usually means called setstate unmounted component noop context", "body": "warning setstate update mounted mounting component usually means called setstate unmounted component noop warning contains context component setstate run setstate happen time changes another component cause unmount results setstate happening unmounted hard even link recent code chagne made setstate call responsible simply including message like warnings help devs least little tracking source warning", "num": "3878", "d": "5/2015"}, {"title": "remove react devtools download console log install", "body": "react devtools downloaded enabled chrome extension version using npm package version chrome extension browserified every time open console console log download react devtools better development experience remove update maintainers see solution", "num": "3877", "d": "5/2015"}, {"title": "formalize standard facebook style guide", "body": "current style guide contributing docs nt cover everything covered would like see section bit content actually could nt find facebook style guide online publicly anywhere could pretty big initiative kind documentation publicly available willing help process sounds ambiguous could add content contributing file", "num": "3875", "d": "5/2015"}, {"title": "conditional dynamic children causing error", "body": "multiple cases app conditionally create array dynamic children like worked fine react however upgraded seems causing error remove functionality eliminates error however ca nt figure fix error still conditional rendering tried messing around well defaulting returning empty array condition fails array single element ideas", "num": "3873", "d": "5/2015"}, {"title": "html tag component props", "body": "hi new react development english difficulty understand things possible react well would like use html tags props component example component would like use like title div mes infor div still whereas would like div inside real title nt know use props component result sorry poor english", "num": "3868", "d": "5/2015"}, {"title": "feature request ability pass context reactrender", "body": "especially testing parts gui would like able say javascript var mycontext foo reactrender documentgetelementbyid allcontent mycontext instead make wrapper component every time define childcontext", "num": "3867", "d": "5/2015"}, {"title": "reactproptypeselement message unclear", "body": "fails error message think error message nt clear enough case fails due passing multiple elements children prop imagine new user react using component accepts single child pass multiple children instead seeing error might lead believe somehow passing number string null etc children nt think first instinct would mistake passing multiple children make kind mistake easier diagnose error message emphasize fact pass single element", "num": "3865", "d": "5/2015"}, {"title": "error invariant violation dangerouslyrendermarkup render markup worker thread", "body": "error read issues relate issue requiring react globally defining window document component reducedjs javascript var react require react var reduced reactcreateclass getinitialstate consolelog start editing false return editing false edit consolelog setting state edit thissetstate editing true render consolelog rendering return moduleexports reduced tests javascript var react testutils jsdom reduced expect results mocha compilers js babelregister reduced test case current start editing false rendering tests pass without simulate root element reads click edit tests fail component changes state renders setting state edit rendering hook passing failing reduced test case tests fail component changes state renders hook error invariant violation dangerouslyrendermarkup render markup worker thread make sure available globally requiring react unit testing use reactrendertostring server rendering context happen way fix", "num": "3863", "d": "5/2015"}, {"title": "make part text link localization", "body": "need mark part text link smth like please log email text must localized later need log part link smth like render method javascript var link reactdoma href thismakehref login log reactcreateelement please link email output please object object email without surround text receive expected result simplified example need insert link text format marker like c working solution thank help", "num": "3862", "d": "5/2015"}, {"title": "documentation controlled components seems contradictory", "body": "documentation controlled components says form components allow listening changes setting callback onchange prop onchange prop works across browsers fire response user interactions value changes checked state changes however checkbox onchange handler getting called even though checked state dose nt actually change controlled think documentation changed state onchange fired response user input component even react leaves component state", "num": "3860", "d": "5/2015"}, {"title": "inline styles pseudoclasses discussion", "body": "hi really like intent behind inline classes react want use project really bad part lack hover focus etc know radium dont like decided try investigate react sources come implementation pr tell source code find inline styles rendering thank", "num": "3859", "d": "5/2015"}, {"title": "alternative observe sideways data loading", "body": "reference exploring alternative function proposed instead separate function defines list dependencies observables could allow render function trigger bunch sideeffects registers currently executing component observables sideeffects astonished implementation request would nt return observable instead would tell react currently executing component dependency observable needs rerender anytime subscription fires returns last value received particular observable somehow observable longer subscribed next render pass automatically unsubscribed perhaps observable api ideal model", "num": "3858", "d": "5/2015"}, {"title": "dangerouslysetinnerhtml replaces server side rendering", "body": "hey issue dangerouslysetinnerhtml dollar signs seems like calling reactrendertostring server side rendering html value given dangerouslysetinnerhtml contains gets rendered lost dollar sign could find easy way fix started terrible thing htmlreplace g", "num": "3855", "d": "5/2015"}, {"title": "request enable triggering warnings every render", "body": "client nice development warnings triggered initial render rendering server annoying warnings triggered first render ignored subsequent page loads render methods accepted additional options argument js reactrender hi windowapp alwayswarn false reactrendertostring reactcreateelement el data alwayswarn true crazy ideas might useful options perhaps autoappends second arg automatically catchesignores errors apis", "num": "3854", "d": "5/2015"}, {"title": "extend html element", "body": "click delay problem need attach four events element onclick ontouchstart ontouchmove ontouchend makes bit tedious many elements clickable create element maybe named receive property ontap attache four events element implement tap event think bad semantic tap action question extend html tag like div em support tap event ideas problem thanks", "num": "3853", "d": "5/2015"}, {"title": "publish alphas npm", "body": "mentioned currently points old rc would nice alphas published since things like context coming parents understand post one ca nt git repo master test fixes things", "num": "3850", "d": "5/2015"}, {"title": "missing shipped along ship", "body": "trying use improved serverside rendering support selected options select element upon inspecting react code checked npm download versions ca nt find fix included according tagged specifically checking following snippet code within reactdomselectjs missing code nt rendering serverside attr options return", "num": "3849", "d": "5/2015"}, {"title": "eslinting reactflux code without transpiling", "body": "possible realize could use babel lint transpiled code wo nt let find error code resource go order properly use eslint found article november still seems literature saying productionready link", "num": "3848", "d": "5/2015"}, {"title": "reactaddonstestutilssimulatescroll working jsdom", "body": "hi trying test scroll event could make scroll event propagation happen using testutils code never triggering scroll function callback change implementation something like works javascript contentdivscrolltop var evt documentcreateevent htmlevents evtinitevent scroll false true contentdivdispatchevent evt something wrong react testutils created stackoverflow ticket", "num": "3846", "d": "5/2015"}, {"title": "links within svgs", "body": "clicking within svgs cause issues case missing initial load ought see boxes light brown red blue brown orange click boxes blue brown orange click boxes light brown red click boxes worried blue brown orange box disappear confused please note entire thing svg link actually present dom decided show firefox clicking link thrown version initially thought reactrouter specific issue issue w reactrouter wrong issue exists without library issue wo reactrouter nt using normal svg element issue wo react svg elements following svg elements supported circle defs ellipse g line lineargradient mask path pattern polygon polyline radialgradient rect stop svg text tspan source although react nt support within svgs ought throw error something whats cause issue guessing going would viable option right", "num": "3845", "d": "5/2015"}, {"title": "real reason invariant violation markup wrapping node initialized error", "body": "searching everywhere find proper explanation kind error source code written lazily detects wraps necessary current browser please elaborate getting error testing jsdom amp mocha button select using want simulate event use exact line getting issue", "num": "3840", "d": "5/2015"}, {"title": "prevstate wrong values using forceupdate", "body": "simple component following state simple componentdidupdate function like change state using method setstate componentdidupdate fired get following values good expected course something like componentdidupdate fired alright get following unexpected values workaround still get proper value prevstate", "num": "3838", "d": "5/2015"}, {"title": "testutilsrenderintodocument nt render document function props", "body": "trying test component jest rendering using try passing function prop component receive prop render serializable variables code", "num": "3836", "d": "5/2015"}, {"title": "debugging css transitions", "body": "way debug warnings application quite large hints right direction would helpful name offending transition dom element triggered also see", "num": "3832", "d": "5/2015"}, {"title": "server side rendering example question", "body": "server side rendering example initial startup js function calling generated dynamically via php comment says really using webpack instead browserify nt immediately clear means indexphp generate code required run component client assume browserify bundle loaded page already used r get global require function provides every module may request well react note solution simple nt think scales multiple large pages well better using webpack startupcode lt lt function var react require react var component require moduleforjs reactrender reactcreateelement component propsjson documentgetelementbyid containeridforjs script someone elaborate way use webpack instead browserify thanks", "num": "3827", "d": "5/2015"}, {"title": "enable error logs invalid props proptypes specified", "body": "development would useful make warning invalid props validated proptypes error rather fail fast stop app show warning could easily missed", "num": "3825", "d": "5/2015"}, {"title": "select tag server side rendering", "body": "issues rendering server side tags possible reproduce problem browser interprets generated dom react server cause attribute tag displays first option selected time react loads let say second correct option displayed selected think solution behaviour", "num": "3824", "d": "5/2015"}, {"title": "propattribute exempt automatic suffix", "body": "tabsize css property getting suffix automatically unitless value represent number spaces make width tab js name property see shorthand specifying pixel values style props react docs", "num": "3823", "d": "5/2015"}, {"title": "support option update option content mixed variable literal text", "body": "option update fail option content mixed variable literal text example pr come soon", "num": "3816", "d": "5/2015"}, {"title": "ismounted returns instead unmounted", "body": "", "num": "3814", "d": "5/2015"}, {"title": "way rerender one row listview", "body": "hi read helps lot example genrows function pressdata key number boolean array var datablob var ii ii lt ii var pressedtext pressdata ii pressed datablobpush row ii pressedtext return datablob pressrow function rowid number thispressdata rowid thispressdata rowid thissetstate datasource thisstatedatasourceclonewithrows thisgenrows thispressdata rerender rows time wondering good way redraw row press thanks", "num": "3812", "d": "5/2015"}, {"title": "input td generates invariant violation findcomponentroot unable find element", "body": "hi actually working react app app invariant violation findcomponentroot unable find element pretty weird table tbody inside tr gt td inside td input render invariant violation error know could come please malicious code p ideas maybe need give details thanks lot", "num": "3811", "d": "5/2015"}, {"title": "controlled inputs type number work browsers", "body": "controlled inputs current safari firefox chrome let input anything controlled work supposed chrome dev build nt ie test sample jsbin reproduces problem", "num": "3810", "d": "5/2015"}, {"title": "custom iframe attributes nwjs formerly nodewebkit project", "body": "nwjs introduces custom attributes iframe element attributes since used disable node support iframe make since used trap navigation access windowtop windowparent iframe since used specify header http requests source attributes stripped building gui react", "num": "3809", "d": "5/2015"}, {"title": "hover bug mouse element quickly hover appears nt go away using onmouseenter onmouseleave", "body": "jsfiddle video jsfiddle shows mouse quickly sometimes onmouseleave nt seem register finally stackoverflow var hover reactcreateclass getinitialstate function return hover false onmouseenterhandler function thissetstate hover true consolelog enter onmouseleavehandler function thissetstate hover false consolelog leave render function var inner normal thisstatehover inner hover var outer height width margin backgroundcolor green cursor pointer position relative var normal position absolute top bottom left right backgroundcolor red opacity var hover position absolute top bottom left right backgroundcolor red opacity reactrender documentgetelementbyid container", "num": "3806", "d": "5/2015"}, {"title": "new hook update animations", "body": "problem svg elements need animation hook needed tween element one configuration another react steps updates dom thereby prevents animation current workaround svg components need animation write method always returns dummy dom react nt find diffs handle dom updates inside imo results nonidiomatic reactjs code method true representation svg element look like applying state props see example possible solution would helpful components inside transition groups method similar etc would invoked components added existing would block updates flushed dom called would called initial render transitiongroup", "num": "3804", "d": "5/2015"}, {"title": "warn calling reactrender head", "body": "calling reactrender script tag document head implies reactrender called document body parsed browser lead confusing error especially user utilizing serverside rendering error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags like using nonsvg elements parent try inspecting child nodes element react id probably warn user calls reactrender body exists", "num": "3800", "d": "5/2015"}, {"title": "react mount update placeholder attribute", "body": "hi nt really know expected following var hello reactcreateclass render function return reactrender documentbody lead hello seems react mount test attribute standart actually mounted placeholder attribute standart expected react mount div placeholder attribute current state weird thing ca nt update attribute var hello reactcreateclass render function return reactrender documentbody reactrender documentbody produce hello see nt know supposed work think current behavior kind unexpected", "num": "3799", "d": "5/2015"}, {"title": "async reactrendertostring serverside rendering", "body": "would really help could use version rendering serverside js appget function req res routerrun routes reqpath handler router gt var content reactrendertostring resrender index content content reactrendertostring function content resrender index content content", "num": "3793", "d": "4/2015"}, {"title": "uncaught error unable find element updating innerhtml option element", "body": "coworker caught offguard behaviour yesterday wanted see possible react bug misunderstanding part basically seems one part innerhtml option element trying update one throw error worked around combining parts single variable using jsfiddle demonstrating error done workaround something wrong something possible react", "num": "3792", "d": "4/2015"}, {"title": "use responder system react", "body": "hi see reactnative gesture responder system also use responder system react notice implemented use thx", "num": "3791", "d": "4/2015"}, {"title": "bad interaction react click event handler native click event handler", "body": "repro created buttons one rendered time one button click handler hooked react synthetic click event hooked native click event even though one button rendered time single click triggering click events bug hit apps mix react components nonreact controls eg jquery ui repro steps reproed chrome react go click button labeled one expected button rendered labeled two actual rendered button still label one open console see gototwo gotoone indicates one button click handler ran two button click handler ran even though never saw button two", "num": "3790", "d": "4/2015"}, {"title": "testutilsrenderintodocument nt function expected browsers", "body": "hi program jsfiddle jsx var input reactcreateclass render function return var testutils reactaddonstestutils var inputinstance testutilsrenderintodocument var inputdomnode reactfinddomnode inputinstance inputdomnodefocus place cursor end inputdomnodesetselectionrange log twice consolelog inputdomnodeselectionstart consolelog inputdomnodeselectionend problem logged twice chrome firefox expected logged twice see safari interesting part use instead program works expected using chrome firefox safari", "num": "3789", "d": "4/2015"}, {"title": "warn using reactunmountcomponentatnode different react instance tree", "body": "able look see child datareactid attribute nt rendered copy react consequently warn see", "num": "3787", "d": "4/2015"}, {"title": "support prepostevent notification", "body": "find needing notification synthetic event eg onclickonchange react component helps implement fluxlike framework strict constraints store change events propagate system ideally need access entry points application async server events timer events browser events latter would like hook react event system thing possible andor feasible implement", "num": "3782", "d": "4/2015"}, {"title": "expose reactaddons reactaddons npm deprecate reactaddons", "body": "current system packaging reactaddons nt great need pull addons even want use one instead let make similar simple adding files buildnpmreact require private internal modules", "num": "3780", "d": "4/2015"}, {"title": "remove v mvc text website", "body": "lots people use react v mvc sure thought put phrase website think breeds idea dump inside though recommended application architecture experience people end problems react incomprehensible webs events cascading updates etc perhaps something like react concerned rendering ui since makes assumptions rest technology stack easy try small feature existing project top new one", "num": "3776", "d": "4/2015"}, {"title": "error stacks general", "body": "hi well like project using gripe errors refactoring large amounts code find call get unhelpful error ways errorout react well also seem produce unhelpful errors stack traces nt escape react time making near impossible debug possible better stack trace tell line perhaps would tell actually went wrong trying create element undefined", "num": "3775", "d": "4/2015"}, {"title": "npm update broke something relating reacttools", "body": "ran npm update reactnative broke project got error find package main file package usersblainedevnativeevueiosnodemodulesreactnativenodemodulesreacttoolssrc could something related thought post", "num": "3774", "d": "4/2015"}, {"title": "bc break", "body": "hi code javascript var hello reactcreateclass render function return hello gt thispropsname reactrender documentgetelementbyid container works fails following message javascript uncaught error parse error line unexpected token gt return hello gt thispropsname fiddle fiddle idea problem could", "num": "3773", "d": "4/2015"}, {"title": "large speed loss hidden element using inline styles", "body": "came across speed test using react removed hidden element table load see impacted speed remove hidden element speed gets better element simple td element inline styles hide surprised speed difference wanted know happening inline styles hidden element test hidden element test hidden element", "num": "3771", "d": "4/2015"}, {"title": "componentwillreceiveprops called many times apparently identical props", "body": "unless missing something nt happen eg printout app make sure nt happen thanks", "num": "3770", "d": "4/2015"}, {"title": "numeric character reference props possible due escaping", "body": "html numeric character reference named character reference work propvalues common use case eg icons fonts work raw strings fashion breaks scenarios yielding workaround found far using dangerouslysetinnerhtml bit unfortunate forces introduce another wrapper using basic html feature jsfiddle sample", "num": "3769", "d": "4/2015"}, {"title": "updating state fails componentdidmount client side using server side rendering", "body": "trying render react component server side html serve rerender client side included cut example whereby time x displayed x updated per second given simple class javascript reactcreateclass server side html generated correctly suitable datareactid attribute client side first line componentdidmount causes error displayed first second updated expected per second error message logged console error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags like using nonsvg elements parent try inspecting child nodes element react id documentation componentdidmount states invoked client server immediately initial rendering occurs implies perfectly safe update state diverge state encoded initial server side html representation replace thissetnow settimeout thissetnow fixes things seems like nasty hack", "num": "3768", "d": "4/2015"}, {"title": "reactid bug", "body": "code datareactid dom element looks like bug", "num": "3766", "d": "4/2015"}, {"title": "recognize dom changes", "body": "hey im using react render treeview since nt found good replacement native javascript drag n drop sorting script sticked react renders everything fine dom looks like datareactid gt since using reordering elements dom manipulated directly looks like datareactid gt got mixed realized really fast anything good example remove reordered list item ref nt work onclick events working render displaying data another element figure way force react completely rerender complete component already tried forceupdate method within component nt seem recognize changes dom someone know better way tackle problem edit see example remove node rendered list update itemarray react nt recognize datareactid three removed dom", "num": "3764", "d": "4/2015"}, {"title": "react renders children", "body": "rendering react children dumping code using insertingreplacing nodes back unfortunately svg tag get back code like works fine actually using code like actually generating useless tags via see three broad solutions coded ugly solution keep track whether node child append markup tag instead adds couple checks html children flow something happy nt work safari browsers box nt innerhtmlinnersvg polyfill cleanest solution would change actually parse markup use html svg nodes feel like nt done performance reasons vs innerhtml right simply detect tag deal used createnodesfrommarkup hackish nt break everything sounds quite painless happy work pr fix familiar philosophy project would direction want thanks", "num": "3763", "d": "4/2015"}, {"title": "react render tbody components returns uncaught error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated", "body": "problem fiddle attempting dynamically update existing html table ajax data components tbody component renders collection datarows representing collection elements renders collection cells representing elements row understand html table without tbody element browsers insert one cause problems happening html table tbody wish replace get following error run code code succeeds simply change render table top table element course running firefox linux chrome reactjs extension linux help would appreciated thanks dave", "num": "3762", "d": "4/2015"}, {"title": "make reactshallowrendererrender act similar react", "body": "opinion return component instance calling second time unmount previously mounted component type key different make sense", "num": "3760", "d": "4/2015"}, {"title": "claim reactjsorg", "body": "learned objections claiming submit pr ghpages branch add cname file", "num": "3754", "d": "4/2015"}, {"title": "react blur may relatedtarget ie supported", "body": "reactbrowsereventemitter handling see react first check trap capturing event using ca nt browser supports use however problem pattern internet explorer implements implement ie ie supports addeventlistener trapping capturing events means ie react handlers ie null react handlers even though ie would support used", "num": "3751", "d": "4/2015"}, {"title": "differences jquery cdn url tutorialmd", "body": "getting started defined adding markdown defined unify", "num": "3750", "d": "4/2015"}, {"title": "implement syntax highlighting code snippets written markdown website", "body": "code snippets code snippets across homepage syntax highlighting features great also something similar resulting markdown output displayed given input great syntax highlighting like github markdown results code snippet present react webpage eg", "num": "3748", "d": "4/2015"}, {"title": "npm install fails linux without g installed", "body": "fresh installation ubuntu installed compiled version nodejs failed step error make g command found solves problem make sense put g dependency readmemd prerequisites section", "num": "3744", "d": "4/2015"}, {"title": "kill reacttools current form", "body": "shipped jstransform cli api reacttools intention deprecate reacttools entirely less thing support lets us ship transform updates outside react release cycle sure wo nt ship reacttools basically reship jstransform hawk watching repo wondering means options switch jstranform wrote migration guide switch babel supports many things jstransform nothing nt really suggest option wo nt unship reacttools npm long used versions correctly able keep chugging along x remove transforms x make sure build still works x make reacttools still works like one x make sure jsxtransformer still works make new one jstranform", "num": "3743", "d": "4/2015"}, {"title": "would nice reactcomponent could render undefined", "body": "idea would nice reactcomponent could render undefined opted property like isloading true find following quite bit something like follow might clean bit unaware possible already", "num": "3738", "d": "4/2015"}, {"title": "typescript support", "body": "rt", "num": "3736", "d": "4/2015"}, {"title": "update jsfiddles use ssl", "body": "couple jsfiddles site nt using ssl link ssl pages nt work fix official docs blogs posts published us work", "num": "3735", "d": "4/2015"}, {"title": "warnings tell tree component culprit", "body": "upgrading relatively large codebase react hit variety warnings latest warning use keyed object wrapped reactaddonscreatefragment object passed child exploring stack starts give hints culprit case element one many anything react make warnings debuggable", "num": "3733", "d": "4/2015"}, {"title": "react onclick event overridden android browser", "body": "maybe galaxy tried chrome standard browser clicking email address triggers native email intent js bin test case note mailto even anchor tag noticed used email address text button div click event started investigating seems like browser click event listener email container android opens email intent every part element safe click except email address try clicking email addresses test case using browser android device see galaxy problem widespread", "num": "3732", "d": "4/2015"}, {"title": "ca nt make checkbox work modal", "body": "info modal hidden beginning control state changing class previous code click checkbox inside modal makes changes state changed rendering modal visibility visible opacity modalhide visibility none opacity previous code checkbox nt work getinitialstate items checked true checked true checked true onchange id let items thisstateitems itemsevery item index gt itemid id itemchecked itemchecked return false return true thissetstate items items render checkboxlist thisstateitemsmap item index gt return current code funny works keep others render return thisstateshowmodal amp amp checkboxlist get works nt know reason", "num": "3731", "d": "4/2015"}, {"title": "error handling server side rendering", "body": "hi running reactrendertostring nodejs server get error messages error instead everything stops browser get response added proptypes give errors key inside object nt error message big problem trying learn react developers callback anything detect errors reactrendertostring thanks", "num": "3730", "d": "4/2015"}, {"title": "event handler triggered element container prevent bubbling", "body": "using react map library use react render elements container provided map library problem container prevent event bubbling checkout reactjs source code found event emitter listen html document depend event bubbling dispatch event make onclick handler work currently addeventlistener manually nt think elegant way wondering could react provide option bind event listener html elements instead entire document", "num": "3729", "d": "4/2015"}, {"title": "requiring polymer reactmount test breaks manual test several browsers", "body": "looking found requiring polymer actually webcomponentsjs breaks tests messages like commenting make tests green seems like polymer chrome override original dom constructors therefore errors occur chrome latest safari firefox tests gets failed due", "num": "3728", "d": "4/2015"}, {"title": "warn rendering htmlunknownelement", "body": "usually means user mixed lowercaseuppercase naming convention see could add message like warning tag unrecognized browser meant render react component start name uppercase letter check per tag development mode", "num": "3726", "d": "4/2015"}, {"title": "default props class syntax", "body": "support announcement says idiomatic way specify class state use simple instance property likewise getdefaultprops proptypes really properties constructor makes lot sense noticed small inconsistencies may worth rethinking using original syntax value returned seems used points component lifecycle constructor example inspect gets sent see default props applied nt seem case using class syntax means duplicate code example mean js class control extends reactcomponent constructor props propsvalue propsvalue super props componentwillreceiveprops props propsvalue propsvalue something props see duplicating expression one default obviously lot duplication using method could return method would work make sense restore method avoid unnecessary duplication another reactlike approach aware", "num": "3725", "d": "4/2015"}, {"title": "shallow rendering support context", "body": "shallow renderer render method currently accepts second undocumented argument values pass nt actually make pass component receives context object related", "num": "3721", "d": "4/2015"}, {"title": "smulateclick trigger browser default action", "body": "simple terms cause hash change intentional", "num": "3720", "d": "4/2015"}, {"title": "disable reactperf", "body": "working integrating react serverside rendering framework maintain sailsjs ironically causing serious slowdowns project point skewing perception certain things making development generally annoying report findings via chrome debugger separately anyone interested like disable docs state perf object documented exposed reactaddonsperf using reactwithaddonsjs build development mode using reactaddons using react npm module however see option disable thoughts", "num": "3715", "d": "4/2015"}, {"title": "componentwillunmount called server side", "body": "using rendertostring rendertostaticmarkup componentwillmount called corresponding componentwillunmount never called leads memory leaks server using mixin code cleanup whenever component unmounts", "num": "3714", "d": "4/2015"}, {"title": "component rendering null always triggers dom update", "body": "see behavior fiddle basically thing tag always updated dom check elements view chrome inspector see elements updated nt happen component explicitly returns instead", "num": "3713", "d": "4/2015"}, {"title": "documentation classes", "body": "lifecycle methods define modern react component classic component spec checked docs ca nt find much yet classes missing something", "num": "3710", "d": "4/2015"}, {"title": "spurious context warning getchildcontext nt pure", "body": "sahrens found case component creating new object time getchildcontext called nt optimal performance getchildcontext called render looks like actually calling twice render warning two results nt code var parent reactcreateclass childcontexttypes x reactproptypesnumber getchildcontext function return x mathrandom render function return var child reactcreateclass contexttypes x reactproptypesnumber render function return x thiscontextx reactrender documentbody produces warnings like", "num": "3709", "d": "4/2015"}, {"title": "long tap submitting form", "body": "hi observed mobile browsers specifically chrome firefox safari try submit form holding submit input button half second longer onsubmit events form get triggered comparison quick tap triggers onsubmit callbacks issue", "num": "3708", "d": "4/2015"}, {"title": "reactmultichildunmountchildren throws error thisrenderedchildren undefined", "body": "leaning question solid bug report solid repro started occurring application recently could well due bad implementation application question supposed able happen ie renderedchildren able undefined causing loop unmountchildren throw error might wrong occurring application code referring", "num": "3702", "d": "4/2015"}, {"title": "replace invariant better prod", "body": "idea pretty sure saw elsewhere reactnative maybe transform calls conditional wrapping call check condition anyway would reduce noop function calls otherwords becomes hell could replace get rid function call entirely though really nt matter much since going throw plus duplicate default string might end meaningless", "num": "3701", "d": "4/2015"}, {"title": "csstransitiongroup remove elements dom", "body": "check fiddle component limit log entries old entries removed dom", "num": "3700", "d": "4/2015"}, {"title": "prepend generated code comment transformed file", "body": "would beneficial prepend sort code automatically generated modify hand comment files built binary likely reduce developer confusion also simplify code reviews time wasted reviewing jsx source js output plus tools phabricator autodetect string changed files display appropriate message review suggest default behavior since nt think major downsides alternate options would include sort managed macro flag", "num": "3699", "d": "4/2015"}, {"title": "add method enabling full invariant warnings production", "body": "hi using react build views atom editor atom app running production mode react wo nt give us proper invariant errors looking code hundreds checks see code running production environment nt look trivial add pull request search replace production development started get errors wanted know special case come system use react plugin surrounding app production mode look seeing make atom run production mode feels like something react support rather atom support running production app development mode thanks time francois", "num": "3698", "d": "4/2015"}, {"title": "shallow renderer fails component", "body": "trying render component using preliminary shadow renderer support testutils simple reproducible test case issue var foo reactcreateclass contexttypes foo reactproptypesobject run jest test get looks like error thrown whenever component rendered thought perhaps context required although nt problems omitting actual app even using get exception", "num": "3696", "d": "4/2015"}, {"title": "iteration conditional tags jsx", "body": "point view react newbie one things stand xmllike syntax jsx respect templating language lack conditional iteration tags reason jsx anything like obvious compilation us write today would syntax valid xmllike example since would compiled specific javascript code anyways example shorter still point nt mean start holy war react absolutely great feels bit wrong basic iteration conditional instructions xmllike part whatever specific syntax would make templating parts jsx structured would make easier html css people tweak markup add without risk damaging control structures", "num": "3695", "d": "4/2015"}, {"title": "proptypesoneof proptypesshape", "body": "component expects one type object another tried variations cproptypes foo proptypesoneof proptypesshape x proptypesstring isrequired isrequired warning warning failed proptype invalid prop value supplied expected one null null bug limitation wrong jsbin", "num": "3692", "d": "4/2015"}, {"title": "detect component invalid props", "body": "way check existing component valid props instantiated addition existing console warning would great check could run later ie prior rendering component receiving new props", "num": "3686", "d": "4/2015"}, {"title": "react incorrectly reports isomorphic rendering differences", "body": "react unable reuse markup reason stated warning message seems react determines failed checksum actually tries determine part code different takes account things actually cause different checksum calculated easy way find real discrepancy think better way deal warning list places markup might discrepancy instead listing first place since likely actual problem", "num": "3685", "d": "4/2015"}, {"title": "erraccessorsnotsupported using", "body": "using shim sham v react always throws error erraccessorsnotsupported line also using reactrouter set env production fails raised separate issue also env production env production call stack", "num": "3682", "d": "4/2015"}, {"title": "member variables react class shared reference", "body": "create several instances react class using reactcreateelement class member variables shared instances arrays objects shared strings booleans etc feels horrible scary wrong bug another way want please look second realworld example", "num": "3681", "d": "4/2015"}, {"title": "upgrading makes app slow", "body": "hi trying upgrade react rendering app using much longer time rendering takes around ms takes ms performance impossible upgrade kind reason slow rendering thanks", "num": "3680", "d": "4/2015"}, {"title": "nested node lists gain extra tag top containing tag list item", "body": "already tried stackoverflow und might want check description also jsfiddle comments trying create nested navigation tree unordered lists list items containing tags sublevel lists gain unintentional tag link without description discovered html source also styled via css substitute tag eg behaviour disappears let nodetree reactcreateclass render function return thispropstreemap function node return nodetreeitem reactcreateclass render function return nodetreecontent reactcreateclass render function return null renders root item", "num": "3679", "d": "4/2015"}, {"title": "components extending reactcomponent break findallinrenderedtree", "body": "honest sure really bug ca nt tell components nt extend actually supported cursory look tests type checks seem indicate areshould run issues using way except trying test", "num": "3677", "d": "4/2015"}, {"title": "csstransitiongroup animate child calls getboundingclientrect componentdidmount", "body": "possibly react bug nt able reproduce vanilla jshtmlcss far demo encountered tried fade component contains reactswipe uses plain js library hood seems like call makes getboundingclientrect magically neutralizes transition causing effect one workaround seems deferring getboundingclientrect call using settimeout thanks greenjello reactjs", "num": "3672", "d": "4/2015"}, {"title": "html jsx compiler example page broken", "body": "get error referenceerror htmltojsx defined", "num": "3671", "d": "4/2015"}, {"title": "jsxtransformer changes source map return type", "body": "seems api change react covered documentation using option source map returned plain javascript object previously would return instance need call get actual source map intentional change got overlooked writing documentation", "num": "3670", "d": "4/2015"}, {"title": "key prop dom nodes actually called code", "body": "trying fix warning searching ended found finally managed get rid warning using instead fixed probably least docswarning", "num": "3669", "d": "4/2015"}, {"title": "onchange event propagated materialize css used class browserdefault", "body": "use materialize css framework react issue onchange event propagation way event fired called add class works pretty well sure react issue maybe also created issue materialize repo", "num": "3667", "d": "4/2015"}, {"title": "access css class name renderintodocument", "body": "jest tests like verify class names rendered elements best get react element dom access css class", "num": "3666", "d": "4/2015"}, {"title": "dynamically changing rowspan", "body": "problem trying update table initial table looks like rowspan works fine row table cell looks like looking length ordinates array axis number rows want row cell cover user clicks new ordinate pushed table rerenders end result reason although rowspan changes see inspecting elements reason table cell spans across rows bug made fiddle see problem", "num": "3661", "d": "4/2015"}, {"title": "reacttools installation fails", "body": "npmdebuglog info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c program filesnodejsnodemodulesnpmbinnpmclijs verbose cli install verbose cli g verbose cli reacttools info using npm info using node verbose node symlink c program filesnodejsnodeexe silly cache add args reacttools null verbose cache add spec reacttools silly cache add parsed spec raw reacttools silly cache add scope null silly cache add name reacttools silly cache add rawspec silly cache add spec silly cache add type range verbose addnamed reacttools silly addnamed semvervalid null silly addnamed semvervalidrange silly addnamerange name reacttools range hasdata false silly maptoregistry name reacttools silly maptoregistry using default registry silly maptoregistry registry silly maptoregistry uri verbose addnamerange registry flight fetching verbose request uri verbose request auth needed info attempt registry request try verbose request id http request get info retry retry error last attempt error connect eacces info attempt registry request try http request get info retry retry error last attempt error connect eacces info attempt registry request try http request get verbose stack error connect eacces verbose stack exportserrnoexception verbose stack tcpconnectwrapafterconnect oncomplete verbose cwd c error windowsnt error argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install g reacttools error node error npm error code eacces error errno eacces error syscall connect error error connect eacces error exportserrnoexception error tcpconnectwrapafterconnect oncomplete error error connect eacces code eacces errno eacces syscall connect error please try running command rootadministrator verbose exit true tks", "num": "3660", "d": "4/2015"}, {"title": "change event fired input typedate", "body": "hello seems like change event fired input typedate mobile firefox android please try following jsfiddle code example may something wrong code works well chrome safari desktop firefox mobile firefox tested firefox android case vanilla javascript works well case thank advance andrei", "num": "3659", "d": "4/2015"}, {"title": "document events pooled", "body": "ran issue event handler called passing function accessing inside function seems reacts synthetic events garbage collected event handler finished executing gave error tried access since properties removed event object fine easy fix destructuring event argument instead probably documented", "num": "3657", "d": "4/2015"}, {"title": "chrome synthetic drag drop events use domstringlist eventdatatransfertypes", "body": "broken chrome", "num": "3656", "d": "4/2015"}, {"title": "getdefaultprops working", "body": "working simple component default props react component class navigation extends reactcomponent getdefaultprops return user render consolelog thisprops thispropsuser user logged return else user logged return navigationproptypes user reactproptypesobject return navigation simply render without props got empty object console output using react chrome osx idea going wrong", "num": "3655", "d": "4/2015"}, {"title": "use statefy", "body": "hey folks implementing set react components explain section created statefy problem sure good practice afraid using large number components find would way better another way could please give feedback project would much appreciated thanks", "num": "3653", "d": "4/2015"}, {"title": "passing react class prop longer works", "body": "hi trying run following code using latest version react jsx var mycomponent reactcreateclass render function return var app reactcreateclass render function return reactrender documentbody however error thrown code ran code functions expected react someone figured due change way react classes autobinds methods therefore changing method fixes issue jsx render function var tmpl reactcreateclass render function return thispropsdata", "num": "3652", "d": "4/2015"}, {"title": "react failing script tags", "body": "react liking js render function return workaround", "num": "3649", "d": "4/2015"}, {"title": "exposing max tree depth", "body": "working treelike visualization child nodes nested inside parent node expand tree hit depth limit set reactinstancehandlesjs getting following error message wondering guys plans make depth limit configurable way bypass limitation", "num": "3648", "d": "4/2015"}, {"title": "update tutorial doc", "body": "plans update reworking internal documentation based tutorials use happy contribute back want us update code examples existing tutorial would best keep existing examples add underneath create new tutorial page eg", "num": "3647", "d": "4/2015"}, {"title": "onchange dropped input fields generated within iterator", "body": "using underscore mapping array generate list components example code upon rendering onchange dropped", "num": "3643", "d": "4/2015"}, {"title": "jsx watch error watch enospc", "body": "sometimes dont know reacttools aka try compile js command result well working done flag option try add result confused environment", "num": "3637", "d": "4/2015"}, {"title": "rename react element", "body": "want rename react like react work rename", "num": "3633", "d": "4/2015"}, {"title": "async lifecycle methods animation", "body": "trying integrate animations react project becoming quite struggle example error message component fade like fade old message fade new one animations javascript main problem ca nt fade previous error sync think would make sense lifecycle methods name async callbacks like", "num": "3631", "d": "4/2015"}, {"title": "ship", "body": "handful things ship patch release missing anything", "num": "3629", "d": "4/2015"}, {"title": "unable horizontally align elements", "body": "trying horizontally space divs demonstrated example works fine css paste example code html file try react like var react require react var page reactcreateclass displayname test render function return reactrender documentbody nt work correctly known issues react might missing wrong way", "num": "3626", "d": "4/2015"}, {"title": "reactproptransferer merge react native styles", "body": "existing merge strategy merges objects different merge strategy necessary react native uses ints instead objects also supports arrays believe backwardscompatible web react", "num": "3624", "d": "4/2015"}, {"title": "reactcsstransitiongroup warns removed transition progress", "body": "noeventtimeout timer cleared child unmounted transition progress causes false positive warning", "num": "3623", "d": "4/2015"}, {"title": "document defined server", "body": "saw bug year ago facebookreact fixed encountering running react server generate html one parent components variable whose value determined reaches child component need implement way child component pass back data parent read implemented parent component passes callback function prop child component child component calls callback componentwillmount function also tested calling callback getinitialstate callback calls setstate update state variable parent work serverside exception thrown document defined", "num": "3620", "d": "4/2015"}, {"title": "feature request show component name warnings", "body": "upgrading found really hard locate problems caused duplicated using may help component names warnings", "num": "3619", "d": "4/2015"}, {"title": "clarification patents grants termination clauses", "body": "firstly sincerely apologise wrong place asking question nt seen answered places think definitely relates usage reactjs consternation confusion facebook patent grant declared project including one specifically license granted hereunder terminate automatically without notice anyone makes claim including filing lawsuit assertion action alleging b right patent claim facebook invalid unenforceable lawyer interpret mean use react publicly voice concern quality validity patent owned facebook access reactrelated patents terminated automatically open sued patent infringement may little paranoid also wonder simply discussing issue grounds patent grant termination clause makes perfect sense terms protecting facebook unnecessary patent litigation desired purpose spirit actual purpose letter b clause confusing concerning please point discussion answer already taken place would terrific yet official word facebook issue please point arena going take place likely appropriate", "num": "3617", "d": "4/2015"}, {"title": "performance components", "body": "trying proof react faster angular problem code need generate list lines use input change value specific field inside angular fast binding however react ca nt code angular html code react html somebody help proof react faster angular", "num": "3616", "d": "4/2015"}, {"title": "binding classes onchange", "body": "using classes autobinding nt happen hopefully know expect inside function class undefined fact happens however inside function input component constructor obviously bind functions time problem resolved since thissetstate exists constructor calling thissetstate inside handlechange function getting error nothing happening confusing track admittedly immediately sure thought make issue open discussion", "num": "3613", "d": "4/2015"}, {"title": "record perf mesures every single render", "body": "app framework similar om always render top component flux store components listening single flux store event single global json state managed outside react ask question followup issue noticed reactrender takes callback former perf code looked like javascript render reactaddonsperfstart reactrender documentbody reactaddonsperfstop reactaddonsperfprintwasted render reactaddonsperfstart reactrender documentbody reactaddonsperfstop reactaddonsperfprintwasted next renders render takes callback seems make sens use instead considering reactrender synchronous javascript render reactaddonsperfstart reactrender documentbody function reactaddonsperfstop reactaddonsperfprintwasted render reactaddonsperfstart reactrender documentbody function reactaddonsperfstop reactaddonsperfprintwasted next renders question directly comes mind would behavior rendering triggered rendering callback called ideal world would seem could also could lead bad duplicated mesures even worse failure perf allow started twice example think usecase pretty common using react really pure way would nice explain document achieved without expecting weird side effects", "num": "3611", "d": "4/2015"}, {"title": "documentation componentwillreceiveprops confusing", "body": "read doc says invoked component receiving new props however clear still invoked component explicitly receive props example looks like default called every time updating phase developer control", "num": "3610", "d": "4/2015"}, {"title": "erro webkit qt", "body": "one know would reactjs work wkhtmltopdf curious exactly feature api react uses supported qt web view js libraries use work fine related", "num": "3609", "d": "4/2015"}, {"title": "jsx compiler issue html element", "body": "started making new ui components react faced following issue defined component state use state input tag inside render function gives following error reactifyerror usrlocalsrcstagileappappjs parse error line unexpected token parsing file usrlocalsrcstagileappappjs index linenumber column description unexpected token name reactifyerror filename usrlocalsrcstagileappappjs filename usrlocalsrcstagileappappjs stream seems jsx supports typevalue properties property like checked without value", "num": "3608", "d": "4/2015"}, {"title": "testutils shorthands", "body": "right two methods jest api shorthands yet methods ridiculously long like makes slow reading typing shorthands two methods testutils heart", "num": "3607", "d": "4/2015"}, {"title": "setting attribute style null breaks attribute", "body": "assign null style attribute reset works following changes value nothing fiddle demonstrating try push button several times seems like strange behaviour would nt surprised first attempt set stylenull failed nt silently breaks style attribute", "num": "3606", "d": "4/2015"}, {"title": "idea let touchable support press radius instead press rect", "body": "press rect defines rectangle around touchable component touch stays active thinking radius pair radii form oval around touchable component makes sense rectangle ways", "num": "3602", "d": "4/2015"}, {"title": "animation lifecycle order", "body": "bit confused using following render two different pages every lifecycle animation callback get tried simple transition fading element home fading element search weird going home search see logs search component rendered top home component homecomponentwillleave called would expect oder like way animations seems make sense following code would read home component leaves fade header search component enters fade header coffee home componentwillleave done gt consolelog home componentwillleave header velocity opacity duration complete done search componentdidenter gt consolelog search componentdidenter header velocity opacity duration", "num": "3601", "d": "4/2015"}, {"title": "thisprops available component constuctor", "body": "versions node react babel tested playing new syntax figured weird behaviour code snippet print fact another weird stuff print object property", "num": "3599", "d": "4/2015"}, {"title": "tests fail run manually firefox chrome", "body": "hi trying run jasmine tests firefox fail run tests chrome succeed know tests run phantom js headless chrome nt tests supposed run browsers apart assertion failed able spot seems thing changed order data attributes first tag tests dependent", "num": "3598", "d": "4/2015"}, {"title": "get regex props match error", "body": "sorry poor english gt lt show code var regextextfield reactcreateclass handlechange function e var patt thispropsregex get regex obj var val etargetvalue consolelog consolelog patt patt value val consolelog result patttest val render function return reactrender set regex obj documentgetelementbyid regextextfield match error patt dg value result true patt dg value match error result false patt dg value result true patt dg value result false match error use regexp var regextextfield reactcreateclass handlechange function e var patt regexp thispropsregex g use regexp var val etargetvalue consolelog consolelog patt patt value val consolelog result patttest val render function return reactrender use string documentgetelementbyid regextextfield match ok patt g value result false patt g value result true patt g value result true patt g value result true", "num": "3597", "d": "4/2015"}, {"title": "warn rendered dom node htmlunknownelement", "body": "bit react jsx uses upper vs lower case convention distinguish local component classes html tags afterthought remembered something lowercaseuppercase jsx tags good react citizen searched react site found documented new react took around minutes trace generally follow convention developed simple component mostly static site simply clones children adds thought simple utility therefore lowercased understand might change worth least adding warning uncommon html tag names better yet lowercase jsx tags also local variables", "num": "3596", "d": "4/2015"}, {"title": "rendering server", "body": "issue element rendered server client example recreates issue jsx const react require react const selecteddebug reactcreateclass displayname selecteddebug render return b c moduleexports selecteddebug attribute rendered server works fine browser also tried setting prop element nt seem make difference renders expected using however course throws warning console telling use either prop note code running node using babel transpiling tested using react amp missing something bug", "num": "3594", "d": "4/2015"}, {"title": "issue using reactaddons related error reported many others uncaught typeerror read property reactautobindmap null", "body": "managed isolate issue simplest component var react require reactaddons var test reactcreateclass render function return hello world moduleexports test using gives infamous replace everything works fine errors warnings incompatibility addons part missing anything", "num": "3593", "d": "4/2015"}, {"title": "uncaught typeerror read property reactautobindmap undefined", "body": "iv getting aforementioned quite often recently bundling modules browserify stack trace pin points exact point origin error generated avoid", "num": "3592", "d": "4/2015"}, {"title": "uncaught typeerror read property context null", "body": "uncaught typeerror read property context requestonreadystatechange mean", "num": "3585", "d": "4/2015"}, {"title": "suggestion major version switchover jsx cli always assume jsx js needing x", "body": "since jsx code advocated needing jsx extension would make sense major version release breaks backward compat switching always assume code jsx unless otherwise specified using x flag major semver bump would ensure existing projects affected realignment current advocacy practice", "num": "3582", "d": "4/2015"}, {"title": "reactaddonstestutilsrenderintodocument document wrong", "body": "argument rather", "num": "3581", "d": "4/2015"}, {"title": "consistently rendering new components body defeat purpose dom diffing", "body": "example something like repeatedly mean diffing nt taken advantage real dom rerendered every time something place prevent real dom rerendered every time", "num": "3577", "d": "4/2015"}, {"title": "use linkedstatemixin links radio buttons radiolink", "body": "react two types linked states valuelink checkedlink neither work well radio buttons mutable value attribute somewhat degenerate parameter additional work done understand radio button actually selected would great could add something akin valuelink text inputs would set state variable defined value like say first radio button clicked change state would variable named value probably achieved adding lines linkedvalueutilsjs arguable whether linked value could also serve group name even radio type implicitly set radiolink attribute believe syntax kept close link types plus typename verbosity gives context code usecase warrant feature", "num": "3573", "d": "4/2015"}, {"title": "document reactaddonsbatchedupdates", "body": "nt realise addons bundle would good get added docs would good also include example using something similar", "num": "3570", "d": "4/2015"}, {"title": "expose reactmount", "body": "sorry already exists form misunderstanding everything works certain libraries eg reacthotapi depend use wo nt work script available react bundle eg projects added single line essentially expose work would nice available default however apologies available default form", "num": "3568", "d": "4/2015"}, {"title": "improve error createelement undefined", "body": "", "num": "3565", "d": "4/2015"}, {"title": "strange contains method mounted dom input", "body": "got component renders following mount root component different props previously rendered node receive error render remove inputs form error goes away important note using contexts component lives inside root even though error everything works expected", "num": "3561", "d": "4/2015"}, {"title": "onchange propagation", "body": "one tricky thing experienced recently onchange input propagates nt set stoppropagate means input somewhere deep change propagate dom tree since using onchange generic components triggering also took find understand whats going question intentional maybe would make sense warning want handle input onchange propagate event curious would consider better practice avoid use onchange prop nonform components use stoppropagation thanks thoughts", "num": "3559", "d": "4/2015"}, {"title": "confuse two children key", "body": "using react mounting two components page already ensure key unique click button one alright click button two one crop two make confuse console show click one button click two button change work properly", "num": "3558", "d": "4/2015"}, {"title": "teardown testutils method", "body": "unittesting module used isomorphic app process writeup mocha consume individually run pretty good far however starting use testutils starts failing account apparently line kicked react clientmode bad need way kick react clientmode add teardown method aka", "num": "3557", "d": "4/2015"}, {"title": "jsx compiler leaves trailing whitespace object definitions", "body": "assuming following render call generated output notice trailing white space properties causing issues linters nt allow trailing white space", "num": "3553", "d": "3/2015"}, {"title": "reacttools jsx ignores x src build dirs", "body": "existing project complex directory structure js files moving one time react components existing build system takes js files structure produces final built files directories take one js file time convert jsx file jsx file changes compiler builds resulting js file rebuilds file js file added tree reproduce assume directory structure within run build sourcejsx file make change sourcejsx file notice builds twice second time js file gets added tree", "num": "3551", "d": "3/2015"}, {"title": "using w x causes multiple rebuilds", "body": "using recompile source output generated appears matching strict enough assume directory structure within run build another terminal open make modifications switch back previous terminal see gets updated rebuild source", "num": "3550", "d": "3/2015"}, {"title": "add warnings incorrect casing event handler properties", "body": "hi react currently warns incorrect casing properties like however nt warn problem event handlers like used html way writing attributes often wrote something like sadly attached event handlers called nt get warning react took quite time find mistake see example focus element try press key", "num": "3548", "d": "3/2015"}, {"title": "close meta tag", "body": "hi also want use react template engine also server side case want valid xml output component code js render return returns closing meta bug", "num": "3546", "d": "3/2015"}, {"title": "generic iterable data reactdomcomponent css styles", "body": "currently react supports regular javascript objects style props using enumerated keys would wonderful could also support generic data css styles eg iterable interface would enable immutablejs clojurescript data structures directly used styles currently necessitates converting generic data regular javascript style objects every styled element every render pretty wasteful general extremely useful able express styles generic data especially persistent immutable data structures order let end user manipulate data application ui eg enduser ui themes serialize data dynamically merge manipulate data needed runtime react native already supports last sort thing merging stylesheets uncertain whether regular react see even better serializability manipulability generic style data could used potential problems suggestion might might slow react reconciliation rendering react native already standard syntax used merging style objects together unless revised eg adding method people use instead may possible also support generic style data react native might create great api mismatch react react native nonetheless think generic style data quite important already using copiously especially ui themes somewhat related", "num": "3542", "d": "3/2015"}, {"title": "nt really think could install ruby npm", "body": "install process bash sites reactnative init jakeproject walk creating new react native project usersjspurlocsitesjakeproject ws install usersjspurlocsitesjakeprojectnodemodulesreactnativenodemodulesws nodegyp rebuild builderrorlog exit cxx target releaseobjtargetbufferutilsrcbufferutilo solinkmodule target releasebufferutilnode solinkmodule target releasebufferutilnode finished cxx target releaseobjtargetvalidationsrcvalidationo solinkmodule target releasevalidationnode solinkmodule target releasevalidationnode finished reactnative nodemodulesreactnative absolutepath stacktraceparser reacttimermixin underscore q debug ms yargs optimist wordwrap minimist workerfarm xtend errno sourcemap amdefine sane watch fbwatchman minimatch walker uglifyjs uglifytobrowserify async yargs sourcemap rebound connect methods fresh cookiesignature pause qs bytes cookie send formidable jstransform esprimafb joi topo isemail hoek moment moduledeps inherits shallowcopy minimist subarg parents readablestream resolve concatstream browserresolve jsonstream detective ws tinycolor options commander nan reacttools commoner nt really think could install ruby npm sites cd jakeproject jakeproject ls nodemodules packagejson jakeproject mean nt really think could install ruby npm", "num": "3541", "d": "3/2015"}, {"title": "allow marking array static", "body": "expected issue already could nt find apologies dupe occasionally useful put elements array within render conditionally building different bits view react issue warning whenever array used nt keys even author knows array literal therefore nt require keys example react warn lack keys even though needed one option would extend accept array use indexes keys", "num": "3538", "d": "3/2015"}, {"title": "wrong function", "body": "page var avatar reactcreateclass render function return var profilepic reactcreateclass render function return var profilelink reactcreateclass render function return reactrender documentgetelementbyid example last function reactrender wrong reactrendercomponent", "num": "3536", "d": "3/2015"}, {"title": "contexts seem break multiple react instances per package", "body": "realise contexts basically undocumented unsupported shaky territory api wise usecase multiple node packages react installed package provides component two using react instance nodemodules folder finding using contexts get message undefinedbar try pass contexts elements consolidate components one package everything works expected keep separate packages export factory takes react instance function everything works expected browserify probably conveniently gets around dedupe identical versions running server unfortunately code sample everything package working fine need run npm install project root directory run code sample separate package instance react need npm install project root directory nodemodulessubcomponent three questions expected behaviour contexts depend react instance seen people running problems multiple react instances issues something avoiding something avoiding expected remain way shortmediumlong term forever alternatively using contexts incorrectly thanks time wonderful library", "num": "3532", "d": "3/2015"}, {"title": "add ability find dom component prop value reacttestutils", "body": "order make selectors durable within selenium tests generally add attributes element needs selected developers free change classes ids needed know touch move refactoring attributes would nice allow unit tests use attribute select elements integrationselenium tests use issue currently way reacttestutils test helper object contains bunch things help testing react code two methods follows javascript scryrendereddomcomponentswithprop function scryrendereddomcomponentswithprop root propname propvalue return reacttestutilsfindallinrenderedtree root function inst var instancepropvalue instprops propname findrendereddomcomponentwithprop function findrendereddomcomponentwithprop root propname propvalue var thisscryrendereddomcomponentswithprop root propname propvalue seems like useful feature wondering enough interest type functionality create pr add directly reacttestutils", "num": "3528", "d": "3/2015"}, {"title": "invariant violation trying release instance pool different type", "body": "currently working rendering simple react application server application renders content fine using method load testing seeing error occasional occur tracked error message pooledclassjs file struggling understand pool error would thrown anybody good description pools work could read even better hints could causing", "num": "3526", "d": "3/2015"}, {"title": "properly sugared way update state child", "body": "nonhacky way update children state parent sfme best way ask support let know nt know", "num": "3524", "d": "3/2015"}, {"title": "integration knockout", "body": "want use react v use knockout integration thanks", "num": "3522", "d": "3/2015"}, {"title": "way enforce components", "body": "example throw warning pass prop component defined using", "num": "3514", "d": "3/2015"}, {"title": "module build failed help", "body": "please help learning reactjs use webpack watch jsx files output line files navbarjsx jsx var navbar reactcreateclass render function return brand home contact moduleexports navbar appjsx jsx var navbar require navbarjsx var app reactcreateclass render function return bootstrap starter template use document way quickly start new project get text mostly barebones html document moduleexports app missing", "num": "3512", "d": "3/2015"}, {"title": "proptypes hook add optional", "body": "would neat declarations could take helptext would go long ways help others understand prop used component low priority food thought", "num": "3510", "d": "3/2015"}, {"title": "please return us autobinding classes", "body": "hello guys react really amazing think small inconvenience classes lost pretty functionality autobinding event callbacks owner struggle functionality every solution react recommends awful really need bind owner almost every event callback magic written react blog please return feature next release thank", "num": "3509", "d": "3/2015"}, {"title": "add comment frontpage markdown example xss", "body": "since copypasting code makes easy people xss lets add comment", "num": "3501", "d": "3/2015"}, {"title": "testutils calling render document test state change", "body": "component testing trying figure test component reacting properly change state state changes based event video element canplay event simulate support triggering event far tell next best thing thought anyway would call method triggered event method jest anyway nt available call tried calling setstate test like var react require reactaddons var showsdetailheader require routesshowscomponentsshowsdetailheaderjsx var mockdata require mockepisodedetaildata mockdatadatashowassetswebherovideourl class times required component rerendered rendering document", "num": "3500", "d": "3/2015"}, {"title": "reacttransitiongroup setstate handledoneleaving problematic", "body": "hi implementing custom animation svg found problem code handledoneleaving function reacttransitiongroup javascript handledoneleaving function key var component thisrefs key many children remove last one actually removed reason setstate updating immediately children list assignment thisstatechildren newchildren still referencing full list next call fact last remove effective jsfiddle example initlal view green circles clicking change button new circles must added previous must removed one removed", "num": "3497", "d": "3/2015"}, {"title": "escaping", "body": "according react uses replace etc behavior sane awesome problem also happens inside", "num": "3496", "d": "3/2015"}, {"title": "error find module envify browserify", "body": "sure react issue browserify issue packagejson js name frontend version description main indexjs scripts test echo error test specified amp amp exit browserify transform browserifyshim browser browserifyshim author license isc dependencies jquery lodash url qs react gulpfile js var browserify require browserify gulp require gulp source require vinylsourcestream uglify require gulpuglify sourcemaps require gulpsourcemaps reactify require reactify watchify require watchify neat require nodeneat lr require gulplivereload wait require gulpwait sass require gulpsass bundler var bundler browserify entries dirname frontendjsindexjs transform reactify debug true cache packagecache fullpaths true watcher watchify bundler gulptask sass function gulpsrc dirname frontendsassappscss pipe sourcemapsinit pipe sass includepaths neatincludepaths style compressed pipe sourcemapswrite pipe gulpdest dirname public pipe lr gulptask realoadviews function gulpsrc pipe wait pipe lr gulptask js function watcher bundle pipe source bundlejs pipe gulpdest dirname publicjs pipe lr gulptask watch function lrlisten", "num": "3495", "d": "3/2015"}, {"title": "support asynchronous wrappers transaction", "body": "hello reading reactjs trying extend one thing noticed although wrappers transaction guarantee executed pre post performing method seems waiting mechanism asynchronous wrapper functions apis asynchronous may fail keep order correctly especially previous wrapper still waiting asynchronous result second one would start transactionjs looks like plain function call waiting code anywhere current reactjs much transaction instances problem may serious however nature transaction extendable standalone component bind dom amp existing use cases think general enough deal possible cases design principle new dom apis possible sorry fired duplicated issue searched issues found similar cases duplicated please close", "num": "3493", "d": "3/2015"}, {"title": "reacttransitiongroup fails given factory component prop", "body": "passing factory causes typeerror undefined object evaluating typeprototypemountcomponent reference reacttransitiongroup docs state note prior using dom components component prop needed reference reactdom since component simply passed reactcreateelement must string composite components must pass factory test case test code javascript var compositeclass reactcreateclass render function return null var compositefactory reactcreatefactory compositeclass var reacttransitiongroup reactcreatefactory reactaddonstransitiongroup var bugclass reactcreateclass render function return reacttransitiongroup component compositefactory var bugfactory reactcreatefactory bugclass reactrender bugfactory documentbody update looks like docs might wrong passing class rather factory seems work", "num": "3492", "d": "3/2015"}, {"title": "remove classsetcx entirely", "body": "deprecated remove ship would like honors chenglou", "num": "3489", "d": "3/2015"}, {"title": "catching nulls undefineds createclass", "body": "right something like going pretty much uncaught causes terrible breakage similarly following work undef mixin actually used mixins issue suspect something createclass trivially test accepting component definition check extant check every element resolves object rather string etc bad element situation might also doable inside createclass checking elements used inside element fact exist letting createclass call succeed suspect less sure mixin check", "num": "3486", "d": "3/2015"}, {"title": "changing placeholder causes onchange ie", "body": "check tested likely related", "num": "3484", "d": "3/2015"}, {"title": "rendered reactelement reactelement anymore", "body": "according tests reactelement gets rendered recognised reactelement anymore come test rendered element actually reactelement without getting hacky", "num": "3479", "d": "3/2015"}, {"title": "confusing error message passing non string non component class reactcreateelement", "body": "following code produces deep react", "num": "3478", "d": "3/2015"}, {"title": "reactserverrenderingrendertostring fails jdk", "body": "trying use react serverside java project unfortunately tied jdk project ca nt use nashorn since jdk javascriptengine thought good enough give shot everything fine tried render component one children whenever component one children react renders randomly simple test case java import javaiofilereader import javaxscriptscriptengine import javaxscriptscriptenginemanager public class test private scriptengine se given example reactrendertostring generates following markup spent time yesterday today trying figure narrowed things reach reason children called order appreciate help help ideas could causing", "num": "3476", "d": "3/2015"}, {"title": "read property firstchild undefined", "body": "hi experimenting hit problem react reactrouter first navigation using router get following error ialready read thread referenced react issues checked external dependencies one version react added project added main project additional dependency downloading react also checked use require react seems fine well would appreciate help issue", "num": "3474", "d": "3/2015"}, {"title": "much xss vulnerability protection react responsible", "body": "security hack mentions react ultimately serverside bug bug react issue figuring something mitigate issues json parsing bug serverside issue isvalidelement react designed work plain objects input fact even getting rid way verify allow json object imo problem verification string values sanitized inserted dom except css styles known wontfix issue earlier versions used checks nt work well multiple reacts makes difficult optimize inline objects much faster couples jsx permanently react would like avoid dangerouslysetinnerhtml one possible solution disable feature require used imperatively makes worse performance insertion time however nt believe bad thing insert arbitrary html tags certainly easiest way gain access xss though also insert arbitrary web components could expose data render form elements potentially pass data else ultimately issue seems like valid use case userdata compromised becomes dangerous react responsible protecting arbitrary json children", "num": "3473", "d": "3/2015"}, {"title": "display array", "body": "simple problem ca nt find solution displaying array elements hava component render something like type return nt work wrapping good breaking table structure lots warnings array elements nt want wrap display", "num": "3470", "d": "3/2015"}, {"title": "immutable data differences production development builds possible bug", "body": "noticing strange behavior development build vs production build please see bin included two links react library productiondevelopment production build works expected renders immutableset however development build breaks returns error also another strange thing development build set works long size try removing elements array size render fine development production", "num": "3469", "d": "3/2015"}, {"title": "jsx render wo nt allow webkitdirectory directory used", "body": "tried use webkitdirectory directory input dom found impossible add two label input dom anyway solve problem", "num": "3468", "d": "3/2015"}, {"title": "uncaught typeerror read property mountcomponent undefined", "body": "upgrading getting turns great way telling use jsx hand server side outside jsx seems required use otherwise get pretty confusing", "num": "3466", "d": "3/2015"}, {"title": "incorrect blame checksum mismatch due browsers unescaping html", "body": "react uses escape amongst things browsers seem unescape back potentially causing incorrect blame case checksum mismatches demo console reproducible latest stable releases chrome firefox safari os x sure would good way fix reescaping comparing calling would likely escape unrelated characters well unescaping comparing would produce exact diff unless keep track unescapes performed comparing revert producing diff string sounds like going trouble might needed", "num": "3465", "d": "3/2015"}, {"title": "detail communication documentation best practices grandparent lt gt grandchild", "body": "communication two components nt parentchild relationship set global event system far really enjoyed react conducive modularize components however modularize components gets harder communicate global event system nt scale essentially couples components nt coupled simple example faceted navigation sidebar containing two subviews filters search bar list things sibebarview filters search input filter button list view essence event stream search input update list advice seems like say create singleton eventemitter search input searchinputjs eeemit search update inputvalue sidebarjs eeon search update searchhandler see specific event sidebarview know also let say global search input time seems like increasingly specific event names feeling flux supposed alleviate problem somehow way give detail andor point people right direction seems like common use case", "num": "3461", "d": "3/2015"}, {"title": "could", "body": "following jsx fragment guarantee never otherwise throws error although construction correct instead check", "num": "3460", "d": "3/2015"}, {"title": "add support rdfa attributes", "body": "add support rdfa attributes resource property etc see full list", "num": "3459", "d": "3/2015"}, {"title": "event handler checkbox throws error nodewebkit", "body": "trouble domexceptionerror clicking input element type checkbox react used nodewebkit environment testing nodewebkit react nothing tricky browser context use require seems affect input elements type checkbox file code runs fine browser thoughts might failing nodewebkit test project includes node webkit version test project without node webkit binaries console output clicking checkbox download react devtools better development experience change event syntheticevent dispatchconfig object dispatchmarker nativeevent mouseevent type click target dispatchids null dispatchlisteners null bubbles null cancelable null currenttarget null defaultprevented null dispatchconfig null dispatchmarker null eventphase null isdefaultprevented function ispropagationstopped function istrusted null nativeevent null target null timestamp null type null proto syntheticevent error domexception message attempt made use object longer usable name invalidstateerror code stack error attempt made use object file c indexsizeerr code message attempt made use object longer usable name invalidstateerror stack error attempt html mainjs js require nwgui windowget showdevtools handlechange function evt try consolelog change event evt catch e consolelog error e reactrender reactcreateelement input type checkbox onchange handlechange documentgetelementbyid app", "num": "3458", "d": "3/2015"}, {"title": "html string thisstate occasionally escaped", "body": "using using react togather small rich text editor named pen code coffee getinitialstate gt text propstext loadpen gt pen new pen editor refstextgetdomnode textarea list bold stay false pensetcontent propstext refstextgetdomnode focus penon change content gt onchange contenttrim return pen onchange content gt consolelog content yes found html every time setstate text content timedelay gt consolelog statetext lt somtimes statetext escaled like string changed another statetext content currently fix rewrting property nt know debug react find really happening react anything like escaping html state property internally", "num": "3457", "d": "3/2015"}, {"title": "htmltojsx defined html jsx converter page", "body": "edits made last week page maybe broken accidentally", "num": "3455", "d": "3/2015"}, {"title": "testutilsrenderintodocument difference render returns nullfalse", "body": "testutilsrenderintodocument different behavior react component render method returns false null var mycomponent testutilsrenderintodocument var noscript testutilsfindrendereddomcomponentwithtag mycomponent noscript expect noscript tobetruthy fails react error find exactly one match tag noscript works something wrong repo test case switch version packagejson", "num": "3453", "d": "3/2015"}, {"title": "trying check whether button click event calls function jsx", "body": "js unit test case loginjsx jestdontmock srcjspagesloginjsx describe login function invoke btnloginclick click event function var react require reactaddons var logincontrol require srcjspagesloginjsx loginjsx js jsx reactdom use strict var react require react var fluxiblemixin require fluxible mixin var loginstore require storesloginstorejs var loginactions require actionsloginactionsjs var login reactcreateclass mixins fluxiblemixin statics storelisteners loginstore moduleexports login", "num": "3452", "d": "3/2015"}, {"title": "wrong context warning warning ownerbased parentbased contexts differ", "body": "imo warning following code wrong code define root component context value root component show two different children dependent state variable root switched one child another warning shown example jsfiddle run tested react js var root reactcreateclass childcontexttypes foo reactproptypesstring getchildcontext function return foo context value getinitialstate function return foo false render function thisstatefoo return else settimeout function thissetstate foo true bind return return loading var child reactcreateclass contexttypes foo reactproptypesstring render function return thiscontextfoo reactrender documentbody", "num": "3451", "d": "3/2015"}, {"title": "questions coffeescript static property demo beta release post", "body": "somehow fulltime coffeescript programmer found beta release post coffee div reactcreatefactory div class counter extends reactcomponent proptypes initialcount reactproptypesnumber defaultprops initialcount constructor props gt super props state count propsinitialcount tick gt setstate count statecount render gt div onclick tick clicks statecount exciting got questions using static properties becoming static properties property defined constructor even clear demo found updated docs would like talk properties influenced syntax recommend fat arrow", "num": "3450", "d": "3/2015"}, {"title": "making render pure", "body": "saw mixing implemented render something like user implement function seems like nice hack wondering nt default way react thoughts", "num": "3449", "d": "3/2015"}, {"title": "make shouldcomponentupdate accept boolean value", "body": "jquery disable event like similarly want define immutable component write possible make shouldcomponentupdate accept boolean value", "num": "3448", "d": "3/2015"}, {"title": "checkbox behavior inexplicable preventdefault used", "body": "var react require react backbone require backbone flux require flux dispatcher new fluxdispatcher var storelisteningmixin componentdidmount function thispropsstore amp amp thisonstorechanged thispropsstoreon change emit thisonstorechanged componentwillunmount function thispropsstore amp amp thisonstorechanged thispropsstoreoff change emit thisonstorechanged var dispatchingmixin componentwillmount function thisdispatch function payload dispatcherdispatch payload function register store storedispatcher dispatcher storedispatchid dispatcherregister storeondispatchbind store function unregister store delete storedispatcher dispatcherunregister storedispatchid var store backbonemodelextend checked false false ondispatch function payload payloadactiontype ha consolelog dispatch received checkbox payloadind thischecked payloadind thischecked payloadind thistrigger change emit var store new store var checkboxa reactcreateclass mixins dispatchingmixin onchange function e consolelog dispatching epreventdefault makes checkbox behave weirdly removed things normal thisdispatch actiontype ha ind thispropsind render function var checked thispropsstorechecked thispropsind consolelog checkbox rendering checked checked return thispropsind var checkboxalist reactcreateclass mixins storelisteningmixin onstorechanged function thisforceupdate render function return register store reactrender documentgetelementbyid renderarea notice clicking checkbox make react render according checked state clicking checkbox causes checkbox rerender correctly theory preventdefault happened component dispatching nt affect rendering case component nt rendered incorrectly", "num": "3446", "d": "3/2015"}, {"title": "debug facebook canvas apps", "body": "possible debug canvas iframe apps", "num": "3444", "d": "3/2015"}, {"title": "allow quoteattrname always quote names", "body": "currently trying use react jsx transformer google closure run advanced optimisations problem attributes renamed closure compiler failing run time example transformed compiled preposed solution allow quoteattrname always quote names config param would mean closure compiler would leave config object alone anybody thoughts note compiled option correct compiler renamed react component", "num": "3437", "d": "3/2015"}, {"title": "call perf method setstate callback", "body": "many case suppose perf used like however printed callback called computed sample think behavior little confusing ideas ideas accepts callback callback called computed treated diff reactdefaultperfjs js start function reactdefaultperfinjected reactperfinjectioninjectmeasure reactdefaultperfmeasure stop function reactperfenablemeasure false reactdefaultperfallmeasurements reactdefaultperfallmeasurementslength totaltime performancenow reactdefaultperfstarttime add documentation computed need call perf method next event loop case callback thank", "num": "3436", "d": "3/2015"}, {"title": "document limitations props passed reactcreateelement", "body": "please document props object passed createelement get passed target component surprising method defined prototype object passed createelement available thisprops target component read source saw", "num": "3435", "d": "3/2015"}, {"title": "update cloning reactelement documentation include info reactcloneelement", "body": "documentation cloning reactelement uses reactclonewithprops recommends following method preserving suggest including reactcloneelement instead recommending add object", "num": "3432", "d": "3/2015"}, {"title": "changing propsstyle null object fails react", "body": "hello breaking change upgrading component uses inline styles one state uses inline styles need set style null react worked fine fails update inline styles example component isolates issue jsx reactcreateclass getinitialstate function return isred false togglered function thissetstate isred thisstateisred componentdidmount function setinterval thistogglered render function", "num": "3424", "d": "3/2015"}, {"title": "bug find scry methods testutils react", "body": "tried update react caused several unit tests project fail use react render html server side includes basic html structure like elements unit tests dealing elements failing react worked fine minimal example js use strict var react require react reactaddons require reactaddons testutils reactaddonsaddonstestutils jsdom require jsdom globaldocument jsdomjsdom globalwindow documentdefaultview globalnavigator windownavigator var foo reactcreateclass displayname foo var foo testutilsrenderintodocument reactcreateelement foo null var titleelement testutilsfindrendereddomcomponentwithtag foo title consolelog titleelementgetdomnode textcontent running react correctly logs text content title running react throws typeerror", "num": "3421", "d": "3/2015"}, {"title": "tspan created wrong namespace", "body": "demo howering right point create exactly left one namespace second tspan second group ends xhtml svg console output mouse enter exit real output enter means second tspan namespace uri", "num": "3420", "d": "3/2015"}, {"title": "replacestate throws away functions", "body": "still learning react possible misunderstanding something trying use react immutablejs hit stumbling block upgrading react wiki page immutablejs repository explains use immutable react state provides following example transpiled js use strict var react require react var immutable require immutable var component reactcreateclass getinitialstate function return immutablemap handleclick function thisreplacestate thisstateupdate count function v return v render function return reactrender documentbody works great receive following error clicking div putting breakpoint error inspecting thisstate debugger reveals methods thisstate disappeared expected behavior", "num": "3418", "d": "3/2015"}, {"title": "docs recommendations ismounted alternative", "body": "docs give use case mention available classes nt explicitly call deprecated would useful clarified recommended alternative uses existing code dealing case component gets unmounted timeout setup animation etc component mounted expires", "num": "3417", "d": "3/2015"}, {"title": "render multiple components without wrapping element", "body": "nt found duplicate issue post valid use case like share building framework storytelling based react every single element positioned fixed written custom layout engine need full control everything entry level structure looks something like renders actual items story text images videos etc renders ui elements common every story example controling volume audiovideo items render structure given would result html since everything positioned fixed work ui layer covers everything making unusable eg ca nt click videos currently forced following method html works ugly lose separation nt want component know every ui component sth like virtual component renders children without wrapper element would solve problem could return component know rare usecase rather talented reaching edge cases every framework touch funny writing things sometimes magically makes brain useful stuff found another workaround using ui layer ui components hack nothing", "num": "3415", "d": "3/2015"}, {"title": "pubdate attribute", "body": "hi im trying render time element pubdate boolean attribute react keeps ignoring wrong maybe bug react", "num": "3411", "d": "3/2015"}, {"title": "incorrect update style attribute style prop transitions object null object", "body": "attribute dom node incorrectly updated corresponding props key transitions object null object series updates brief investigation appears happening thispreviousstylecopy cleared attribute removed props third render example react compares value first render value third render looking unsure whether style copy described still needed js var jsdom require jsdom var react require react var app reactcreatefactory reactcreateclass render function var style thispropsuseredtext color red null return reactdomdiv style style test jsdomenv html done function errors window globalwindow window globaldocument windowdocument", "num": "3409", "d": "3/2015"}, {"title": "double rendermisreport instance count", "body": "using seeing incorrect counts number instances elements render prints expect sure problem reporting problem actual rendering result measuring render notice wasted time almost total time listed", "num": "3407", "d": "3/2015"}, {"title": "performance regression dev", "body": "trying debug performance locally seeing really poor performance using fairly small dataset wrote quick benchmark looks like around speed prod slower dev benchmark relevant screenshot", "num": "3406", "d": "3/2015"}, {"title": "parentbased context fails component updates child", "body": "seems component implementing updated render different toplevel child react nt call updated component parentbased context new child effectively get context grandparent instead one nt seem break anything assume react still prioritizes ownerbased context works fine leads contexts differ warning fiddle click show foo see warning console wrapping render output static element warning appear familiar source code worth warning goes away replace line", "num": "3404", "d": "3/2015"}, {"title": "jsx illegal import declaration", "body": "hi try new react got error illegal import declaration right react tried set options harmony true false nt matter code javascript import foo pathtofilejs var view reactcreateclass definition solution thanks", "num": "3401", "d": "3/2015"}, {"title": "components classes", "body": "everybody really wants support classes react components objectcreate", "num": "3400", "d": "3/2015"}, {"title": "incorrect unable reuse markup warning message", "body": "react improved warning message fails reuse server rendered markup shows exact incorrect part shows wrong part text nodes containing htmlescaped chars single quotes double quotes etc somewhere incorrect part example react shows message part ok problematic markup actually renders differently client server located place dom remove text rendered markup react shows correct warning message points real problematic place", "num": "3399", "d": "3/2015"}, {"title": "implement sideways data loading", "body": "firstclass api sideways data loading stateless although potentially memoized data global storenetworkresource potentially using propsstate input js type recordofobservables key string observable class foo observe recordofobservables return mycontent xhr thispropsurl render var mycontent string thisdatamycontent return mycontent observe executes componentwillmountcomponentwillupdate render keyvalue record subscribe observable value allow onnext synchronously invoked subscribe set otherwise leave undefined initial render maybe set null render proceeds usual every time onnext gets invoked schedule new thisdata key effectively triggers forcedupdate component change observe reexecuted componentwillupdate render componentdidupdate props state changed ie update recieveprops setstate observe reexecuted reconciliation point loop new record subscribe new observables unsubscribe previous observables ordering important since allows provider data reference counting cache ie cache data long nobody listens unsubscribed immediately reference count would go zero subscribe data component unmounted automatically unsubscribe active subscriptions new subscription nt immediately call onnext keep using previous value example changes subscribing new url mycontent keep showing content previous url next url fully loaded semantics tag seen confusing lead inconsistencies fairly sane default easier make show spinner would opposite default best practice might immediately send null value nt data cached another alternative observable provide url id content result js class foo observe return user loaduser thispropsuserid render thisdatauserid thispropsuserid ensure never show inconsistent userid username combinations return return hello thisdatausername thispropsuserid use rxjs contract observable since common use allows synchronous execution jhusain proposal common use switch contract instead add lifecycle hooks respond events necessary note concept allows sideways data behave like behaviors like props means nt overload notion state things allows optimizations throwing away data resubscribe later restorable", "num": "3398", "d": "3/2015"}, {"title": "checkandwarnformutatedprops fails", "body": "error make addons reactfundationapp fail cause related property originalprops exist use dom element div p nt know origianl cause solved changing", "num": "3396", "d": "3/2015"}, {"title": "backwardscompatible form attributes", "body": "would good able set htmlstandard action target form element basic testing research nt currently possible users js disabled would allow truly isomorphic approach using libraries like fluxible basically app would use isserver flag render form necessary html attributes server app bootstrapped client isclient flag could render form xhr actions attached html attributes removed realize firstworld users likely js enabled however thirdworld users would benefit able js turned cut bandwidth used since likely every mb counts", "num": "3393", "d": "3/2015"}, {"title": "use parentcontext ownercontext undefined", "body": "hi library author trying migrate call reactwithcontext outside react around toplevel layout component seems special case parent owner guess parent toplevel component deprecated trying replace toplevel wrapper component var childcontextprovider reactcreatefactory reactcreateclass displayname childcontextprovider childcontexttypes function renderwithcontext component domnode context var componentwithcontext childcontextprovider children component context context reactrender componentwithcontext domnode renderwithcontext component node reactcontext work make work use function renderwithcontext component domnode context var componentwithcontext childcontextprovider children component context context reactrender componentwithcontext domnode reactwithcontext reactcontext function renderwithcontext component node reactcontext bind weird following barely providing owner work function renderwithcontext component domnode context reactwithcontext context function var componentwithcontext childcontextprovider children component context context reactrender componentwithcontext domnode renderwithcontext component node reactcontext summary seems little problem parent owner parent provided owner provided context accessible still uses owner app complains lot warning owner undefined vs parent defined parent provided owner provided context accessible app works fine app complains lot warning owner defined vs parent undefined provided app works deprecation warning case ca nt get rid warnings forced keep using deprecated feature best case providing owner context parent context leads keeping code like function renderwithcontext component domnode context var componentwithcontext childcontextprovider children component context context reactrender componentwithcontext domnode reactwithcontext reactcontext function renderwithcontext component node reactcontext bind think maybe owner context never used whole app maybe react could use parent context instead owner context", "num": "3392", "d": "3/2015"}, {"title": "tutorial example tries post json file", "body": "go tutorial great btw got right end realised method tries post form data file understand realworld would sent sort restful service newcomers might wonder working realise could go editing tutorial figured might better coming people wrote", "num": "3391", "d": "3/2015"}, {"title": "componentwillreceiveprops called passing data context", "body": "getting strange issue called rendering nt second argument previous props okay contain one prop passed first argument new props fact react context using tried migrate newer api wrapper problem persisted nt change prop nt pass react context instead props", "num": "3390", "d": "3/2015"}, {"title": "pertstart leads uncaught typeerror read property counts undefined", "body": "wanted see pages performing looked perf tool added perf tool componentwillupdate componentdidupdate main component assume right place put see documentation anywhere use perf within reactjs code gives error uncaught typeerror read property counts undefined code looks like put console log code never gets componentdidupdate method error happening bug use perf incorrectly", "num": "3389", "d": "3/2015"}, {"title": "read property mountcomponent undefined upgrading", "body": "upgrading react get rendering relevant code undefined argument someone suggest cause error", "num": "3388", "d": "3/2015"}, {"title": "testutilsfindrendered seems using deprecated getdomnode", "body": "updated latest things jest tests constantly warning note using jest due node versioning issues sure version referencing old react using provided one nodemodules", "num": "3387", "d": "3/2015"}, {"title": "replace parts string component", "body": "code obviously working would result string mixed objects bad know add react components inside string want highlight parts string react component tough case crack guess", "num": "3386", "d": "3/2015"}, {"title": "jsxorphanedbracketstransformer honor spread operator", "body": "run following example transformer throws exception js var mymessage require reactmymessage var hellomessage reactcreateclass render function var mypropobj thispropsmypropobj moduleexports hellomessage exception jsxorphanedbracketstransformer foojsx throw e error parse error line unexpected token usersakshaypfoojsx throwerror throwunexpected parsexjsidentifier parsexjsattribute parsexjsopeningelement parsexjselement", "num": "3382", "d": "3/2015"}, {"title": "reactaddonscreatefragment javascript key order guaranteed", "body": "createfragment docs says order object keys used determine order rendered children javascript order keys object guarunteed implementations happen maintain order nt mean relied upon note potential future api jsx would definitely way avoid problem way would change api accept cumbersome strictly correct array objects", "num": "3380", "d": "3/2015"}, {"title": "jsx illegal export declaration", "body": "export syntax used work fine jsx harmony flag turned seems throw error sample code jsx export default var hellomessage reactcreateclass render function return hello thispropsname reactrender mountnode", "num": "3379", "d": "3/2015"}, {"title": "jsxtransformer incorrectly processes comment lines trailing space", "body": "run following code jsxtransformer outputs following obviously completely broken remove extra space end comment line everything okay", "num": "3378", "d": "3/2015"}, {"title": "setting removing focus empty input field placeholder triggers change ie", "body": "see example code setting removing focus empty field text event triggered ie tested older versions trigger browsers current workaround test last passed input returned act different would nice react would send changeevent first place", "num": "3377", "d": "3/2015"}, {"title": "update getting started fiddles", "body": "js fiddles gettingstarted using old syntax must js class hello extends reactcomponent render return hello thispropsname reactrender documentgetelementbyid container nonjsx version well", "num": "3375", "d": "3/2015"}, {"title": "unexpected reserved word without", "body": "works fine fails former one later one using jsx missing something", "num": "3374", "d": "3/2015"}, {"title": "react render script tags", "body": "prolem render script tag example click link page new render page b inluce demojs file demojs consolelog hello world open google devtools nt see happen erros", "num": "3373", "d": "3/2015"}, {"title": "shallowequal buggy", "body": "per syranide comments shallowequal still couple issues instance per spicyj probably shortcircuit either input type object values equal", "num": "3369", "d": "3/2015"}, {"title": "children void elements throw instead warn", "body": "released react earlier one cares absolutely nt anyway mostly reminder feel free take", "num": "3367", "d": "3/2015"}, {"title": "unable render component name string", "body": "seem unable render components using name strings wanted able dynamically generate component name strings existing corresponding components rendered fiddle instead referencing existing component rendering react rendering custom element tag lower case basic code failing main component rendered var parent reactcreateclass dynamic subcomponent render var child reactcreateclass reactrender documentbody", "num": "3365", "d": "3/2015"}, {"title": "onsubmit nt work dangerouslysetinnerhtml onclick", "body": "following jsfiddle demonstrates issue clicking submit first form alerts however second form alerts submit bubbled form embedded via code posterity var formtest reactcreateclass onsubmit function e alert submit epreventdefault onclick function e alert click render function return reactrender documentbody", "num": "3359", "d": "3/2015"}, {"title": "document way update defaultvalue", "body": "seems lot misunderstanding react community works often expected element changed reflected ui case since set component first rendered people complain usually suggested use instead often seen unpractical form many input fields since fields need listener editable actually true put listener wrapping element generates lot warnings feel none solutions practical easy solution set attribute wrapping element form contains elements fields changed along key change reflected ui think good solution common ui case list entities want able edit click one form shows entity value populated click another element want form updated entity data perhaps could documented order avoid future confusion even better solution", "num": "3357", "d": "3/2015"}, {"title": "ship", "body": "x make sure examples work zpao x docs x x zpao x sebmarkbage x class use x notes component instance methods nt work classes zpao x note elementtype documentation mentioned change blog skipping x update refs documentation callback style actually recommending yet jsfb x update setstate docs function style jsfb x spicyj x deprecation x shallow testing fbme updates zpao x x x x x x x ship blog npm bower etc zpao update reacttutorial zpao x ship jsx upgrade tool zpao x update reactsource gem zpao x update reactrails gem zpao x ship react art zpao x update readme etc master x update fiddles", "num": "3352", "d": "3/2015"}, {"title": "nested arrays without key nt warn anymore", "body": "used warn right maybe", "num": "3348", "d": "3/2015"}, {"title": "jsx spread attributes nt work", "body": "attempted use jsx spread attributes avail javascript render const classnames attrs thisprops nt work gives following error", "num": "3346", "d": "3/2015"}, {"title": "invoking rendertostaticmarkup render causes refs break", "body": "demonstrated open error console see js var bug reactcreateclass render function var html reactrendertostaticmarkup reactdomimg return reactdomdiv ref ref html bug reactcreatefactory bug reactrender bug documentbody", "num": "3344", "d": "3/2015"}, {"title": "state object property change triggered", "body": "hi might stupid question could nt find good solution array objects state list component every object mapped item component item mouse trigger something parent list updating rest state objects new property expect rest item components updated happening force update react issue something wrong maybe thanks", "num": "3342", "d": "3/2015"}, {"title": "context updated component mounted reactrender", "body": "tough explain created fiddle demonstrate layerportalwhatever calling pattern renders children component new tree body via would expect context also passed taken special care make sure child passed created correct owner works fine context passed never updated point inspect child element passed correct never updated instance sure perhaps wrong expectation illustration updated simpler example", "num": "3340", "d": "3/2015"}, {"title": "documentation issue component specs displayname references nonexistent source information", "body": "last sentence displayname string used debugging messages jsx sets value automatically see jsx depth link seemingly nonexistent anchor jsx depth page would good link somewhere actually documenting autosetting displayname sure even still exists nt", "num": "3338", "d": "3/2015"}, {"title": "optimize procedure render component body", "body": "create modal create element manually remove element longer used updated mar add timeout looks better moment coffee code mostly done react require reactaddons util require utilutil time require utiltime transition reactcreatefactory require moduletransition reactdom moduleexports needs implement renderlayer componentwillunmount return unless target unrenderlayer documentbodyremovechild target componentdidupdate renderlayer renderlayer target renderchildren return propsshow target return show found target target documentcreateelement div documentbodyappendchild target tree transition transitionname fade entertimeout leavetimeout reactrender tree target renderchildren tree transition transitionname fade entertimeout leavetimeout propsshow renderlayer reactrender tree target unrenderlayer reactunmountcomponentatnode target bad part operations optimized really slow plenty components ready show modals react components hierarchy makes difficult people create menus modals appended hand add feature react case slow", "num": "3335", "d": "3/2015"}, {"title": "testutilsisdomcomponent uses deprecated getdomnode", "body": "testutilsisdomcomponent uses deprecated elementgetdomnode resulting console warnings running tests case running unit tests results warnings drowning output tests", "num": "3329", "d": "3/2015"}, {"title": "node proptype validation hits error null values", "body": "js var foo reactcreateclass proptypes child reactproptypesnode render function return parent thispropschild var demo reactcreateclass render function return reactrender documentbody warning failed proptype fragment null check render method warning failed proptype read property reactfragment null check render method chrome cc kassens", "num": "3328", "d": "3/2015"}, {"title": "input using linkedstatemixin autofocus sets cursor beginning input", "body": "hi using initial value coming problem use cursor shows front field rather end existing text component looks like javascript var controlledinput reactcreateclass mixins reactaddonslinkedstatemixin render function return getinitialstate function return message thispropsmessage componentwillreceiveprops function nextprops nextpropsmessage thispropsmessage thissetstate message nextpropsmessage", "num": "3325", "d": "3/2015"}, {"title": "encapsulate styles", "body": "hi converting big project written polymer react biggest problem face lack encapsulated styling would like encapsulate sass files encapsulated styles among components entire react web site documentation almost mentioning styles furthermore chrome devtools react plugin component properties except style like devtools regular dom really like react going approach problem", "num": "3324", "d": "3/2015"}, {"title": "react developer tools add perf buttons", "body": "ca nt find repo react developer tools assume put open source repo somewhere probably put together pull request would really nice addon buttons would call available", "num": "3322", "d": "3/2015"}, {"title": "component longer runs installed node module", "body": "reusable component decided put github weird thing although exact file works flawlessly part original project javascript import chart chart render return working pull node package javascript import chart reactchartisttooltip render return error given render sure understand intended behavior", "num": "3320", "d": "3/2015"}, {"title": "error render dom", "body": "hi react team build sample app hibird reactjs cordova use thrid party libary set static data error app run browser android devices set data via ajax call error one item see browser instead nt touch devices think render data via ajax error", "num": "3318", "d": "3/2015"}, {"title": "calling setstate without getinitialstate throws using purerendermixin", "body": "without causes line throw fix make shallowequal bail either argument falsey object want safe", "num": "3316", "d": "3/2015"}, {"title": "detect compatibility mode", "body": "claim support users testing code locally might get thrown compatibility mode default cause webapp blow confused supported browser background check thread users get compatibility mode adding tag since current failure cryptic easy detect compatibility mode probably add warning give hint user even though using actually compatibility mode effectively add meta tag use one various workarounds", "num": "3315", "d": "3/2015"}, {"title": "proposal thissubscribe auto disposing componentwillunmount", "body": "find common enough part core react either mixin method component lot cases subscribe unsubscribe pattern call discussion original started discussion cc jesseskinner", "num": "3314", "d": "3/2015"}, {"title": "typeerror parent component updated uncaught exception child component componentwillmount", "body": "expected result rendered text actual result jsfiddle code js var parent reactcreateclass getinitialstate function return error false componentwillmount function var self windowonerror used brevity windowonerror function selfismounted selfsetstate error true render function thisstateerror return error else return var child reactcreateclass componentwillmount function throw new error test error render function return child reactrender documentbody", "num": "3313", "d": "3/2015"}, {"title": "question optimizing reconciliation lists onetwo children change", "body": "list many children gt change occurs scenario setstate list rerenders list children optimized children keyed properly also shouldcomponentupdate implemented quick change list occurs update children know exactly ones even may hundredsthousands children yet still takes noticeable amount time since react reconciliation loops children checks updated special approach take may unaware", "num": "3309", "d": "3/2015"}, {"title": "optional callback setstate called", "body": "jsfiddle call since passed callback never called see console logs prints componentwillmount called", "num": "3308", "d": "3/2015"}, {"title": "add first class support immutablejs records maybe maps setstate", "body": "seems like common use case would like deprecate quite sure would work records mixins since fixed type cc leebyron", "num": "3303", "d": "3/2015"}, {"title": "mozmacosxfontsmoothing rendered incorrectly", "body": "firefox equivalent react serialization style prop incorrect see fiddle firefox initial state supposed enable font smoothing via innerhtml breaks subsequent updates use dom api work", "num": "3302", "d": "3/2015"}, {"title": "invariant violation danger expected markup render x nodes rendered", "body": "environment windows react browserify examples running chrome example page shows test get error invariant violation danger expected markup render nodes rendered var react require react var commentbox reactcreateclass getinitialstate function return tasks componentdidmount function thissetstate tasks name val name val name val render function var tasknodes thisstatetasksmap function task return taskname reactrender documentbody example flowing code work var react require react var commentbox reactcreateclass getinitialstate function return tasks name val name val name val componentdidmount function thissetstate tasks name val name val name val render function var tasknodes thisstatetasksmap function task return taskname reactrender documentbody exmaple following code raise error invariant violation danger expected markup render nodes rendered var react require react var commentbox reactcreateclass getinitialstate function return tasks name val name val name val componentdidmount function setstate work thissetstate tasks name val name val name val render function var tasknodes thisstatetasksmap function task return taskname reactrender documentbody", "num": "3301", "d": "3/2015"}, {"title": "rendertostring generating different id checksums call defect", "body": "trying figure isomorphic rendering nt matching thus began trying simply code realized even successive rendering single div ends different checksums id anyone help understand javascript var react require react var elem reactcreateelement div null consolelog reactrendertostring elem consolelog reactrendertostring elem var assert require assert assert reactrendertostring elem reactrendertostring elem fails expected checksums probably event id nt know determines appear defect", "num": "3300", "d": "3/2015"}, {"title": "react fails unmount component within event handler", "body": "hi trying unmount whole app got error uncaught typeerror read property firstchild undefined think big deal according see debugger seems trying get dispatched guess target unmounted note use case looks like using synchronous implementation get error adding settimeout unmount code got error could reproduce jsfiddle guess probably nt really know batching work react", "num": "3298", "d": "3/2015"}, {"title": "get old props state inside shouldcomponentupdate", "body": "using along syntax get old props state inside shouldcomponentupdate javascript shouldcomponentupdate newprops newstate consolelog jsonstringify thisprops jsonstringify newprops consolelog jsonstringify thisstate jsonstringify newstate render consolelog render console log render async actions fetch user name via standard action dispatcher store flux structure name kay lee name kay lee render ideas", "num": "3297", "d": "3/2015"}, {"title": "autofocusautofocus nt render rendertostring", "body": "rendertostaticmarkup", "num": "3296", "d": "3/2015"}, {"title": "memory leak", "body": "sorry bug code hey performance comparisons polymerjs basically requesting json file colors shuffling colors setting new colors array state concating replacing previous array working fast nice looking chorme task manager looks like memory leak looks like task manager code html polymer vs react showdown ul liststyletype none function shuffle array var currentindex arraylength temporaryvalue randomindex remain elements shuffle currentindex pick remaining element randomindex mathfloor mathrandom currentindex currentindex swap current element temporaryvalue array currentindex array currentindex array randomindex array randomindex temporaryvalue return array var squaretest reactcreateclass loadcommentfromserver function thisstatecounter ajax url thispropsurl datatype json success function data var shuffled shuffle data thissetstate data shuffled bind error function xhr status err consoleerror thispropsurl status errtostring bind componentdidmount function setinterval thisloadcommentfromserver thispropspollinterval getinitialstate function return data counter render function var squares thisstatedatamap function square return li style backgroundcolor squarecolor gt squarecolor return lt div gt lt div gt cycles thisstatecounter lt div gt lt div gt count thisstatedatalength lt div gt lt ul gt squares lt ul gt lt div gt reactrender lt squaretest url colorsjson pollinterval gt documentgetelementbyid squareplaceholder", "num": "3292", "d": "3/2015"}, {"title": "jsx complier tool nt line numbers code field", "body": "tool transforming jsx js supplied code contains syntax errors error displays line number since code field nt line numbers hard identify actual line", "num": "3291", "d": "3/2015"}, {"title": "allow statics accessed instance", "body": "noticed way access class statics one instances trying find method inside instance method contain method exists something think could bit useful behavior exists java similar languages description usecase using react dnd trying slightly generalize duplicate code using librarymixin need define static method calls method passes constant value would like value defined class adding following bit code however method need access constant point defined null object", "num": "3289", "d": "2/2015"}, {"title": "reactproptypesnode nt understand opaque reactfragment type", "body": "causes reactfragment opaque type accessing properties deprecated warning", "num": "3286", "d": "2/2015"}, {"title": "could make less painful inline reactelement objects", "body": "hi spicyj said open issue disclaimer trying sort sketchy things know nt supported think would nice writing library want support react output optionally right trying inline reactelements instead almost completely functional except validation react dev mode right literals nt key assumed validators react dev work around without duplicating props write wrapper function create element little unideal slower adds unnecessary keys nondev mode would reasonable short circuit checks happen store actually present reactelement happy submit pull request rush react though curious thoughts thanks aria", "num": "3285", "d": "2/2015"}, {"title": "calling super method reactcomponent children", "body": "inheritance app shown using babeljs transpiler calling super method generates exception js class component extends reactcomponent class mycomponent extend component componentdidupdate supercomponentdidupdate error could call undefined smth think easiest solution add empty methods reactcomponent class something wrong", "num": "3280", "d": "2/2015"}, {"title": "componentdidreceiveprops please", "body": "would like humbly request componentdidreceiveprops hook often times would like something componentwillmount componentwillreceiveprops nt set yet forced pass props around instead reading directly new hook javascript componentwillmount thissetup thispropsid componentwillreceiveprops next thissetup nextid setup id useractionsload id new hook javascript componentwillmount thissetup componentdidreceiveprops thissetup setup useractionsload thispropsid simple example may seem like small thing often times passing props runs deep instead conveniently referencing thisprops one forced plumb props throughout component please consider adding hook leverage code leveraged componentwillmount without forcing plumb props throughout component", "num": "3279", "d": "2/2015"}, {"title": "reference domscry api", "body": "reacttestutils contains todo referencing api work incorporate react projects find left wanting complete dom traversalquery api get references components writing tests documentation included entire domscry api documentation implement submit pull request", "num": "3278", "d": "2/2015"}, {"title": "add gruntfilejs mainjs lint", "body": "currently gruntfile formatstyle differs lot code src verified running lint gruntfile nt gruntfile added well checked prepared fix errors concerning making pr gruntfile added lint grunt task well", "num": "3272", "d": "2/2015"}, {"title": "lint task fails master", "body": "caused pull request made fail travis well even though none errors anything changed see checkout master run grunt lint", "num": "3270", "d": "2/2015"}, {"title": "internet explorer compatibility", "body": "please see description problem gladly post example use om clojurescript nt think would legible tutorial simple enough make easy reproduce problem", "num": "3268", "d": "2/2015"}, {"title": "mutating state inside shouldcomponentupdate", "body": "antipattern mutate call inside listen changes order change something", "num": "3262", "d": "2/2015"}, {"title": "hook componentwillmount render even first render", "body": "would feasible provide function allows developer hook component lifecycle componentwillmount render would need always possible even initial render maybe something like rendervalidatedcomponentwithoutownerorcontext function var inst thisinstance instwillrender check hook defined instwillrender hook called var renderedcomponent instrender dev allow automocks proceed returning null typeof renderedcomponent undefined amp amp instrenderismockfunction probably bad practice consider warning deprecating convenience renderedcomponent null return renderedcomponent right write mixins hook componentwillmount would called equivalent function component leaves opportunity act props state whatever component developer point render trying insert various tracking properties automated testing validation debugging switched prop allowing us also validate automate ui testing real pain ask developers either add code cut paste coding every time write amend components ask call function mixin commence render even simple render functions highly error prone tend forget much easier add easy statically verify added initial render course hook via use componentwillupdate bypassed initial render phase nt work consistent way able hook component mounted developer codes renders able put something like mixin would make much simpler less time consuming general importantly significantly less error prone", "num": "3261", "d": "2/2015"}, {"title": "custom property object flattened pushed attributes props", "body": "small mixin creates proptype follows getall function returns object like effectively passing back custom collection objects various values used property thisotherdata holds information reference components using standard dot notation thisotherdatavariablestimeout gets value issue reason getting flattened thisattributes thisattributes objects sign otherdata object could logically understooed adding custom property thisprops would go guess questions two fold put thisattributes first place thisprops flattened hierarchy instead adding otherdata object", "num": "3260", "d": "2/2015"}, {"title": "nachrichten", "body": "", "num": "3259", "d": "2/2015"}, {"title": "refs passed along syntheticmouseevent reactid", "body": "sure way best approach following issue dot consider react class whiteboard use dot whiteboard know dot selected click circle syntheticmouseevent returned etarget refers reference dot javascript var whiteboard reactcreateclass select function e feels wrong seems dirty feels better feels like better solution sample jsbin approach javascript var dot reactcreateclass getinitialstate function return selected false select function e thispropsonselect e render function return best solution solutions better one another would make sense pass ref along react id event callback", "num": "3258", "d": "2/2015"}, {"title": "multiple react instances per dom using amd example", "body": "using amd component might use react dependency poses problem another instance react already manipulated dom wrong events get fired id collisions occur invariant violation reactmount two valid unequal nodes jsbin internet points google group post", "num": "3252", "d": "2/2015"}, {"title": "triggering events real dom nodes nt trigger synthetic events", "body": "twitter using phantomjs testing browser interaction often times seems happen values get changed directly dom elements change event triggered element interacting reactjs elements phantomjs jquery nt work interactive elements like course easiest solution take real elements mounted attach event listeners like nt pleasant experience interest mirroring events real nodes synthetic events situation normal like able interact application phantomjs seems quite blocker interacting input select elements jsbin example", "num": "3249", "d": "2/2015"}, {"title": "autofocus warn like attribute", "body": "user writes instead htmlfor warning shown suppose autofocus instead autofocus warn", "num": "3248", "d": "2/2015"}, {"title": "animations nt work properly one switches browser tabs browsers", "body": "fiddle demonstrating issue stay fiddle everything works perfectly fine leave another browser tab seconds come back see animation stops completely talking people reactjs irc channel believe issue something like following whatever picture gets added away receive correct css classes almost like react idea added anyways guess seems incredibly problematic believe reactjs bug", "num": "3245", "d": "2/2015"}, {"title": "get object tree presentation components tree initial render", "body": "one way found apply mixin every component takes treat path construct object includes ids react components elements well", "num": "3244", "d": "2/2015"}, {"title": "rework msg danger expected markup render nodes rendered invariant", "body": "hi invariant message give great insight happening syranide helped find might related malformed html content used actually case use autolinker library transform text links html links bug produces malformed html content see bug actually broke whole ui user unperformant workaround parse string passing react something like seems quite common frontend apps code transform shorten dynamic html content bug libraries seriously mess react case called markuplist size call elements returned one elements malformed parsing browser produced dom nodes calling nt really know maybe better documented used wellformed html even browser fix markup maybe invariant message could helpful user case telling user could due malformed html maybe case malformed html could handled react nt really know could done without performance penalty tried parse single markup individually inputoutput number following code fails later", "num": "3242", "d": "2/2015"}, {"title": "wrong ordering table rows adding new", "body": "gents simple single column table rows coming simple list last row table link add another row default content callback list component expected last add new row static row remains last new row added prior practice new row added static row gist using divs instead table works fine tried using keys key z value assigned static row rest lexically lower values success sounds like bug", "num": "3241", "d": "2/2015"}, {"title": "add function map", "body": "hi search add function map without latter triggered page generation code explain therefore launch page function thisdeleteteam triggered whereas want triggered click button param members array object datas correctly display problem functions triggered datas loaded thanks regards edit tried problem edit find xd usefull someone problem", "num": "3238", "d": "2/2015"}, {"title": "append classname replace style top level dom object added component", "body": "may filed already quick search could nt find please close case react component reusability view highly limited without strong ties css currently passing classname component eg nothing unless explicitly consumed implementation requires implementation read immutable prop possibly use react css addon append class top level dom explicitly set result creates lot code duplication components need flexibility used multiple contexts understanding internals may bit lacking believe feature would mesh well jsx since already protected keywords certainly let know missing something obvious would bad feature", "num": "3237", "d": "2/2015"}, {"title": "deprecate replacestate", "body": "use cases replacestate seems fit one patterns let state temporarily null data fetched reset null using replacestate later point use immutablejs record store state way use cursors convenience methods like update batching using immutablejs map store data use state map ie adding new keys dynamically use cases break need add another state value makes refactoring pain thought would nt need also means mixins ca nt add state particularly found pattern common one could potentially add native support would expand record type one contains fields required mixins would like add warning expand state fields original getinitialstate reason vms optimize around records keep type signature changing type signature dynamically introduce performance penalties ca nt add warning patterns used", "num": "3236", "d": "2/2015"}, {"title": "refs work", "body": "spinoff discussion pretty sure need change current way refs work see however new ref callbacks also ideal relies imperative code suffers timing issues like imperative lifecycles also convenient without arrow functions even arrow functions might suffer performance issues things refs tries solve imperative access apis nt declarative counterparts yet eg dom layout fastpath tree update deeply bypass reconciliation perfoptimization get current state child nt want control without duplicating state might possibly diverge send signalspulses downwards", "num": "3234", "d": "2/2015"}, {"title": "could remove ternary operators released npm package", "body": "released npm package react directory structure like react dist lib accumulateinfojs autofocusmixinjs beforeinputeventpluginjs callbackqueuejs nodemodules try opening files accumulateinfojs callbackqueuejs find syntax using ternary operators production processenvnodeenv invariant ternary operators react working could remove ternary operators released npm package", "num": "3231", "d": "2/2015"}, {"title": "eventdata passed simulate methods deep merge", "body": "using change event ran simple extremely agitating problem supply object one properties object completely replace existing one key quick example correctly fire event completely overwrite case event handler using one needed supply test ideally supplying deep merge instead replacing things outright", "num": "3229", "d": "2/2015"}, {"title": "optimizing compiler inline reactelements", "body": "starting react able inline reactelements javascript bar objects improves performance existing call inlining result defaultprops component might default props need resolved transpiler runtime exception ref string unfortunately still nt figured final semantics refs current semantics relies getting current react owner therefore apply optimization ref attribute might string nonjsx work reactcreateelement functions created reactcreatefactory first argument inline object literal otherwise safe since object might reused mutated production mode optimization applied production mode currently fires various warnings proptypes key warnings flag set true optimization would skip warnings would bad development mode difficult part figuring way work everyone environment everyone ability use different transpilers development production mode one solution might use ternary rely minifiers strip extra code pain source maps though another solution would different flags transpilers make sure people actually use correctly otherwise problems due firing warnings think react slow screwed config", "num": "3228", "d": "2/2015"}, {"title": "optimizing compiler tagging reactelements", "body": "make optimized reconciliation tagging reactelements hidden class props example guaranteed always three props javascript c could tag every element properties unique id could use hidden class generate optimized diffing algorithm instead iterating properties presumably would need since diff native components bonus points determine properties constant perhaps using property descriptor object would use heuristic inside react determine create optimized differ example updates component like jit would javascript oldelementt newelementt numberofupdates else numberofupdates numberofupdates optimizeddiffer generateoptimizeddiffer newelement optimizeddiffer oldelement newelement else numberofupdates gt optimizeddiffer oldelement newelement else manualdiffing oldelement newelement", "num": "3227", "d": "2/2015"}, {"title": "optimizing compiler reuse constant value types like reactelement", "body": "starting able start treating reactelements props objects value types ie instance conceptually equivalent values allow us reuse reactelement whose inputs deeply immutable effectively constant take function example optimized moving jsx function body time called instance returned allow us reuse objects react automatically bail reconciliation constant components without manual reference equality objects javascript reference equality meaning optimization actually change behavior code calls render uses object equality uses reactelement key map optimization break use case nt rely change semantic contract reactelements difficult enforce hopefully future version javascript notion value equality custom objects enforced constant simplest assumption entire expression including props children literal value types strings booleans null undefined jsx result constant variable used expression must first ensure ever mutated since timing affect behavior safe move constant higher closure variable never mutated move scope shared variables objects constant arbitrary objects considered constant transpiler never move reactelement scope parameters mutable object react silently ignore updates change behavior object provably deeply immutable effectively immutable never mutated transpiler may move scope object created received javascript function render var style objectfreeze proto null width return safe reuse might expect render propsstyle nottobe render propsstyle however function createcomponent width var style objectfreeze proto null width width return function render return safe move one level due fact arbitrary objects referential identity javascript however semantics immutable object expected value equality might ok treat value types example data structure created immutablejs may treated value type deeply immutable exception ref string unfortunately one exception prop might potentially might string value never safe reuse element due fact capture react owner time creation unfortunate artifact looking various options changing refs semantics fix nonjsx work jsx reactcreateelement functions created reactcreatefactory example safe assume function call generates constant reactelement javascript var foo reactcreatefactory fooclass function render return foo bar therefore safe reuse advanced optimizations also imagine even clever optimizations optimize perinstance elements memoizing instance allows autobound methods treated effectively constant track purefunctions even treat calculated values constants input pure function constant static analysis tools like flow makes possible detect even elements constant", "num": "3226", "d": "2/2015"}, {"title": "jsxtransformer breaks creating source maps defineproperty available", "body": "jsxtransformer called option javascript environment transformation dies object nt support property method defineproperty exception degrade gracefully simply turn source maps available pass rather true everything works fine seems like code needs gated environment check appear logic jsxtransformer try detect seems like check either incomplete code also needs wrapped check also see", "num": "3225", "d": "2/2015"}, {"title": "expose refs dom components direct handles actual dom node", "body": "mental model polyfill layer support browser would support support future ideas propagate standards fact currently implemented wrapper unobservable implementation detail perhaps nt implemented wrapper upgrade path would need monkey patch existing legacy methods onto upgrade path would work immediately warn used replaced imperative layer simply multiple calls replaced take either arbitrary component dom node directly use something unsure cases simply get rid call together use dom ref directly", "num": "3223", "d": "2/2015"}, {"title": "rendering array produces warning message", "body": "upgraded discovered rendering array child components without providing keys react produced warning thought odd reactjs would tell go look undefined looked source sure going string line nt make sense simple example top stack rummaged get far", "num": "3222", "d": "2/2015"}, {"title": "umbrella", "body": "new cool features x pure functions stateless components x allow arbitrary attributes dashed tags ie custom elements jimfb see x fix error utils guard see reactcompositecomponenterrortest mostly affects fb internals ties better error handling general sebmarkbage x add trusted key reactelements leebyron sebmarkbage package changes x build separate packages react isomorphic dom server rendering still need handle zpao x deprecate dom renderer react package replace separate package warnings used zpao x ship react addons separate packages remove react repo possibly kill already deprecated ones like classset build warnings existing package used zpao x endoflife reacttools clean legacy reactnative react repo zpao x figure reactnative needs react amasad sebmarkbage ship indexiosjs react reactnative components immediately start using react package sebmarkbage decouple dependencies react dom react isomorphic except react dom still needs set react isomorphic sebmarkbage see comment x browser build reactdom zpao kill deprecations x props dev remove old props mutation warnings jimfb see x make return toarray objects spicyj x kill spicyj x kill jimfb see x clean remaining ownercontext stuff jimfb new deprecations x deprecate setpropsreplaceprops replace external reactrenderer package nt forget include replaceprops renderer api ship package jimfb see x deprecate getdomnode replaced reactfinddomnode spicyj x expose dom component refs actual dom nodes spicyj x warnings using dom component ref getdomnode props spicyj x clean remainders context jimfb probably deprecate replacestate needs immutablejs solution sebmarkbage deprecate ismounted needs promise solution sebmarkbage detect event target available eg shadow dom jimfb see disabled", "num": "3220", "d": "2/2015"}, {"title": "csstransitiongroup behaves oddly using child component", "body": "ran bug similar happens calling child component nested within set fiddle reproduces issue reproduce firefox chrome", "num": "3219", "d": "2/2015"}, {"title": "warn react dom modified notreact", "body": "discussed complementary improvement turn mutation observer dev warn someone react modifies dom andor dom nodes appear without datareactid thus indicating extension script fancy magic", "num": "3218", "d": "2/2015"}, {"title": "start building native", "body": "able build native mobile apps using react", "num": "3216", "d": "2/2015"}, {"title": "typeerror e undefined reactwithaddonsjs", "body": "installed reactjs via bower downloads latest version firefox get error typeerror e undefined elimiter autocompactresolver l configuration eextend h flconfig nt happen", "num": "3214", "d": "2/2015"}, {"title": "avoid global window", "body": "currently react relies global works browser works environments one sets global however relying globals prevents multiple independent react engines running together testing example benefits strongly isolated environments would nice one could run separate tests without manually cleaning every time another use case programatic behaviour inspection interesting load multiple windows compare behavior one library different calls react involved however impossible avoiding relying globals added backwardscompatible fashion global keep existing behavior nt instead exposing api expose factory taking returning api example see jquery decision avoid globals means refactoring existing code base pass explicitly everywhere maintaining attitude future opinion feature", "num": "3213", "d": "2/2015"}, {"title": "nested render trees", "body": "way implement portals nested reactrender componentdidmountupdate also reactart switch render mode middle tree comes problems ca nt reason depth component implement mountorder ca nt reason position tree debugging purposes reactdevtools ca nt pass context next subtree firstclass concept nested render trees optionally use different render mode", "num": "3210", "d": "2/2015"}, {"title": "warn rendering", "body": "gaearon come warn rendering directly documentbody list children often manipulated third party scripts browser extensions leading subtle reconciliation issues", "num": "3207", "d": "2/2015"}, {"title": "changing array state update component", "body": "coffee getinitialstate selected renderselect celldata celldatakey rowdata index onrowsingleclick target index selected stateselectedslice selected index selected index setstate selected selected go alter selected state certain row negate checkbox updated bug something wrong", "num": "3204", "d": "2/2015"}, {"title": "safari slow performance rendering large amount text", "body": "action chrome safari load click comment icon article lots comments wait load chrome render performance well collapsing thread clicking comment near instant safari freeze browser seconds code comments render even without dangerouslysetinnerhtml see really slow performance safari remove comment text altogether speeds dramatically source slowness put together smaller demo", "num": "3203", "d": "2/2015"}, {"title": "testutilsrenderintodocument failing components containing", "body": "get following stack trace attempting render component containing test set minimal test case inapp everything renders fine using things go little crazy", "num": "3202", "d": "2/2015"}, {"title": "handle nonfactory component function errors better", "body": "js var component reactcreateclass reactrender component typeerror undefined uncaught typeerror read property reactautobindmap undefined nice warning warning something calling react component directly use factory jsx instead see", "num": "3200", "d": "2/2015"}, {"title": "drag events fire svg elements", "body": "react svg elements would like drag around drag events seem working although work html elements click events working fine svg elements however following example print syntheticdragevent console try drag parent fire event either even modify perhaps unrelated issue attempt put element react render outside anyway renders html test test test draggable however", "num": "3192", "d": "2/2015"}, {"title": "deprecation warnings cause errors", "body": "version occurs sure earlier versions bug example code cause errors installed regardless call deprecated methods due supporting shimming value used property descriptors workaround set disabled debug messages hence deprecation warnings", "num": "3188", "d": "2/2015"}, {"title": "double click single click event fired shoudl nt", "body": "code event handlers called div element double clicked call single click event handler chance fixed thanks", "num": "3185", "d": "2/2015"}, {"title": "component", "body": "", "num": "3181", "d": "2/2015"}, {"title": "looking good way test react", "body": "hey currently looking different solutions testing react exploring anyone good suggestions repos read quite articles everyone seems different way wondering good solid way compatible newer releases react thanks", "num": "3178", "d": "2/2015"}, {"title": "attach displayname class methods", "body": "including ones autobound like lifecycles would help debugging stack traces better also thought added point", "num": "3173", "d": "2/2015"}, {"title": "underscore property prefixing performed template string expansion", "body": "underscore property prefixing facebookreact performed expanding template strings leads incorrect results combining two becomes", "num": "3172", "d": "2/2015"}, {"title": "warning proptypesobjectisrequired prop", "body": "type prop empty object still type object practically still warns nt think supposed happen stops warning anymore pretty sure warn", "num": "3163", "d": "2/2015"}, {"title": "changelog beta releases", "body": "actually conly information could find version blog post could add release notes changelog development releases", "num": "3155", "d": "2/2015"}, {"title": "use https embeds github pages blog posts prevent blocks due mixed content", "body": "trying read page none code snippets show tracked http iframe embeds using https github pages mixed content completely blocked browsers days https embeds pages served http works fine though jsfiddle supports https embeds see reason prefer embeds pages served embeds changed use also help guidelines maybe enforced test case ps read page properly without turn https everywhere extension prefer", "num": "3153", "d": "2/2015"}, {"title": "uncontrolled form jest simulatechange", "body": "testing uncontrolled form input via jest confirm value null code sample docs say supply value sets null uncontrolled component uncontrolled value rendered element reflect user input uncontrolled form works per docs browser jest handle change use valuelink test pass think fails onchange handler set reactdominputjs thinking throw warning change handler exists code test form input test javascript update value function var instance testutilsrenderintodocument var el testutilsfindrendereddomcomponentwithclass instance inputemail var node elgetdomnode result", "num": "3151", "d": "2/2015"}, {"title": "react updating dom", "body": "seems react doesnt updates dom approach simply update img src every seconds set breakpoint see always latest correct url reactdevtools component gets updated every seconds new url look dom tab see still hints im clueless might wrong using see demo jsx var react require react var randomimage reactcreateclass moduleexports randomimage", "num": "3149", "d": "2/2015"}, {"title": "createnodesfrommarkup renders global document", "body": "apparently support rendering iframes petehunt always render new markup global document move rendered elements iframe document afterwards jsdom throws try browsers nt seem mind however apart perhaps nice various reasons seems affect performance significantly drops performance ff drops rendering global document moving rather rendering directly iframe document easily solved everywhere except renders different documents batched well cc spicyj zpao", "num": "3146", "d": "2/2015"}, {"title": "test utils clicking submit button trigger form onsubmit", "body": "see calling click function trigger button onclick form submit action undocumented trigger form bug onsubmit implementation react test utils", "num": "3141", "d": "2/2015"}, {"title": "reacttools npm sources always returns sourcejs", "body": "hey guys know lot issues try make quick clear issue generate sourcemap using node module calling always output property sourcemap generated way specify actual source file thought perhaps option would allow change unfortunately matter set property always returns array small snippet code quickly verify js var jsx require reacttools assert require assert var output jsxtransformwithdetails sourcemap true sourcefilename pathtosourcejs var assertequal outputsourcemapsourceslength var assertequal outputsourcemapsources pathtosourcejs consolelog sources contains one entry consolelog sources entry correct", "num": "3140", "d": "2/2015"}, {"title": "feature request allow classname take array", "body": "often use components internal well optional passed prop way implementing either local array construct serialize prop b using b slightly less verbose harder use modifier classes well eg suggesting allowing classname string array array react internals would compact serialize classname array classname string good idea could make attempt pr", "num": "3138", "d": "2/2015"}, {"title": "reactcsstransitiongroup child element blinking", "body": "hi getting initial blink using reactcsstransitiongroup added element get enter class applied attached dom even gets immediately see reactcsstransitiongroupchildcomponentwillenter queued dispatched action adds element dom causes behavior know issue would nt make sense element added enter class moment inserted thanks", "num": "3137", "d": "2/2015"}, {"title": "isnodejs checks", "body": "hi asapjs module checking whether environment isnodejs fake environment browserify processnexttick used check causing uncaught exceptions stop rendering", "num": "3136", "d": "2/2015"}, {"title": "abnormal workflow prevents onchange fired ie", "body": "included test link alert happen change select item essentially letting back end rendered dom drive converted react components nt freedom render back following route works fine always except events nt fired think may something fact calling component instance instead string case either reject component instance events trigger properly", "num": "3131", "d": "2/2015"}, {"title": "regression refs siblings nt resolved previous siblings componentdidmount", "body": "sure fix probably needs separate queues", "num": "3128", "d": "2/2015"}, {"title": "docs image nt correspond text", "body": "regarding image shows red vdomeq icon node though text states last interesting case node react compute virtual dom since equal old one nt reconcile dom think icon supposed green ie virtual doms equal", "num": "3125", "d": "2/2015"}, {"title": "invariant displaying overlay unable find element probably means dom unexpectedly mutated", "body": "running invariant trying display overlay prerendered browser js layoutjs moduleexports reactcreateclass mixins navigationmixin statemixin componentwillmount function thisstateusersize thistransitionto newusersession render function return js overlayjs moduleexports reactcreateclass mixins statemixin render function return whenever updates get following error using regards overlay understand browser may something dom cause react issue finding component seems simple common problem overlays bug stupidity", "num": "3124", "d": "2/2015"}, {"title": "strict proptypes mode", "body": "would nice able set flag trigger invariant warnings time prop referenced passed component declared proptypes", "num": "3113", "d": "2/2015"}, {"title": "getdomnode fails get dom node safari", "body": "testing react discovered inconsistencies browsers safari os x try call thisgetdomnode within safari dom node returned actual node mounted dom suspect virtual copy reacts virtual dom try call getboundingclientrect returns empty clientrect object code works expected chrome version firefox worth noting using jsx preprocessor reactify gulp", "num": "3112", "d": "2/2015"}, {"title": "reactaddonstransitiongroup fails remove multiple children dom time", "body": "using reactaddonstransitiongroup remove one item time remove fail remove last child dom later children added back removed special lifecycle methods componentwillentercomponentdidenter called already dom jsfiddle illustrating problem", "num": "3111", "d": "2/2015"}, {"title": "extra nodes emitted rendering result mapping immutable collection", "body": "basically yields looks like properties immutable wrapper emitted along actual values going look get time later today figured good get tracked issue thanks", "num": "3102", "d": "2/2015"}, {"title": "race tutorial optimistic updates", "body": "last step tutorial optimistic updates added believe race condition following occurs called ajax get call started called adding new comment state ajax post call started ajax call returns stale data ajax call returns new data called ajax get call started result seen user", "num": "3099", "d": "2/2015"}, {"title": "onchange nt work ie typerange", "body": "nt know yet newbie bug event nt work ie even example code yes use crap patch", "num": "3096", "d": "2/2015"}, {"title": "getting unknown runtime error", "body": "hi searching could find could put hopes people know lot trying run reactjs app referenced amp sham well consolepolyfill getting kind error seems related changing element using unminified verison react currently available npm function throwing js executionenvironmentcanusedom updating created node innerhtml leading whitespace removed updating existing node innerhtml whitespace root textnodes also collapsed see feature detection known behave improperly like var testelement documentcreateelement div testelementinnerhtml testelementinnerhtml setinnerhtml function node html magic theory supposedly differentiates added updated nodes processing innerhtml innerhtml updated nodes suffers worse whitespace behavior readding node like triggers initial favorable whitespace behavior todo detached node nodeparentnode nodeparentnodereplacechild node node according line number line else branch exception originates would love hear could", "num": "3095", "d": "2/2015"}, {"title": "chinese doc", "body": "friends translating documents chinese days plan lot jobs introduce react chinese frontend developers like forum discussing useful components writing blogs etc ok add link organization readmemd thanks", "num": "3094", "d": "2/2015"}, {"title": "return balise", "body": "hi searched since morning return balise information line however write page click email nt work mail field fill thisstateuseremail firstnamename mailcom regards", "num": "3093", "d": "2/2015"}, {"title": "webworkers", "body": "discussion webworkers petehunt made already implementation sebmarkbage ideas wants accomplish within current code base remember correctly react run webworker main thread webworker waiting sebmarkbage would great could give detailed outline ideas get moving", "num": "3092", "d": "2/2015"}, {"title": "react testutils simulate change nt change checked state checkbox", "body": "sure react simulate thing something dom works jest simple test click checkbox report new state back component worked fine browser simulatechange nt report new state example shows error happening checkbox javascript describe checkbox function change checked state checkbox function var changehandler function e consolelog ecurrenttargetchecked expect see true console happens browser chrome amp firefox test understanding change handler supposed happen state change element test shows behaviour use controlled uncontrolled component shows behaviour simulate click event use click handler", "num": "3091", "d": "2/2015"}, {"title": "react binding", "body": "noticed new version react require manual binding problem lessened still want recommend extension jsx language bind functions scope akin arrow functions", "num": "3090", "d": "2/2015"}, {"title": "mouse events fired components listening", "body": "sure profound misunderstanding react events actual bug mouse events registered parents sometimes fire children bin mousing around two divs eventually result inner div getting highlighted red even though nt event trigger attaching uihover class though parent", "num": "3088", "d": "2/2015"}, {"title": "onended working", "body": "audio element want know finished playing event event works natively react nt appear mapping ended event new react maybe something missing seems like bug react nt wrap native dom events way easily bind listener another way", "num": "3087", "d": "2/2015"}, {"title": "dom operations performance counters", "body": "would possible expose counters rendering vdom diff algorithm resulting dom operations development mode react really good job running fast still entirely possible human error thwart algorithms well human ignorance fast enough hide bad code lead poor performance long term generally visible really really bad would nice interface sends back object counters every time touches dom fully satisfy diff would counters isolated per would nt reset user would responsible subtracting previous values like one would measuring fps animation loop example use case press button visually text changes field appears counters indicate several dom nodes created along various operations would know either something horribly wrong b something wrong likely much efficient way assuming counters reflect back actually think happen would nice check rendering well least good think", "num": "3086", "d": "2/2015"}, {"title": "automatically objectassign receives array", "body": "react native two styles automatically composed currently trying similar technique react dom produces following principles learn write everywhere style prop behave similarly across implementations", "num": "3081", "d": "2/2015"}, {"title": "vanilla proptypes library", "body": "thinking proptypes could extremely useful vanilla javascript write exploring possibility right wondering difficult would pull proptypes react standalone vanillajs library sounds like reasonable thing would start edit clear really ability add type checking functions without using something like typescript typescript bad investigating alternatives would awesome abstraction check arguments function way checks properties given components really", "num": "3079", "d": "2/2015"}, {"title": "prop validation component class", "body": "hello question component accepts component constructor prop noticed support proptype documented checking prop react class missing something reason use props way", "num": "3077", "d": "2/2015"}, {"title": "ontouchend execute twice ios safari", "body": "ontouchend execute twice function event handler live example first tap button confirmation appear everything seems okay tap ok cancel moment tap place around button confirm appear tap button live example qrcode", "num": "3076", "d": "2/2015"}, {"title": "markdown parsing error docs", "body": "following markdown markdown note transfer cloned component wish preserve key add object similarly preserved parsed incorrectly seen", "num": "3075", "d": "2/2015"}, {"title": "thisforceupdate crashes component mounted", "body": "sure bug general confusion tried master crashes component mounted makes sense say however call directly nt crash suggests ok ok call happens use fluxlike architecture nt use combination flux suggests error get invariant violation receivecomponent update mounted component example shows problem", "num": "3071", "d": "2/2015"}, {"title": "false warnings controlled components", "body": "controlled component nt listener listened parent component following warning logged currently warning provided prop form field without handler render readonly field field mutable use otherwise set either check render method example", "num": "3070", "d": "2/2015"}, {"title": "make autofocus show rendered markup", "body": "currently nt handle specially runtime serverrendered content would good make actually work cc syranide", "num": "3066", "d": "2/2015"}, {"title": "support map interface props", "body": "high performance map implementations starting appear modern web browsers supporting map interface users instead supply props immutablejs clojurescript map instance change would even require providing equality hook first pass users memoize props users embracing immutable data huge change means styles defined code overridden shared efficiently react dom elements memoized immutable props skipped etc", "num": "3059", "d": "2/2015"}, {"title": "react todo application example raising warning", "body": "todolist component renders list elements nt unique key raises warning child array unique key prop check render method todolist see information understanding done way sake simplicity unique id used performant virtual dom diffing good idea warning raised example home page react see", "num": "3049", "d": "2/2015"}, {"title": "functionality directly add html string render function", "body": "render different html class different state value one option make every small html content different react class call individually like add html lines directly render function way something like makes difficult certain cases lot small html manipulations different state values better way add html directly return function using notation like missing something actually better way react", "num": "3044", "d": "2/2015"}, {"title": "component namespace sharing", "body": "var form myformcomponent var app kind component namespace sharing still available syntax", "num": "3042", "d": "2/2015"}, {"title": "bind dom event handlers component instance", "body": "gives us possibility use javascript prototype based inheritance instead using method problem brings need explicitly bind dom event handlers component since react autobinding works classes declared time looks weird even native dom event listeners work manner nt think good example follow please notice native dom apis introduced thousands years ago nt get wrong nt see usecases event handler called within context global object would nt better react bind dom event handlers class instance imaging one custom component inspired bemreact project js class button extends reactcomponent onfocus thissetstate focused true onblur thissetstate focused false render return reactcreateelement div classname button thisstatefocused buttonfocused reactcreateelement button classname buttoncontrol onfocus thisonfocus onblur thisonblur thispropstext would expect event handlers would called instance context would error thrown global method let clear know arrow function well ways bind function context however react eventlistener internally think might possible provide desired behaviour box think", "num": "3040", "d": "2/2015"}, {"title": "recursive forceupdate", "body": "would nice way call way would applied recursively children elements currently using paired immutablejs similar fashion om found behavior preferable cases one concrete use case would gaearon hot loader currently attempts gather elements trigger forceupdate seems still somehow hitting application nt quite tracked wherehow another use case would simple solution context issue context changed want able element children", "num": "3038", "d": "2/2015"}, {"title": "react nt eval java nashorn javascript engine", "body": "nashorn new javascript engine shipped java nashorn compiles javascript java bytecode runs natively jvm unfortunately react nt evaluate properly nashorn due fact nashorn nt support kind module system like amd box code creates new nashorn engine evaluates react jvm running code results following error simple workaround create variable referencing global context btw fully working isomorphic java example commentbox tutorial commentbox initially rendered server nashorn", "num": "3037", "d": "2/2015"}, {"title": "jsxharmony outputs nonsensical code arrow function expressions", "body": "given following input code traceur compiler yields syntax error outputs nt know behaviors correct know produces following output correct thanks", "num": "3029", "d": "2/2015"}, {"title": "two mixins cause invariant violation defining methods", "body": "hi trying figure whether wrong way react issue deal two mixins pulling state different stores trying mixed view gist showcasing issue given two mixins view uses var view reactcreateclass mixins render function return view view fails getstate wrong approach maybe react issue googling symptoms found facebookreact strictly related plus nt seem default spec policy enforced multiple definitions thanks dar\u00edo", "num": "3027", "d": "2/2015"}, {"title": "jsx parsing error", "body": "entirely sure causing issue fails nt", "num": "3019", "d": "2/2015"}, {"title": "valuelink working react", "body": "", "num": "3015", "d": "2/2015"}, {"title": "img tags get duplicated virtual dom", "body": "hi simple component like debug using react dev tools inspect react dom see breaks unit tests expect one element use issue virtual dom browser dom looks like expected interesting note change line element nt duplicated anymore using react", "num": "3014", "d": "2/2015"}, {"title": "make controllable", "body": "affected user interaction enabled makes sense controlled uncontrolled introduced needs introduced zpao sounds good could good first bug", "num": "3010", "d": "2/2015"}, {"title": "streaming rendertostaticmarkup", "body": "messing around trying get current project cater critical rendering path ie first data asap landing page quite heavy content takes around process time want users wait get something screens currently everything tag first content finishing bundled json dump data server used render page js webpack bootstrapping gets somewhere get background color title first rountrip content would neat version returned node stream option specify function tells number bytes render pushing stuff downstream example", "num": "3009", "d": "2/2015"}, {"title": "comments jsx working expected", "body": "comment section jsx children component jsx transformer nt seem transform correctly elements hidden dom nt seem work intuitively something wrong", "num": "3008", "d": "2/2015"}, {"title": "unnecessary return", "body": "hello reading react tutorial last really necessary yes necessary", "num": "3006", "d": "2/2015"}, {"title": "checked attribute realizing dom", "body": "recently updated checkbox element hooked dynamically updating browser using react inspector chrome seems toggling fine reason changes nt propagate dom sure specific update messed something nt realize render function js render function let classname thispropsitemisactive classname isactive return thispropsitemtext", "num": "3005", "d": "2/2015"}, {"title": "access dom node", "body": "noticed getdomnode nt work anymore new way", "num": "3004", "d": "1/2015"}, {"title": "feedback beta", "body": "one biggest pro react simple nt things nt try overly complicated things docs nt greatest explaining api fortunately nt try sprinkle much magical fairy dust eyes explains however part syntactic acid code fashion statement less clear since butchered initial state default props generic meaningless concept constructor point things time much clearer separate functions one thing makes clearer code easier follow logic even see lot want easily scannable code less code since fall trap less readable code whole concept class gain never ever instanceof components case ridiculously rare even case hand lot mixins besides constructor making everything unnecessarily awkward mixins help properties state whole class construct says mixins please create giant monolithic unmanageable class hierarchies blunt classes uses solutions inheritance extremely naive solutions asking create problems give meaning code scale horribly unmaintanable giant scrabble tree hard mix together usually involving overcomplicated solutions would necessary inherent limitations practically taboo performance codelanguages given antihardware nature practice react component need terms composition able mix functionality nt repeat code nt want repeat clarity reasons centralize code feel worthwhile benefit whole concept class originally conceived purpose along multiple inheritance able mix thing great concept failed achieve largely due engineered amount languages copypasting said failure interest pandering simple minded programmers spoonfed oogospel change current react way actually managed achieved goal easy mixingreuse code quite well within context react nt see need move system less cabable even issues fact use come might well replace keyword class snakeoil useless seems", "num": "2992", "d": "1/2015"}, {"title": "reactmountnodecache repopulated purged nodes focused unmount", "body": "unmount currently focused node repopulated purged unless specific id revisited later remain forever mostly likely due focusselection restoration phase reconciliation repro nodecache output console", "num": "2988", "d": "1/2015"}, {"title": "markdown editor function goes bounds second line", "body": "using markdown editor function react site noticed text overflows longer strings user uses space start new line strings take full line editor overflow border displaying output", "num": "2986", "d": "1/2015"}, {"title": "onclick nt fire clonewithprops", "body": "seems onclick nt fire clonewithprops check example codepen intended behavior possible workarounds", "num": "2985", "d": "1/2015"}, {"title": "cloning component using clonewithprops overriding ref warning shown", "body": "doc makes clear use clonewithprops pass ref extraprops override ref get warning get warning specific case otherwise way set ref mycomponent created", "num": "2984", "d": "1/2015"}, {"title": "allow string arguments classset", "body": "hi sometimes want statical classes toggled classes eg looks like gets ugly fast let allow idk flexible needs simple implement version would flexible would", "num": "2983", "d": "1/2015"}, {"title": "access functions", "body": "following snippet demonstrate use case trying achieve javascript var parent reactcreateclass componentdidmount function reactchildrenforeach thispropschildren function child consolelog test child render function return thispropschildren var child reactcreateclass test function consolelog test render function return child reactrender documentbody like know iterating unable get reference actual component least able figure could access child component api anyway could edit aware add ref child component use goal parent care children restrict limit way", "num": "2982", "d": "1/2015"}, {"title": "always warns invalid prop", "body": "checked react running chrome safari firefox able reproduce issue following iconjsx var icon reactcreateclass proptypes icon reactproptypesstringisrequired render function return moduleexports icon wrapperjsx var icon require iconjsx var wrapper reactcreateclass proptypes icon reactproptypesinstanceof icon isrequired render function return thispropsicon moduleexports wrapper render instance var icon get error also able reproduce issue seems like proptype checker nt working expected maybe missed something", "num": "2979", "d": "1/2015"}, {"title": "scryrendereddomcomponents return dom order", "body": "code testing component simple list initialize props result one node add another node get using dom comes results true appears returning node inserted first var commentlist reactcreateclass render function var commentnodes thispropsdatamap function text return return commentnodes var var var node testutilsrenderintodocument nodesetprops data function var comments testutilsscryrendereddomcomponentswithclass node comment consolelog comments getdomnode innerhtml prints consolelog comments getdomnode innerhtml prints", "num": "2978", "d": "1/2015"}, {"title": "docs text code snippets tiny firefox", "body": "tested firefox left chrome right firefox", "num": "2977", "d": "1/2015"}, {"title": "style expecting object unfortunate consequences", "body": "hi pretty new react trying build div requests imagescaling service backend images specific resolutions need use css imageset css value need vendor prefixes css key problem ca nt duplicate keys style object ended manually setting style attribute componentdidupdate hack get around system suggest could perhaps also expect array key value pairs could like specific example css trying modify found", "num": "2976", "d": "1/2015"}, {"title": "broken componentwill update", "body": "updating state component corresponding method lifecycle get called every time component fact always current state comparing always return true mentioned methods return correct objects previous next state", "num": "2974", "d": "1/2015"}, {"title": "support indeterminate checkbox state", "body": "chrome firefox safari ie modern browsers support notion checkbox indeterminate state set cleared using property checkbox input node set using attributes state commonly used top list tree checkboxes indicate checkboxes underneath checked behavior seems reasonably welldefined modern chrome firefox safari ie checkbox indeterminate property set checkbox renders indeterminate state regardless checked state checked state programmatically toggled clicking checkbox clears indeterminate state unfortunately little bit inconsistency chrome firefox safari clicking indeterminate checkbox clears indeterminate state also toggles checked state triggering change click event ie clears indeterminate state leaves checked state alone triggering click event react support prop checkbox inputs supported uncontrolled checkboxes via similar prop clicking indeterminate checkbox follow browser checkedtoggling behavior claims come playing jsfiddle chrome firefox safari ie", "num": "2973", "d": "1/2015"}, {"title": "lexical binding class", "body": "trying beta version noticed would bomb afaik arrow function definitions throw error nt prototype well guess ca nt used class cc sebmarkbage", "num": "2972", "d": "1/2015"}, {"title": "dangerouslysetinnerhtml nt update replaced state properly", "body": "might bug scenario following state contains default value typing overwrite default value works expected using used yes still works rather replacing state concatenates default value values problematic example", "num": "2970", "d": "1/2015"}, {"title": "reactchildrenfilter", "body": "use case wrapping nonempty children divs js render return wrapchild child index child know probably wrong kind comparison nt care return nice also need know many valid children wrapped return number children including empty children want strip", "num": "2956", "d": "1/2015"}, {"title": "onchange fires event type input", "body": "hi onchange handler also capture input events yes would like able capture onchange oninput", "num": "2955", "d": "1/2015"}, {"title": "fbme nt contain", "body": "link script tags fbme get errors browser refused execute script mime type texthtml executable strict mime type checking enabled refused execute script mime type texthtml executable strict mime type checking enabled", "num": "2954", "d": "1/2015"}, {"title": "update cycles update mstransform", "body": "use quite bit inline transforms components recently encountered transforms updated ie component mounted mounting component receive correct transform styling remains unchanged subsequent update cycles update component unique key update cycle update nokey components components static keys verified styling properties seem update fine ie opacity", "num": "2950", "d": "1/2015"}, {"title": "add korean translated docs", "body": "seeing good chinese contributors contributing starting react docs translation project react korea group soon finish enough amount docs translated translation would like send pull request guys think interested see even though mostly korean", "num": "2945", "d": "1/2015"}, {"title": "jsx build tool documentation", "body": "ran issue commandline build tool would nt build folder full files get cryptic output empty array nothing happens caused hour two confusion tried checking docs eventually read source saw uses found digging turns requires input files extension rather think might help people put short section docs integrate build short correct wrong jsx files end js jsx use compile folder full jsx files plain js comment longer required effect using browserify nt use use thoughts", "num": "2943", "d": "1/2015"}, {"title": "nt touch proptypes production mode", "body": "currently validating proptypes production mode probably wasted effort since used also means play around proptypes without fear breaking production code", "num": "2938", "d": "1/2015"}, {"title": "consider using jsonml notation reactelement", "body": "nt get excited probably wo nt work issue documenting ca nt could consider using jsonml notation reactelement would make jsx currently looks like much nicer nonjsx declaration would also align us spec almost like standard children special jsonml designed way children distinguished attributes nt really care property already merged could undo nbd one problem constantly need slice children outer array passing component become performance problem problem jsonml nt way attach custom attributes element props ie important treated differently props available component conceptually parent responsible keying element changing key affect behavior component refs also important props transferred child without affecting behavior one possible solution would wrap elements another object still ugly also means reason two types element without wrapper children also ambiguous first position attributeless element constant destructuring time need clone reason element need destructure system nested arrays ca nt distinguish nested array elements element would work enforced children always provided flat lists explicitly flattened needed eg flattening makes difficult preserve keys though allowing component receives reactelement outside need reason two different kinds abstractions use two different patterns accessing type props important react community nt diverge far", "num": "2932", "d": "1/2015"}, {"title": "click events nt fired mobile devices table rows", "body": "could missing something handler table row mobile devices wo nt fire event unless add handler event empty function fiddle comment function fiddle mobile devices wo nt actually fire handler tapping row tried safarichrome ios iphone", "num": "2931", "d": "1/2015"}, {"title": "getchildcontext called getinitialstate", "body": "think bug prevents child context dependent component state var react require react var contexttypes name reactproptypesstring class test extends reactcomponent getinitialstate return name name getchildcontext return name thisstatename render return testchildcontexttypes contexttypes consolelog reactrendertostring results", "num": "2929", "d": "1/2015"}, {"title": "properties rx observable reactlike experiments", "body": "issue used track properties features available experimental frameworks build everything around rx observable streams liftable component boundaries identified already overlap well existing projects error propagation boundaries errors propagate hierarchy completion propagation signal tell component longer change used memory cleanupcollapsing async serverside rendering transition groups clean exit animations prerendering lifting components become opaque containers async reconciliation component block entire ui waiting data useful serverside rendering calling asynchronous fast apis client features probably built optimized imperative style core expose capabilities built observables nongoal particular task provide similar api surface area observables track capabilities exposed frameworks possible experiment alternative apis heavily rely observable semantics top features", "num": "2928", "d": "1/2015"}, {"title": "arrow functions nt properly bind jsx transform harmony option", "body": "seems jsx transform ca nt find use arrow function nt bind function probably since slow unfortunately appears namespacing jsx element jsx transform nt realize needs bind resulting function example var mydemoclass reactcreateclass subcomponent reactcreateclass render function return null transforms var mydemoclass reactcreateclass displayname mydemoclass subcomponent reactcreateclass displayname subcomponent render function return null", "num": "2927", "d": "1/2015"}, {"title": "possible add multiple event listeners react component possible programmatically assign listener", "body": "hello could please answer following questions possible add multiple event listeners react component possible programmatically assign listener ideally looking something like addeventlistener would great could suggest something thank andrei", "num": "2925", "d": "1/2015"}, {"title": "idea official nightly edge build npm", "body": "working master nt straightforward react js libraries typically possible point sha commit npm work version codebase since nt happen react due compile step nice official nightly devbuild react available npm one main benefit would library authors making easier check projects changes going master potentially weigh issues one example comes mind warnings around reactrouter due context changes", "num": "2924", "d": "1/2015"}, {"title": "componentdidupdate fire earlier case", "body": "know fires dom updated met problem working piece code like following component js function getstate return layers storegetlayers var component reactcreateclass getinitialstate function return getstate componentdidmount function storeaddchangelistener thisonchange thisupdatelayernode componentdidupdate function thisupdatelayernode componentwillunmount function storeremovechangelistener thisonchange render function return thisstatelayersmap function layer return updatelayernode function var self onchange function thissetstate getstate store js var changeevent change var layers function createlayer id var layer id id node null context null layerspush layer var store assign eventemitterprototype getlayers function return layers getlayer function id var lt layerslength layers id id return layers emitchange function thisemit changeevent addchangelistener function callback thison changeevent callback removechangelistener function callback thisremovelistener changeevent callback layer means node need create layer somewhere else eg click handler use draw something wrote demo works well work project invoked confused execution order update first create layer draw component rendered works move click handler nt work anymore js function onclick actionscreatelayer id var layer storegetlayer id layercontextfillrect reactrender documentgetelementbyid demo ideas solve problem", "num": "2922", "d": "1/2015"}, {"title": "componentdidupdate prevstate previous state", "body": "", "num": "2914", "d": "1/2015"}, {"title": "silent exception", "body": "turned anything might go wrong caught component dropped two undefined function calls separate branch everyone try reproduce fetch branch run build project quick debugging showed number blocks exception caught issue might relate also noticed bunch similar ones without code example might help", "num": "2912", "d": "1/2015"}, {"title": "deprecate reactaddonsclassset", "body": "dependencies think either publish standalone module direct people something else community inclined latter since means wash hands internal usage tied transforms said features would useful others outside fb concerned suggestions existing projects point", "num": "2910", "d": "1/2015"}, {"title": "deprecate reactaddonsupdate", "body": "easiest addon get rid see also todo figure shared dependencies live new name new repo file existing issues new repo update internal usage fb", "num": "2909", "d": "1/2015"}, {"title": "react developer tools malfunctioning chrome", "body": "inspecting props components panel nt functioning clicking element mouse dom tree nt select element keyboard navigation working", "num": "2908", "d": "1/2015"}, {"title": "reactcsstransitiongroup adding enter class", "body": "trouble one animations simple fade fade animation stepping chrome dev tools element rendered page class never applied however class gets applied seem getting added correctly example code almost identical getting started code docs running react help would appreciated thanks", "num": "2907", "d": "1/2015"}, {"title": "add delete mutability helper", "body": "js sparse arrays advantages setting elements deleting eg prints therefore mutability helper returns copy deleted entry javascript update reactaddons let let b update delete consolelog consolelog b ps course also applies objects", "num": "2906", "d": "1/2015"}, {"title": "switching react virtual dom element react tab selecting element inspecting", "body": "would great extension allows us see react dom element matches regular dom element mean click inspect button chrome devtools react tab becomes active shows us element chosen deeply nested dom quite annoying click lot times get nested element might checkbox within react extension works behaviour choosing elements needed", "num": "2905", "d": "1/2015"}, {"title": "passing first argument react methods", "body": "react methods start var self small sweet feature would pass first parameter far know would nt breakable change methods nt take parameters instead var mehcomponent reactcreateclass componentwillmount function var self render function var self would become var mehcomponent reactcreateclass componentwillmount function self somestuff function self render function self somestuff function self", "num": "2899", "d": "1/2015"}, {"title": "set context getinitialstate called", "body": "initial state depend context need make sure context set recent changes let make sure add test wink", "num": "2898", "d": "1/2015"}, {"title": "clear best practice trickling properties externallysupplied component children", "body": "suppose making custom radio button field shows like bunch toggleablebuttons components render wrapping hidden input needs use name parent component clear way correctly transfer prop automatically seems redundant set prop individually however use iterate children method objects get method instead cjsx buttontoggle reactcreateclass render reactchildrenforeach propschildren option gt xxx idea ok setprops available optionpropsname propsname antipatternbug perhaps added docs", "num": "2897", "d": "1/2015"}, {"title": "clarify harmony dependence transferring jsx docs", "body": "new react following tutorial ran snag copy pasting example transferring jsx example lead line chrome using inbrowser jsx transformer took awhile figure proposed javascript thing builtin react thing needed super unclear documentationtutorial reads somehow react taking care react specific syntax docs link destructuring assignment think docs clearly state browser environment must support harmony work", "num": "2896", "d": "1/2015"}, {"title": "optimize bindautobindmethods", "body": "running performance issues using react server side large component trees finding render time increases linearly case seeing render times relatively simple page components profiling found showing top trace went added hrtime calls inside see much time contributing rendering found used within method may seem like lot pretty dramatic effect throughput server rendering synchronously way optimize binding happens lazily server many methods may even called event handlers lifecycle events etc", "num": "2895", "d": "1/2015"}, {"title": "question immutable data react", "body": "may sound like noob question crazy ask anyway dom diffs may replaced immutable data diffs much faster sane require state immutable drop dom diff entirely virtual dom altogether react code actually require us explicitly declare every form field state big deal events derivatives architecture vice versa jquery believe missing", "num": "2891", "d": "1/2015"}, {"title": "detect react dom element wrong attribute name", "body": "dear pretty new react reasons want use without jsx faced issue ca nt resolve react element properties key instead key example console see warning okay really mean find mean supposed look first fb react plugin chrome nt see wrong attribute warning nt give stack trace either huge dom hard go thru manually without hints possible find workaround see example", "num": "2887", "d": "1/2015"}, {"title": "missing closing brace gives misleading warning", "body": "heres code gives following error spent bit time wondering tag nt closed noticing line nt right missing closing brace wonder error could descriptive case error pointy rather curly brackets problem", "num": "2886", "d": "1/2015"}, {"title": "removing object array inside state component refresh dom", "body": "suppose may bug fault code filter array state component question description problem plnkr", "num": "2885", "d": "1/2015"}, {"title": "invariant checking component classes passed mixins fully correct", "body": "javascript function mixspecintocomponent constructor spec invariant reactlegacyelementisvalidfactory spec reactcompositecomponent attempting use component class mixin instead use regular object changed javascript function mixspecintocomponent constructor spec invariant typeof spec function reactclass attempting use component class mixin instead use regular object however simply function nt correctly fully identify error example following code fluxxor javascript var fluxmixin function react return componentwillmount function fluxmixincomponentwillmount function throw new error fluxxorfluxmixin function takes react parameter returns mixin eg mixins fluxxorfluxmixin react tests around messaging started failing using react since technically function another conditional would better identify passing component class mixin", "num": "2883", "d": "1/2015"}, {"title": "warning unknown dom property autocomplete mean autocomplete", "body": "sure counts canonical source near tell input property downcased trouble form input showing firefox refresh noticed sure effect functionality though", "num": "2882", "d": "1/2015"}, {"title": "load example", "body": "run indexhtml examples jquerymobile chromium browser get uncaught typeerror read property reactautobindmap anonymous function", "num": "2880", "d": "1/2015"}, {"title": "add support svg image element", "body": "another issue tracking looks like got merged issue already closed never got fixed", "num": "2873", "d": "1/2015"}, {"title": "reactchildrenmap return array arraylike object", "body": "hey trying use conjunction create copy children however surprising behavior find map return array typical map function would value see returning array would enabling one perform array operations collection children reorderingsplicing inserting new elements etc since nt return array children meant opaque data structure unclear best practice type thing created rough jsfiddle demonstrates assume behavior optimization purposes case maybe way think problem thanks feedback cheers", "num": "2872", "d": "1/2015"}, {"title": "get original html rather compiled example react tutorial", "body": "return highlight area unexpectly get want html testleft somebodypx", "num": "2871", "d": "1/2015"}, {"title": "warning calls use", "body": "ditto invariant think ok already", "num": "2870", "d": "1/2015"}, {"title": "write custom lint rules", "body": "x make sure string literal first argument make sure jsdoc args match", "num": "2869", "d": "1/2015"}, {"title": "dangerouslysetinnerhtml nt update svg", "body": "suspect applies svg elements know sure due lack svg needing use created jsfiddle demonstrate issue switch two images tux second also dump console render every browser renders correctly initially chrome update chrome everything works expected firefox gets converted disappears assume html inside svg context safari looks fine image never changes ie looks fine image never changes", "num": "2863", "d": "1/2015"}, {"title": "style updates silently fail trailing semicolon style", "body": "first render works update silently fails expected would semicolon removed errorwarning development build tested chrome latest firefox latest master minimal jsbin js var app reactcreateclass getinitialstate function return color red handleclick function consolelog hello world thissetstate color blue render function consolelog rendering var style backgroundcolor thisstatecolor rabishah ran irc", "num": "2862", "d": "1/2015"}, {"title": "clonewithprops function type property points window", "body": "js var react require react require reactaddons function createcircle x r return var mycircle reactcreateclass render function var circle createcircle return reactaddonsclonewithprops circle onclick function consolelog reactrender documentgetelementbyid svgtest click circle sure whether bug nice refer element", "num": "2861", "d": "1/2015"}, {"title": "input pattern attribute value broken react", "body": "see rendered element pattern attribute value jsfiddle uses react noticed issue react imagine nt tested nt specific pattern attribute stripped something", "num": "2860", "d": "1/2015"}, {"title": "lack testutils method finds rendered component data attribute value", "body": "react test utilities currently expose following ways query contents rendered component certain elements type tag classname however common applications make use automated testing tools target elements classname tag name rather specific data attribute type reserved explicitly use testers paradigm allows developers modify class names purposes styling without worrying breaking existing test suites feel like could beneficial allow allow querying rendered components via data attributes like javascript reacttestutilsscryrendereddomcomponentswithdataattr function root attrname attrvalue return reacttestutilsfindallinrenderedtree root function inst var regex data var dataset key instprops regextest key dataset keyreplace regex instprops key return dataset attrname attrvalue reacttestutilsfindrendereddomcomponentwithdataattr function root attrname attrvalue var reacttestutilsscryrendereddomcomponentswithdataattr root attrname attrvalue would allow unit testing react elements rendering via validating contents rendered element querying data attributes might used complementary automated test suite figured even attempting put together formal pull request would open issue get feedback perceived value additions thanks", "num": "2858", "d": "1/2015"}, {"title": "bug eventcurrenttarget null even eventpersist", "body": "using properties kept intact reason jsfiddle thanks", "num": "2857", "d": "1/2015"}, {"title": "children depends order enumerating properties object", "body": "notice component children type returned reactchildrenmap object reactchildrenforeach use loop children type object think cause problem future spec guarantee order enumerating properties object ps try extract reactcsstransitiongroup heavily depends order enumerating properties object standalone package use children array type merge render need pull request reactcsstransitiongroup let know", "num": "2856", "d": "1/2015"}, {"title": "jsx parentheses around object literal transforms invalid js", "body": "comma right parenthesis emitted jsxtransforming line like title result following jsx source jsx var examplecommaissue reactcreateclass render function return transforms reactcreateelement div style margin classname test instead reactcreateelement div style margin classname test notably seems problem attribute follows one parenhugged object literal also test see arbitrary values parentheses also result", "num": "2855", "d": "1/2015"}, {"title": "bug event object properties null within setstate callback function", "body": "event object seems lose property values within callback function jsfiddle demonstrating behavior", "num": "2850", "d": "1/2015"}, {"title": "save component back references dev mode", "body": "purposes providing devtools support providing back traces error messageswarnings might useful keep back references component parent trace information cut amount time required find component responsible throwing warnings", "num": "2849", "d": "1/2015"}, {"title": "react wiki module reactgrowabletextarea", "body": "suggestion components wiki first attempt react component feedback welcome", "num": "2848", "d": "1/2015"}, {"title": "keyboard event handlers longer invoked documentbody get focus", "body": "example app root component rendered also set handle application keyboard shortcuts problem running user interaction like clicking around page causes obtain focus become case amp event handlers longer invoked know could register keydown keyup event handlers manually app component mounted would prefer stay within react", "num": "2846", "d": "1/2015"}, {"title": "allow template strings attributes jsx", "body": "cool myclass worked instead wrap template string", "num": "2845", "d": "1/2015"}, {"title": "keep drop replacestate", "body": "continuing conversation started considering dropping replacestate ideally state always keep consistent signature defined getinitialstate", "num": "2843", "d": "1/2015"}, {"title": "maven plugin available", "body": "hello maven plugin available integrate jsx precompilation build process seen gradle plugin would anyone recommend using gradle instead maven solve personally currently prefer maven still sufficient projects kind regards moritz", "num": "2841", "d": "1/2015"}, {"title": "onclick events components inside forms fire nt", "body": "making form component onclick event placing cursor input field form pressing enter onclick event component fires feels random something wrong actual bug jsbin illustrates problem", "num": "2840", "d": "1/2015"}, {"title": "catch invalid dom nesting initial render", "body": "currently get error react tries update dom things nt expected early errors much better development react give clear errors based valid html structures example select element valid child option option element valid child text node forms one invalid deep child form tables quite rules suggested error format forms element n means displayname childindexifnotzero invariantviolation foocomponent may deep children culprit form gt div gt form invariantviolation foocomponent may deep children culprit form gt div gt gt gt barcomponent gt div gt tables invariantviolation foocomponent may children encountered thead invariantviolation foocomponent may one child encountered thead thead invariantviolation foocomponent may one child encountered thead thead less frequently encountered situations pushed different release think important bad habits people used allowed situations examples people run problem selectoption nested forms tables", "num": "2839", "d": "1/2015"}, {"title": "include key using reactchildrenmap reactchildrenforeach", "body": "currently key property stripped children calling reactchildrenmap reactchildrenforeach seems would useful retain property leave user decide handle instance example docs showing following want retain key using clonewithprops nt work want loop clone child key already stripped code made test var hello reactcreateclass reactrender documentbody output omits key values", "num": "2838", "d": "1/2015"}, {"title": "track upcoming dom technology upgrades", "body": "x support hyphenated dom components jsx transform usage within html import x inserting components shadow dom fragment x arbitrary properties dom components proper event handling events fired inside shadow dom custom events component prototype provide change detection execute rerender want component able rerender instance component children effectively treated prop react changes detecting changes require default component implementation things like initialize mutationobserver potentially defer rendering dom per x remove tagname property per support complex types parameters web components react components take complex types whereas dom nodes take strings pass complex type web component need run code mount time passes additional parameters instantiated web component stateful imperative bridge per", "num": "2836", "d": "1/2015"}, {"title": "illogical architecture setstate", "body": "dear react developers community anyone please explain react throws hard error use setstate anything entails setting new state eg replacestate setstate work mounted component never works unmounted component harm using consolewarn instead code must use thisismounted amp amp thissetstate completely redundant please provide explanation allow using certain init option throwing error", "num": "2835", "d": "1/2015"}, {"title": "q transfer state server", "body": "wonder possible transfer state andor props server client imagine ways like stringifyparse json achieve properly use ajax initial state even isomorphic webapp", "num": "2834", "d": "1/2015"}, {"title": "question state serializable", "body": "according guide items state react component serializable would like store nonplain javascript object would consequences", "num": "2833", "d": "1/2015"}, {"title": "add support itemref", "body": "", "num": "2831", "d": "1/2015"}, {"title": "facebook cdn link react location breaks csp sites", "body": "try load https cdn location react browser gets redirected http resource rejected browsers everywhere requirements additionally sites explicit csp wo nt let redirect even browser told ignore enforcement", "num": "2829", "d": "1/2015"}, {"title": "uncaught typeerror read property mockedreactclassconstructor undefined", "body": "error caught twice hard debug perhaps extra check could make less hard debug location error happens javascript function instantiatereactcomponent element parentcompositetype var instance production processenvnodeenv production processenvnodeenv warning element amp amp typeof elementtype function typeof elementtype string functions strings mounted react components null cause always using undefined variable jsx tag like reason get error often forget export othercomponent directly using import like wrong obviously would help much assertion first parameter reactcreateelement right away called", "num": "2828", "d": "1/2015"}, {"title": "provide stack traces warnings", "body": "find often hard time tracking source various react warnings would idea setting throw warnings least stack trace", "num": "2827", "d": "1/2015"}, {"title": "onmouseentercapture onmouseleavecapture working", "body": "first thank building amazing library sharing rest us nt know whether bug code bug library design suspect latter", "num": "2826", "d": "1/2015"}, {"title": "define functions inside mixins", "body": "love mixins works limitations like use getdefaultproperties inside mixin component ca nt override property getdefatulproperties bigger problem nt know ok case component parent mount reactcomponent ca nt call someone know solve problem thanks", "num": "2825", "d": "1/2015"}, {"title": "explicitly bound setstate call fails callback argument passed", "body": "passing prop value actually trigger state change however passing function falsey value argument seems work javascript thissetstatebind key val setstate get called thissetstatebind key val work thissetstatebind key val null works thissetstatebind key val undefined works thissetstatebind key val function works thissetstatebind key val works fiddle thissetstatebind thisstatea change gets queued realized calling setstate third argument thissetstatebind b thisstateb null works thissetstatebind c thisstatec undefined works demo", "num": "2823", "d": "1/2015"}, {"title": "jsx cli class getter setter support", "body": "run following error thrown trying use library called isomorphic app needs serverside rendering module works fine clientside nt playing nice server even though server already set render react components jsx code stated seems transformation supported via flag nt supported say seems hard time believing ca nt thing missing", "num": "2820", "d": "1/2015"}, {"title": "facebook cdn serving compressed libraries", "body": "example surely served gzip compression quite odd indeed", "num": "2819", "d": "1/2015"}, {"title": "access private variables", "body": "component used private member knowing also used react overwrote variable got strange errors completely unrelated points time took figure react used private member name exposed inside component would useful actually hide variables otherwise mention documentation easily findable", "num": "2817", "d": "1/2015"}, {"title": "nt warn undefined key using arrays", "body": "using always result warning development mode understand reasoning using jsx aware user may something wrong using javascript api however seems odd arrays useful work performant dealing arguments would possible provide ability turn warning", "num": "2816", "d": "1/2015"}, {"title": "invalid values styles also throw errors", "body": "documentbodystylewidth invalid argument something want solve", "num": "2815", "d": "1/2015"}, {"title": "updating props element", "body": "react component renders component b receives another component c one props need update props component b rendering tried access available maybe right component something like b like access compc update props tried available move compc b needs stuff b nt need know", "num": "2813", "d": "1/2015"}, {"title": "boxflex missing ignore list automatic unit concatenation", "body": "boxflex value gets px suffix although unitless css property could please fix version", "num": "2812", "d": "1/2015"}, {"title": "jstransform dependency mismatch esprimafb", "body": "issues installing today using react node switched using version performed npm cache clear try start app get seems leading version numbers truncated check field reads unsure registry issue wondering anyone insight fix issue spent many hours trying get work edit also tried", "num": "2811", "d": "1/2015"}, {"title": "reactcreatecomment would nice", "body": "use come handy working inspector compiling react template systems", "num": "2810", "d": "1/2015"}, {"title": "umbrella", "body": "x refs make callbacks instead first class spicyj sebmarkbage x move proptype validation element instead class jsfb x warning classtype accessed sebmarkbage clean internal jsfb x expose reactcomponent base class sebmarkbage x fix context x deprecate keyed objects children warning jsfb sebmarkbage x add reactfragment api expose reactaddonsfragment x fix reactperf x change unmounted setstate checks invariant warning zpao x add enqueuestateupdate name enqueue updates depend thisstate consistent since thispendingstate gone sebmarkbage x fix devtools sebmarkbage x something refs timing sebmarkbage x warn uses within x warn maps children zpao needs syncup flow internal option zpao wo nt fix expose dom component refs actual dom nodes monkey patch props setprops getdomnode onto upgrade path warnings using dom component ref getdomnode props fix error utils guard see reactcompositecomponenterrortest deprecate setprops alternative expose clonewithprops react proper actual clonewithprops one deprecate replacestate", "num": "2809", "d": "1/2015"}, {"title": "make default initial state component", "body": "find writing way often lot components wait ajax requests setting state variables make things much easier", "num": "2804", "d": "1/2015"}, {"title": "appear selectable creation disabled", "body": "react implementation appear allow selected correct behavior user timeline initial creation html allows offer selected creation time wording disallow update select disabled option disallows form post disabled option still selected whereas explicitly allowing preloaded select major browsers permit html allow selected option time idiomatic disabled empty option one placeholder text pick color selected element load time believe example code load first instead loads second remove unshifted element selected load time jsx jsx reactdom var testcase reactcreateclass please advise", "num": "2803", "d": "1/2015"}, {"title": "svg tag prevents transpilation jsx js", "body": "steps reproduce create react component renders svg contains example puffsvg save component file try compile file get following error use transform get error use though nt take screenshot might similar issue tag worked around error building custom component building svg code setting using component", "num": "2798", "d": "1/2015"}, {"title": "expose devtools hook injection consumers react object", "body": "currently react looks global calls exists works fine one listener eg chrome react devtools love react supported arbitrary number independent hooks react hot loader reaching internals need get mounted instances wish could without ing internal module ideally wish react exposed modules available global hooks via kind would called automatically available object want library nt mean production libraries debugging aid libraries react hot loader potentially others", "num": "2797", "d": "1/2015"}, {"title": "clarify componentdidupdate fires", "body": "unclear called regards function docs state invoked immediately updating occurs unclear meant updating case refer either component whole updating meaning postrender refer setstate processed might mean prerender would good explicitly state function fires documentation even somewhere else site described text graphic form already", "num": "2796", "d": "1/2015"}, {"title": "add support", "body": "adding component jsx causes jsxtransformer throw error taking replacing makes error vanish missing formset whitelist somewhere", "num": "2794", "d": "1/2015"}, {"title": "use bundlecollapser plugin reduce file size", "body": "browserify tasks min addonsmin use bundlecollapser replaces module name numeric id reduce file size", "num": "2792", "d": "12/2014"}, {"title": "releases page updated", "body": "releases page github properly updated version result marked latest", "num": "2790", "d": "12/2014"}, {"title": "component mixins componentwillunmount called reverse order componentdidmount", "body": "allow dom manipulation outside react reach dom manipulations done undone reverse order currently possible components mixins see footnote due order events fired current order componentcomponentdidmount componentcomponentwillunmount correct order componentcomponentdidmount componentcomponentwillunmount jsfiddle full lifecycle example footnote mixins component mixins manipulating dom", "num": "2789", "d": "12/2014"}, {"title": "ismounted enough know setstate", "body": "sake simplify workflow three stages component mounting may call setstate ismounted false component mounted may call setstate ismounted true component unmounted must call setstate ismounted false particular case worried trigger promise similar delayed action componentwillmount could called two circumstances synchronously call stack asynchronously later stack know mixing async sync signature bad idea sake argument asynchronous case promise could resolve time future order prevent calling setstate nt allowed add check promise resolves component still mounting state outside componentwillmount stack possible happen chance js run componentwillmount component mounted cycle happen error shown synchronous case enter block still mounting state means false state wo nt set depending answers async questions see two outcomes async return component mounted minor inconvenience solved coding know async async return mounted way know safe call incomplete user manually track state component unmounted thoughts invented issue none exists", "num": "2787", "d": "12/2014"}, {"title": "spread operator component working", "body": "using component build custom react component uses spread operator receiving following error navitem hope someone may able shed light sense component yet support spread operator running exec componentbuild exec task props thisprops parseerror unexpected token code triggers error running exec componentbuild exec task props thisprops parseerror unexpected token", "num": "2786", "d": "12/2014"}, {"title": "componentwillmount getdomnode nt document yet", "body": "currently hook would allow us set attributes node injected document unfortunate attributes wild take effect element injected document workaround forced replacing react injected nodes clones would great react could expose node inserted added another hook node provided", "num": "2784", "d": "12/2014"}, {"title": "reason jsx deviate html", "body": "understanding legitimate reason jsx prohibit javascript keywords reasons reason require camelcase attributes appears oversight part original authors far fixing goes concern expressed appears backwards compatibility far tell nt seem reason someone could nt submit pr fully backwards compatible today jsx allows coders designers use html naturally something could major boon project well within minutes opening issue two people antoinegrant akiran seems like something many people want included also whether allowed fixed indicates health project something obviously broken people asked jump unnatural hoops absolutely reason enough reason fix something react anyone continue recommend project group members project admins ask give issue honest thought least minutes hitting close button still decide close issue please let community know reasoning understand thank greg slepak", "num": "2782", "d": "12/2014"}, {"title": "reason prohibit use js keywords jsx", "body": "understanding based docs prohibited html attribute jsx see reason one example given guide using instead shows transformation results js easily fixed quoting unless missing something obvious please normal html back", "num": "2781", "d": "12/2014"}, {"title": "mixins add mixins", "body": "use reflux handy ways autotrack stores via mixin eg writing mixin handles saving multiple forms touch posts convenient mixin could add reflux mixins similar", "num": "2780", "d": "12/2014"}, {"title": "add javascript button jsx file", "body": "wrong post", "num": "2779", "d": "12/2014"}, {"title": "injecting html conversion results dangerously ie converted markdown", "body": "setup log entries written stored markdown plain text come time render browser run markdown html converter gets rendered browser react despite fact code never works html except last step edits occur plain text saving occurs plain text plain text propsstate etc way get data loaded using cumbersome attribute even though html humangenerated way nt dynamic traditional sense snapshot html representation text way html react generates simply snapshot representation component something available nt lie done scenario like way tell react additional safe processors available reactregistercontenttransformer markdown markdowntohtml var markdown reactcreateclass render function return markdown thispropstext whatever syntax would work makes explicit working humangenerated dynamic html content rigidly transformed syntacticallycorrectunlessthetransformerhasbugs output edit explain motivation questionrequest mechanism great definitely need usergenerated html strings however also way extend mechanism exists inside function transforming data nt html snapshotserialized html like react components additional api telling jsx transformer additional transformers available used exclusively render using special curly bracket syntax would close ideal people would still need use regular html string data people data nt html merely transiently transformable html form need say html dangerous dangerous transformer makes putting part jsx transformer bugs notwithstanding resulting html always well formed legal", "num": "2778", "d": "12/2014"}, {"title": "jsx attribute shorthand objects", "body": "ecvevalent feature sorry bad english", "num": "2777", "d": "12/2014"}, {"title": "provide nextstate argument componentwillreceiveprops", "body": "need call particular state attribute nt change would possible pass lifecycle function", "num": "2776", "d": "12/2014"}, {"title": "drop support", "body": "dropping support ie days statistics show take wolrdwide statistics", "num": "2775", "d": "12/2014"}, {"title": "returning null tag always rerendered", "body": "tl dr component returns rerenders noscript tag unmounted new one created shouldupdatereactcomponent gets returns false came internal components breaking recent update nt gone see widely broken might recent updates empty component triggering reliably reports similar weird problems could nt track use similar happening trigger triggering update mount phase works correctly triggering rerender broken one nt called yet actually call first still call also whole question trying unmount anything seems like nt cc sebmarkbage spicyj drop examplesbasicjsxharmony debug pausing caught exceptions added breakpoints reactemptycomponent make super obvious js use strict var child reactcreateclass componentdidmount thispropsonmount amp amp thispropsonmount render thispropsvisible return null var parent reactcreateclass update thisforceupdate render return reactrender documentgetelementbyid container", "num": "2770", "d": "12/2014"}, {"title": "checkboxes get sync state", "body": "filing issue per sebmarkbage see bin example syranide suggested adding calling adding around inside approach works seems unnecessary since bubble handling event", "num": "2766", "d": "12/2014"}, {"title": "defaultvalue empty", "body": "hello everybody okay quite strange problem seto value defaultvalue nothing appears however set value using value appears props coming data correctly idea react conde", "num": "2764", "d": "12/2014"}, {"title": "componentdidmount executes wrong order", "body": "order child child child parent technically though child mounted dom parent yet mounted expect see parent child child child understand docs correctly componentdidmount meant clientside state therefore use setup state child components would need access state ca nt cause nt initialized yet using state quotes since react component state rather something external websocket connection could course use lifecycle callbacks trigger init would execute server ever choose use feature", "num": "2763", "d": "12/2014"}, {"title": "support indeterminate state checkbox input", "body": "seems like indeterminate true set checkbox indeterminate state could supported thanks", "num": "2762", "d": "12/2014"}, {"title": "feature request strip datareactid return array string", "body": "right every element adds lot unnecessary space server generated pages know still needed initialize browser solution minimize output strip add array tag end tag see example except example server script js var html reactrendertostring reactcreateelement element data reacts filtered html htmlreplace datareactid g function full value reactspush value return filtered htmlreplace appreact appreact jsonstringify reacts ressend filtered except example client script js var elements documentgetelementsbytagname fast nt trigger reflow arrayprototypeslicecall elements foreach function element index elementsetattribute datareactid appreact index reactrender reactcreateelement element data document except example jsx think solution could done lot bettersafer somehow included core html tags saved characters saved characters even higher labels often gets wrapped", "num": "2761", "d": "12/2014"}, {"title": "custom element tags xml render", "body": "possible create custom element render method interpreted class render exactly xml format", "num": "2758", "d": "12/2014"}, {"title": "scryrenderedcomponentswithtype func finding child components", "body": "trying test existence component within parent pretty sure function scryrenderedcomponentswithtype created nt working take look component test line fails following test error easier read screen shot react function question reference scryrenderedcomponentswithtype thanks", "num": "2757", "d": "12/2014"}, {"title": "warn rendering html tag spelled uppercase letters", "body": "try running following code javascript var hello reactcreateclass render function return reactcreateelement br null reactrender documentbody get two tags inserted dom instead one made quick jsfiddle show running chrome relevant", "num": "2756", "d": "12/2014"}, {"title": "implement fast click remove delay mobile web browser", "body": "nice react feature improve responsiveness similar fastclick ft labs", "num": "2753", "d": "12/2014"}, {"title": "improve errorutils usage", "body": "right guard autobound method intention actually guard calls event handlers", "num": "2750", "d": "12/2014"}, {"title": "tests make consistent use spys mocks", "body": "sometimes within test file probably pattern annoying ugly better think probably make use feels bit easier work", "num": "2749", "d": "12/2014"}, {"title": "thissetstate callback function spews console log", "body": "added callback thissetstate console warnings like following example line thissetstate data callback example warning bind binding component method component react automatically highperformance way safely remove call see componentname", "num": "2747", "d": "12/2014"}, {"title": "support custom dom elements amp attributes", "body": "reason react restricts subset dom elements attributes unfortunately makes really hard use new html non standard features unless support added noticed could create custom elements via documented amp sure supported long term even supported still solve problem attributes ones listed docs seem ignored think would good idea allow defining custom virtual dom elements custom list attributes users could implement even support new element nt core yet finally support namespaces would super useful using react even environments amp hard either successfully used vtree vdom", "num": "2746", "d": "12/2014"}, {"title": "unmount react component name node", "body": "components done component mounted away say unmount fly top find node attached unmount via node like docs state right seems like unmount node could unmount component name would make life lot easier cases route change ant unmount specific components via name maybe missing something", "num": "2743", "d": "12/2014"}, {"title": "svg present initial render added", "body": "jsfiddle render text link another label says toggle click toggle changes state removes puts place click toggle resets state fails show chrome browser tested see dev tools nt display page copy code jsfiddle var svg reactcreateclass getinitialstate function return showlink true renderlink function thisstateshowlink return link return text toggle function thissetstate showlink thisstateshowlink render function return thisrenderlink toggle reactrender documentbody", "num": "2742", "d": "12/2014"}, {"title": "update release grunt task modern times", "body": "nt delete license patents bower repo better messages postprocess", "num": "2741", "d": "12/2014"}, {"title": "tutorial improvement nt use python http server use node", "body": "since tutorial describes things either browser node nt make sense advocate using instead makes sense tell people run use much simple command fire localhost instance port whatever directory run", "num": "2739", "d": "12/2014"}, {"title": "jsx expects templating eg flagged missing", "body": "different rules xml things like xmldesirable even obsolete syntax correct syntax respectively leads situations react forces people write obsolete template html rather parsing true modern html author strongly feels like bug template getting evaluated xml instead html parser whatever reason please upgrade jsx parser proper one real html used templates without library throwing terminal error", "num": "2738", "d": "12/2014"}, {"title": "replace invariant inline throw error production build", "body": "perhaps larger issues preventing considering production errors encountered user rarely access stack traces get single toplevel error location error thrown react today know error thrown would nice replaced instead could report vaguely meaningful error locations could least hint error react would also avoid invariant invocation overhead cc zpao sebmarkbage spicyj", "num": "2736", "d": "12/2014"}, {"title": "reactmountnodecache leaks objects unmount", "body": "scenario pretty easy reproduce suppose popup implementation function render popup view react element overlay div element function unmount view destroy overlay popup button element onclick set call destroy popup function user clicks button reactunmountcomponentatnode called react cleans everything reactmountnodecache empty react starts process blur event remember user clicked button close popup focused resurrects button element reactmountnodecache button dom element ends stuck nodecache forever worst part lot dom nodes sometimes hundreds subject gc anymore", "num": "2731", "d": "12/2014"}, {"title": "use input element nodewebkit", "body": "trying use react nodewebkit project problem element module exports component containing typeerror read property firstchild undefined error thrown using code cjsx reactdom react require react moduleexports reactcreateclass render test require jscomponentstest app reactcreateclass render reactrender documentbody piece code works fine replace elements write file", "num": "2730", "d": "12/2014"}, {"title": "csstransitiongroup transition add remove fast", "body": "reproduce add item opacity item transitioning ex opacity remove item next tick fast item opacity item disappears completely transition supposed add item opacity item transitioning ex opacity remove item item fading smoothly opacity", "num": "2729", "d": "12/2014"}, {"title": "order components arbitrary", "body": "ran issue recently attempting get particular child components noticed something interesting seems order thispropschildren populated based execution time component actual order positioned let give example html hello world current method using try grab element using expectation since array first element array would tag however since components inside added array regardless order declared understand react provides ways manipulating children via however real method differentiating certain children without cumbersome turns javascript var heading reactchildrenmap thispropschildren function child heading amp amp childdisplayname heading child maybe providing sort interface searchretrieve specific children using may beneficial something like similar requires callback entirely portable bit cumbersome pull put mixin utility object reuse without copypaste lines every component would like retrieve specific children apologize already resources within react maybe methodology follow instead searching able find anything", "num": "2728", "d": "12/2014"}, {"title": "distinguish component owner ownee", "body": "title self explanatory asking due removal thank", "num": "2725", "d": "12/2014"}, {"title": "trigger twice component show hide fast reactcsstransitiongroup leave enteractive class component", "body": "", "num": "2723", "d": "12/2014"}, {"title": "inconsistent order events ie", "body": "usually user enters deletes character input field event triggered event however internet explorer deleting character input triggered entering character see correct order events also ie could observe behavior test ie lt understand react aims abstracting event handling inconsistencies across different browsers seems like issue needs fixing jsfiddle demonstrating issue found realworld implementation suffering bug found try using backspace ie see easy workaround make implementation work atm", "num": "2722", "d": "12/2014"}, {"title": "inline style value nt add px", "body": "hello docs say number purpose", "num": "2721", "d": "12/2014"}, {"title": "usage owner", "body": "hi would like know owner property deprecated mean moved private scope future still accessible right thank", "num": "2719", "d": "12/2014"}, {"title": "still used", "body": "using outside jsx markup still using instead jsx still uses objectassign var bar uses reactspread var component becomes javascript still uses objectassign var objectassign bar uses reactspread var component reactcreateelement div reactspread props tested online", "num": "2714", "d": "12/2014"}, {"title": "collision two react copies running dom reactmount two valid unequal nodes", "body": "working chrome extension injects data current page chrome extensions concept content script access page dom page javascript variables means include react page dom may already react running page wo nt conflicts code however two copies react running ran datareactid obvious reasons solution modify extension version react change dompropertyidattributename avoid conflicts better way modifying react source", "num": "2713", "d": "12/2014"}, {"title": "strange behaviour underscores classes", "body": "using jsx compiler flag class like following gets transformed notice becomes far aware nt traceur also gives expected output might special treatment intended make properties less susceptible use outside collisions class hierarchies regardless would nice able turn wanted verified online compiler", "num": "2712", "d": "12/2014"}, {"title": "load initial data via ajax react", "body": "seen ajax data receive huge nt want maintain state load props render page", "num": "2711", "d": "12/2014"}, {"title": "custom classes reactcsstransitiongroup instead hard coding postfix enter", "body": "would like control classes transition automatically add could done break current api still accept pull requests file changed related", "num": "2709", "d": "12/2014"}, {"title": "context passing children thispropschildren", "body": "example b contexttypes value reactproptypesinteger render function return thiscontextvalue childcontexttypes value reactproptypesinteger getchildcontext return value render function return thispropschildren case app render function return case component b rendered inside app render method case nt see context value b rendered directly case access context value desired behaviour yes could explain simply omission", "num": "2706", "d": "12/2014"}, {"title": "onkeyup onkeydown propagating correctly certain keys chrome", "body": "noticed working chrome character keys nt seem trigger event handler keys eg enter space tab others nt seem happen firefox see though work expected jsbin code editor output frame", "num": "2703", "d": "12/2014"}, {"title": "work web component", "body": "want use jsx gotchas says react wo nt render attribute fill fixed workaround", "num": "2701", "d": "12/2014"}, {"title": "doc typo", "body": "jsx depth small typo render react component local variable starts uppercase letter probably want render react component use local variable starts uppercase letter", "num": "2698", "d": "12/2014"}, {"title": "allow symbols mixins", "body": "symbols useful making mixins guaranteed clash namespaces mixins however currently symbols mixins ignored uses loop find properties mixin ignores symbols propose getownpropertysymbols used well pick symbols defined mixin object", "num": "2696", "d": "12/2014"}, {"title": "accessing component prototype another component warns plain functions", "body": "really sure expected behaviour simply moving component warns plain functions calling components directly simplified test case javascript var emptycomponent reactcreateclass render return var testcase reactcreateclass emptycomponent emptycomponent getdefaultprops return usecomponentonobject false render var component reactrendertostring warns using plain functions rendering component directly reactrendertostring", "num": "2692", "d": "12/2014"}, {"title": "jsxtransform bug array destructuring", "body": "code lo gt hi lo hi hi lo generates code react lo gt hi var hi lo lo hi note absence braces following test generated code produces incorrect behaviour two statements one worked", "num": "2691", "d": "12/2014"}, {"title": "unmount mean garbage collect like persist state renderings seems possible", "body": "sometimes switch tabs within application whatnot using reactbootstrap components mount unmount wish might updated nt want lose overlooking feature lets", "num": "2688", "d": "12/2014"}, {"title": "adding better error message missing mixin", "body": "add informative message case try mixin either nil null basically submit patch maintainers think good idea", "num": "2687", "d": "12/2014"}, {"title": "error reporting production", "body": "using sentry log errors serverside rendering clientside unfortunately error message react throws production mode pretty useless wind lot unactionable reporting react two levels logged console errors ones thrown enableddisabled using env varcompile option would really great two different options could reap benefits disabling warnings eg runtime type checking without losing meaningful error messages example checksum violations thanks", "num": "2686", "d": "12/2014"}, {"title": "setstate componentwillupdate return proper error", "body": "returned error nothing else maybe adding link note would help", "num": "2682", "d": "12/2014"}, {"title": "strokeopacity missing ignore list automatic unit concatenation", "body": "strokeopacity value gets px suffix although unitless css property", "num": "2681", "d": "12/2014"}, {"title": "flexible class names csstransitiongroup", "body": "classes added animated element fixed based transitionname ex classes added provide flexibility naming classes ex fadein enter animation fadeout leave animation propose following api adds classes adds classes adds classes", "num": "2680", "d": "12/2014"}, {"title": "make lint block fail tests", "body": "blocked things current jshint incompatible template strings pr mostly fix bet things even think want switch using eslint however set problems still working support mostly blocked libraries point seems pr start using eslint rules disabled incompatibilities end really important enabling blocker x use eslint x enable appropriate rules add custom rules namely must use string literals argument", "num": "2678", "d": "12/2014"}, {"title": "normalize eventdatatransfer drag drop events", "body": "currently implementing draganddrop react application different kinds data dragged dropped means want check certain types eventdatatransfer object see drop enabled basically looks like works fine chrome less firefox turns firefox type datatransfertypes domstringlist method according latest drafts specification whatwg returning array like webkit correct obviously fix easy side check one available use one thought might useful fix react instead since least related event system could probably take stab wanted gauge interest perhaps datatransfer object deemed scope synthetic event handler", "num": "2676", "d": "12/2014"}, {"title": "rendertostring call life cycle methods", "body": "came across whilst investigating another unrelated issue page requesting route twice call rendertostring server react try call calling mountcomponent turn triggers life cycle method componentwillmount seems odd essentially nt mounted utilizing method far see generate markup thus broken life cycle symmetrical life cycle lead odd issues lingering objects eg component listens events outside life cycle componentwillmount get proper componentwillunmount call get chance clean references main question rendertostring method invoke life cycle methods never complete cycle understand could move bindings componentdidmount still seems wrong asymmetric life cycle perhaps could block call componentwillmount including nt run called server side thoughts anyway really enjoying react", "num": "2674", "d": "12/2014"}, {"title": "make controlled components uncontrolled", "body": "hi issue question guess found turboreact project instead binding json template sends html directly use react diff update body tag love idea going back root web use javascript progressive enhancement made think created todo app based todomvc guides named reactizetodo use reactizejs made ssorallen things struggle controlled components react makes fiddle alot creating react classes instead diff html page replacing html question controlled components made uncontrolled make acts pure html forms diffing libraries br morgan", "num": "2673", "d": "12/2014"}, {"title": "classname render correctly", "body": "display items render pagebypage pagination going pages onward images display distorted margins even class expected outcomes lifecycle require using bootstrap var displayitems thisstatelistmap function item return var listitemwrapper reactcreateclass render function return thispropsdatatitle", "num": "2670", "d": "12/2014"}, {"title": "changing shouldcomponentupdate specpolicy", "body": "wanted propose changing spec might termed rationale sometimes may know efficient skip reason component mixin may able define whether able skip updating based knowledge propsstatecontext might hold true combined components app thought changed return values must return false update skip return true behavior default update", "num": "2669", "d": "12/2014"}, {"title": "expose reactcompositecomponentinterface", "body": "realize start patching internals project pretty much risk case looking add plugin would act similar could validations builtin state change time application using fully immutable data store uses ton able isolate individual units root data prevent unnecessary rerenders know exactly path changed able get working pretty quickly unable internal could see exposing fully might bad idea wanted see discussion allowing consumers hook behavior define mergeable types outside core", "num": "2668", "d": "12/2014"}, {"title": "accept immutable iterables render", "body": "would nice immutable iterable types accepted place arrays one could say rather later ugly easy forget", "num": "2667", "d": "12/2014"}, {"title": "strange componentwillreceiveprops behaviour", "body": "screenshot thing propsselected undefined type console hand chrome console suggest eg type sel arrowright shows proper value condition fails thing blowing mind suggest something wrong getterssetters let know know teh root teh problem", "num": "2666", "d": "12/2014"}, {"title": "rendervalidatedcomponent method hides exceptions", "body": "hi stumbled across code block causes exceptions hidden good reason catch exceptions block tidy finally without rethrowing exception generally considered fairly bad practice without good reason certainly made debugging applications difficult us valid reason would least good idea debug mode would rethrow exception problem happy supply pull request direction correct approach thanks", "num": "2665", "d": "12/2014"}, {"title": "wire autobinding", "body": "keep getting error using react edge uncaught typeerror read property reactautobindmap undefined", "num": "2661", "d": "12/2014"}, {"title": "reacttestutilsmockcomponent pass props", "body": "using mocked components test props nt get passed mocked component get passed particular reason nt get passed well think would make asserting certain props get passed submodule easier looking mockcomponent function module mocktagname mocktagname mocktagname modulemocktagname div little digging found info given module props get passed properly asserted accessing mocked component using named ref thus assert however unless missing something access props submodule iterated always undefined", "num": "2660", "d": "12/2014"}, {"title": "componentdidupdate fires browser paint operation", "body": "sure nt design discovered today lifecycle methods executed react element renders ie executed point noted appear executed browser paint operation srcbrowserreactreconciletransactionjs introduced unexpected behavior scenario similar example given react class would expect following order operations component rerenders browser fires fires browser repaints dom fires however case actual behavior steps occur reverse order chrome record timeline events see following example looks like changes changes back paint ever occurs rendering efforts futile without manually deferring logic using test theory order would different fired paint operation made following changes react source load element browser using modified code timeline chrome follows order operations would expect provided lifecycle methods defined example class said ca nt say certain something corrected wanted submit issue hopefully get feedback react contributor sure domain knowledge explain existing flow exists indeed designed thanks", "num": "2659", "d": "12/2014"}, {"title": "react legacycustom elementsattributes", "body": "noticed legacy attributes like align cellpadding cellspacing nt rendered react least server side annoying since trying convert email templating system use react order able display frontend app fact unable complete task react led another question supposed make react webcomponents work together custom elementattributes names filtered react rendering engine", "num": "2657", "d": "12/2014"}, {"title": "split internal react properties user supplied props", "body": "internal react properties mean current api design forces users mix two single object unfortunate case user wants props name solves problem nicely takes separate arguments understand current api designed around single props object rest treated children believe making explicit distinction user supplied props used internal purposes lead less confusion", "num": "2656", "d": "12/2014"}, {"title": "reactdomtextcomponent needs getinstance", "body": "recent separation internal external instances reactdomtextcomponents got left certain tools namely reacttestutils expect everything rendered tree conforms certain api attempting sync last couple weeks react fb causing tests depend fail result cc spicyj sebmarkbage", "num": "2654", "d": "12/2014"}, {"title": "guide section lead error", "body": "click lead error", "num": "2648", "d": "12/2014"}, {"title": "react component guide", "body": "quick thought maybe guide best practices order guide developers creating better reusable components components include styles others nt include tests others nt built using browserify others use webpack others strictly clientside based think sort standard example think open source components style agnostic able used server well client would love thoughts nt mind contributing starting guide imagine world could pull carousel component navigation component footer component etc wire full blown web application", "num": "2644", "d": "12/2014"}, {"title": "input float number problem", "body": "case input dot case also strange last use string type var price solve problem", "num": "2643", "d": "12/2014"}, {"title": "make setstate return promise", "body": "setstate currently accepts optional second argument callback returns undefined results callback hell stateful component return promise would make much managable somewhat convention js world api symmetric method accepts callback returns promise returns promise accept callback case editable table user presses enter moved next row call setstate user last row like create new row call setstate focus new row call setstate currently way achieve nested callback hell", "num": "2642", "d": "12/2014"}, {"title": "emailing notes nt work", "body": "", "num": "2640", "d": "12/2014"}, {"title": "error tutorial source code", "body": "page error setinterval function bind function instance code fails run incorrect code componentdidmount function thisloadcommentsfromserver setinterval thisloadcommentsfromserver thispropspollinterval correct code componentdidmount function thisloadcommentsfromserver setinterval thisloadcommentsfromserverbind thispropspollinterval", "num": "2637", "d": "12/2014"}, {"title": "race condition thisstate vs thisprops component", "body": "still confusing app render method start render undefined value take qwest retrieve completed json data time setstate return json rerender paginationdemo component moving paginationdemo render method seem thisstate produced undefined value thisprops contain value guess bug var paginationdemo reactcreateclass getinitialstate function return total current visiblepages componentdidmount function thissetstate total thispropsdatasetlastpage current thispropsdatasetfirstpage visiblepages handlepagechanged function newpage thissetstate current newpage render function consolelog thisstatetotal consolelog thispropsdatasetlastpage loggers shown undefined undefined undefined undefined undefined var app reactcreateclass getinitialstate function return activenavigationurl navigationitems productitems loadjson function qwestget api async get url function jsondata thissetstate navigationitems jsondata productitems jsondatadata bind complete function jsondata consolelog complete thisstatenavigationitems return object bind componentdidmount function thisloadjson render function return", "num": "2634", "d": "12/2014"}, {"title": "features supported jsx transform", "body": "would nice document point new react users explains syntax features used jsx files best overview found far directory jstransform tests also contains flow stuff well", "num": "2632", "d": "12/2014"}, {"title": "virtual dom fomatting json", "body": "created make backend template engine mizchijsonicreact current problem result pure json although big reason heard react plan able make diff web worker case feature also needed serialize send plan formatting json string format", "num": "2631", "d": "12/2014"}, {"title": "possibility optimize jsx spread attributes", "body": "lot places set properties using helper functions set key class names common properties jsx use spread attributes looking compiled code see appears call necessary since first argument empty object set props except spread ones", "num": "2628", "d": "11/2014"}, {"title": "jsxtransformer bug tag", "body": "produce uncaught typeerror read property replace undefined due font tag use jsx file", "num": "2627", "d": "11/2014"}, {"title": "silent exception error componentwillreceiveprops", "body": "function call undefined componentwillreceiveprops well never mind since call undefined throws caught reactmultichildupdatechildren rethrown reason ca nt find ca nt reproduce fiddle anyways took realize culprit anyone knows heaven name nt throw", "num": "2626", "d": "11/2014"}, {"title": "minify jsxtransformerjs", "body": "could please provide minified version", "num": "2625", "d": "11/2014"}, {"title": "jsx binary strip types arrow functions", "body": "take following code parse binary correctly removes type change function use arrow function fails error", "num": "2624", "d": "11/2014"}, {"title": "onmouseover triggered component rendered mouse mouse moves", "body": "component rendered registers onmouseover events rendered mouse onmouseover callback invoked", "num": "2621", "d": "11/2014"}, {"title": "unable find element error elements", "body": "contents element constructed special way breaks react component update unable find element error example method body working jsfiddle react adding option props fixes issue", "num": "2620", "d": "11/2014"}, {"title": "csstransitiongroup throws child returns null render", "body": "came across using loading route initially route handler actually inside removing transition group leads weird thing happens initial load nested route view pulled via menu sure issue related belongs thing component either returns react element returns seems like edge case maybe happens specific initial render setup could fixed adding guard method", "num": "2619", "d": "11/2014"}, {"title": "reactrendertostring pretty output", "body": "similar jsonstringify obj", "num": "2618", "d": "11/2014"}, {"title": "unexpected string key handling", "body": "came across one extended custom key generator react ends treating function child key hides strings come object key handling documented makes sense sure makes sense handle string keys way", "num": "2612", "d": "11/2014"}, {"title": "feature request ability configure custom html escaping function", "body": "", "num": "2611", "d": "11/2014"}, {"title": "testing handlers events testutilssimulate failing", "body": "problem described stackoverflow thread ca nt seem figure wrong", "num": "2609", "d": "11/2014"}, {"title": "react slow rendering items jsfiddle", "body": "hi guys evaluating reactjs considering using projects trouble rendering simple list elements since takes almost seconds complex markup couple div tags actually existing app simplification tried using underscorejs took jsfiddle using jsx without jsx wrong cheers vasco pessanha", "num": "2608", "d": "11/2014"}, {"title": "making react warn user called argument", "body": "spent last hour trying fix issue caused trying render actual variable undefined root cause misinterpreting would return whole instead bad error stack trace extremely cryptic took even get clue reason nt working trying render undefined type actual exception stack trace see ultimately execution comes crashing react tries look undefined type course raises exception reason confusing exception happened quite far away source cause secondary factor code worked completely fine started porting browserify made mistake lead wild set hypotheses nt working assuming might due regression react since migrating thought might lagging behind thinking could problem reason raise issue since passing type wo nt work anyway would make sense react could check warn maybe even raise exception since would crash soon anyway instance bit extreme something like happens someone else probably know screwed first place help react would always welcome", "num": "2607", "d": "11/2014"}, {"title": "event still processing component unmounted", "body": "suppose backbone view named contains react component b b react button clicking button unnmounts b react rerenders backbone case got error like looking found events still processing even component unmounted dom examining found event click event added click handler became ok plan fix case react work timeout", "num": "2605", "d": "11/2014"}, {"title": "old react version examples", "body": "hi examples included getting started kit version react defined packagejson basiccommonjs example set order example work expected also using browserify reactify compile buildjs fails missing jsx header indexjs tested examples", "num": "2604", "d": "11/2014"}, {"title": "idearequest add global party extension point react object", "body": "tldr add empty bare object called x new member react object party react tools global extension point couple internal tools use react would like open source tools use singleton object referenced andor modified components know could create object root component pass prop child components may modify object violates idea props readonly also means another person open sources component uses either tools user component must create root object app wire component tree keep things clean would love party extension space hanging react object could attach tool globals components would access given share react global suggestion name x make bare object documentation would encourage users add namespace object simple example adds party global event bus blogging app using eventemitter could used server client via browserify appjs root component require reactxevent reactxeventbuson createpost reactxeventjs newpostjs component view shown point subcomponent appjs createpost function e reactxeventhandle e createpost render function return without getting lost weeds arguing global event bus good idea react see example nt need wire component tree bus allow subcomponent send message nothing stopping anyone else globally patching react object add x member think would better blessed added react code conflicts future member name also think common name like x allow party module names announce work eg require reactxevent", "num": "2598", "d": "11/2014"}, {"title": "jsxtransformer error lowercase classes provide linenumber property", "body": "attempting use react class lowercase classname transformer able display line error occurred turns event variable passed function contain attribute called linenumber error thrown states uncaught typeerror read property replace undefined actual error properties error lower case component names myclass longer supported jsx see", "num": "2592", "d": "11/2014"}, {"title": "use inside react class", "body": "quite often apps need render list entities entities usually contain data identifier property like sometimes may logic inside component uses identifier eg uses inside handler fire event clicked entity simplified example var entity reactcreateclass notifyitem function fire someevent id thispropskey also find natural use properties prop rendering list proper component recycling however moved nt seem available inside component specify two different propslike values looks redundant would great make available inside component future versions", "num": "2591", "d": "11/2014"}, {"title": "bug docs jsx", "body": "docs say use html jsx accept xhtml ex html xhtml missing x docs make difference picking react want use xhtml dead", "num": "2590", "d": "11/2014"}, {"title": "glossary mistake", "body": "glossary see really correct seems wrong imagine idea though", "num": "2588", "d": "11/2014"}, {"title": "proptypes declarative validator preventing passing extra properties feature request", "body": "dropping support deprecated component property would useful react could instructed throw error old code using component still keeps setting removed property notice fix", "num": "2587", "d": "11/2014"}, {"title": "handle browser autofill gracefully serverside rendering", "body": "rendering react app document root serverside rendering got email password login form renders server without state fields empty browser loads page email password autofilled browser happens react bootstraps loads wipes state user sees inputs autofilled emptied ideal tried using grab raw dom node value render react complains checksum invalid realise case dom modified react bootstraps client would good able kinda stuff update workaround used pull values inside values inside would still nice handle cleanly though", "num": "2585", "d": "11/2014"}, {"title": "reactids overriden serverside rendering", "body": "recently adapted app use serverside rendered markup reconciliate client increase loading speeds react correctly recognizes rendered markup nt actually touch dom first rendering step however interact clicking dragging etc serverside rendered react components get following error understand sideeffect dom mutation however mutation occured react element container altering state programatically opposed interacting clicks etc cause errors serverside rendered markup html login categories add category settings calling rendercomponent client dom node contains serverrendered markup eg thanks creating maintaining amazing ui framework", "num": "2584", "d": "11/2014"}, {"title": "correct latest release tag github", "body": "react releases page incorrectly promotes latest release sure since tags repo releases since correct admin", "num": "2580", "d": "11/2014"}, {"title": "proptypes property current vs getproptypes function proposed", "body": "used development mode seems like would preferable evaluate result method call returning object instead current object literal declared class imagine nt particularly expensive operation using shapes results lot type declaration evaluations never used outside development current proposed reason way instead functional convention etc", "num": "2577", "d": "11/2014"}, {"title": "tests using react jestmocked subcomponents result different behavior using jsx versus reactcreatefactory", "body": "created repo help illustrate running basically developing pure jsx using reactcreatefactory interchangeable testing using jest makes writing unit tests little trickier according link nonjsx components must wrapped reactcreatefactory testing components using jest found interchangeable within tests mock submodules guessing differences stem using bind within reactcreatefactory", "num": "2576", "d": "11/2014"}, {"title": "issues classes", "body": "issues classes react seems esprimaharmony differs implementing classes well classes implemented beta versions browsers esprimaharmony able use classes using however use methods chrome windows preview get error render try using get error ca nt figure would different objectdefineproperty directly defining prototypes fact properties set prototype nt automatically enumerable code javascript class mycomponent render return null esprimaharmony compiles compiles javascript var classprops function child staticprops instanceprops staticprops objectdefineproperties child staticprops instanceprops objectdefineproperties childprototype instanceprops var mycomponent function var mycomponent function mycomponent classprops mycomponent null render writable true return mycomponent resolve issue", "num": "2575", "d": "11/2014"}, {"title": "textarea update replacestate invoked", "body": "hello discovered little annoying bug invoke replacestate empty object textarea innerhtml update however value please see example", "num": "2573", "d": "11/2014"}, {"title": "replacestate null nt reset state", "body": "since components start null state would make sense could reset back null state right best reset back empty object minor issue think deserves documenting changed", "num": "2572", "d": "11/2014"}, {"title": "", "body": "gets called never granted using older version nt dig latest source hard nt see pop issues search", "num": "2569", "d": "11/2014"}, {"title": "extend nested default props instead overwriting", "body": "convenient props nested structure however let assume default props initialize component giving props component wo nt get cccsecond cccthird preferred result would course perhaps make behaviour selectable adding proptypes option like", "num": "2568", "d": "11/2014"}, {"title": "svg attributes nt work nt used", "body": "like js x", "num": "2564", "d": "11/2014"}, {"title": "ref component attribute undefined react", "body": "understanding changelog breaking changes key ref moved props object accessible element directly unless misunderstanding working access ref attribute using used work small snippet demonstrates issue", "num": "2563", "d": "11/2014"}, {"title": "setstate recursive", "body": "state currently calling results state would great function make clear documentation merges one level deep replacing substates", "num": "2561", "d": "11/2014"}, {"title": "make warning eg proptypes behavior configurable", "body": "implementation module repo cases want louder development warnings really errors impossible ignore way configure warnings produce similar relatedly people able easily set unit tests fail proptypes checks fail", "num": "2560", "d": "11/2014"}, {"title": "testable react components", "body": "wrote article dependency injection react using properties tldr javascript var mycomponent reactcreateclass proptypes model reactproptypesshape getstate reactproptypesfunc getdefaultprops return model new mycomponentviewmodel new http getinitialstate return thispropsmodelgetstate render return hello thisstatename enables user override dependencies runtime testing leave implementation untouched problem user multiple viewmodel shared problem using traditional approach well one singleton cacheing effectively nullifys technique use instance level dependency injection currently react two ways pass things runtime child components props react copies props even though technically per instance way passing dependencies runtime ultimate goal write testable react components without mocking module level mock module level excerpt article slower reevaluating module several times module still state entire test file multiple blocks would still need reset state require module block slow difficult test require service locator dependency injector using conflates use violating single responsibility principle tests uses instanceof break could getting different instance require code encouraged written form singletons problematic reasons potential solutions realize people may opinion mocking module level react library think notion passing runtime dependencies somehow support testing story nt involve module level mocking maybe constructor lifecycle function receives props would enable per instance use passed prop dependency another option would stop caching getdefaultprops imagine cached props typically viewed immutable currently way pass arguments component", "num": "2559", "d": "11/2014"}, {"title": "allow classset take arbitrary number arguments support string addition", "body": "classset handy recap however seems fairly common want pass classname props one ends writing something like would nt nice possible related", "num": "2558", "d": "11/2014"}, {"title": "support default params jsxtransformer flag", "body": "following code transformed jsx see transpilers like support transformation", "num": "2557", "d": "11/2014"}, {"title": "reactproptypesshape wtf", "body": "sorry title wtf moment found compare property object schema method call read documentation makes slightly sense see code say makes sense see code anyway know nt highest priority item world would love request name change method least synonym makes sense like really anything", "num": "2556", "d": "11/2014"}, {"title": "provide way specify parts react server markup reused client", "body": "would great able custom checksum validator ignore certain branches domtree attempting reuse markup use case rendering static components static components need rendered rendering server render client currently pass react markup props used generate static markup however waste send props component nt need rendered clientside one major performance concerns using react apps send markup props well usually duplicating data sent client able specify certain components needing client side rerender thus skipping checksum would save kweight initial page load", "num": "2548", "d": "11/2014"}, {"title": "simply want transpile single jsx file", "body": "see transpiled file dumped shell specify output file sounds retarded really could nt find answer documentation", "num": "2547", "d": "11/2014"}, {"title": "unable unmount component using instance rendered null", "body": "common pattern unmount component instance components return case getdomnode also returns code nt always work react internally always knows node component mounted please make information accessible add component method like project process transition backbone views react helper function gets backboneview instance mounted component removes dom way make work react component", "num": "2545", "d": "11/2014"}, {"title": "throw error wrong input dangerouslysetinnerhtml dangerousinnerhtml", "body": "passing html fails silently checked website makes use incredibly hard debug forget html throw error instead", "num": "2542", "d": "11/2014"}, {"title": "idea support object literal property value shorthand jsx syntax", "body": "idea would able would think", "num": "2536", "d": "11/2014"}, {"title": "missing svg mask attribute", "body": "mask attribute ignored svg elements", "num": "2535", "d": "11/2014"}, {"title": "textarea respond value property changing null", "body": "value property textarea changes null undefined non blank value text displayed dom change fiddle captures issue notice behavior different text input", "num": "2533", "d": "11/2014"}, {"title": "rendertostaticmarkup nt wrap expressions", "body": "hello thispropsname render string wraps thispropsname span tag render static markup nt would think datareactid datareactchecksum", "num": "2529", "d": "11/2014"}, {"title": "removing tabindex component attributes remove tabindex set", "body": "tab index put place removing method seen ever sets expect element nt focused tabbing still focusable clicking directly element var attributes thispropsfocusable attributestabindex return reactcreateelement div attributes test", "num": "2528", "d": "11/2014"}, {"title": "vectoreffect attribute svg elements", "body": "hello working project need nonscalingstroke feature could support vectoreffect attribute", "num": "2523", "d": "11/2014"}, {"title": "setstate breaks reactcsstransitiongroup", "body": "called transition transition breaks flash", "num": "2522", "d": "11/2014"}, {"title": "props context merged", "body": "day talking rpflorence usage context reactrouter initial curiosity came needing something like stub context component test concerns angular ryan helped see context basically like props everything still explicit afterwards thinking see value context one thing still nt feel right components concerned parent passes data since basically two merged component would define would include everything canshould passed one place without concerned props get point maybe renamed would additional method passing props anything could passed component via could also passed vice versa something like jsx var parent reactcreateclass childproptypes foo reactproptypesstring getchildprops function return foo bar render function return var child reactcreateclass proptypes foo reactproptypesstring render function return thispropsfoo reactrender documentbody would render html bar baz thoughts", "num": "2521", "d": "11/2014"}, {"title": "jsxtransformer using null comparison spread attributes", "body": "currently jsx gets compiled order pass jshint tests", "num": "2519", "d": "11/2014"}, {"title": "implement shouldcomponentupdate thiscontext", "body": "know officially quite libraries rely seems like getting shape trying understand exactly supposed implemented mind noticed accepts third argument extend also check components nt opt omitting get third argument understandable however presents problem component context owner context consumer implements restrictive way react context updates fiddle javascript var bottom reactcreateclass contexttypes number reactproptypesnumberisrequired render function return thiscontextnumber var middle reactcreateclass shouldcomponentupdate function nextprops nextstate nextcontext return false render function return var top reactcreateclass childcontexttypes number reactproptypesnumberisrequired getinitialstate function return number getchildcontext function return number thisstatenumber componentdidmount function setinterval function thissetstate number thisstatenumber bind render function return reactrender documentbody problem would occur tried give generic contextaware wrote unless opts possible work around adding nt look like good solution need explicitly add necessary every level smart easy slip solved another solution meantime recommended way", "num": "2517", "d": "11/2014"}, {"title": "tables w headers attribute", "body": "working project strict accessibility requirements table putting data implement headers ids attributes meet accessibility see techniques unfortunately headers attribute stripped supported react supported attributes list please add support missing standard attribute called headers", "num": "2516", "d": "11/2014"}, {"title": "unexpected behavior compiling jsx attribute strings containing amp", "body": "repro case jsx fails unexpected token illegal adding one character jsx compiles quite surprising sure going", "num": "2515", "d": "11/2014"}, {"title": "reactdompath attribute gets renamed closure compiler", "body": "following component js var react require react var svg path reactdom var transition reactcreateclass render moduleexports transition using closure compiler advanced level attribute gets renamed add quotes around attribute react nt render attribute", "num": "2513", "d": "11/2014"}, {"title": "automatically remove addendeventlistener", "body": "reacttransitionevents currently contains two methods perhaps cases developer going wait called times usually call let make nicer changing preamble something like javascript addendeventlistener function node eventlistener stepsintransition var metalistener event gt stepsintransition make event listener clean real implementation slightly complex keep track original make sure right thing called done principle seems like improvement", "num": "2510", "d": "11/2014"}, {"title": "automatically passed context property", "body": "given react used serverside rendering server context stores dispatchers really need contextbased registry components need able pull contextbased instances globalstatic instance would extremely useful able specify global property list properties automatically passed parent child specified ex appjs loads appjsx var react require react reactaddinheritingproperty context appjsx render function context instance would apply rendering children well specified controls rendered within parent right example using yahoo fluxibleapp need explicitely pass context children use router store mixins purpose using stores router components making functionality available instance registries storesdispatchers would far easier utilize could simply specify base property use ex simply use rendered instances", "num": "2507", "d": "11/2014"}, {"title": "node fails using reactaddons", "body": "upgraded react require react addons like make simple component using img node get error following trace require react without addons error resolved also doesnt break node types example worked var react require reactaddons var usesother reactcreateclass render function return hello", "num": "2506", "d": "11/2014"}, {"title": "stop using internals reactmultichildreconciletest", "body": "test reaches internals going reactinstancemap way get internals possible test observable effect failing test without testing internals still tests also reach internals primarily around lifecycle state", "num": "2500", "d": "11/2014"}, {"title": "nt make mockcomponent depend jest", "body": "expecting use like looking source requires passed mock already use test runner depend jest", "num": "2499", "d": "11/2014"}, {"title": "make sure child key warning cases", "body": "warn doesnt js var f var g var children f g return g f children turns modifying first time set looking already validated", "num": "2496", "d": "11/2014"}, {"title": "classset uses arrayprototypefilter", "body": "super nitpick current iteration cx makes use mentioned required polyfill older browsers realize addons part react proper sure worth noting working browsers doc perhaps mentioned addons classset docs happy send pr either method", "num": "2494", "d": "11/2014"}, {"title": "returning null causes thisgetdomnode null componentwillunmount", "body": "container component something like modalinner component componentwillunmount using destroy javascriptdata node however props false suppose render nothing thisgetdomnode null componentwillunmount dom node still inspect using chrome reference lost replace instead null works expected bug", "num": "2493", "d": "11/2014"}, {"title": "merge spread attributes", "body": "say component like js boxjsx box mainappjs use like result override switched order result reversed want merged something doable current spread attribute thanks", "num": "2492", "d": "11/2014"}, {"title": "non jsx spread operators depend objectassign", "body": "transpiles works nice dandy implicitly requires polyfill undocumented assume recent change move polyfill module perhaps react reacttools use jstransform spread visitor using one leverages jsx case perhaps note docs somewhere need polyfilled", "num": "2488", "d": "11/2014"}, {"title": "otransform otransform updating opera", "body": "otransform working opera somehow put style object chrome ff works fine latest oprea give element rotate deg programmatically inspect element opera dev tools see crossplatform tranforms applied style ms moz etc chrome ones webkit without actually applied another strange thing actually without leading hyphen worse rotate value changeanimate nt change see code running console nt update style object", "num": "2487", "d": "11/2014"}, {"title": "notes csstransitiongroup", "body": "chatting leebyron zpao intend experiment csstransitiongroup see improved using issue scratchpad keep track thoughts eventually build pr", "num": "2486", "d": "11/2014"}, {"title": "animation docs unclear", "body": "animation docs try explain transition new children eg wo nt work initial render however examples nt make clear moving statement inside call distracts explanation moreover clearly said transition applies new items initial items need play csstransitiongroup feel comfortable contributing docs nt expect pr yet stuckouttonguewinkingeye", "num": "2485", "d": "11/2014"}, {"title": "allow replacing anchoring element", "body": "following html using theme html read messages would like render ul latestmessages react imho currently impossible following components divider divdivider message divdropdownmessagesbox latestmessages ul latestmessages replaces also link icon get two uls nested sure could go hierarchy convert parent elements react components left one single div could anchor encompassing component want render dropdown ul react react option replace element given rendercomponent thanks reading long rant hope solution soon", "num": "2484", "d": "11/2014"}, {"title": "contenteditable warning appears even without children", "body": "rendering output text node child span react components yet still receive component contains managed react responsibility guarantee none nodes unexpectedly modified duplicated probably intentional expected", "num": "2477", "d": "11/2014"}, {"title": "changing props instance bad", "body": "render c bad saw objectfreeze descriptor nt fail really bad doable", "num": "2474", "d": "11/2014"}, {"title": "errors showing console chrome ie firefox", "body": "strange issue react firefox using latest react gem errors inside react components showing firefox console showing normally chrome ie internet explorer google chrome mozilla firefox component nt render error shown happen javascript errors inside react components errors outside react components shown normally tried reproduce problem jsfiddle error shown even firefox thought could issue consolepolyfill tried remove nothing changed expected behavior", "num": "2471", "d": "11/2014"}, {"title": "conflicting esprimafb dependency", "body": "cc zpao", "num": "2470", "d": "11/2014"}, {"title": "missing fields mousemove event maybe mouse events", "body": "using var sample reactcreateclass somefunc function e consolelog elayery elayerx ex ey emovementx emovementy eoffsetx offsety consolelog enativeeventlayery enativeeventlayerx enativeeventx enativeeventy enativeeventmovementx enativeeventmovementy enativeeventoffsetx enativeeventoffsety render function return looking might react taking standard fields across chrome layery give position top element event get using react event like eclienty ecurrenttargetgetboundingclientrect top sure needs fixed thoughts cheers luke", "num": "2469", "d": "11/2014"}, {"title": "update documentation removing tapdelay", "body": "documentation could use little love realize currently changing may removed still required required use reacttapeventplugin confusing use use page rendered ever render touch device detect touch using something like set true related issue tap delay maybe suggest documentation using plugin like tapeventplugin would submit pr really nt know documentation say thanks", "num": "2468", "d": "11/2014"}, {"title": "empty strings translated boolean unit test jasmine", "body": "hi encountered unit testing component basically created component like render using render component print propsdata end get boolean value true define component like get proper value", "num": "2467", "d": "11/2014"}, {"title": "jsxtransformer newline", "body": "jsxtransformer removes newline symbols templates fix problem", "num": "2466", "d": "11/2014"}, {"title": "error boundaries recover errors thrown", "body": "trying put graceful error handling case views crap jsx var mygoodview reactcreateclass render function return cool var mybadview reactcreateclass render function throw new error crap try reactrender documentbody catch e reactrender documentbody however get rendered w following stack trace seems like error throw react bad state thus unmounted handle scenario", "num": "2461", "d": "11/2014"}, {"title": "onsubmit without submit input working", "body": "ca nt handle native submit onsubmit react", "num": "2457", "d": "11/2014"}, {"title": "require react require reactaddons", "body": "building frontend browserify reactify found components use others use seems like set components different instance react nt talk means instantiate app components use seems events fired components nt handled example nt called seemingly instance react different one instance rendered root replaced calls app onereactjs looks like events started handled behavior bug design", "num": "2456", "d": "11/2014"}, {"title": "capybara selenium nt trigger reactdominput onchange", "body": "hi use capybara acceptance testing behaviour differs pure html input input contained jsx component reactdom input nt trigger onchange capybara sets empty string triggered set space example", "num": "2455", "d": "11/2014"}, {"title": "fire often", "body": "like case input text onchange triggered user finished interaction nt think right whenever touch range getting multiple change event like window resize crazy think coherent onchange behavior input text range onchange fired user release slider", "num": "2454", "d": "11/2014"}, {"title": "nt work", "body": "according issue seems way handle vertical input range firefox tried add attribute one seems ignored react complicated handle open pr", "num": "2453", "d": "11/2014"}, {"title": "react soundcloud", "body": "recently gave talk using react flux serverside rendering soundcloud video slidesexamples thought cool share cc amasad zpao", "num": "2451", "d": "11/2014"}, {"title": "misunderstanding project targets wiki", "body": "update wiki removing misunderstanding project targets", "num": "2450", "d": "11/2014"}, {"title": "allow components render abstract elements feature request", "body": "every component create return actiaul element cases nt actually need example attempt transitions like famous would calculate every position hand wrapper becomes unnesseccery introducing something like abstract elements", "num": "2449", "d": "11/2014"}, {"title": "warn second argument render null documentbody null well", "body": "often run making new project example reason passing documentbody react script head body nt exist yet common problem observed beginners tend put scripts react samples use mounting point real problem message would nt believe dom element assume something else wrong without realizing may empty time suggest show different specific warning second argument something like target container null trying mount ready", "num": "2448", "d": "11/2014"}, {"title": "reactaddonsperf undefined", "body": "performance tool seems like incredibly helpful tool trouble figuring components app causing trouble consider screenshot items listed undefined way name components listed name nt helpful could nt seem find anything performance tools section documentation", "num": "2447", "d": "11/2014"}, {"title": "problem eventtargetvalue input fixed value", "body": "check following example first div content either read fixe backspace fixed lastkeypressed intuitively always read fixed", "num": "2444", "d": "10/2014"}, {"title": "children removed using clonewithprops", "body": "repro case", "num": "2441", "d": "10/2014"}, {"title": "merge classname using spread operator", "body": "using transferpropsto classname property would merged true using new spread operator one nicest features transferpropsto made extending existing components much easier created couple fiddles illustrate sure would considered bug understand would reasons incredibly convenient possible would nice utility method something classname merging maybe part addons", "num": "2440", "d": "10/2014"}, {"title": "react performance wrong", "body": "currently evaluation react vs angular new project one criterion looking performance particularly mobile devices built prototypes react angular found seeing huge render times particular page basically huge list prices prices react angular much quicker distilled prototype two sample apps basically rendering list numbers printing currencies react angular running react version using locale switcher took react around rerender entire list angular taking worked reactintl people found currency formatting consuming time thought well test heavily favors react basically every node rerendered locale changes added simple buttonclick counter top page measurements react took entire increment click rerender almost entirety wasted section react perf tools angular took clearly must something wrong react beaten handily angular initial render rerender page incremental render everything looks straightforward problem", "num": "2439", "d": "10/2014"}, {"title": "react docs outdated", "body": "seems like every time go look reactjs docs date become pretty troublesome team pretty much given referring documentation resides site unreliable incomplete proven much time spent work struggling figure things understandable new libraries sometimes team developing project looking developers take run would behoove keep documentation date developers testing trying work adequately develop using time energy compile exhaustive list issues outdated areas documentation one example toplevel api documentation page whose contents either deprecated dated methods like changed since per changelog posted paul oshannessy hard continue develop main toolset used outdated documentation references many developers side team share sentiment much documentation lacking trying take guys built build kickass web apps using reactjs help us smile", "num": "2438", "d": "10/2014"}, {"title": "warning jsx uses plain function react components valid react jsx transform", "body": "updated react mass warnings flood console seems elements using thing seems fix rebuilding imported var button reactcreatefactory require button like think rather unnecessary think purpose update thought createfactory would enough imported components use browserify helps create new elements fine createelement example without warnings try reuse elements exactly want use react warns cases gave specific element name nt right fixed putting createfactory require working jsx auto compiled gulpjsx think updated nt need jsx tags anymore warning give anything trace well pinpointed happening render method components elements reuse either imported ones others filescopemodule like anyone say missing ca nt purpose forced give imported elements different name assigning variable name createclass require one throw warning mean components valid valid react ca nt find much meant plain functions mentioned one blog updates tried making existing components new methods warnings persist exactly needed barebones avoid warnings ever break app new updates came everything worked fine transition big must missing essential thing", "num": "2436", "d": "10/2014"}, {"title": "access key within component", "body": "understand component key longer available component props one get access component key", "num": "2432", "d": "10/2014"}, {"title": "custom elements implied lowercaseconventionmd working", "body": "understand lowercaseconventionmd custom element names supported however try using following example gist jsx fails transformed misunderstanding wrong gist misleading", "num": "2430", "d": "10/2014"}, {"title": "thiskey seems always undefined inside react component", "body": "react attempt use thiskey inside react component simple test case could access value via removed", "num": "2429", "d": "10/2014"}, {"title": "nashorn server side rendering null function line number", "body": "hello react team poking around reactjs server side rendering nashorn keep getting annoying problem whole code single jsx file faulting code options select sort price variation symbol company sad things works browser java nashorn js engine hoping could tips could maybe solve see nashorn team bug js engine using react nt help ps branch precise context similar problem option problem var bugselect reactcreateclass displayname bugselect render function apple banana cranberry", "num": "2427", "d": "10/2014"}, {"title": "attribute button supported", "body": "docs ones taged list supported tags form autofocus formnovalidate", "num": "2425", "d": "10/2014"}, {"title": "documentation versions", "body": "would great documentation various versions react similar currently docs points latest version apps upgraded nice able refer documentation earlier versions also interested helping move towards react powered docs remove jekyll dependency without disturbing existing structure team willing consider contributions area sebmarkbage zpao", "num": "2424", "d": "10/2014"}, {"title": "bug typeapply error type apply function", "body": "reverted commits tonight learn reactjs stopped awesome specifically nuked nodemodules get fresh npm install happened led look type object debugger apply function typerenderapply function sure changed packagejson looks like", "num": "2423", "d": "10/2014"}, {"title": "breaking change transferpropsto semantics defaultprops take precedence", "body": "semantic interaction default props changed default props override transferred props previous versions react opposite would happen nt seem mentioned release notes fiddle intentional decision probably mentioned release notes unintended side effect internal changes default props probably fixed", "num": "2421", "d": "10/2014"}, {"title": "getting started section line srchelloworldjs translate correct vanilla js", "body": "current code hello world transform following buildhelloworldjs file reactcreateelement null hello world hello world nt show page instead want code would translate null hello world would happy submit request update file let know", "num": "2420", "d": "10/2014"}, {"title": "jsx spread syntax requires objectassign", "body": "new jsx spread syntax introduced described nice compile jsx uses feature see implemented objectassign since proposed feature supported firefox using jsx spread syntax necessitates using polyfill objectassign would great case seems like possible implement behavior without objectassign", "num": "2417", "d": "10/2014"}, {"title": "please add reactproptypescomponentclass similar reactproptypes", "body": "hello found useful able pass react component class ie result calling instance component child component eg generic searchresults accepts results array resultcomponent property used render method create search result pagesearch component passes pagesearchresult class searchresults component campaignsearch component passes campaignsearchresult although could map results result components higher hierarchy convenient handled generic searchresults component common logic performed construction result aside whether example good practice believe useful property type could added official proptypes list believe would almost identical function instead would call updated message must use either use custom function uses publicly exposed many thanks brendan", "num": "2411", "d": "10/2014"}, {"title": "batching update one component twice causing unpredictable lifecycle", "body": "one hard explain reproduce try using following mixin changed slightly original found gist back js var react require react var layeredcomponentmixin componentdidmount function thislayer documentcreateelement div documentbodyappendchild thislayer thisrenderlayer componentdidupdate function thisrenderlayer componentwillunmount function thisunrenderlayer documentbodyremovechild thislayer renderlayer function var layer thisrenderlayer unrenderlayer function thislayerwillunmount thislayerwillunmount thislayer moduleexports layeredcomponentmixin allows create layered components case modal dialog use following component build modals js var react require react var toolboxuseractioncreators require actionstoolboxuseractioncreators var modalstore require storesmodalstore function getstatefromstore return modalcount modalstoregetmodalcount var modal reactcreateclass componentwillmount function thissetstate modallevel modalstoregetmodalcount componentdidmount function modalstoreaddchangelistener thisonchange documentaddeventlistener keydown thishandlekeydown componentwillunmount function modalstoreremovechangelistener thisonchange documentremoveeventlistener keydown thishandlekeydown getinitialstate function return getstatefromstore getdefaultprops function return classname feature render function var classname thispropsclassname var modalbackdropclassname var handlebackdropclick thishandlebackdropclick var killclick thiskillclick var modallevel thisstatemodallevel var totalmodals thisstatemodalcount killclick function e estoppropagation handlebackdropclick function thispropsonrequestclose handlekeydown function e ekeycode thishandlebackdropclick onchange function thissetstate getstatefromstore moduleexports modal combination works perfectly close highest modal component used inside render method ie following error thrown element types tried including work fine throws following trace follows happens several modals top one dialog runs fine error weird thing app still runs fine error thrown impact apart thrown app performs using webpack build", "num": "2410", "d": "10/2014"}, {"title": "adding removing background style attribute creates unwanted styles", "body": "element depending condition may set background condition first true later false element left residual styles never set code output looks like html styles never set user code interfering styles css fiddle showing issue", "num": "2407", "d": "10/2014"}, {"title": "triggering file input click causes onchange event fire", "body": "jsfiddle demo must using first click browse select file onchange event fire alert appear second click trigger file input click select file onchange event fire", "num": "2406", "d": "10/2014"}, {"title": "functionprototypebind problem", "body": "js lib change functionprototypebind takes problem react", "num": "2404", "d": "10/2014"}, {"title": "updates background inline css properties rendered firefox", "body": "updates inline via style attribute rendered firefox created example example button click toggles elements height background color firefox height rerendered correctly background chrome ie toggle properties expected", "num": "2403", "d": "10/2014"}, {"title": "warn two versions react used alongside", "body": "people lose hours work debugging simple issue two versions react loaded time warning right away happens usually discover problem invariant violations descriptive eg think even saw warning said something like check two copies react loaded really cryptic reason nt want warn right away two copies react loaded", "num": "2402", "d": "10/2014"}, {"title": "replace jsx language extension tagged template strings", "body": "apologies advance wrong way start discussion could nt find suitable forum ml discuss tagged template strings part reason back compat deprecate jsx language extension use template strings may oversimplifying seems upgrade path users would replace things format unifying jsx would help save effort make tools intended work js work jsx example jshint jscs popular static analysis tools several tickets jsx support happy field however imo efforts would better spent getting tools ready instead know fb contributing back upstream awesome focusing help speed efforts hopefully react recent move get closer class syntax sign proposal seriously thoughtfully considered", "num": "2401", "d": "10/2014"}, {"title": "reactdominput throw error use mootools together", "body": "error stack first reactwithaddonjs componentname reactdominput propname onchange jump func mootools c null arguments proptypespropname jump reactwithaddonjs props undefined", "num": "2400", "d": "10/2014"}, {"title": "consider deferring rendering actually document", "body": "warn best practice defer container node actually document allows events work expected system could use indocument detection determine container document could either warn use hack defer rendering actually gets added document web components similar lifecycle hooks integrating would likely involve deferring work document", "num": "2398", "d": "10/2014"}, {"title": "errors react tutorial step", "body": "step tutorial get following error uncaught typeerror failed construct comment please use new operator dom object constructor called function pedagogical failing steps tutorial believe step come step happily update something agree", "num": "2395", "d": "10/2014"}, {"title": "stop treating key null unspecified key", "body": "issue remind us revert", "num": "2394", "d": "10/2014"}, {"title": "implement shallow testing", "body": "need way test output single level react component without resolving way bottom layer whatever thinking something like javascript var shallowrenderer reacttestutilscreaterenderer shallowrendererrender shallowrendererattachref myrefname somemock var result shallowrenderergetrenderoutput expect resulttype tobe div expect resultpropschildren toequal shallowrendererrender var updatedresult shallowrenderergetrenderoutput expect updatedresulttype tobe updatedresultpropsonclick mockevent var updatedresultcausedbyclick shallowrenderergetrenderoutput expect updatedresultpropsclassname tobe wasclicked var instance shallowrenderergetmountedinstance instancecustomfunction var updatedresultcausedbycustomfunction shallowrenderergetrenderoutput expect updatedresultcausedbycustomfunctionpropsclassname tobe custom basically fix needs go entire lifecycle reactcompositecomponent needs bail whenever would continued rendering", "num": "2393", "d": "10/2014"}, {"title": "render react components data attributes", "body": "nt know design wrong using bootstrap style application one features using popovers dont like looks messy abstract datacontent stuff react component would expect hover see contents react component rendered ever see way react land clean code separate components render components dataattributes", "num": "2392", "d": "10/2014"}, {"title": "feature request dynamic object literal property keys", "body": "spec would come handy allowing something like", "num": "2391", "d": "10/2014"}, {"title": "attach value nonform elements retrieve value", "body": "corresponding jsfiddle basically trying create auto suggest list trying attach onclick handlers list elements assign values however evttargetvalue retrieve value clicked list element wrong", "num": "2390", "d": "10/2014"}, {"title": "regression null key handling possibly intentional", "body": "code foo bar assigned implicit keys children gives error warning flattenchildren encountered two children key child keys must unique two children share key first child used renders foo key cast string reactelement gets checked null traverseallchildren guess okay intentional broke part ka upgrade sebmarkbage cc jdan", "num": "2386", "d": "10/2014"}, {"title": "strange behaviour svg defs", "body": "found case two similar functions output exactly dom element work different ways missing something difference moved defs block render function renderdefs function var mainview reactcreateclass getinitialstate function return showdef false changedefs function renderdefs function thisstateshowdef return null return render function var fillstyle thisstateshowdef fill url fill red return fixme verion nt work clues renderdefs function thisstateshowdef return null return render function var fillstyle thisstateshowdef fill url fill red return thisrenderdefs", "num": "2380", "d": "10/2014"}, {"title": "question flow released month", "body": "subject important waiting atscale conf", "num": "2379", "d": "10/2014"}, {"title": "new method implicit keys traverseallchildren", "body": "current state implicit keys react psuedojsx good reconciles good reconciles bad destroys bad destroys propose arrayset ignore tailing subarray indices value root child index currently case except broken objects first reactnode every array reconciles depth want improve maps reconcile way previous indices discarded map encountered possibly discarding entire computed name far even pseudojsx showing new indices would computed discarded examples top reconcile correctly cc sebmarkbage", "num": "2378", "d": "10/2014"}, {"title": "deprecate isvalidclass", "body": "deprecate isvalidclass function returns object render method valid class probably nt want assume valid prototype nt allow module pattern used really difficult validate without invoking static type system shines dynamic check isvalidclass would turn nt need function generally want validate something extra class anyway eg method render table cell", "num": "2374", "d": "10/2014"}, {"title": "reactcsstransitiongroup specify component properties", "body": "reactcsstransitiongroup default render span component introduce new dom element need counted css example using flex box layout html problems see span default inline element need redefine css styles css becomes complex example require write css like working example reactjs documentation offers two options use reactdomdiv write component ok write component flewrow flexcolumn flexdirection column solution endup lot components basically render one div element different classes flexrow flexrowreverse flexcolumn flexcolumnreverse way specify properties transition group component nt find anything source code documentation", "num": "2371", "d": "10/2014"}, {"title": "rendered markup roots added reactmount node cache", "body": "reactmount caches children parent visits avoids worstcase exponential cost however use reactdomidoperations updates forces reactmount populate cache previous children newly rendered node needs found children parent newly rendered root retraversed exist node cache since guaranteed siblings newly rendered roots cached reference node trivial manually add node cache avoid doubletraversals entirely", "num": "2365", "d": "10/2014"}, {"title": "internal api terminologynaming", "body": "actually takes element following also named mount another component perhaps necessary inherited exposed user classes go etc clarity callsites perhaps true guess justification loops back actually intended cc sebmarkbage zpao", "num": "2354", "d": "10/2014"}, {"title": "use arrays children reactcreateelement", "body": "thought bring set stone since intended mostly nonuser feature understand would nt make sense take opportunity also change signature avoid varargs potential perf boost nonscientific test ps hmm guess already support simply providing array children seems touching significant slowdown relatively necessarily practice cc sebmarkbage", "num": "2351", "d": "10/2014"}, {"title": "update docs", "body": "bunch things need documentupdate x new terminology elements nodes x rewrite jsx depth bit tough update piecemeal x factory usage best practices x changes x fix documentation changes x newfixed dom attributes x docs license x new methods old methods x authors amp acknowledgements addons update probably mention", "num": "2347", "d": "10/2014"}, {"title": "mixin render unordered mode like sets", "body": "similar would love tell react component nt care order render elements minimize dom operations maintain elements key effect whenever rerender happens react removes elements longer new elements appended end order never accounted sets may available many browsers would love similar feature implemented objects explanation right passing array children keys property order preserved usually correct behavior however projects using trick famous render elements using values instead case elements anyway actual order dom matter major benefit trick eliminates almost dom operations except updating styles page reflow paints great performance problem react maintaining order children react reorders dom elements anyway ways keep track every render manually reorder data prevent rerenders got better way", "num": "2346", "d": "10/2014"}, {"title": "refer window object", "body": "timer example pass cause keyword function point object works ca nt figure", "num": "2342", "d": "10/2014"}, {"title": "reacttransitiongroup overwrites children ref prop", "body": "uses children overwrites prop see", "num": "2341", "d": "10/2014"}, {"title": "adiacent blocks", "body": "hi looking already issue nt find anything open bug however feature request right things like jsx needs enclosed container possible allow without container thanks", "num": "2338", "d": "10/2014"}, {"title": "testutilssimulatemousedown nt trigger focus event", "body": "code js jsx reactdom var button reactcreateclass render function return test handlemousedown function consolelog handle mouse handlefocus function consolelog handle focus var button reactrendercomponent documentgetelementbyid content reactaddonstestutilssimulatemousedown buttongetdomnode outputs expected output like real browser demo", "num": "2336", "d": "10/2014"}, {"title": "jsx compile string instead object instantiation", "body": "example opt convert instead", "num": "2335", "d": "10/2014"}, {"title": "custom events", "body": "wondering considered way make custom events something like could used parent component could look like perhaps course might already possible considered nt find information thoughts", "num": "2334", "d": "10/2014"}, {"title": "missing important info post", "body": "hi think article forgot mention need put make test suite work omitting put lines npm config resulted test error namely think suite nt knew find resources mentioned article sorry nt find anything cheers jim", "num": "2333", "d": "10/2014"}, {"title": "onchange fire multiple times single change", "body": "run code select text type character show changes rather one think anyone really cares would notice", "num": "2332", "d": "10/2014"}, {"title": "nasty user input bug", "body": "use backspacedeletepastecut input field undo notice entire document revert redo type something boom react throw invariant stop function dom mutated normally dom updates clear undo history inputs however happen circumstances reason would assume listens many different events broken like var app reactcreateclass getinitialstate function return changes handlechange function e thissetstate changes thisstatechanges render function return thisstatechanges thisstatechanges null reactrendercomponent documentbody test cc spicyj", "num": "2331", "d": "10/2014"}, {"title": "attribute support number", "body": "data attribute formatted wo nt rendered html example notice show rendered result", "num": "2329", "d": "10/2014"}, {"title": "figure sometimes undefined", "body": "exists places code able reproduce anyone idea", "num": "2328", "d": "10/2014"}, {"title": "reactdominput unnecessarily traverses node mount", "body": "preferable access directly", "num": "2327", "d": "10/2014"}, {"title": "using sidebyside provokes invariant errors browserify", "body": "using different modules provoke invariant errors mixed together use either components required also provoke invariant errors used inside components regression since reactaddons made specifically reason since marked deprecated", "num": "2326", "d": "10/2014"}, {"title": "immutability helpersupdate would nice also include inc", "body": "one important list would really useful updates shared space used client side server side way nt need rewrite logic places nt know useful would nice addition", "num": "2325", "d": "10/2014"}, {"title": "title tag loses datareactid parsed", "body": "parser seems ignore attributes tag losing datareactid documentqueryselector title getattribute datareactid null react later complain working around small wrapper component resets attribute added", "num": "2323", "d": "10/2014"}, {"title": "using img onerror within array map", "body": "hey guys trying generate list images using arrayprototypemap want use onerror function image found please take look fiddle clue wrong", "num": "2321", "d": "10/2014"}, {"title": "unhelpful error two react components responsible updating div", "body": "moron two separate react components responsible div nt quite obvious real life ultimately boiled caused whole page freeze browser killed warning error react gave help trying diagnose issue react attempted use reuse markup container checksum invalid generally means using server rendering markup generated server client expecting react injectednew markup compensate works lost many benefits server rendering instead figure markup generated different client server", "num": "2319", "d": "10/2014"}, {"title": "support insertion points", "body": "web components used intertion point something react work could like coffee reactcreateclass render gt div b reactcreateclass render gt div b b supposed work even find inserting components sending props looks quite ugly several nodes insert better solutions", "num": "2318", "d": "10/2014"}, {"title": "update examples reactcreateelement", "body": "least one nt use jsx", "num": "2315", "d": "10/2014"}, {"title": "need show message devtools installed", "body": "every time run react get message despite aleady installed bug plan disable message", "num": "2314", "d": "10/2014"}, {"title": "list property updated correctly", "body": "testcase code basically jsx says one big another rerender attribute updated", "num": "2309", "d": "10/2014"}, {"title": "go github first", "body": "making efforts move development react happen github first facebook simply another consumer historically mostly done opposite way prs needed pulled fb ensure nt break products etc result moved slow occasionally dumped large changesets without context syncing commits worked awkward resulted mistakes something way data flow dangerous number things need internally externally wo nt happen overnight use issue track things need externally make lint work consistently noisy unusable right faster everything basic buildtest process slow jest helps resolve differences internal external code reactversion commentedout warnings", "num": "2307", "d": "10/2014"}, {"title": "drop reactlink hooks controlled components", "body": "reactlink supports sort adhoc twoway data binding found distraction rather helpful nt plan adding core outside addons anyway take support controlled components make wrappers used instead controlled components put wrappers addons provides backwards compatibility without legacy remain core", "num": "2302", "d": "10/2014"}, {"title": "nonsensical names test methods", "body": "scryrendereddomcomponentswithclass kind joke name scary stand something else", "num": "2301", "d": "10/2014"}, {"title": "extending lifecycle direct communication component tree", "body": "want extend lifecycle react components giving children declared thispropschildren opportunity vote whether ready rendered asynchronous fashion want postpone actual rendering ready one usages would showing loading animations root component rather children want something like problem direct access actual component descriptors call customdefined methods component using static methods also resolve problem may rely component current state acceptsmount implementation ideas achieve", "num": "2299", "d": "10/2014"}, {"title": "safari bug attempted assign readonly property", "body": "specific safari breaks updatejs addon place fixed", "num": "2298", "d": "10/2014"}, {"title": "accept iterables collections children", "body": "react currently accepts arrays children var array spans would excellent generalize concept accept collections iterables collections set map immutablejs variants identified implement result calling iterator iterables array arguments object arrayish things thirdparty data structures identified returning iterator cases left iterator point extracting children becomes straightforward unlocks really useful things use immutablejs react efficiently var data immutablevector b c datamap str gt strtouppercase use generators var data function yield yield yield data", "num": "2296", "d": "10/2014"}, {"title": "scroll momentum stopped rendering", "body": "see jveux react version infinity know updated version react get result works seamlessly let go trackpadmagic mouse know momentum scrolling kicks scrolling suddenly stops rerendering reduced testcase experiment get result change color visible items vs nonvisible ones lag little bit lost struggling days trying different ways implement infinity react known issue issue hintsworkarounds", "num": "2295", "d": "10/2014"}, {"title": "better api assigning keys components", "body": "describes key attribute assigned one ways providing object objects unordered hack described try work around fact problem unspecified implementationdetail think bad idea rely unspecified implementationdetail nothing preventing browsers changing order past example see specifically later comments note differences browsers understand days browsers maybe reached consensus faster way objects see changing also think better api code basically wants array pairs object nt support array key component instead afterwards objectbased solution could deprecated", "num": "2294", "d": "10/2014"}, {"title": "react mutates event objects", "body": "code accesses eventtarget asynchronously surprise react mutating event object removing useful properties synchronously emitting event seems like broken behavior html react mutating event objects react mutating event objects", "num": "2293", "d": "10/2014"}, {"title": "removing leave classes csstransitiongroup nt work well alternative batching strategies", "body": "hi probably design wanted make sure problem using together raf batching strategy aware raf batching officially supported works well solves quite problems app nt want give problem following removes classes calling really necessary batching strategy default may raf result classes removed tick element removed dom thus element flickers move calls behind condition transition group behaves fine missing something edit indeed missing situation fire another case wo nt work still wish way around", "num": "2292", "d": "10/2014"}, {"title": "call setstate onblur stops event propagation necessary use windowsettimeout bug flux", "body": "callback onblur call setstate based state buttons may removed screen problem one buttons callback needs run onblur caused clicking button setstate called onblur callback callback button onclick run maybe technically visible verified button callback works fine onblur callback call setstate worked around issue using windowsettimout calls setstate right approach bug flux callbacks nt run expectation callbacks would run setstate calls would cummulative thanks advice", "num": "2291", "d": "10/2014"}, {"title": "reactaddonscsstransitiongroup nt work inside element chrome", "body": "repro create component renders tag list visible elements wrap inner elements expected elements display transition classes work elements added removed actual elements visible jsfiddle", "num": "2290", "d": "10/2014"}, {"title": "drop uppercasing reactdomcomponenttagname", "body": "works well visually highlighting html tags print somewhat weird svg web components also public property could used purposes would also mean drop internal use unless considerations", "num": "2288", "d": "10/2014"}, {"title": "templates", "body": "idea looking reactjsx examples noticed something place jsx shows render function trivially rendercomponent function ends looking lot like regular html template strange limitation handle looping since template syntax got thinking could probably write templates old templating language programmatically convert react elements could write templates resembling jquery angular django even haml custom parserconverter build react templates could without jsx involved would probably look better wonder main appeal jsx overcome lack multiline string syntax javascript first thinking easy put templates heredoc sting parse use coffeescript exists alternative ways organize things angular reference templates url dev preload page production save requests lot like using requirejs production polymer widget gets html file including element element template behavior side side could done react substitute element available combine html files dynamically dev statically production using vulcanize polymer way seems pretty tempting honestly using polymer instead support p could add looping jsx probably look good already preprocessing script anything possible", "num": "2286", "d": "10/2014"}, {"title": "displayname available instance", "body": "jsx infer component name variable assignment specify class displayname accordingly really available class instance react even set explicitly also componentdidupdate prevstate seems current state sure browserify bundling js tried everything prevstate always logs current state post update", "num": "2285", "d": "10/2014"}, {"title": "warning proptypes", "body": "saw several places code base following issue would nice react warned accidentally write instead", "num": "2284", "d": "10/2014"}, {"title": "highlight", "body": "highlight little second code sample highlights nt change nt highlight line adds", "num": "2282", "d": "10/2014"}, {"title": "event bubbling", "body": "hi ran today issue event bubbling child components parents problem follows child component handles form attaches onsubmit event form submit child handler stuff nt return false event bubbles parent component attaches one onsubmit handler child handler nt get called funny thing attach onsubmit handler element wraps child handlers get called sample code fiddle available js var parent reactcreateclass var child reactcreateclass reactrendercomponent documentbody nt know expected behaviour bug nt found anything related documentation previous issue", "num": "2281", "d": "10/2014"}, {"title": "provide deferupdate method feature request", "body": "hi flux architecture seems recommend react elements bind change event listeners stores call changes occur generally find deferring forceupdate calls useful prevents multiple calls forceupdate tick think idea comes reactmixinmanager provides one implementation personally seen performance boost think using following simple mixin sure good idea generally incorporated react core thought throw meta issues like encouraged frowned upon know large project lot real issues core devs need paying attention", "num": "2280", "d": "10/2014"}, {"title": "drop use reserved words transform jstransform", "body": "seem reasonable spicyj", "num": "2279", "d": "9/2014"}, {"title": "generate xml compatible markup", "body": "take alternative approach discussed think take advantage selfclosing information already reactdom make use reactdomcomponent cc audreyt case interested taking stab", "num": "2278", "d": "9/2014"}, {"title": "add better guard nested renderings", "body": "issue demonstrate problem see cases handled way vs actually encountered case quite difficult see problem real life application warning message helpful possible handle consistantly least include component name available", "num": "2277", "d": "9/2014"}, {"title": "method create batching context react tree", "body": "noticed calls occur dom handler get batched render calling outside handler cause multiple renders method call tree tell enter batching state", "num": "2275", "d": "9/2014"}, {"title": "thisismounted true componentwillmount", "body": "imagine intended valid perhaps need renaming", "num": "2274", "d": "9/2014"}, {"title": "replace setinnerhtml createnodesfrommarkupgetmarkupwrap", "body": "found calls solve largely problem includes fixes submitting issue reminder information", "num": "2273", "d": "9/2014"}, {"title": "feature request warn thisstate touched directly rather setstate", "body": "stumbled across code written touches thisstate directly forces update danger pattern appears work still leaves code vulnerable callers setstate right thing queued overwriting handtouched state understanding red box correctly chance least dev version thisstate could guarded js setter would print warning", "num": "2272", "d": "9/2014"}, {"title": "markup disappears due bad markup", "body": "without thinking much semantics sorts odd effects application seemingly random ui components went missing presumably lt p gt lt gt combination nt valid like markup plain bad got error message react nothing browser application misbehaviour seemed mostly random nt really expect react fix wanted post googling lead nowhere would nice understand things exploding", "num": "2270", "d": "9/2014"}, {"title": "firefox report deadkeydeadkey single combined event", "body": "pressing followed deadkeys reported etc rather immediately followed browsers probably worth normalizing putting posterity", "num": "2269", "d": "9/2014"}, {"title": "gzip builds fbme", "body": "reason nt gzipped", "num": "2264", "d": "9/2014"}, {"title": "reactmount length gc optimization", "body": "doubtful whether claim actually valid testing memory efficiency objects vs arrays found reducing length setting actually increased memory usage significantly reason browsers", "num": "2260", "d": "9/2014"}, {"title": "document justification dangerouslysetinnerhtml html", "body": "", "num": "2256", "d": "9/2014"}, {"title": "allow internal components used browser version", "body": "using flux need reactlibcopyproperties easy browserify requirejs possible uses bower version nt contain copyproperties fn would nice like maybe include lib components possible thanks", "num": "2251", "d": "9/2014"}, {"title": "better svg support namespaced attributes", "body": "trying use react svg document facing problems namespaced attributes instance element cant constructed react cant build jsx xmlns xlink attribute way solve", "num": "2250", "d": "9/2014"}, {"title": "minified version broken", "body": "line setinnerhtml minified reactminjs reactwithaddonsminjs exception thrown line repro modified basic example js", "num": "2247", "d": "9/2014"}, {"title": "api change reactcomponentmountunmount", "body": "currently way verbose considering instance methods component nt take arguments relating component related different might make sense change even think internal methods huge deal cc jordwalke leebyron sebmarkbage note interested working talk us first probably caveats edge cases consider jumping right", "num": "2245", "d": "9/2014"}, {"title": "onchange firing virtual keyboard", "body": "hey writing kiosk type app linux touch device needed virtual keyboard found great chrome extension extension works fine react onchange nt recognize extension jsbased dispatches keydown keyup keypress change events naturally updates element value would nt work thanks", "num": "2244", "d": "9/2014"}, {"title": "ca nt call prototype method mixin", "body": "mixin factory creating mixins many helper methods vary single attribute wanted create mixin prototype save memory seems ca nt call prototypal methods check sample returns appropriate result possible implement", "num": "2243", "d": "9/2014"}, {"title": "support array objects style property", "body": "proposed react future would nice support list style objects style property objects would automatically merged order last object overriding previous one var boxstyle padding background hotpink var bixboxstyle margin width", "num": "2239", "d": "9/2014"}, {"title": "introduce createfactory", "body": "fairly advanced class system integrated react managed make work using stock build refactoring descriptors longer possible know react part public api chance perhaps hidden important us unwrapped version reference method", "num": "2235", "d": "9/2014"}, {"title": "released version", "body": "release important cause know introduce reactcomponents classes support please let know release", "num": "2232", "d": "9/2014"}, {"title": "marginbottom gets dropped sometimes", "body": "product currently developing case value gets dropped react sometimes unfortunately could nt manage reproduce issue attempts reduced test case ca nt post link unreleased product yet thought report anyway case someone additional information go basically case application components whose style value set object something like values dependant screen size listened updated something like however noticed resizing screen often components end vertical margin know caused react tried logging value assigned sound actually even called hit behavior something makes problem go away setting style instead application running tried still reproducible", "num": "2231", "d": "9/2014"}, {"title": "remove flux docs", "body": "basically keeping copies documentation sync failing point maybe make permalinks site redirect link offsite also look links docs pointing pages update", "num": "2229", "d": "9/2014"}, {"title": "csstransitiongroup enter transitions work safari chrome", "body": "best explained demo hit go times new numbered boxes fly left old numbers boxes fly right leave transitions working fine enter transitions activated new numbers simply appear place affects chrome safari ipad air iphone css animations whole look work fine", "num": "2227", "d": "9/2014"}, {"title": "jsx quiet flag built module messages", "body": "would nice way make stop printing stderr nt helpful message clogs build logs", "num": "2222", "d": "9/2014"}, {"title": "use named functions object methods", "body": "currently jsx converts following however debugging especially concatenated stuff cli would nice see stack trace method caused exception could achieved easily jsx converted snippet instead", "num": "2216", "d": "9/2014"}, {"title": "warn component passed props nt need", "body": "would cool able get warnings typoed otherwise extraneous props passed component similar warns pass meant could probably even ensure deep validity passed data would useful finding bugs also optimizing hot components making sure shapes aligned obviously would need sort optin like proptypes", "num": "2215", "d": "9/2014"}, {"title": "proptypes range", "body": "think adding feature would allow people specify range number proptypes something like range type would take string represents numerical range inclusive range means last element excluded would similar feel proptype", "num": "2214", "d": "9/2014"}, {"title": "throw warning undefined passed event callback", "body": "maybe valid use case something like yelled would easier debug", "num": "2210", "d": "9/2014"}, {"title": "inifinite recursion caused lifecycle methods trigger rerender", "body": "lifecycle methods cause rerenders potentially end infinite recursion seen happen somewhere bigger application difficult find sure anything react could prevent cases though two reduced examples", "num": "2207", "d": "9/2014"}, {"title": "add proptypesobjectwith", "body": "created personal project works great thought would nice add core want make sure like work pr implementation utils right javascript var utils proptypes objectwith function options return objectwithfn options false utilsproptypesobjectwithisrequired function options return objectwithfn options true moduleexports utils function objectwithfn options isrequired return function props propname componentname var componentprop props propname var errormessage isrequired amp amp componentprop return else isrequired amp amp componentprop errormessage required prop specified else var errors missing extra var prop options var shouldbepresent options prop var hasprop componentprophasownproperty prop shouldbepresent amp amp hasprop errorsextrapush prop else shouldbepresent amp amp hasprop errorsmissingpush prop var missingsome errorsmissinglength var badextras errorsextralength missingsome badextras errormessage prop invalid properties errorsmissinglength errormessage jsonstringify errorsmissing missingsome amp amp badextras errormessage errorsextralength errormessage jsonstringify errorsextra errormessage return new error errormessage tests using mocha chaijs javascript var expect require chai expect var utils require utils describeonly utils function utilsspec describe proptypes function var propname myprop var componentname mycomponent var props empty valid myprop foo present baz present present invalidmissing myprop missing props invalidextra myprop bar foobar either invalidboth myprop bar foobar either missing props let know something like core try create pr also considered making possible specify proptype property rather truefalse thought would acceptable", "num": "2206", "d": "9/2014"}, {"title": "testutils simulateclick used multiple spec files causes test failures using jasmine", "body": "two spec files successfully run execute separately one call simulateclick execute simulateclick click command essentially ignored seconds spec file runs spec file simulateclick calls two different tests works fine removed everything except spec files simplified karmaconf verify issue simulateclick using first spec file runs jsx reactdom var react require reactaddons var testutils require reactlibreacttestutils describe button component function var button second spec file runs jsx reactdom var react require reactaddons var testutils require reactlibreacttestutils describe calendar function var calendar var moment output run together nodemoduleskarmabinkarma start karmaconfjs log button begin log button end log calendar begin log calendar end chrome mac os x calendar display october next clicked failed expected equal error expected equal object lt log calendar begin log calendar end chrome mac os x calendar display august previous clicked failed expected equal error expected equal object lt chrome mac os x executed failed secs secs comment simulateclick first test everything passes jsx reactdom var react require reactaddons var testutils require reactlibreacttestutils describe button component function var button tests pass nodemoduleskarmabinkarma start karmaconfjs log button begin log button end log calendar begin log calendar end log calendar begin log calendar end chrome mac os x executed success secs secs", "num": "2205", "d": "9/2014"}, {"title": "input typenumber nt work empty value", "body": "sample value input always empty works number values type numeric values appear", "num": "2203", "d": "9/2014"}, {"title": "proper react minification", "body": "wondering best way minify react production builds guide christianalfoni wrote comprehensive used boilerplate however adding envify uglify uglifyify build bigger standard reactminjs uglifyify nt seem anything guessing problem since many moving parts hard pin exactly going wrong kind boilerplate would great gulp task looks like mainjs looks like", "num": "2200", "d": "9/2014"}, {"title": "tapeventplugin sending tap wrong element chrome android", "body": "using open drawer tap icon tap icon covered scrim close drawer tap separately chromebook pixel touchscreen iphone works splendidly nexus icon getting touchtap finger still touching lift finger sends another tap scrim closes drawer sample repo demonstrates bug see isolate root cause send pr likely related", "num": "2199", "d": "9/2014"}, {"title": "add striptypes option jsxtransformer", "body": "cf", "num": "2197", "d": "9/2014"}, {"title": "nt rely dom window", "body": "largely dom agnostic couldshould moved folder everything folder unaware dom could running web worker", "num": "2194", "d": "9/2014"}, {"title": "geteventkey implementation inconsistent spec firefox implementation", "body": "inconsistencies keyboard event spec well firefox implemented property correctly set printable characters events works properly firefox interpretation standard firefox behaviour correct spec key generates printable character exists appropriate unicode code point keyboardeventkey attribute must string consisting char value character enter key fires keydown firefox fires keydown keypress chrome consistent across browsers capslock key fires keydown toggled caps lock toggled keydown event fired may browser limitation chrome repro test page firefox compare result chrome", "num": "2193", "d": "9/2014"}, {"title": "components children without dom representation", "body": "need component nt dom representation use render function returns however recently component without dom representation also children want mounted lifecycle methods trigger correctly unfortunately nestable thus return ideal solution way thing without using know plans replace solution null component plans null component mount children", "num": "2191", "d": "9/2014"}, {"title": "hide datareactid dom", "body": "mean generated prop cases may use ids like uuid mongodb quite long putting dom properties look quite ugly messy chance becomes invisible elements panel debugging", "num": "2190", "d": "9/2014"}, {"title": "backbonejquery style alternative notation setstatesetprops", "body": "able changing single item would make things little readable opinion thoughts title says backbonejquery style notation referring alternative jquery alternative backbone", "num": "2189", "d": "9/2014"}, {"title": "onmouseout behave expected nested elements", "body": "given following mouse smaller square within bigger square onmouseout bigger square gets called despite mouse still contained within", "num": "2188", "d": "9/2014"}, {"title": "expose ontransitionend event react components", "body": "event components normalized across browsers supporting transitions fake nt using currently react uses internally however useful cases addingremoving view", "num": "2187", "d": "9/2014"}, {"title": "endash causes onchange fire render", "body": "nt know issue react input initially contains endash fires change event jsfiddle", "num": "2185", "d": "9/2014"}, {"title": "flow diagram component lifecycle", "body": "new developers understanding exactly component functions called confusing read many times failed piece together coherent image detailed reference perhaps contains diagrams would great thing meantime could read source think would benefit others thanks", "num": "2184", "d": "9/2014"}, {"title": "improper context createclass", "body": "react able decorate render method static render returns promise opposed react callback implementation javascript mixinrender function spec var statics specstatics statics specstatics spot weld static render method staticsrender staticsrender staticrenderfactorycall spec return spec function staticrenderfactory spec return function staticrender model node var promisified promisepromisify reactrendercomponent react semidecoration worked well enough purposes returns caller descriptor would expect javascript createclass function spec var constructor function constructorprototype new reactcompositecomponentbase constructorprototypeconstructor constructor however following pattern gives error internal createclass call digging around codebase looks like forgotten context bind", "num": "2183", "d": "9/2014"}, {"title": "video component doesnt support media events", "body": "media events good place might media events particular events like oncanplay oncanplaythrough ondurationchange", "num": "2182", "d": "9/2014"}, {"title": "docs mycomponent create component instance", "body": "hi docs says component classes created reactcreateclass return instances reactcomponent called turns reactrendercomponent actually creates component instance least one work think docs reflect", "num": "2179", "d": "9/2014"}, {"title": "reactlink checkedlink", "body": "supported default file meant file support attributes moved addon ask goal allowing addon provide linking attribute sure possible currently edit reworded last sentence", "num": "2176", "d": "9/2014"}, {"title": "expose api preprocess vdom tree diffing", "body": "one really positive feature react ability proper logic layout eg grids scale ways take account screen size content size however reusability solutions often quite optimal solutions gss allow define things like reusable manner usually supported recent browsers would easier solve reactbased solutions since virtual dom nt depend browser also hooking possible changes tree tedious hard get right without sacrificing performance allowing usercode preprocess virtual dom tree diffing would open doors whole new world styling engines born reading virtual dom tree fast well making changes implications vary styling languages able define custom values apply css aspect ratio hack inject extra dom elements make things centered based element keeping usercode intentoriented clear abstracting away common pains css realize simple change adding hook somewhere instead means exposing vast amount api surface currently considered implementation details also even problematic cases involved however think would potential revolutionize deal styling web pages say worth thinking least", "num": "2174", "d": "9/2014"}, {"title": "implement traceur pass jsx", "body": "nt know google traceur transpiler extras proposed active project plan continue implement proposed javascript changes future think jsx transformation pass traceur would great win two reasons jsx inprogress specification recommended inclusion transpilers one traceur goals experiment new javascript proposals seems natural want jsx since jsx syntactical extension difficult compose jsx transpiler transpilers cool current tool implements features afaik nt implement really hard hitting features like generators definitely nt implement proposals like asyncawait jsx traceur know play whatever new features come without drop xml syntax vice versa ps personal experience asyncawait awesome use conjunction react suppose one blocker issue status jsx proposal anyone idea long take stabilize", "num": "2173", "d": "9/2014"}, {"title": "react tutorial refers outofdate reactlibmerge", "body": "recent checkout react file nt present", "num": "2171", "d": "9/2014"}, {"title": "inner required fields shaped props reported properly", "body": "see example console report barhello probably report whole path inner field", "num": "2168", "d": "9/2014"}, {"title": "null props considered differently getdefaultprops vs isrequired", "body": "case argument passed property marked get proper warning console namehello though probably prop null prop specified anyway hand default value used prop explicitly wanted behavior probably make documentation explicit giving entire responsibility component callers safeguarding", "num": "2166", "d": "9/2014"}, {"title": "setstate callback componentwillmount get called", "body": "spicyj know", "num": "2164", "d": "9/2014"}, {"title": "react nt work android", "body": "saw nt seem related problem use fails load example wo nt execute android", "num": "2163", "d": "9/2014"}, {"title": "unmount component rendered child", "body": "ran scenario prefer code fildde parent contains several children children remove make parent noticed know way unmount node pass container node however case child rendered directly dom node unmount child", "num": "2162", "d": "9/2014"}, {"title": "jsxtransformer nt handle element content", "body": "expected three work actual last one works two throw different errors jsxtransformertransform jsx reactdom error parse error line unexpected token gt jsxtransformertransform jsx reactdom referenceerror invalid lefthand side assignment jsxtransformertransform jsx reactdom object code jsx reactdom reactdomspan classname extra object sourcemap sourcemapgenerator sourcemapfilename sourcejs", "num": "2160", "d": "9/2014"}, {"title": "add additional html tag reactdom", "body": "would like use tag foreignobject inside react need tag inserting html tags like input textarea inside svg elements plan officially support tag future add self", "num": "2157", "d": "9/2014"}, {"title": "create benchmark suite", "body": "create new benchmark suite patterns relevant react write test four different target audiences js engine lowlevel microbenchmarks important language features like objectassign dom engine lowlevel microbenchmarks documentcreateelement innerhtml clonenode updating setting style property etc react core engine lowlevel real worlds tests react algorithm dom layer integration benchmarks real world dom tests benchmarks whole thing need figure format use benchmarks easy incorporate engines benchmark suites also set stable ci environment track regressions one noisy", "num": "2154", "d": "9/2014"}, {"title": "reactcsstransitiongroup jumbles ui", "body": "using react router toplevel render code like words one toplevel item rendered dependant url use reactcsstransitiongroup end situation several components rendered slot one item possibly live happens stock nexus amp ipad seems work fine desktop browser example trigger bug use navigate usersphones use back times framework example code", "num": "2150", "d": "9/2014"}, {"title": "going big react video set private", "body": "nice get back hoping watch really available anymore removed docs", "num": "2145", "d": "9/2014"}, {"title": "incorrect handling sequenceexpression inside xjsexpressioncontainer", "body": "consider following examples javascript reactrendercomponent mountnode translates reactrendercomponent hellomessage name dosmth syntax error ingvar mountnode javascript reactrendercomponent dosmth ingvar mountnode translates reactrendercomponent hellomessage null wrong output dosmth ingvar mountnode sequence expressions used often still believe possible errors fixed possible fix would treat xjsexpressioncontainer parenthesized expression simply add around inner expression output", "num": "2143", "d": "9/2014"}, {"title": "warning rangedetach noop per dom", "body": "hi getting following warning using ctrls shortcut save app state cursor caret selection contenteditable happens chrome raul", "num": "2142", "d": "9/2014"}, {"title": "scrollleftscrolltop exist", "body": "specified htmldompropertyconfig understand probably usecase nt make sense let users setupdate manually dom nodes asking currently emit invalid attributes also nt set properties reusing servermarkup seem really really hacky right cc zpao spicyj yungsters", "num": "2140", "d": "9/2014"}, {"title": "child key taken account set render", "body": "get famous child array unique key warning set keys child items render method yes inspect dom keys set debug realized keys expected child items render method called optimal since want allow child items manage keys js jsx reactdom var seed var listitem reactcreateclass displayname listitem render function var key key seed return var list reactcreateclass displayname list render function var var len thispropslen reactrendercomponent documentbody see jsbin see action child keys taken account really think fixed would allow much greater flexibility support usecases", "num": "2138", "d": "9/2014"}, {"title": "ship", "body": "think want get take ridealongs new elements properties nonbreaking bug fixes list x x x x needs jstransform amp esprima bumps slightly risky needed tooling", "num": "2137", "d": "9/2014"}, {"title": "whitespace option element property variable triggers invariant violation", "body": "minimal example triggers error removing whitespace makes work attach couple screenshots contents whitespace triggers error without whitespace works fine", "num": "2136", "d": "9/2014"}, {"title": "rename dangerouslysetinnerhtml", "body": "thoughts something else prefer sound also makes sense add word use elsewhere could useful contenteditables avoid hacks etc cc sebmarkbage zpao", "num": "2134", "d": "9/2014"}, {"title": "doubleclicking repeatedly fires event", "body": "using ondoubleclick event doubleclicking repeatedly fires event throttling quite generous sequence doubleclick short pause doubleclick produces unexpected effect second doubleclick triggering created demo well quick example nonthrottled doubleclick", "num": "2132", "d": "9/2014"}, {"title": "adding ability add stack", "body": "found many times get errors smart widget trying unmount retrieving information server render errors prevent would execute another using callback setstate inform parents unmount tedious", "num": "2130", "d": "9/2014"}, {"title": "incorrect comment docs key ordering", "body": "dynamic children practice browsers preserve property order except properties parsed unsigned integers numeric properties ordered sequentially properties happens react render components order avoided adding string prefix key nt true react explicitly refactored code way back shortened ids prevent behavior introduced expect workaround dropped future", "num": "2129", "d": "9/2014"}, {"title": "define better way add missing jsx tags react nodes", "body": "svg tags like standard tags nt find way react request provide simple api add existing standard tag", "num": "2128", "d": "9/2014"}, {"title": "add fragment api allow returning multiple components render", "body": "note maintainers know issue know exactly set problem solved want hard problem current architecture additional comments expressing desire feature helpful feel free subscribe issue button right hand column comment unless adding value discussion valuable use cases already written comments eg know ca nt put elements consider following js var managepost reactcreateclass render function var posts thispropsposts remove get following error adjacent xjs elements must wrapped enclosing tag nt till readd surrounding rather pointless divs compiles issue running addressed adds extra imo useless pointless html page harming nothing looks messy unprofessional maybe something wrong please enlighten", "num": "2127", "d": "9/2014"}, {"title": "many rerendering break reactcsstransitiongroup", "body": "prepared fiddle reproduce bug try grabbing range input slide fast left right certain point list breaks dom nodes left forgotten dom never removed also noticed magic number bug case reduce max value less elements bug nt happen", "num": "2126", "d": "9/2014"}, {"title": "onchange handler triggered safari auto fill", "body": "trouble controlled react component handles sign forms user input controlled state posted ajax request submitting form state username password updated event input fields using safari autofill functionality event triggered example typing clicking auto fill suggestion value updated input field correct suggestion state updated added proof concept try steps reproduce go safari fill form username password click sign button safari ask want save login details click save password go type trigger safari autofill click first suggestion input field contain correct sign details state updated", "num": "2125", "d": "9/2014"}, {"title": "wanted blessed access owner", "body": "reactrouter project would really really like blessed way access component bottom render stack time another rendered currently reference owner component using looks like going removed currently trying understand reasons wanting get rid find way satisfy concerns still preserve access component owner way lots places dom api go back tree including parentnode ownerdocument parent ownernode able essentially thing react component api would incredibly useful", "num": "2123", "d": "9/2014"}, {"title": "thinking react page showing jsfiddles", "body": "summary documentation page thinking react showing jsfiddle examples embedded example links opposed steps reproduce go thinking react open web inspector chrome developer tools look errors console current outcome errors appears console desired outcome would like see embedded examples jsfiddle thinking react page", "num": "2122", "d": "8/2014"}, {"title": "switch context use parent tree instead owner tree", "body": "pretty convinced point contexts useful parent tree owner tree also opens new use cases parent child communication nt possible", "num": "2112", "d": "8/2014"}, {"title": "project page update", "body": "hey wandering project page updated specifically wandering classes make", "num": "2111", "d": "8/2014"}, {"title": "tutorial causes warning hook data model section", "body": "finish hook data model bit react tutorial get warning data model nt unique key maybe big deal happy pull request docs let user know expect error problematic maybe another step could added account additional complexity also entirely possible missed something obvious mainly copypasting tutorial code point jsx reactdom var commentlist reactcreateclass render function var commentnodes thispropsdatamap function comment return return commentnodes var commentform reactcreateclass render function return hello world commentform var commentbox reactcreateclass render function return comments var comment reactcreateclass render function return thispropsauthor thispropschildren var data author pete hunt text one comment author jordan walke text another comment reactrendercomponent documentgetelementbyid content nothing special copy pasted examples", "num": "2109", "d": "8/2014"}, {"title": "add support chrome app node type", "body": "using react chrome app seems like nt support tag know pretty specialized scenario nt know belongs core way manually add support tag least single project", "num": "2108", "d": "8/2014"}, {"title": "perf tool incorrectly reports wasted time", "body": "bug difficult describe noticing perf tool incorrectly reporting wasted time even though dom change reproduce visit make sure focused page press start perf recording click gray area press stop perf recording javascript console notice wasted time reported even though time wasted continue play around notice inconsistencies may click several times recording get wasted time original fiddle", "num": "2105", "d": "8/2014"}, {"title": "csstransitiongroup transitions nt fire reliably unless set active class", "body": "example explained readme works example except added method focuses button within component transitioned notice transition fails animate possibly browser bug thought let know anyway also worth noting bug worked around moving like hope helps improve react", "num": "2104", "d": "8/2014"}, {"title": "support svg strokelinejoin attribute", "body": "currently support attribute svg elements implemented line join important see difference", "num": "2103", "d": "8/2014"}, {"title": "rendering instance component nt throw anymore", "body": "app unit tests assuming try render component instance twice throw upgrading nt seem case intentional regression see reduced test cases works fine errors throws error", "num": "2102", "d": "8/2014"}, {"title": "called root component returned render changes", "body": "convoluted hopefully good enough example root node returned render function changes value going change breaks binding unbinding via whenever value going change would nice fired change fired change essentially remounting", "num": "2100", "d": "8/2014"}, {"title": "keep empty string select option value", "body": "provide empty string value attribute using plain js jsx generated markup drops value attribute entirely think value attribute dropped explicitly provided use case select", "num": "2098", "d": "8/2014"}, {"title": "react chrome dev tools unavailable browserified", "body": "use react wo browserify dev tools available use npm react require app using browserify dev tools available solution thanks loving react way", "num": "2096", "d": "8/2014"}, {"title": "react perf set property totaltime undefined", "body": "disclamer low priority enhancement request simply cryptic error message bad react usage could enhanced internal framework always keep full state outside react always rerender top bit like om without local state react template engine code mistakenly triggered rendering rendering componentwillupdate phase internal framework forbid anyway avoid infinite rendering loops mesure renderings somehow lead following code permits easily reproduce error jsx reactdom var hello reactcreateclass componentwillupdate function reactaddonsperfstart reactaddonsperfstop reactaddonsperfprintwasted render function return hello thispropsname var component reactaddonsperfstart reactrendercomponent component documentbody reactaddonsperfstop reactaddonsperfprintwasted reactaddonsperfstart reactrendercomponent component documentbody reactaddonsperfstop reactaddonsperfprintwasted yes probably bad usage react cryptic error message could made explicit wrong", "num": "2095", "d": "8/2014"}, {"title": "forms mishandle submit enter key", "body": "react seems executing first event handler attached elements form rather executing onsubmit handler hitting enter key jsfiddle", "num": "2093", "d": "8/2014"}, {"title": "support media events", "body": "currently media events supported makes working audio video tags react pain ass also still many missing attributes audio video tags find strange tags completely unsupported probably removed list documentation reduce confusion properly supported", "num": "2090", "d": "8/2014"}, {"title": "html space special code became broken characters precompiling", "body": "precompile jsx found html space special code become broken characters avoid anyone meet thanks", "num": "2089", "d": "8/2014"}, {"title": "work even precompiled", "body": "use jsx tool linux precompile code still work error message shows problem happens line around codes javascript var invariant require invariant constructs enumeration keys equal value example var colors keymirror blue null red null var mycolor colorsblue var iscolorvalid colors mycolor last line could performed values generated enum equal keys input output param object obj return object var keymirror function obj var ret var key production processenvnodeenv invariant obj instanceof object amp amp arrayisarray obj keymirror argument must object invariant obj instanceof object amp amp arrayisarray obj key obj objhasownproperty key continue ret key key return ret moduleexports keymirror also use browserify manage codes sure related anyone help thanks", "num": "2088", "d": "8/2014"}, {"title": "document callback", "body": "callback reactrendercomponent called set toplevel component see nt documented probably case someone relies behavior", "num": "2087", "d": "8/2014"}, {"title": "bootstrap model example nt work bootstrap", "body": "bootstrap model example nt work bootstrap update bootstrap modal nt open button nt show properly click text fade black stops way app seizes", "num": "2085", "d": "8/2014"}, {"title": "error unmountcomponentatnode receives nonnode eg array", "body": "rendercomponent throws passed nonnode unmountcomponentatnode", "num": "2079", "d": "8/2014"}, {"title": "image src image object", "body": "nt see way vanilla js something along lines var image new image imagesrc heavyimagefilejpg documentqueryselector img src image great able pass object concretely using file upload previews", "num": "2077", "d": "8/2014"}, {"title": "unify mount update component lifecycle methods", "body": "kind related seems natural correlation mount update methods many situations want code mountupdate put shared method call places hardly common enough issue seems common enough strikes bit odd perhaps idea could make sense eg get rid mount altogether instead following extreme perhaps example mounting getinitialstate componentwillreceiveprops update false componentwillupdate update false componentdidupdate update false updating componentwillreceiveprops update true shouldcomponentupdate componentwillupdate update true componentdidupdate update true would unify lifecycle move away mounting treated entirely separate updating would seen exception would less potential inconsistencies causes mistakeneglect nt thought extensively bring mainly start discussion know many others wondered nt lifecycle method mountupdate", "num": "2074", "d": "8/2014"}, {"title": "component lifecycle methods update", "body": "good everything makes sense mounting need update state nt based new props place seems sure stick componentwillreceiveprops puts shouldcomponentupdate bad componentwillupdate seems like obvious choice allowed good reason nt personally nt think many reasons call setstate componentwillupdate encountered scenario two would like call setstate shouldcomponentupdate ie componentwillupdate", "num": "2073", "d": "8/2014"}, {"title": "output jsx syntax errors throw errors load", "body": "would awesome jsx parser errors would nt end terminal would actually output valid code would throw error load client instead would make virtually transparent jsx used simple solution would simply output error message asis fileline baked imagine source map trickery could even make look browser threw error correct source location", "num": "2072", "d": "8/2014"}, {"title": "remove href attribute", "body": "remove href attribute", "num": "2071", "d": "8/2014"}, {"title": "render href attribute", "body": "renders render", "num": "2070", "d": "8/2014"}, {"title": "svg image element", "body": "please add support svg image element thanks", "num": "2069", "d": "8/2014"}, {"title": "update testutils docs website", "body": "file date etc website date", "num": "2064", "d": "8/2014"}, {"title": "enterleave event triggers extra calls nested roots", "body": "enter inside square enter expected nothing happen recorded instead exiting", "num": "2063", "d": "8/2014"}, {"title": "ontouchtap triggering handler twice", "body": "using application calls every handler twice calls triggered different events first time second time generated browser click nt make sense think prevent triggering event triggered touches sure good way guess calling inside wisest solution", "num": "2061", "d": "8/2014"}, {"title": "props immutable objects", "body": "started using immutablejs together reactjs however noticed passing around immutable objects nt quite fit together reactjs ie myobject myobjectsmap object gt reactdomdiv proptypes nt quite support without first converting js object unnecessary overhead thoughts advice issue", "num": "2059", "d": "8/2014"}, {"title": "ref helper", "body": "thisrefs something verbose helper", "num": "2057", "d": "8/2014"}, {"title": "onclick mobile fired", "body": "put together test case replicates issue desktop browsers click handler triggered correctly code ios mobile devices tested simulator actual devices fire event works fine android", "num": "2055", "d": "8/2014"}, {"title": "onchange event input type range nt fire", "body": "browsers works expected onchange also oninput event nt get triggered ie jsfiddle", "num": "2048", "d": "8/2014"}, {"title": "contenteditable element caret position jumps", "body": "hi nt think really bug fixed easily annoying behavior see cursor jumps unexpectedly contenteditable element rerendered mean always use contenteditable elements uncontrolled components", "num": "2047", "d": "8/2014"}, {"title": "give example production ready workflow react js", "body": "hi great time working react js big issues setting good workflow libraryframework sites examples getting started simple developers considering react js need put workflow currently experience difficult figure wrote post experienced getting react js running workflow ending browserify react js browserify workflow points difficult suggests solution hope help people request really put example workflow setup react js site would make lot easier developers adopt library thanks great contribution world javascript", "num": "2046", "d": "8/2014"}, {"title": "clearer warning replacing reactrendered children new root component", "body": "suppose js var taskheader reactcreateclass render function return task reactrendercomponent taskheadercontainer intend run replace header accidentally run instead get error warning blowing away reactrendered contents none given actually get serverrendering checksum warning confusing anything explicit warning much like one get calling setprops nonroot component", "num": "2045", "d": "8/2014"}, {"title": "proptypescomponent false reactdom", "body": "example js var mq reactcreateclass displayname mediaquery proptypes component proptypescomponent render function return null mq component reactdomdiv currently way check dom els custom components proptypes", "num": "2044", "d": "8/2014"}, {"title": "attach event per react container root rather document", "body": "nathansobo help event perf issues bit familiar atom plugin infrastructure help two nt help though ideas optimize events bit nonetheless ok idea think spicyj", "num": "2043", "d": "8/2014"}, {"title": "allowfullscreen work", "body": "check jsfiddle according docs allowfullscreen supported ca nt seem able jsfiddle page shows iframe get attribute", "num": "2041", "d": "8/2014"}, {"title": "react component library", "body": "hey sure right place put created little onepager hope become collection useful andor cool react components located leesalminengithubio guys interested think could become popular link docsreadme thanks sorry wrong place", "num": "2040", "d": "8/2014"}, {"title": "normalize dom access across browsers", "body": "appears order access real dom crossbrowser way need use something like jquery react slowly chipping away need include jquery normalizing events make sense go example instead realize may scope react already discussed somewhere decided upon close ticket one beautiful thing react usually allows us alway work firstclass dom occasionally need reach actual dom get hands dirty would awesome load jquery deal crossbrowser issues much native browser recreated react like virtual dom selection events way access real dom without rebuild jquery references real dom nodes virtual dom clever tricks may already way nt see may scope thought would ask thanks", "num": "2034", "d": "8/2014"}, {"title": "behavior", "body": "javascript var foo createclass componentwillmount function alert mounted foo componentwillunmount function alert unmounted foo render function return reactdomdiv hello thispropsname var bar reactcreateclass componentwillmount function alert mounted bar componentwillunmount function alert unmounted bar render function return reactdomdiv hello thispropsname unmounts component reactrendercomponent foo name world documentbody reactrendercomponent foo name documentbody reactrendercomponent bar name world documentbody reactrendercomponent bar name documentbody function createclass spec return function props return reactcreateclass spec props sure going component get unmounted component seems like difference two ways calling", "num": "2032", "d": "8/2014"}, {"title": "releasemaintain typescript bindings dts reactjs", "body": "really like react kinda hate javascript due lack typing typescript looks good party bindings truly terrible constantly breaking generally versioned well immutable js collections released recently facebook include typescript bindings fills us hope maybe might happen react please make aware jsx wo nt work typescript big loss prefer pure script plays nicer existing js tools", "num": "2029", "d": "8/2014"}, {"title": "reactcsstransitiongroup multiple transitions enter", "body": "sorry dupe could nt really tell animation bugs noticed csstransitiongroup class nt seem handle multiple transition properties enter well take example actiontrayenter transform translatey opacity transition easein actiontrayenteractiontrayenteractive transform translatey opacity actiontrayleave transform translatey opacity transition easein actiontrayleaveactiontrayleaveactive transform translatey opacity try remove node enter animation still occurring looked like abruptly removing node without triggering leave animation switch one property enter animation works expected wait enter animation finish trigger leave animation provide fiddle later", "num": "2024", "d": "8/2014"}, {"title": "sync updated objectassign polyfills", "body": "make sure include specific pieces", "num": "2023", "d": "8/2014"}, {"title": "inline styles vendor prefix values", "body": "would write following css using inline styles would nt nice react could internally automatically handle vendor prefixes similar stylus nib", "num": "2020", "d": "8/2014"}, {"title": "reactclasssetvalue inside mocha test using jsdom causing interesting problem", "body": "running spec inside linked gist cause following problem stacktrace attached gist likely jsdom problem", "num": "2019", "d": "8/2014"}, {"title": "support tag", "body": "tag available chrome chrome behind flag trying use initially confused nt added dom adding reactdomjs seems enough work really familiar react code hoping support added soon documents element info demos", "num": "2017", "d": "8/2014"}, {"title": "deprecate return false event handlers", "body": "currently support makes code less understandable like stop supporting encourage people use either epreventdefault estoppropagation appropriate", "num": "2015", "d": "8/2014"}, {"title": "let use inheritance componentdidmoubt", "body": "consider following js var mixinnamehere var componentnamehere reactcreateclass work see declared existence twice would fair nt libraries underscore similar libraries make use lets us question one likes abstract common logic use inheritance mix backbone react use inheritance say component mount yes oh call parent", "num": "2012", "d": "8/2014"}, {"title": "relatedtarget blur event firefox returns null always", "body": "basically relatedtarget returning null time chrome returning correct value clicking actual element return null clicking outside document ok something firefox natively patch case make cross browser syntethic event example click first input second see console relatedtarget chrome b null firefox", "num": "2011", "d": "8/2014"}, {"title": "improve flux documentation", "body": "read flux todomvc walkthrough first kudos complete description flux seen last time explored react doc nt written yet existing event story event bubbling nt supported pass listeners callbacks dom scared flux much sensible model thanks describing detail two pieces feedback maintaining private data structure called todos variable lives outside class within closure module remains private directly changed outside helps us preserve distinct inputoutput interface flow data making impossible update store without using action strictly true method returned ok stands oblivious caller could modify result inplace without going store methods effectively move creating semantic actions earlier walkthrough first thing wonder seeing look like second thing many layers abstraction would nt replacing line thing direct way glad see semantic actions section doubt created additional concept actions nt needed still could nt help wonder nice see reservation directly addressed documentation worth still convinced significantly cleanermore semantic free probably prefer former however knowing write maintain class remember adds weight mental model friction development pace nicer syntax nt communicate anything clearly hate writing boilerplate", "num": "2009", "d": "8/2014"}, {"title": "stop defensively copying style object domcomponentupdatedomproperties", "body": "right copy one hottest paths react allow users mutate style object afterward come realize pattern nt come often since style often created inline inside retained additionally coming soon people could always clone style need jordwalke", "num": "2008", "d": "8/2014"}, {"title": "mention facebook immutablejs project somewhere", "body": "think mentioned somewhere react documentation advanced immutable cases nt aware project loved good place could", "num": "2006", "d": "8/2014"}, {"title": "resolving implicit thead lead invariant violation", "body": "internet less unavailable right ca nt test thoroughly thinking seems blindjumps detect resolve implicitly added elements mainly appears actually safe asis personally feel like solution resolve implicitly added elements rather tell user hisher error instead fix related pr provide friendly path reactid errors reactmount", "num": "2005", "d": "8/2014"}, {"title": "nt run child key validations using dom nodes children", "body": "work trigger warning try enumerate keys object", "num": "2001", "d": "8/2014"}, {"title": "typeo documentation", "body": "small typeo documentation bottom cautions bullet point make sure never access property specified string make sure never access property specified string", "num": "1999", "d": "8/2014"}, {"title": "objectassign polyfilled environment", "body": "goes policy afaik dealing polyfillsshims want ship polyfill returned shim global object", "num": "1998", "d": "8/2014"}, {"title": "documentation bug", "body": "example contains following code wo nt return due automatic semicolon insertion", "num": "1996", "d": "8/2014"}, {"title": "rfc dynamically add external listeners componentwillunmount", "body": "quite common external apis nt really belong component mustfavor notified instance unmounted currently solved making api mixin imho wrong solution propose able something like examples well aware could perhaps implemented thirdparty mixin instead common simple enough usecase unified implementation least worth bringing think would useful bridging many apis without use mixins edit published experimental mixin js simple suboptimal use componentdidmount function var p extapisendrequest thisaddeventlistener unmount pabort nonretainingleaking version componentdidmount function var p extapisendrequest thisaddeventlistener unmount pabort poncompleted function thisremoveeventlistener unmount pabort bind perhaps lockeddown unmountonly api api designed mind wrapped helper", "num": "1992", "d": "8/2014"}, {"title": "clonewithprops keyref intended behavior", "body": "petehunt sebmarkbage number people ask irc really sure answer current situation seems illogical js key ok ref ok key ok ref ok js key okerr possibly unexpected conflicts ref ok key ok may conflict ref ok js key ok ref ok key ok ref ok js key err discarded ref err discarded clonewithprops err support arraysobjects js key ok ref ok key ok ref ok would expect work like think perhaps even preferable like implemented wo nt actually add props children asis imagine missing something current situation seems fundamentally plain broken using asis dangerous destroys ownership understand change ownership local instance intended usecase behavior sure expected behavior would either seems like keys concatenate refs kept ie multiple owners related", "num": "1991", "d": "8/2014"}, {"title": "uncontrolled ignores setstate", "body": "calling uncontrolled lead expected result example pressing button reset state input fields default element resets expected debugger method gets correct initial data changes dom occur bug implementation correctly understand essence uncontrolled input fields case reset value initial state", "num": "1986", "d": "8/2014"}, {"title": "jsx tool processes files match given extension", "body": "running jsx following command line folder watched jsx also generating unreasonably large json file nt ask whenever recreated json file jsx would register change process json file shown following console output behaviour nt would expect passing arguments watch jsx files side note think jsx trying process json file unable handle large file crashed think subject another bug report", "num": "1983", "d": "8/2014"}, {"title": "serverrendering distinct clientrendering", "body": "kind related concerns polyfills seems really treat serverrendering distinct clientrendering different requirements priorities serverrendering able generate optimal markup seo markup must also fully crossbrowser compatible small markup preferable clientrendering sees seo largely irrelevant full crossbrowser compatibility also irrelevant rendering performance greater importance propose treat serverrendering uniquely distinct clientrendering eg separate flag would default true document available even imaginable could extend eg would optionally allow markup tailored specific purpose reusing serverrendered markup clientside client initial serverrendering pass passed exact props time serverside rendering instances actually allocated client immediately afterwards clientrendering pass done props current time like instancesmarkup efficiently reused add significant costs little dom manipulation involved really affected use serverrendering seems like correct way approaching opposed rendering everything exactly however working element polyfills without made generate sensible serverside markup ps realize done today using global mixin without standardized solution unlikely thirdparty polyfill components could ever participate nt mean needs shipped react even none requires core support believe long standardized", "num": "1979", "d": "8/2014"}, {"title": "export standardized tagnameequivalent overloaded reactdomcomponents", "body": "trying polyfill browser elements currently consistent guaranteed safe way detect overloaded reactdomcomponents one way safe use polyfilled implementations another way dirty expecting polyfilled components hide behind display name polyfilled react dom element nice actually issue right implementing polyfilled elements element element child safe use companion polyfilled overloaded implementation safestandardized way detect currently", "num": "1978", "d": "8/2014"}, {"title": "jsx transformer done event", "body": "would nice jsx transformer event could listen order know scripts done processing development mode pattern treat external js files libraries call html templates script blocks however jsx nt know processed yet", "num": "1977", "d": "8/2014"}, {"title": "variable reactdom jsx compile result", "body": "hello jsx compile markup functions markup complicated result become wordy repeating would greate refer reactdom variable example within compiled method would performance less object property lookup would better minified", "num": "1975", "d": "8/2014"}, {"title": "button eat mouse events", "body": "unsure react specific browsers things difference crossbrowser behavior tested react following pattern fires event handlers chrome safari button handler firefox var button reactcreateclass onclick function e consolelog onclick handledown function e consolelog handledown handleup function e consolelog handleup render function return reactdombutton onclick thisonclick hello reactdomcanvas onmousedown thishandledown onmouseup thishandleup reactrendercomponent button documentbody", "num": "1973", "d": "8/2014"}, {"title": "provide q options suppress unnecessary console output", "body": "would nice jsx tool provided mechanism suppress output common pattern used command line tools would provide option although alternative would suppress output default provide option make verbose output", "num": "1971", "d": "8/2014"}, {"title": "possible use react without container element", "body": "switching atom react want support backwardcompatible shims previous view framework old framework views represented jquerywrapped dom elements ideally like provide backwardcompatible shims simply rendering react component wrapping root element jquery wrapper api compatible old editor views would essentially look like javascript var editorroot documentcreateelement div reactrendercomponentwithrootelement editor props editorroot element would actually wrapped custom subclass jquery clearer example var editorshim editorroot currently nt possible react components need rendered container instead need create wrapper element render component inside sad adds extra layer markup confuses styling also means editor wrapper used via shim layer wrapper embedded child via react something fundamental preventing react adopting dom nodes directly without parent something could even hack way would somewhat maintainable heart", "num": "1970", "d": "8/2014"}, {"title": "prevent event bubbling child parent", "body": "live demo show bug brief parent component button button clicked dynamic rendered component mounted child element parent parent newly mounted child handler case click child node click event handled child parent even child event handler", "num": "1967", "d": "7/2014"}, {"title": "nt add toplevel events uncontrolled inputs", "body": "documentwide handlers native events perform synthetic event dispatch execute milliseconds machine realize nt seem like much time really trying shave nonessential source latency typing cursor movement atom every little bit helps disabling synthetic events saving latency keystroke fork added ability add property native event opt synthetic dispatch interested official mechanism opting feature certain event types even better perhaps react could maintain cache event types actually listened bail soon possible handling event", "num": "1964", "d": "7/2014"}, {"title": "reacttextcomponent string props clashes clonewithprops", "body": "effect seen gist uses reactbootstrap relevant excerpts source trying fix boostrap lib seem like bit gotcha anyway documented way decide safe supposed work current descriptor scheme things", "num": "1962", "d": "7/2014"}, {"title": "transitiongroup nt call willenter correctly child callback immediate", "body": "code outputted instead one missing works correctly uncomment", "num": "1959", "d": "7/2014"}, {"title": "error thrown definemanymerged duplicates sucks", "body": "mergeobjectswithnoduplicatekeys tried merge two objects key understandably general given used merge couple things actual use case shh used mixin component return object key make error mention something methods people idea look instead coming irc rightfully confused", "num": "1957", "d": "7/2014"}, {"title": "key event issues", "body": "documents things confusing seemingly broken around key events let fixclarify things cc syranide salier", "num": "1955", "d": "7/2014"}, {"title": "nit jsx command adds trailing whitespaces compiled files", "body": "happens using least possibly others js jsx reactdom var trailing space compiles js jsx reactdom var foo p bar trailing space added qux null please ignore invalid comment syntax added highlight issue unwanted trailing spaces easily mess use vcs probably good practice version compiled files sometimes nt option could use another tool chain cleanup tbh seem obvious jsx compiler nt add trailing spaces compiled files", "num": "1954", "d": "7/2014"}, {"title": "transitiongroup wrapper interferes component refs", "body": "hello encountered unexpected behaviour wrapping list items refs eg refs longer found component unless wrap item extra element eg problem seems occur works fine created test wrapper component also worked please see attached fiddle contrived example focus new list item click button many thanks brendan", "num": "1950", "d": "7/2014"}, {"title": "transitiongroup buggy null children", "body": "feel like million issues seems like switching nt perform exit animation two components probably", "num": "1949", "d": "7/2014"}, {"title": "functions statics get chained duplicate keys", "body": "logs js var statics moo function consolelog var x reactcreateclass mixins statics moo function consolelog b render function xmoo seems weird inconsistent behavior nonstatic functions change give error", "num": "1947", "d": "7/2014"}, {"title": "iscomponentoftype missing", "body": "reactaddonstestutils seems missing iscomponentoftype still documented alternative", "num": "1946", "d": "7/2014"}, {"title": "investigate returning arrays flattenchildren small lists children", "body": "transitjs map implementation uses arrays store mappings small numbers keys sounds like give performance benefits cases swannodette transit map set faster object set probably worth investigating whether performance gains get adopting similar strategies related transit source", "num": "1945", "d": "7/2014"}, {"title": "unnecessary reflow due setstate componentwillreceiveprops", "body": "see mailing list post reproduced convenience following reduced test case jsfiddle unnecessary reflow javascript var input reactcreateclass getinitialstate function return text thispropstext componentwillreceiveprops function nextprops thissetstate text nextpropstext render function return reactdomdiv null thisstatetext var app reactcreateclass getinitialstate function return value foo render function var return reactdomdiv null reactdominput value thisstatevalue onchange function e thatsetstate value etargetvalue input text thisstatevalue reactrendercomponent app null documentbody screenshot timeline tab chrome dev tools showing reflow equivalent implementation jsfiddle using reflow javascript var input reactcreateclass render function return reactdomdiv null thispropstext var app reactcreateclass getinitialstate function return value foo render function var return reactdomdiv null reactdominput value thisstatevalue onchange function e thatsetstate value etargetvalue input text thisstatevalue reactrendercomponent app null documentbody", "num": "1940", "d": "7/2014"}, {"title": "running two copies react page give errors use id", "body": "maybe something smarter root index generation client side seems like work", "num": "1939", "d": "7/2014"}, {"title": "jsxtransformer provide event script fully loaded", "body": "page mixed jsx script use jsxtransformerjs js script jsx script get loaded js script refer react classes created inside componentjsx appjs workaround rename appjs appjsx jsxtransformer kind even callback called jsx script loaded ready used", "num": "1938", "d": "7/2014"}, {"title": "objectassign polyfill included", "body": "see commit introduced method however nt appear anywhere latest release version result unable glob jsx attributes following", "num": "1935", "d": "7/2014"}, {"title": "speed min builds", "body": "minifiying twice thanks need remove dead requires also nt minify way still need well nt actually looked see better way", "num": "1933", "d": "7/2014"}, {"title": "perfprintwasted prints newly inserted dom nodes list waste time", "body": "first attempt show bug found weird behavior show time wasted user click action nt know one show wasted time use shouldcomponentupdatetrue see time waste grows list size well number instances table finally demonstrate problem see implemented correctly shouldcomponentupdate time add new element list considered waste time table always show instance one got inserted problem app dealing paginated list loading items server user scrolls nt think newly inserted node printed", "num": "1931", "d": "7/2014"}, {"title": "checkedlink documented", "body": "checkedlink seems used data binding checkboxes really documented except release note makes hard find useful information using checkboxes quite common", "num": "1930", "d": "7/2014"}, {"title": "support element svg", "body": "could really useful order perform animations svg elements based reactive state updates plan support", "num": "1928", "d": "7/2014"}, {"title": "repo components", "body": "hello love react sometimes difficult search readyforuse components built react want share community new supercool component possible make package manager components cool jquery tonns plugins nt place searching installing etc people try reinventing wheel already exists job better", "num": "1927", "d": "7/2014"}, {"title": "docs better body font choice", "body": "issues make docs hard read high color contrast lack contrast exacerbated thin sansserif font choice body thin sansserifs used fancy headings still ca nt see shit even zoom cause font god damn thin lack typography choices sansserifs everywhere everywhere like looking bowl oats use serif font body text georgia acceptable palatino linotype exceptional afford", "num": "1926", "d": "7/2014"}, {"title": "reactaddonsupdate return input object replace value", "body": "code shows problem var root prop propvalue nested nestedprop nestedpropvalue var rootcopy reactaddonsupdate root nested set rootnested var reactaddonsupdate root nested nestedprop set rootnested consoledebug root rootcopy root rootcopy consoledebug rootprop rootcopyprop rootprop rootcopyprop consoledebug rootnested rootcopynested rootnested rootcopynested consoledebug root root rootcopy consoledebug rootprop rootprop consoledebug rootnested rootnested root rootcopy false rootprop rootcopyprop true rootnested rootcopynested true root false rootprop true rootnested false woould expect equality true think point immutabilitystructural sharing create useless objects inner properties equally call makes sense object returned object arguments ensuring help avoid unexpected behavior shouldcomponentupdate prevent useless renderings encountered user clicks twice menu element exemple", "num": "1923", "d": "7/2014"}, {"title": "nt bundle reacttestutils nodeenv production", "body": "using reactaddons webpack compile production version bundles test helpers along production code helpers appear small moment big issue test helpers added production build", "num": "1921", "d": "7/2014"}, {"title": "unexpected behaviour input element onkeypress event", "body": "element reactdominput onkeypress thisonkeypress onkeypress function event eventkeycode enter key eventpreventdefault react preventdefault working focus input pressing enter form submit reloads page also tried preventdefault onkeydown event luck", "num": "1920", "d": "7/2014"}, {"title": "proptypesoneof warning include expected types", "body": "proptype warnings oneof say instead actual expected type example proptype get following warning example react", "num": "1919", "d": "7/2014"}, {"title": "react jsx error", "body": "open chrome official build page show hello world nothing shown page got error", "num": "1917", "d": "7/2014"}, {"title": "isvalidcomponent returns false component instances", "body": "returns passed component instance descriptor sure intended behaviour seems counter intuitive intended perhaps could mentioned docs fiddle showing behaviour fiddle showing previous behaviour", "num": "1916", "d": "7/2014"}, {"title": "ship", "body": "needs cherrypicked x x x aka cleanup x x x x activities x update changelogblog post mention descriptors see change proptypes validation x blog post also refer missed items blog changelog x everything else", "num": "1915", "d": "7/2014"}, {"title": "lifecycle methods naming", "body": "take look api component get things like fine however lifecycle methods named like component talking using third person ca nt use normal method names gain space consistency", "num": "1914", "d": "7/2014"}, {"title": "notify application jsxtransformer completed processing jsx", "body": "first discussed use case application code react code file development included along way reliably reference components defined production jsx first translated js files combinedcompiled together issue noted comment workarounds", "num": "1913", "d": "7/2014"}, {"title": "setstate working", "body": "following component renders expected use setstate version however upgrade jsfiddle use setstate longer works says undefined missed something bug", "num": "1911", "d": "7/2014"}, {"title": "custom validators run twice error", "body": "updating code react ran something took time track root issue used consolewarn custom proptypes validation usually wants error returned nt appear documented part docs changes also appear additional sideeffect proptypes appear initialised multiple times see fiddle turn console run bit contrived excerpt dynamic form generator hence multiple mixins interesting thing note testproperty function props propname componentname validator logs twice without testproperty fails validation time testproperty props original code consolewarn meant second run validator never happened resulting property set suspect something catches error retries validation different setup clear intended behaviour fiddle seems good test case start tracking", "num": "1910", "d": "7/2014"}, {"title": "expose reactlib plugins", "body": "currently difficult impossible create plugins react use stuff without using crazy hacks best way separate modules", "num": "1906", "d": "7/2014"}, {"title": "mutating content throws", "body": "execute goes boom throws away children render violently screams way try add children afterwards mutating nt imagine reality quite simple could look something like count items error ever changes practically though content useless clientside see reason nt discard children passed clientside performance gains children left serverrendering stay asis removed dom later time could easily done adding simple component returns serverrendering could whip pr guys think good idea zpao", "num": "1905", "d": "7/2014"}, {"title": "rerender entire dom key property value changes", "body": "using lodash uniqueid function key property value experiencing bug would rerender entire dom scrollable window checkboxes checkbox change entire dom would rerender causing window scroll top using purerendermixin treated state components immutably changed key property use value andor removed key property completely bug longer persisted", "num": "1904", "d": "7/2014"}, {"title": "reactrendercomponent fails svg nodes firefox ie", "body": "trying mount component node react nothing internet explorer firefox appends elements without proper svg namespace", "num": "1900", "d": "7/2014"}, {"title": "array references", "body": "eg generate list buttons want assign every button array accessible perform operation every button easily something like square bracket syntax html", "num": "1899", "d": "7/2014"}, {"title": "keypress event broken", "body": "hello troubles using latest version handler functions keyboard synthetic events receive seem broken check type anything input watch result console something wrong", "num": "1898", "d": "7/2014"}, {"title": "enable safe use elements", "body": "reduced absolute minimum enables use semantic elements currently breaks react nothing none older browsers issues elements nt necessarily proper styles like would bring game without use shiv nt actually injectmodify browser environment corrects behavior reason think worth considering would totally understand prefer keep external", "num": "1897", "d": "7/2014"}, {"title": "expose mixin method created classes", "body": "would helpful static variant accessible returned descriptor way components need defined giving someone ability mixin someone else component wish limited experience stuff also really helpful using react larger app framework context instance dependency injection emberesque way would really easy allowing inject propsmethods typeclasses basis stead current albeit undocumented global injection functionality react also seems like unnecessary restriction keeping dynamic nature language embrace prototypal nature js bless redefiningreopening classes rudimentary experiments gone well enough fits nicely compositionfocused abstractions react admittedly knowing ultimate plan makes hard guess possible conflicts approach one escape hatch might additional ability seal classes strong reason fro exposing methods descriptor", "num": "1896", "d": "7/2014"}, {"title": "jsx watch nt autogenerate file change", "body": "versions os x node jsx shell zsh set destination source directory builds initial files changes source ignored tried changing destination different dir nt fix", "num": "1890", "d": "7/2014"}, {"title": "test component methods right way", "body": "component calls another method testing jest want replace method called mock verify called correct way tried replacing method nt seem effect autobinding react resorted replacing method course ideal since uses react internals better way currently missing update path question persists though", "num": "1887", "d": "7/2014"}, {"title": "fyi regenerate entire style instead diffing", "body": "zpao brought idea using instead diffing styles day nt think would good idea apparently much wrong cost seems identically properties style styles really takes performance also seems consistent across browsers messed test buuuuuut significant benefit persistent styles even emphasized slower browsers thing sticks lot uniform performance whereas using properties significantly worse worstcase however persistent styles inplace loses bigtime seems much depends want suck every last piece performance could implement fast routine good thresholds probably biggest issue could intelligently use properties could quite big win though real nt think different paths good thing would applicable certain cases perhaps rather common still persistent styles persistent styles", "num": "1886", "d": "7/2014"}, {"title": "docs stateful children typo", "body": "", "num": "1884", "d": "7/2014"}, {"title": "docs confusing explanation go state", "body": "end confusing explanation duplicated data props section go state duplicated data props try use props source truth possible props change time appropriate store props state able know previous values perhaps trying said something like duplicated data props try use props source truth possible one valid use store props state able know previous values props change time", "num": "1883", "d": "7/2014"}, {"title": "support important styles", "body": "currently nt support set using trivially easy implement something want support although sure performance implications edit although ca nt imagine would measurable would string test cheap ok apparently nt support might still worth implementing future nt care experimentation apparently priority part value apparently wrong well way set seems acceptable workaround may use detect style seldom enough performance nonissue important consideration already support initial render subsequent updates fail nt recognized properties", "num": "1881", "d": "7/2014"}, {"title": "transferpropsto deprecation codemod", "body": "release package like jsx whitespace changes", "num": "1878", "d": "7/2014"}, {"title": "remove functionality appends px unitless numbers style prop", "body": "dangerous assume number distance unit omitted pixelbased working within svg user space sometimes required number values left unitless proportionate userdefined matrix also additional overhead maintaining property accepts unitless number value whitelist instead allowing passthrough", "num": "1873", "d": "7/2014"}, {"title": "list react addons modules", "body": "know talks set guidelines building reusable components react think central place maintains list know react utilities addons extensions reusable modules", "num": "1868", "d": "7/2014"}, {"title": "referenceerror document defined", "body": "upgrading react handler fires serverside rendering ends requires access dom ie redacted stack trace", "num": "1866", "d": "7/2014"}, {"title": "tag", "body": "apparently nt tag", "num": "1861", "d": "7/2014"}, {"title": "add warning passing root node unmountcomponentatnode", "body": "tricky could actually use react root element cc dylanvee", "num": "1858", "d": "7/2014"}, {"title": "svg elements created proper namespace firefox", "body": "reproduce following complete minimal example javascript var bar reactcreateclass render function return reactdomrect width height thispropsi x fill rgb stroke rgb strokewidth var barchart reactcreateclass render function var paths map function return bar key render fails firefox function render var svg documentcreateelementns svg svgsetattributens null width svgsetattributens null height documentbodyappendchild svg works fine function rendersvg var div documentcreateelement div documentbodyappendchild div work google chrome", "num": "1857", "d": "7/2014"}, {"title": "add immutability helpers", "body": "hello like idea immutability helpers react find incomplete still time time switch underscore complex operations data make sense add helpers like map filter fold set like operations uniondifferenceintersection course implemented terms fold think guys thanks", "num": "1856", "d": "7/2014"}, {"title": "minify jsxtransformerjs", "body": "jsxtransformerjs build directory minify provide jsxtransformerminjs", "num": "1855", "d": "7/2014"}, {"title": "parent refs empty child componentwillunmount", "body": "believe repro bug ran child component called passedin handler clean triggered parent unmounting well handler belonging parent tries pause parent audio node already empty worth inserted breakpoint dom node still mentioned irc zpao suggested might bug", "num": "1853", "d": "7/2014"}, {"title": "initialize state empty object getinitialstate specified", "body": "hareth sometime feel adding mixin component getinitialstate return vjeux hareth surprised already case hareth vjeux hareth see already github issue opened itcreate one curious see people say would avoid force wen need state object need initialize content", "num": "1851", "d": "7/2014"}, {"title": "add key warning transitiongroup single child", "body": "wrapping item giving upon addingremoving item nothing happens item removed normally warning missing key output bit confusing could warning key missing edit clarify item removed transition performed due classes added", "num": "1850", "d": "7/2014"}, {"title": "problem highchart implementation", "body": "big problem highchart tried add reactjs highchart error said mast return right type reactcomponent need add link small proj repository roman ivanov ps may wrong way please add example using reactjs highchart", "num": "1849", "d": "7/2014"}, {"title": "dynamic key support reactlibcx", "body": "although reactlibcx handy shame based object syntax whereby key must static think would handy allow dynamic keys reactlibcx helper class could work using nested array syntax made quick improvement see think", "num": "1847", "d": "7/2014"}, {"title": "rfc observables minimal dom changes", "body": "nt really thought extensively yet figured could worth discussion must currently run entire function every change happens regardless insignificant change animating often want change position color single element still run entire every frame give idea mean could look something like code imagine also fancy ways could instead get observable variable stateprops avoiding creation mutable observables state making react edit clear nt replace render function meant feature really need squeeze every last bit performance animations performance intensive individually simple updates food thought", "num": "1846", "d": "7/2014"}, {"title": "array state using input ca nt reset defaultvalue", "body": "state value array item using children children change state value change see", "num": "1845", "d": "7/2014"}, {"title": "inline float style update firefox", "body": "jsfiddle demonstrating issue works chrome firefox", "num": "1841", "d": "7/2014"}, {"title": "updates componentdidmount batched initial render", "body": "spicyj knows reminder crappy code reproduce performancewise generally minor issue additional updates properly batched demonstrated gist", "num": "1839", "d": "7/2014"}, {"title": "rfc introduce dom property definitions", "body": "integer positive negative add integers nonnegative assume would necessitate boolean third indeterminate state would need added map indeterminate expects regular boolean attribute except defaults explicitly set disable expects default redundant add something like thoughts missed something also yes lots new properties sadly worth discussion least", "num": "1838", "d": "7/2014"}, {"title": "proptypes define children component type", "body": "looking something like however nt work course could nt find another way would nice supported", "num": "1836", "d": "7/2014"}, {"title": "quoting props keys", "body": "hi really love react jsx one big problem using google closure compiler advancedmode production script causes errors sice gcc renames props keys jsx compiler product scripts quoted props keys course could use react without jsx like work fine jsx like form writing component structure would possible add option jsx compiler quoting props keys solution overlooked", "num": "1834", "d": "7/2014"}, {"title": "unhelpful proptypes warning invalid prop supplied", "body": "use pattern often javascript jsx reactdom var hello reactcreateclass proptypes modifiers reactproptypesarrayof reactproptypesoneof large colored fill render function return hello thispropsname useful flags change often go straight css without imposing logic onto component say pass unsupported modifier react spits unhelpful warning unhelpful idea string index corresponds look code would save lot time hassle see actual array value failed check reason nt show value may serializable workarounds", "num": "1833", "d": "7/2014"}, {"title": "simple line comments jsx", "body": "would possible add syntax line comments jsx something along lines moment little clunky", "num": "1831", "d": "7/2014"}, {"title": "avoid unnecessary object allocation classset", "body": "get rid save one allocation potentially commonly used function except guys running internal transform yes", "num": "1830", "d": "7/2014"}, {"title": "ca nt insert html tag svg", "body": "run react gives uncaught error invariant violation danger expected markup render nodes rendered idea", "num": "1829", "d": "7/2014"}, {"title": "put states using several components", "body": "make tiny app tower hanoi run problem repotiyemereacthanoi drag disks different stacks hovering stack give feedbacks like dimming background color add class stack remove tha class disks leave stacks need know state disks need reference state change dragging finished ondragend means put components find last put state model holds three stacks refers stack dragging event started refers stack dragging disk hovering still bad idea put state model better solution case", "num": "1828", "d": "7/2014"}, {"title": "update recast amp constantsjs", "body": "recast breaking changes let update fix going give thedekel right first refusal", "num": "1824", "d": "7/2014"}, {"title": "jsxtransformer download execute async scripts async", "body": "changed actually use async xhr continue execute scripts order script specifies attribute allow break ordered execution super low priority anybody interested feel free go", "num": "1823", "d": "7/2014"}, {"title": "warning unknown dom property mean htmlfor", "body": "get warning whenever attempt use property element see description attribute", "num": "1819", "d": "7/2014"}, {"title": "document reactaddonspurerendermixin", "body": "", "num": "1816", "d": "7/2014"}, {"title": "document reactaddonsupdate apply command", "body": "needs bullet point though would great actually examples page whole cc brandonbloom", "num": "1815", "d": "7/2014"}, {"title": "reactaddonsperf documentation", "body": "let chenglou write would nice get spot checked petehunt andor joshduck", "num": "1814", "d": "7/2014"}, {"title": "missed opportunity rename flux stores flux capacitors", "body": "early days generating good amount interest pattern surely still time get name right paint dry", "num": "1811", "d": "7/2014"}, {"title": "improve reacttools readme", "body": "splitting readme reacttools npm package look less clowny npm however really poor job making readme good make better ship like real soon let make sure document actually available command line api protip hidden ones api since pass options object sourcemap api", "num": "1810", "d": "7/2014"}, {"title": "refs always exist", "body": "always object component without currentlyrendered refs empty object currently guard dynamic refs example searchable component search input appears contents reach certain length", "num": "1808", "d": "7/2014"}, {"title": "addonsupdatejs work expected prototypes", "body": "able use prototype seems goal addon according line since use object constructor instead updating object prototype prototype kept expected copypropertiesjs include prototype methods object properties probably loop see think loop instead would nice pollute object attributes unnecessary methods keep prototype", "num": "1807", "d": "7/2014"}, {"title": "structure package allow single dependency", "body": "possible depend react every single reactrelated thing across entire stack call react code also able require jsx files everywhere pull unnecessary code client bundle eg jsx transformer okay slashes requires mainly want avoid confusing mysterybugs like one seems errorprone pull different tooling utils may slightly different versions react", "num": "1806", "d": "7/2014"}, {"title": "tips navigation titles run together", "body": "hard tell tip title starts ends since padding ideally would small amount padding set apart", "num": "1805", "d": "7/2014"}, {"title": "transformer cdn trouble compiling local files running file protocols", "body": "sure worth fixing hard debug filing posterity setup open browser file pathtoindexhtml result cautious solved downloading transformer local folder", "num": "1804", "d": "7/2014"}, {"title": "proptypes could set default values", "body": "find typing time sadly pokemon javascript var pokemon reactcreateclass proptypes type reactproptypesoneof normal fire water bird really like frame data schema component could skip step something like", "num": "1800", "d": "7/2014"}, {"title": "add way specify indeterminate checkboxes", "body": "way similar right attribute ignored need figure interacts though", "num": "1798", "d": "7/2014"}, {"title": "keyboard events dont fire unless focussed form input", "body": "binding keyup events fire form input focus prevents various scenarios like keyboard navigation list grid also things like keyboard shortcuts fiddle demo understand may performance reasons couldnt see code caused great change happy submit pr someone points choice bind focussed happening", "num": "1795", "d": "7/2014"}, {"title": "onpaste working", "body": "onpaste event appear firing since jsfiddle nt play nice create simple demo page shows issue", "num": "1794", "d": "7/2014"}, {"title": "testing react components wrapping componentdidupdate", "body": "working library generative testing well testing state system feeding series commands seeing breaks one key issue asynchronous obviously test system needs use promisescallbacks step test order make work gist used following function wrap react components componentdidupdate one shot part question part feature request acceptable way listen act upon dom update intention modify component test b worth putting function testutils module cover use case obviously bunch error checking", "num": "1792", "d": "7/2014"}, {"title": "add api focus management", "body": "currently couple problems focus management react current problems guarantee node documentvisible visibility hard detect due components firing render guarantee x finished pending renders renders focus lost fires child nodes parents case ca nt focus want show focus button component focusing componentdidupdate affect still hidden discussion looks like prs react using raf timeouts achieve fixes problems listed cause race conditions fixed lifecycle addition hidden lifecycle purely focus management issue comes lifecycle able fire function rendering done individual component would suggest add simple api componentblur componentfocus queues requests fires rendering done fix fairly simple wonder people feel", "num": "1791", "d": "7/2014"}, {"title": "disabled input still clickable", "body": "", "num": "1790", "d": "7/2014"}, {"title": "ca nt move different position", "body": "heya seems move one div another get error contains react components since already mounted intuitively feels like something work use raw strings behaves expected jsfiddle demonstrating remove tag children works expected tried using get around since nt clone children nests problem one level deeper works nt", "num": "1789", "d": "7/2014"}, {"title": "consider warning get nonbool values hasbooleanvalue attributes", "body": "saw case somebody making use conditionally disable button clever necessary think warning might prove useful", "num": "1785", "d": "7/2014"}, {"title": "react nt handle duplicate refs well", "body": "presumably accidentally use ref two components remove second one would expect ref point first one nt either test pass javascript work removing ref duplicate name function var component reactcreateclass render function return thispropsshowb amp amp b var instance reacttestutilsrenderintodocument second tramples first expect instancerefsduprefgetdomnode innerhtml tobe b instancesetprops showb false first child exists ref point expect instancerefsduprefgetdomnode innerhtml tobe throw error upon first render trying use single ref two places", "num": "1782", "d": "7/2014"}, {"title": "add component api", "body": "could please expose instance variable method component currently get via component class use case like prefix error messages thrown component without repeating dry eg found issue believe covers request", "num": "1781", "d": "7/2014"}, {"title": "documentation inaccuracy component specs", "body": "component spec reads occur mount occur mounting reality occurs accurate state may depend props wording reflect", "num": "1778", "d": "7/2014"}, {"title": "help jsx js transform without nodejs", "body": "like convert jsx files js files linux machine direct internet access examples talk running npm obviously wo nt work case alternatives ideally would like use watch method jsx executable heacy lifting behind scenes maven task builds web app", "num": "1777", "d": "7/2014"}, {"title": "sourcemaps external file", "body": "looking source looks like source maps supported onwards thats great news looking source seems like version supported inline source maps based implementation wondering hard would add option would allow select inline vs sidebyside file", "num": "1775", "d": "7/2014"}, {"title": "regression statics convenience constructor", "body": "refer convenience constructor especially useful mixins longer valid master seems", "num": "1773", "d": "7/2014"}, {"title": "mention docs nodeenvproduction envify uglify browserify users", "body": "downloads page mentions npm package mention without nodeenvproduction envify uglify missing free performance gain sources say many packages make distinction dev production mode unusual big difference development production builds newer users browserify may know dance may naively expect use react browserify equivalent use one provided builds", "num": "1772", "d": "7/2014"}, {"title": "ship", "body": "time x update x update authors list x release notes x blog post x update dependencies x update supported attributes x update polyfill list incl reactjs warning x document anything new addons perf tap plugin makes x document change getdefaultprops cached ca nt inspect thisprops x write better reacttools readme x make sure examples work x make sure samples website work x exclude todomvcflux starter kit many dependencies x merge x update commoner update dep packagejson x x update versions readme x update changelog rc blog post x destructuring harmony x details react perf postrelease x prs cdns x cdnjs x jsdelivr x update version master x push gem even postrelease x update todomvcflux example update reactart x update reactrails", "num": "1771", "d": "7/2014"}, {"title": "nt run travis documentationonly changes", "body": "better run changes specific paths first step effort reduce number jobs use travis ci cc jeffmo", "num": "1768", "d": "6/2014"}, {"title": "would nt cool classname could inject object classset", "body": "sort stray thought classname could pass object addon", "num": "1766", "d": "6/2014"}, {"title": "key enter anchor fire click event", "body": "key enter focused anchor fires click event raw dom react mimics browser behaviour", "num": "1764", "d": "6/2014"}, {"title": "inbrowser transformer warn typejsx script nt jsx comment", "body": "inbrowser transform typejsx script jsx processme comment emit warning browser syntax error reporting pretty much useless least firefox says syntax error pointing script tag includes react something equally unhelpful surprised nt find existing issue ca nt first person lose bunch time nt", "num": "1762", "d": "6/2014"}, {"title": "adding getdefaultcontext method", "body": "realizing context undocumented api may change wanted see anyones thoughts might adding possible add reliable defaults context prop defined making possible write stricter definitions", "num": "1756", "d": "6/2014"}, {"title": "reactchildrenforeach reactchildrenmap etc check arguments", "body": "accidentally forgot pass passed callback function first could throw error passing first argument see happy make change desirable", "num": "1755", "d": "6/2014"}, {"title": "add failfast mode react", "body": "using components missinginvalid prop warning logged child key provided would like error thrown instead already discussed issues like way totally support related issue ensure proper proptype documentation components would require error instead warning fail dev better would nice able use react strict way using configuration attribute something one thing would probably add enforce components name see", "num": "1753", "d": "6/2014"}, {"title": "express required children proptype", "body": "hi want component least one required children children singe element array easy avoid useless array allocation according doc nt know simplest way come syntax guess usecase quite common people building modals things like maybe would nice simpler way express children required maybe job kind guarantee children prop never different type", "num": "1752", "d": "6/2014"}, {"title": "incorrect component name using jsx browserify", "body": "big deal browserify cases react component name correctly inferred variable name assigned like normally case jsx transformation works fine produce error messages like error message component name correctly inferred another kind node module declaration work quite annoying easy know component nt inject required props guess usecases case react class assigned guess component name rather filename nt know bug feature request wanted mention", "num": "1751", "d": "6/2014"}, {"title": "datetime attribute element disallowed react", "body": "render time element see react throws away datetime attribute bad screenreadersmicroformats use get semantic meaning see", "num": "1749", "d": "6/2014"}, {"title": "testing component", "body": "hi component class eleventhenvelopesreactlist param eleventhenvelopesstorage storage constructor constructor storage want write test example component generate text test react require processcwd bowercomponentsreactreactwithaddons reacttestutils reactaddonstestutils renderintodocument iscompositecomponent reacttestutils expect require chai list eleventhenvelopesreactlist suite eleventhenvelopesreactlist list setup list new list list listcreate envelopes suite list result react components valid mounting passing failing eleventhenvelopesreactlist list generate ul list typeerror object false method mountcomponentintonode figure test component still errors could find good article thanks", "num": "1746", "d": "6/2014"}, {"title": "popups opened handlers get blocked browsers", "body": "nt happen use bind function opens popup", "num": "1745", "d": "6/2014"}, {"title": "make sure polyfill list date", "body": "need sure added others recently", "num": "1744", "d": "6/2014"}, {"title": "question regarding todomvcflux example dispatching actions", "body": "unsure ask let know post somewhere else question regarding todomvcflux example dispatching actions flux watching video describing flux architecture presenter mentioned action goes store ca nt put another one stores completely finished processing presenter mentions several times later video supposed principle property flux architecture looking todomvcflux example nt seem obey property", "num": "1743", "d": "6/2014"}, {"title": "setstate callback componentwillmount", "body": "calling nt behave would expect fiddle demonstrating short callback invoked state updated", "num": "1740", "d": "6/2014"}, {"title": "support asynchronous server rendering waiting data rendering", "body": "would seriously ease process building something isomorphic componentwillmount could return promise react would delay rendering promise resolved seen attempt something like reactrouter rrouter however giving responsibility component instead router module would make sense", "num": "1739", "d": "6/2014"}, {"title": "flux test use multiple instances singleton like todostorejs", "body": "read test use multiple instances singleton like todostorejs better choice instance store pass sub views", "num": "1735", "d": "6/2014"}, {"title": "stopimmediatepropagation support", "body": "would good support current use case following onclick ontouchend event attached touch event supporting devices trigger event handler twice natively supported simple polyfill easy since react already synthetic event system", "num": "1734", "d": "6/2014"}, {"title": "test application written react via casperjs", "body": "hi using casperjs testing problem inicialize react component reactjs pahtomjs casperjs osx example chrome add ok casperjs test missing somecomponents wrong thanks", "num": "1733", "d": "6/2014"}, {"title": "using data tag instead span data binding", "body": "hey running bit caveat using reactjs noticed binding data irrespective elements inserts tag tags commonly styled might make sense use tags instead", "num": "1732", "d": "6/2014"}, {"title": "nt reactjs passthrough unknown dom properties", "body": "instance moment contains valid attribute however reactjs baby nt understand attribute instead assuming developer knows hell strips leaves lovely comment console incredibly frustrating nt want strip attributes nt understand want pass addition react inability provide adequate support attributes existed since html happens html spec changes new attributes available existing elements bug issue provided related attribute react inability trust developer knows real bug react assumes developer know strips unknown attributes fear much less ideal remedied", "num": "1730", "d": "6/2014"}, {"title": "supported api making new event types ie event plugin injection", "body": "trying implement scrollable list items tappable mobile devices looks like two plugins address tap problem amp confused plugins nt mentioned docs unclear things build runtime require recompilation grunt plugin system flux love help getting merged developing mobile apps straightforward", "num": "1729", "d": "6/2014"}, {"title": "reactchildrenonly throw", "body": "find self using makes thing complex also seems performance issues got right found self writing component need react different array using amp made things complex issue would nice returns seems missing something", "num": "1728", "d": "6/2014"}, {"title": "add displayname nested render warning", "body": "informative error message see", "num": "1726", "d": "6/2014"}, {"title": "investigate firefox sourcemap issues", "body": "reported irc today confirmed master ff nightly also", "num": "1725", "d": "6/2014"}, {"title": "react freeze component", "body": "feature allow stubspy component methods properties test", "num": "1723", "d": "6/2014"}, {"title": "mutating element attributes leaves behind empty ones", "body": "links writing disabled leaving href undefined first renders disabled html dom get looks like state changes rerendered enabled looks like good far however disables href attribute left value means still gets styles link receive focus consistent disabled states", "num": "1722", "d": "6/2014"}, {"title": "iframes nt update src change", "body": "seems like src iframe immutable order update url iframe points required use reactkey cache buster change react recreate iframe src prop changes", "num": "1720", "d": "6/2014"}, {"title": "iframe onload event react", "body": "following iframe element rendered one react components html tried adding event well attaching directly dom like function react component except wo nt work set attribute iframe look function global scope set iframe wo nt recognize react component function short want notify react component whenever url changes inside iframe", "num": "1718", "d": "6/2014"}, {"title": "event info lost handler delayed", "body": "porting app react ran issue everything event null event handler uses settimeout example believe underlying issue feels like bug worth fixing since event handlers work native dom events jquery break ported react", "num": "1717", "d": "6/2014"}, {"title": "allow custom proptypes chainable", "body": "way make custom proptype required would useful maybe form createchainabletypechecker factory could exposed", "num": "1715", "d": "6/2014"}, {"title": "require rendering dom", "body": "writing value final textarea html creates invalid html markup appears unnecessary proper functionality admittedly test minimal removing object using rendered valid html component still worked properly browser passed tests perhaps supporting serverside rendering purpose rendering real dom", "num": "1714", "d": "6/2014"}, {"title": "stateful imperative bridge wraps react components", "body": "ideally also include way wrap react component web component used deprecate regular components", "num": "1711", "d": "6/2014"}, {"title": "reactcsstransitiongroup leaves dom nodes classes", "body": "sequence fast changes adddelete operations nodes left stuck classes state modifications change rendered dom tree console multiple warnings test page place cursor input field type l type backspace fast repeat step times easily reproduces could also reproduced chrome", "num": "1707", "d": "6/2014"}, {"title": "react addons production file nt ship testutils", "body": "page download file behind link react addons production compressed production version react addons linked file nt seem embed testutils described part addons nt expecting see production assets shipping test utilities description misleading", "num": "1706", "d": "6/2014"}, {"title": "ease stubbing component methods", "body": "working project porting code react use sinon mocks hard times stubbing component spec methods could check called appropriately given certain context js var comp reactcreateclass displayname comp plop function consolelog plop render function thisplop return reactdomdiv null foo var stub sinonstub comptypeprototype plop reactaddonstestutilsrenderintodocument comp sadly keeps printing plop onto fails sinonassertcalled stub throws expected intended behavior bug alternate suggestions achieve note directly stubbing spec object method works export component constructor spec separately available also need stub spec even creating component class convenient js var compspec displayname comp plop function consolelog plop render function thisplop return reactdomdiv foo var stub sinonstub compspec plop var comp reactcreateclass compspec reactaddonstestutilsrenderintodocument comp plop properly stubbed sinonassertcalled stub pass would great original spec object attached component would ease stubbing part test env obviously attached spec one used internally work maybe could even feature available dev thoughts", "num": "1705", "d": "6/2014"}, {"title": "reusing markup silently fails first child textnode", "body": "suppose rendering following server client case serverrendered markup reused firstchild body element text node containing new line therefore shouldreusemarkup reactmountjs evaluates false react even try reuse markup performs innerhtml operation page load instead following serverside works intended think counterintuitive first variant fails reuse markup silently either fixed documented possible solution could ignore first child text node use second child instead", "num": "1704", "d": "6/2014"}, {"title": "findcomponentroot error foundation modal plugin", "body": "xpost mailing list hi working project uses foundation modal system run bit painpoint seems whenever modal launchescloses foundation manipulates dom special way result react virtual dom loses track going react event handlers break since dom changed created plunk illustrate basically want button within modal utilise react onclick event handler call clickbutton function dice see upon clicking button get following error console tried combination things including using forceupdate conjunction foundation modal event system ca nt get things work question related assistance appreciated cheers dhruv bhatia", "num": "1703", "d": "6/2014"}, {"title": "build fails node due microtime", "body": "node step nt complete microtime build fails fixed related issue tested build upgrading microtime works fine", "num": "1701", "d": "6/2014"}, {"title": "better docs", "body": "zpao docs forms could clearer mentioning put array attribute usage example likely cc sompylasar", "num": "1700", "d": "6/2014"}, {"title": "discussion prebuilt binaries distribution", "body": "nice prebuilt binaries available current package managers right prebuilt package bower nice also npm component nlzio think best way create maintain packages cc zpao", "num": "1699", "d": "6/2014"}, {"title": "controlled input cursor jumps used layers", "body": "see try typing beginning text box", "num": "1698", "d": "6/2014"}, {"title": "wrong url tagtreetv documentation video section", "body": "someone try get tagtreetv documentation video section url section thinking react tagtreetv tagtreetv video conveying principles thinking react building simple app url htp tagtreetv instead", "num": "1697", "d": "6/2014"}, {"title": "jsx transform difficult compose", "body": "hi would like use available transforms jsx transform javascript code using js var transform require jstransform transform var visitors arrayprototypeconcatapply require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require visitorlist require transformsreact visitorlist require transformsreactdisplayname visitorlist var transform visitors sourcecode problem difficult use jsx transforms without depending whole package would essentially download lot dependencies another jstransform etc two files copied transforms directory source tree obviously bad solution would nt better put jsxtransforms separate npm package also found reference something called vendorfbtransformsyntaxjs appropriate visitor nt seem open source example essentially skipped typecheck code syntaxjs could problem future awesome library way", "num": "1695", "d": "6/2014"}, {"title": "using listento instead removelistener flux", "body": "noticed demo flux js var todoapp reactcreateclass getinitialstate function componentdidmount function todostoreaddchangelistener thisonchange componentwillunmount function todostoreremovechangelistener thisonchange render function onchange function thissetstate gettodostate got problem backbone solved method called introducin similar solution react solve similar problem", "num": "1694", "d": "6/2014"}, {"title": "improve testing documentation", "body": "agree general consensus testing react breeze thinking might good benefit new users updated documentation page examples api method nothing exactly clear first wanted start writing tests dig react source code order find implementation details still idea use despite tries descriptors nt even know test without testutils anymore currently given testing react components examples follow", "num": "1693", "d": "6/2014"}, {"title": "improve stack trace errors render", "body": "useful information stack trace exception render saying nt tell one unfortunately chrome dev tools accept displayname idea update jsx transform already adds displayname also output crazy pattern makes stack trace look better discussion twitter", "num": "1692", "d": "6/2014"}, {"title": "events propagate nested components stoppropagation", "body": "using reactbootstrap modals site full page rendering nested react rendering events propagated ancestors calls inner component hierarchy respected outer component hierarchy complicating matters syntheticevent created afresh dispatch component hierarchy stoppedpropagation equivalent called syntheticevent constructor even eventpluginutilsjs checked single callback case would still return false tracking propagationstopped status return value looks tricky given may map single nativeevent multiple synthetic events easiest fix may set custom property nativeevent object check constructor check single callback case", "num": "1691", "d": "6/2014"}, {"title": "click events fired mobile long touchclick", "body": "hi problem using react android make long touch eg button click even fired press quickly everything works expected get touchstart mousedown touchend long clicks even nt set reactinitializetouchevents true experience behavior release also build fresh master", "num": "1690", "d": "6/2014"}, {"title": "problem installing reacttools windows node bits npmdebug", "body": "full npmdebuglog error lines error git clone git githubcomariyaesprimagit cloning bare repository c error git clone git githubcomariyaesprimagit fatal write error invalid argument error error enoent chmod c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error need help may report entire log error including npm node versions error error system windowsnt error command c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install g reacttools error cwd c error node v error npm v error path c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error fstreampath c userslamalienappdataroamingnpmnodemodulesreacttoolsnodemodulescommonernodemoduleswhiskeynodemodulesmagictemplatesindexjs error fstreamtype file error fstreamclass filewriter error fstreamfinishcall chmod error code enoent error errno error fstreamstack c program error fstreamstack objectoncomplete verbose exit true", "num": "1689", "d": "6/2014"}, {"title": "contributors jade react compiler transformer", "body": "hey wrote jade react compiler transformer solve interesting problem make react dryer jadereactcompiler library supports major features jade including javascript fragments would anyone facebook community interested contributing helping maintain library", "num": "1688", "d": "6/2014"}, {"title": "handling table rows mutations row spans", "body": "trying display data array table one property also array listing table last entry subarray displayed column property want make table entry clicked toggles expanded version rows added entry subarray since columns value want take advantage rowspan attribute representations work really well initial render starts acting try toggle state dynamically", "num": "1686", "d": "6/2014"}, {"title": "csstransitiongroup throws error child removed", "body": "contains single child passed directly wrapped displaying child work fine removing child throw demo easy workaround wrap child component array demo check whether actual object intended passing single component without array wrapper supported", "num": "1684", "d": "6/2014"}, {"title": "add possibility set name html attribute via variable", "body": "jsx file value html attribute could variable eg name produces", "num": "1683", "d": "6/2014"}, {"title": "uncaught object invariant", "body": "getting error nt give much context causing happens updating store component listens changes update state error mean console", "num": "1681", "d": "6/2014"}, {"title": "rendercomponenttostring reflect value", "body": "appear render selection state elements given example html", "num": "1680", "d": "6/2014"}, {"title": "terse test utility methods", "body": "", "num": "1679", "d": "6/2014"}, {"title": "reactlink update input state changes null undefined", "body": "reset state variable input control nt change reset empty string change", "num": "1678", "d": "6/2014"}, {"title": "synthetic event simulation share dispatch logic event plugins", "body": "right reacttestutils takes care accumulating dispatches simulating synthetic events logic event plugin instead mouseentermouseleave work perhaps necessary logic event plugin simulate events cf", "num": "1677", "d": "6/2014"}, {"title": "jsx nt handle parenthesization", "body": "unit test fails javascript handle parenthesis expressions function var code jsx reactdom join n var result jsx reactdom component x b join n steps past inner expression parenthesis expression therefore nt range possible skip past insert", "num": "1673", "d": "6/2014"}, {"title": "way wrapper get notified child layout changes", "body": "seems way wrapper component get feedback children changing layout wanted implement demo vjeux context wrapper unless something wrong quite possible automatically scroll initial example talking spicyj reactjs told indeed something would need addressed one point", "num": "1672", "d": "6/2014"}, {"title": "svg linear gradient defined", "body": "trying render svg image linear gradient defined results javascript exceptions lineargradient defined checkout fiddle", "num": "1670", "d": "6/2014"}, {"title": "docs nav noisy", "body": "lot stuff left nav docs would great someone could clean make little easier digest", "num": "1669", "d": "6/2014"}, {"title": "unrecognized entities give strange", "body": "compile jsx turns seems subpar expect throw error", "num": "1667", "d": "6/2014"}, {"title": "rendercomponenttostring rendering different datareactid run", "body": "whenever run rendercomponenttostring backend returns components different run change backend render checksums indexjs template", "num": "1666", "d": "6/2014"}, {"title": "improve form inside form error message", "body": "take look error console terrible error uncaught object least ask render form inside form console give better really helpful case", "num": "1665", "d": "6/2014"}, {"title": "select tag defaultvault nt work certain conditions", "body": "ran inconsistency trying use select tag also generating options values options provided component initially rendered case getting options ajax call nt correctly set subsequent calls still works expected scenario providing complete array options view constructor test case jsfiddle linked sure expected behavior case ghost thanks", "num": "1663", "d": "6/2014"}, {"title": "missing svg tags attributes", "body": "note maintainers starting react complete support subset svg specifications actually implemented browsers find missing attribute tag work correctly please write comment note factory functions might provide tags able use directly missing ones use jsx translates supports tags inherently", "num": "1657", "d": "6/2014"}, {"title": "ide support", "body": "hi plans integrate react netbeans already amp javascript support thank advance mic", "num": "1656", "d": "6/2014"}, {"title": "couchapp examples", "body": "hi couchapp examples available thank advance mic", "num": "1655", "d": "6/2014"}, {"title": "ca nt reuse components renders", "body": "apologies wrong place ask question thought might better explained somewhere nt ephemeral irc storing instance trying reuse results error recently started wondering descriptors desired behavior concession sake performance seems like good reasons memoization worryfree duplication etc would preferable react mutate could reused thanks", "num": "1654", "d": "6/2014"}, {"title": "reactaddonsupdate correctly descend array items", "body": "currently reactaddonsupdate helper support changes array items internal reason implemented yet would great able something like javascript thisstatephotos src caption cool photo src caption super cool photo var changedphotos reactaddonsupdate thisstatephotos change second photo src set newphotojpg thissetstate photos changedphotos", "num": "1653", "d": "6/2014"}, {"title": "error invariant violation reactmount two valid unequal nodes", "body": "getting error locally due seems like element fiddle reproduce error fiddle seems source images web error goes away update local use images found fiddle error locally goes away locally use eg react gets unhappy see fiddle app wizzard navigate slowly encounter error locally navigate fast error appears remove images get error matter", "num": "1650", "d": "6/2014"}, {"title": "autoplay attribute", "body": "reason work react something wrong", "num": "1649", "d": "6/2014"}, {"title": "add ability inject virtual html attributes reactdom", "body": "add ability define virtual attributes html elements would allow semantic attributes declared would applied modify attributes element could declared way javascript callback would given access attribute value allow modify attributes element function hiddenattribute value attributes value attributesstyle attributesstyle attributesstyledisplay none reactdeclareattribute hidden hiddenattribute using jsx javascript jsx reactdom jsxns core core common common var mycomponent reactcreateclass render function return outputs html would elements custom components however one use element would inherit hidden attribute writing nt able think useful attributes perhaps useful single use case buyin concept like happy attempt implementation thought propose see would beneficial anyone else different kind attribute", "num": "1648", "d": "6/2014"}, {"title": "reactproptypesrenderable vs", "body": "validate reason asking sometimes use statements arrays without clause coffeescript evaluates coffeescript isvisible false isvisible reactdomspan evaluates causes warning however following construct passes isvisible false isvisible reactdomspan else null evaluates please forgive different latest version repro react javascript var react todolist error react require reactaddons todolist reactcreateclass displayname todolist proptypes children reactproptypesrenderableisrequired render function return reactdomdiv thispropschildren consolelog consolelog test consolelog consolelog try consolelog reactrendercomponenttostring todolist reactdomspan null catch error error error consoleerror fail consolelog pass consolelog consolelog test consolelog consolelog try consolelog reactrendercomponenttostring todolist reactdomspan void catch error error error consoleerror fail consolelog pass output test pass test warning invalid prop supplied expected renderable prop pass", "num": "1647", "d": "6/2014"}, {"title": "supported", "body": "supported filter fegaussianblur tags", "num": "1646", "d": "6/2014"}, {"title": "create reactchildrenfilter", "body": "function filter children would useful common case implementing like map foreach etc traverses index index current depth depth first level increasing thereafter jsx var showmore reactcreateclass render function var children showmore thisstateshowmore showmore function thissetstate showmore true limit function child depth return depth gt lt thispropslimit getinitialstate function return showmore false", "num": "1644", "d": "6/2014"}, {"title": "whitespace inline elements", "body": "nt whitespace inline dom elements separated line break think example describes situation pretty well right workarounds pretty ugly either css nt get started manual whitespace inside inline elements quite nonsemantic hope duplicate earlier issue research cheers", "num": "1643", "d": "6/2014"}, {"title": "updating parent component child unmount", "body": "code looks something like root component shows changing list items currently hovered note mouse last component disappears selection stuck component nt reset null uncomment line componentwillunmount attempt tell parent unset active property throws error unmounting active item parent currently middle reconciling children currently place allow state updates seems like maybe best solution parent smarter realize removing active child unset state property though nt see super clean way right nt need know anything makes item active seems nicer keep way possible sebmarkbage thoughts cc zgotsch", "num": "1641", "d": "6/2014"}, {"title": "thoughts making reactlibkeymirror npm module", "body": "finding really love something like nonreact related fluxy projects good npm module considerations making separate module", "num": "1639", "d": "6/2014"}, {"title": "component support", "body": "sure bower support achieved would really nice simple support thus allowing would require git repo field pointing source files likely built nonminified dist file given nt using build project ther also issue addons one thing time", "num": "1635", "d": "6/2014"}, {"title": "child context passed", "body": "application renders module component eg dynamically according props unfortunately context passed case test case hardcode module component works perfectly need pass manually", "num": "1634", "d": "6/2014"}, {"title": "missing textpath element support", "body": "textpath pretty useful align text path please consider adding support", "num": "1633", "d": "5/2014"}, {"title": "production development deadcode generated library", "body": "browsing code saw lot code like basically dead code major issue could help optimise size output standalone library remove definitely dead code knowledge manage source code sounds like instead preprocess approach", "num": "1629", "d": "5/2014"}, {"title": "component instance invalid mountingrendering string", "body": "simple unit test example worked react nt js var react require react var componentclass reactcreateclass render function return reactdomspan null nada describe foo function bar function var componentinstance componentclass react components need rendered mount reactrendercomponenttostring componentinstance componentinstancesetstate name john throws two errors ran invalid access component property setstate unknown top level see use static method instead typesetstate stacktrace referenceerror document defined getactiveelement reactreconciletransactionreactinputselectiongetselectioninformation reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactcomponentmixinperformupdateifnecessary reactcompositecomponentmixinperformupdateifnecessary objectenqueueupdate reactcompositecomponentmixinreplacestate reactcompositecomponentmixinsetstate fnreactmembranefunction else access instance methods rendercomponenttostring returns string required", "num": "1628", "d": "5/2014"}, {"title": "props variable instead literal objects causes problem", "body": "following code causes two shown bbbbbb instead aaabbb one would expect replaced object literal component rendered correctly", "num": "1626", "d": "5/2014"}, {"title": "references elements nt work testutils", "body": "testcoffee using jest field testutilsfindrendereddomcomponentwithclass fanroot tapartistfield testutilssimulatefocus field testutilssimulatekeyup field key componentcoffee updatesearch gt searchterm refssearchfieldgetdomnode valuetrim tolowercase searchterm documentgetelementbyid searchfield valuetrim tolowercase searchterm render gt reactdominput classname formcontrol tapartistfield type text ref searchfield id searchfield onfocus startsearching onblur stopsearching onkeyup updatesearch test call focus works fine separately tested behaves expected call keyup throws happens either value commented fixed string issues either commented version works browser", "num": "1625", "d": "5/2014"}, {"title": "tapeventplugin dependencies calculated module loading time", "body": "tapeventplugin var dependencies topleveltypestopmousedown topleveltypestopmousemove topleveltypestopmouseup eventpluginutilsusetouchevents dependenciespush topleveltypestoptouchcancel topleveltypestoptouchend topleveltypestoptouchstart topleveltypestoptouchmove top level since usetouchevents wo nt set true require time even set true user code runs touch events never bound super high priority nt actually supportadvertise tapeventplugin yet would nice worked merging thanks ryanseddon reporting", "num": "1619", "d": "5/2014"}, {"title": "data binding nonstring values cause update html even value html", "body": "jsfiddle edit second input text cursor end input value gets unnecessary updated expect second input behaving exactly first storing number string state fixes problem convenient since need convert back number math", "num": "1618", "d": "5/2014"}, {"title": "allow overriding nonlifecycle component methods using mixin", "body": "like able override nonlifecycle component method without react throwing something like js var mymixin somemethod function default behavior var mycomponent mixins mymixin somemethod function needstooverridemixinbehavior override mixin behavior else mymixinsomemethodapply arguments ideally would eventually doable using sort hierarchy system possibly want ability override mixin method", "num": "1617", "d": "5/2014"}, {"title": "add findscry id test utils", "body": "testutils currently variant nothing like functionality would make testing lot easier", "num": "1616", "d": "5/2014"}, {"title": "addonsupdate directive precedence order", "body": "js var anarray reactaddonsupdate anarray set set push p u h unshift u n h f splice splice slice dice result splice slice dice set h n u p u h sane ordering handling directives never want recurse something already ed ed otherwise would included changes directives arguments originally think natural expectation would update recurse existing elements indices original array splice directive new elements ensure appear ends resulting array like certain cases programmer would introduce difficulttovisuallyinspect indextwiddling logic split changes among multiple calls produce desired result tests nt include cases multiple directives appear single value sure whether intentional whether anybody depends behavior especially dealing trees form current behavior really nt allow visual clarity makes helpful trees composed entirely objects", "num": "1615", "d": "5/2014"}, {"title": "warn reordering nodes moved outside react", "body": "moveexisting update type would nice domchildrenoperations checked warned child finds nt expected node", "num": "1610", "d": "5/2014"}, {"title": "pull reactaddonstestutils bower", "body": "lot browser based testing w karma love quick easy way pull testing tools without npm possible something today something could optin future workaround get today thanks advance", "num": "1607", "d": "5/2014"}, {"title": "documentation update required", "body": "component specifications documentation following note must added method update component state method using callback provided second argument methods invoked immediately may want shift callback", "num": "1606", "d": "5/2014"}, {"title": "changes classname path inside svg element working", "body": "draw svg path element classname setted state render change state event result redraw svgpath element expected result path new classname working result component redrawn classname path nt change example full source code example working html css js", "num": "1605", "d": "5/2014"}, {"title": "events binded", "body": "hey working react app quite big use backbonemodel react views backbonemodel attributes update call thisforceupdate react component sometime time events binded clicking wo nt anything sure happening see dom reactid sure start anyone experienced", "num": "1604", "d": "5/2014"}, {"title": "learnjson missing todomvcflux", "body": "referenced got", "num": "1603", "d": "5/2014"}, {"title": "following update", "body": "confused following behavior example takes prop first renders clicking gives us seems right clicking rerender everything clicking gives us realusecase context gave errors accessing pass thirdparty library displaying popup menu around given node given child responsible knowing popup logic instead sole purpose show contextual menu location given component pasting live jsx editor work believe seeing behavior general accessing ref", "num": "1602", "d": "5/2014"}, {"title": "event handler context using transferpropsto", "body": "hello sure bug feature set react components share behaviour events created mixin used getdefaultpropstransferpropsto methods share functionality js var highlight getdefaultprops function return onmouseover thishighlight highlight function consolelog lt window unhighlight function consolelog lt paragraph component var paragraph reactcreateclass mixins highlight render function return thistransferpropsto see adding event jsx local scope event callback binded component using getdefaultprops points window workaround obviously rebind scope manually wondering behaviour getdefaultpropstransferpropsto constant setting properties jsx maybe better way inherit event handlers components altogether js fiddle example code thanks advance daniel", "num": "1595", "d": "5/2014"}, {"title": "renderedchildren get sync dom render throws", "body": "reactmultichild nt properly handle errors thrown rendering children one child throws children updated time inconsistent values stored renderedchildren cause problems future updates unclear best way solve", "num": "1593", "d": "5/2014"}, {"title": "warning calling thisgetdomnode via reacttestutils", "body": "several people came jestjs irc asking thisgetdomnode returned null reason mounted reacttestutils maybe add warning case", "num": "1592", "d": "5/2014"}, {"title": "npm install fails", "body": "latest nodenpm git clone npm install gives npm http get npm http npm err error compatible version found commoner npm err valid install targets npm err npm err installtargetserror c program filesnodejsnodemodulesnpmli", "num": "1591", "d": "5/2014"}, {"title": "apply component spec mixins specs deterministically", "body": "right nt consistently could behavior varies depending put key class spec great example using master js var mixin componentdidmount function consolelog mixin var compa reactcreateclass mixins mixin componentdidmount function consolelog compa render function return var compb reactcreateclass componentdidmount function consolelog compb mixins mixin render function return b outputs think consistently behave like compb component mixin methods yungsters disagrees opinions petehunt sebmarkbage jordwalke potentially interested gaearon figure way go relatively contained testable take right core", "num": "1589", "d": "5/2014"}, {"title": "able mixin defined mixin", "body": "imho would useful able define per ie sometimes mixincode may rely methods defined mixesin case would make sense combinemixin defined included think", "num": "1588", "d": "5/2014"}, {"title": "feature request warn property proptypes passed component", "body": "would great debug mode react would warn pass property props specified proptypes object component ie way enforce props props specified proptypes others would prevent use undocumented properties also allow better code maintenance unused props would easily removed", "num": "1587", "d": "5/2014"}, {"title": "svg dx dy attributes work", "body": "", "num": "1586", "d": "5/2014"}, {"title": "add apply function directive immutability helpers", "body": "apply directive apply function part data structure replace returned result var mydata b function increment x return x var newdata reactaddonsupdate mydata b apply increment newdata b", "num": "1585", "d": "5/2014"}, {"title": "parse error confusing trying return two elements", "body": "opening esprimafb apparently nt accept issues write get unexpected identifier tries parse second div interpreted less think give nicer errors disallow less operator directly xjselement nt think prevents real uses could always wrap parens cc jeffmo syranide", "num": "1584", "d": "5/2014"}, {"title": "warn using proptypesinstanceof incorrectly", "body": "someone wrote instead would nice could give sort warning sure possible though cc zgotsch", "num": "1582", "d": "5/2014"}, {"title": "feature request commandmergeset", "body": "think ability merge set immutability helpers target undefined would nice addition open pr sounds reasonable", "num": "1581", "d": "5/2014"}, {"title": "setstate componentwillreceiveprops update state callback", "body": "example jsfiddle far understand proper behavior", "num": "1580", "d": "5/2014"}, {"title": "svg dy attribute ignored", "body": "rendering element attribute react actually render element simply ignored repro", "num": "1573", "d": "5/2014"}, {"title": "dangerouslyreplacenodewithmarkupbyid uses getnode unmountedpurged id", "body": "calls id unmounted purged sebmarkbage spicyj indicated working refactor perhaps already fixed ps really sure fix without taking big hammer", "num": "1569", "d": "5/2014"}, {"title": "un mountcomponent seems behave improperly root component update", "body": "logging reveals nt make sense least var container documentcreateelement div var mockcomponent reactcreateclass render function return var wrappercomponent reactcreateclass render function return thispropschildren reactrendercomponent container reactrendercomponent container", "num": "1567", "d": "5/2014"}, {"title": "context maintained rendering thispropschildren", "body": "following snippet code var reactcreateclass childcontexttypes x reactproptypesstring getchildcontext function return x render function thispropschildren return propschildren thispropschildren else return regular var b reactcreateclass contexttypes x reactproptypesstring render function return x thiscontextx reactrendercomponent output", "num": "1562", "d": "5/2014"}, {"title": "create test suite public api", "body": "like test suite tests public api contrast existing unit tests test internal modules test suite comprehensive enough allow us feel confident making breaking changes accidentally unlike current tests frequently change refactors would nt change tests except conjunction major release since tests would use public api could also run closure advanced mode verify everything works properly", "num": "1555", "d": "5/2014"}, {"title": "losing control", "body": "example start typing numbers nonnumber character wont update input field expected start typing nonnumber character first though seems input field becomes uncontrolled starts excepting anything type onchange nt fired anymore", "num": "1549", "d": "5/2014"}, {"title": "onclick called immediately page load", "body": "load page last event module triggered immediately example executed fix sidebarjs js module dependencies var react require react var router require page component moduleexports reactcreateclass displayname sidebar render function return reactdomaside classname sidebar reactdomul classname sidebarindex reactdomli null guide reactdomul null reactdomli null reactdoma href ux onclick handleclick ux ux reactdomul null reactdomli null reactdoma href visual onclick handleclick visual visual reactdomul null reactdomli null reactdoma href code onclick handleclick code code handle click param string url api private function handleclick url router url", "num": "1546", "d": "5/2014"}, {"title": "escaping curly brackets", "body": "thanks react jsx would possible escape curly brackets future like jsx use characters escape evaluate inline javascript", "num": "1545", "d": "5/2014"}, {"title": "evaluation escapes comments", "body": "hi thanks great work react jsx problem jsx comments containing curly brackets evaluated jsx even though writing consider comment literals jsx escape characters thisstatevalue example comment block evaluated", "num": "1544", "d": "5/2014"}, {"title": "transitionend called tab backgrounded", "body": "using background tab transition happens warning actually adding transition group displayed console transition tried perform animation without animationend transitionend event timeout either disable transition js add css animationtransition created reproducible version believe due bug pretty much modern browsers events emitted tabs backgrounded said figured worth bringing see react could something thoughts", "num": "1541", "d": "5/2014"}, {"title": "ca nt sudo npm install g reacttools", "body": "one dependencies reacttools esprimafb invalid version string blocks installing reacttools relevant error npm http npm err error invalid version npm err validversion npm err final npm err npm err cb npm err npm err npm err npm err objectoncomplete adittionally downloaded esprimafb package edited version string installed tarball correctly npm wants redownload thank", "num": "1538", "d": "5/2014"}, {"title": "tag attribute patternunits supported", "body": "really useful svg patterns nt appear transferred dom render component uses given following sample svg result display scan line pattern demonstrated raw svg however nt happen patternunits attribute never transferred note missing attribute within result executing svg markup", "num": "1535", "d": "5/2014"}, {"title": "distinguish svg tag head tag", "body": "per spec see link svg element may contain title element used display tooltip like title attribute html elements however react seems think title tag would normally contained head rendering causes error uncaught error invariant violation reactfullpagecomponenttitle tried unmount crossbrowser quirks impossible unmount toplevel components eg reliably efficiently fix funnily enough suggested fix omitted", "num": "1534", "d": "5/2014"}, {"title": "possible issue reactaddonstestutilsfindrenderedcomponentwithtype scryrenderedcomponentswithtype", "body": "sure bug documentation issue ran problem using findrenderedcomponentwithtype scryrenderedcomponentswithtype methods work fine reactdom except reactdomspan reactdomdiv may others nt work expected instances run describe reactaddonstestutils function using following react karma karmajasmine karmaphantomjslauncher karmareactjsxpreprocessor", "num": "1533", "d": "5/2014"}, {"title": "incorrect api documentation bug reactaddonstestutilssimulate", "body": "according reactaddonssimulate eventname reactcomponentdomelement element object eventdata able accept reactcomponent dom element wrote simple test fails reactcomponent passsed simulateclick bug invalid documentation please see describe reactaddonstestutilssimulateclick function using following react karma karmajasmine karmaphantomjslauncher karmareactjsxpreprocessor", "num": "1532", "d": "5/2014"}, {"title": "make jsxtransformer use async xhr", "body": "lazy used sync xhr make sure multiple scripts still executed right order however getting warning console firefox nightly says sync xhr deprecated synchronous xmlhttprequest main thread deprecated detrimental effects end user experience help let preemptive build minimal work switch async xhr ensure still process scripts order", "num": "1530", "d": "5/2014"}, {"title": "html jsx converter nt correctly parse classname parameter tag", "body": "visit paste live jsx editor observe conversion expected result classname still classname conversion actual result classname converted classname invalid jsx", "num": "1529", "d": "5/2014"}, {"title": "disabled reactdombutton stop user input", "body": "nt include touchevents etc", "num": "1527", "d": "5/2014"}, {"title": "add support strokedasharray", "body": "nt work tried set list supported svg attributes adding would nice", "num": "1524", "d": "5/2014"}, {"title": "add support head prefix attribute", "body": "hi guys since facebook using attribute element declare open graph namespace could add list supported attributes would useful generating templates see link details", "num": "1523", "d": "5/2014"}, {"title": "transferring props parent automatically", "body": "would nice component could declare property state transferred automatically parent property component example couple components inside form require transferring properties forced repeat properties many times would like hide represent kind internal details relation child parent would like able thanks could write stumbled across problem times already think requirement nt violate react data flow rules simply helps avoid boilerplate wonder react authors problem planning implement something like", "num": "1521", "d": "5/2014"}, {"title": "using routes server rendering", "body": "could please show example using flux routing say data store domain means route data store event helpers mean use router script dispatch actions route change case server side routing yes know speak client side apps react designd also server rendered possible use kind flux code server case want add server rendering seo purposes", "num": "1519", "d": "5/2014"}, {"title": "click event nt bubble outside svg", "body": "im something like div span text clicking triggers however svg never gets triggered", "num": "1509", "d": "5/2014"}, {"title": "provide build required polyfills separate reactpolyfillsjs", "body": "right somewhere buried react site list polyfills react requires links project intermingled bunch others would nice react optionally shipped polyfills polyfills needs function would make easier people fall pit success build browsercompatible react sites also would save bunch work every time start new project", "num": "1507", "d": "5/2014"}, {"title": "setprops update inline styles", "body": "settings props component update style attributes following jsfiddle example clicking link updates two props height amp name see name updated dom minheight remains", "num": "1506", "d": "5/2014"}, {"title": "uglify dev dependency todomvcflux", "body": "uglifyjs working npm build work well", "num": "1505", "d": "5/2014"}, {"title": "componentdidmount setstate two valid unequal nodes", "body": "kind related long debugging session irc turned issue moving solved assuming boiled version", "num": "1501", "d": "5/2014"}, {"title": "transitiongroup low level api available using csstransitiongroup", "body": "hi low level api available using csstransitiongroup none methods called componentwillenter componentdidenter componentwillleave componentdidleave intended check fiddle", "num": "1497", "d": "5/2014"}, {"title": "fail travis phantomjs", "body": "sauce setup nt reliable enough depend strong signal example failed though tests passed phantom", "num": "1496", "d": "5/2014"}, {"title": "reactemptycomponent errors", "body": "know previously switched unreliable seems suffer similar issues repro went different elements etc none seems work seemingly best alternative seems especially since already kind special react ie react wrap text great", "num": "1494", "d": "5/2014"}, {"title": "updating manyitem singleitem array rerender forced although item key nt changed", "body": "consider usually respected case elements nt get unmounted remounted unnecessarily match subsequent calls however elements one removed react reason nt realize component nt changed forces dom node update tried setting breakpoint inside debug issue looks like name slightly different one case includes leading nt anyway workaround curiously returning array one item rendering case react able understand component nt force unnecessary rerender sorry providing workable fiddle hosts old version react live go sleep fairly simple reproduce unless already fixed", "num": "1493", "d": "5/2014"}, {"title": "reacttransitiongroup requires key fire hooks", "body": "lists pretty obvious need set keys reacttransitiongroup single child node obvious key needed mentioned docs either documentation issue code issue opinion would intuitive key optional reacttransitiongroup single child least would nice throws warning jsxtransformation", "num": "1488", "d": "5/2014"}, {"title": "html rendered til", "body": "particular problem rendering html delayed animation happens browsers tested android webview ios chrome mac safari mac acts container pages every li represents page overflow property set hidden see one page time want transition new page set correct value along transitionduration property slides new page view funny thing new page nt rendered transition finished slides white page animation done view displayed see html inserted transition seems delaying rendering new element transition done also tried updateing property insert new element view rendered halfway animation remove transitionduration property course animation element rendered instantly way solve anyone experienced something similar example code", "num": "1485", "d": "5/2014"}, {"title": "defaultvalue state popualted via ajax call", "body": "code consolelog prints fine defaultvalue getting populated probably react already mounted component ajax call way populate defaultvalues server", "num": "1484", "d": "5/2014"}, {"title": "envify peerdependencies complicates use node", "body": "package uses packagejson envify use instead adoption low debated whether kept node browserifycdn tool requirebin uses requirebin nifty tool building modular examples sharing would like use react browserifycdn nt work well peerdependencies would extra work make work anyone building similar tool might extra work well would much like node packages designed used clientside rely peerdependencies", "num": "1482", "d": "5/2014"}, {"title": "minified react w addons expose testutils", "body": "minification may overmangled something current minified w addons website expose addons", "num": "1481", "d": "5/2014"}, {"title": "transitionleave false properly bypass need transition leave animation", "body": "docs state reactcsstransitiongroup keeps dom elements page animation completes thus necessitating leave transition want enter animation leave animation specify however dom elements still seem stick around occasionally throw transitionend warning even using repro case steps reproduce click add three components page click remove added components notice elements staying page instead removing expected remove jsx supplied leave transition runs removal works expected undesired leave animation occurs css transitions keyframe animations change workaround remove use leave transition disclaimer workaround nt seem bullet proof least complex view creating handful additionsremovals perhaps fairly rapidly produce transitionend warning leaving elements ui", "num": "1478", "d": "5/2014"}, {"title": "missing yield generator error jsx", "body": "upgrade newer version esprimafb removes error work around putting yield return works", "num": "1475", "d": "5/2014"}, {"title": "thinking react code examples broken", "body": "page jsfiddle based code samples missing see empty block instead note go bit json example graphic working jsfiddle js code samples nt fedora linux ff chrome tested android mobile phone chrome yesterday fiddles desktop yesterday today open fiddle mentioned page hand get page turn firebug get following errors chrome dev tools seem relevant form content security policy kicking nt kicking others phone see also closed issue", "num": "1472", "d": "5/2014"}, {"title": "onchange handler radio buttons fire according spec", "body": "described onchange handler input fire checked state changes however actually fires radio button clicked words fails fire checked radio button unchecked checking different radio button fires even without state change checked radio button clicked short missing checked transtions true false reporting spurious transitions true true", "num": "1471", "d": "5/2014"}, {"title": "thinking react document broken code samples", "body": "thinking react document seems broken code samples see empty blocks code noticed source iframes jsfiddle perhaps something going wrong tried linux ff chrome", "num": "1467", "d": "4/2014"}, {"title": "uncaught error using contenteditable true within chrome", "body": "basically pressing enter within contenteditable creates new p tag reactid", "num": "1466", "d": "4/2014"}, {"title": "ca nt insert root element type form inside createclass", "body": "whenever try insert form inside createclass method get following error uncaught error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags please help", "num": "1465", "d": "4/2014"}, {"title": "csstransitiongroup segue nonnull null children", "body": "got bit trouble trying renderonethingornot wrapped seems gracefully handle going nonnull child empty array children back ca nt handle going something nonnull child something null child test case dies component null", "num": "1457", "d": "4/2014"}, {"title": "zindex component", "body": "try set div inside component via nt work element inspector becomes zindex workaround", "num": "1456", "d": "4/2014"}, {"title": "jstransform breaks jsxtransformer", "body": "caused upgrading downgrading jstransform sourcemap reverting old dep fixes jeffmo", "num": "1454", "d": "4/2014"}, {"title": "skip prompting installing chrome devtools already installed", "body": "right print message console every time according chrome document easy way achive devtools script insert content tag documentgetelementsbytagname head first child reactjs detect existence content tag delete temp content tag", "num": "1451", "d": "4/2014"}, {"title": "idea pernode dom configuration", "body": "highly unscientific delta nt significantly affected addition behaviors proper contains bunch attributes currently react also duplicates list node names exist create dom components ps less complete list nodes attributes exception obscure ones nt listed deprecatednot standard raw gz sizes buildjsxtransformerjs buildreactwithaddonsjs buildreactwithaddonsminjs buildreactjs buildreactminjs raw gz sizes buildjsxtransformerjs buildreactwithaddonsjs buildreactwithaddonsminjs buildreactjs buildreactminjs", "num": "1449", "d": "4/2014"}, {"title": "attributes removed set null updates", "body": "behavior attributes value inconsistent first render present element subsequent renders attribute sticks around empty value example renders expect value changes first render get case likely others empty attribute unintended side effects see fiddle", "num": "1448", "d": "4/2014"}, {"title": "expose reactlinkproptypeslink", "body": "reactaddons exposes linkedstatemixin best way expose reactlinkproptypeslink options think mutate reactproptypes sideeffect including mixin expose directly reactaddonsproptypes", "num": "1447", "d": "4/2014"}, {"title": "let reacttestutilssimulateclick work nondom components", "body": "sebmarkbage suggested avoid silly tagname requirement anything resolve node getdomnode work", "num": "1445", "d": "4/2014"}, {"title": "avoid escaping url attribute", "body": "hi wondering way avoid url attribute escaping react", "num": "1444", "d": "4/2014"}, {"title": "fix grunt test coverage", "body": "would nice fix make sure using lcov format report back codeclimate", "num": "1442", "d": "4/2014"}, {"title": "bump", "body": "due bug see", "num": "1438", "d": "4/2014"}, {"title": "invariant violation reactmount two valid unequal nodes", "body": "happen master sorry could make reproducible test case stack trace master generaly happen things main component render first time componentdidmount get data via ajax response update state render replaced another component moment later call react trap load event previous exception happen appreciate feedback help issue public link debuging could share public someone want see action let know pls", "num": "1436", "d": "4/2014"}, {"title": "issue running jasmine tests getting typeerror instanceof called object invalid prototype property", "body": "hi new react maybe missing something obvious using following relevant node modules gulpkarma karmareactjsxpreprocessor karmajasmine karma using following bower dependencies react bindpolyfill polyfill phantomjs bind method test file getting stack trace insight appreciated", "num": "1433", "d": "4/2014"}, {"title": "add media attribute", "body": "media element tag media attribute specify mime type target content helps browser know attempt download url skip support format", "num": "1432", "d": "4/2014"}, {"title": "nullifying value return component indeterminate state", "body": "expected given component value property transitions float expect attribute tag become unspecified putting control indeterminate state state animating barbershop pole pattern actual transitioning float value attribute tag becomes test case", "num": "1431", "d": "4/2014"}, {"title": "animation", "body": "great react support native element animate instead csstransitiongroup", "num": "1430", "d": "4/2014"}, {"title": "mixins input form validation", "body": "understand react focuses v mvc think primary focus web view support interaction user nice react support input form validation stumbled across stackoverflow demonstrates mixins make easier handle user input validation react plans add html form related tools like something official", "num": "1429", "d": "4/2014"}, {"title": "reacttools appjsx changed never ends", "body": "hi guys created issue stack overflow", "num": "1427", "d": "4/2014"}, {"title": "string values input typenumber amp input typerange", "body": "enhancement proposal create make etargetvalue return value type number input types amp reasoning input type number would expect value string duh thing might historical attainment linkedvalueutils seems different handling handling string amp boolean values init state number amp use valuelink initialize input properly second change input value change string possibly explode something say child property depending type number partial work around would using according docs demonstration number amp range inputs react amp vanilla js jsbin", "num": "1425", "d": "4/2014"}, {"title": "server side helper make somehow componentwillmount like method", "body": "hello nt want bother make big changes something like would like know intention something like application router route ran gathers data views needs instance views well little bad bigger applications new design route instance view subview load data needs subview b loads data needs componentwillmount called server notice server client uses exact routes views see live example thanks understanding", "num": "1423", "d": "4/2014"}, {"title": "dom updates minimal moving last child first place", "body": "rerender requires last child moved first place update dom minimal instead removing child question reinserting children removed readded instead bad two reasons unnecessary churn dom slowing things children contains video element video reset using keys shuffle children around pretty common implementing infinite scroll react dom element reuse work screencast showing dom changed scroll notice scroll first element correctly removed top inserted bottom scroll back instead moving last element react moves four using react", "num": "1422", "d": "4/2014"}, {"title": "react use markup wrap toplevel html setting", "body": "broken nt use setting html toplevel component editor incompatible anyway preview shows problem", "num": "1421", "d": "4/2014"}, {"title": "make possible use harmony transforms browser script tags", "body": "already option enabled browser transform export function takes option use reactrails et al nt make possible pass options blocks let since js data types html let ed attribute single option right need support options added easily come", "num": "1420", "d": "4/2014"}, {"title": "react handle click event mobile safari", "body": "get react handle click events element mobile safari see fiddle example browsers tested click alert triggered three elements tappedclicked except mobile safari tested ipad mini test example first element handled directly using use react second element rendered using react element trigger click alert tapped mobile safari third element button also rendered using react trigger click alert tapped mobile safari would indicate problem react since method works element works using react", "num": "1418", "d": "4/2014"}, {"title": "componentdidmount runs", "body": "hi im trying something always render componentdidmount called state change render way run method always render even state prop change", "num": "1416", "d": "4/2014"}, {"title": "add support html manifest attribute", "body": "could useful generating static html pages", "num": "1414", "d": "4/2014"}, {"title": "state set setstate callback componentwillmount", "body": "think alluded yungsters comment merged call callback called state set using react", "num": "1413", "d": "4/2014"}, {"title": "rendering component dom fails", "body": "following line inside fails dom yet reproing easy tested current master", "num": "1411", "d": "4/2014"}, {"title": "update refs example code use onchange", "body": "mentioned comments", "num": "1408", "d": "4/2014"}, {"title": "ondragleave event triggered enter amp leave", "body": "title using latest chrome react", "num": "1401", "d": "4/2014"}, {"title": "reactmount two valid unequal nodes", "body": "seems mainly cause invalid nesting tags etc know issuesprs regarding already afaik trying solvedetect seems reasonable improve noninformative error message meantime ps probably seen people get bitten think", "num": "1400", "d": "4/2014"}, {"title": "provide react cdn supports also https", "body": "using react page served https currently requires packaging app since oficial cdn supports http would nice also supported thanks", "num": "1399", "d": "4/2014"}, {"title": "reactrendercomponenttostaticmarkup nt generate selected attributes valuedefaultvalue", "body": "using static markup unit testing newforms output also like support using render forms static html adding nt generate static html appropriate attributes however get generated manually add components get warning messages console using development build react possible support use cases without manually setting attributes live warnings jsfiddle showing static html output", "num": "1398", "d": "4/2014"}, {"title": "refs break add domelements variables", "body": "react var render function thisrefs myref returns correct object thisrefs yourref returns undefined", "num": "1397", "d": "4/2014"}, {"title": "rendercomponent callback little awkward", "body": "right write nt defined callback called callback currently called synchronously component instance available obvious perhaps always call callback asynchronously cc", "num": "1396", "d": "4/2014"}, {"title": "add support svg tag", "body": "", "num": "1395", "d": "4/2014"}, {"title": "refs updated even shouldcomponentupdate returns false", "body": "reordering list components changing refs refer index nothing else would nice refs updated nt appear currently", "num": "1392", "d": "4/2014"}, {"title": "warn shouldcomponentupdate returns undefined", "body": "wrote accident puzzled components nt updating undefined treated false would nice warn case", "num": "1391", "d": "4/2014"}, {"title": "problem shouldcomponentupdate", "body": "using ajax request gets html updates state looks like works see little test top comparing next state current state see ajax request needed fired problem nextstate thisstate equal even show returning variable state nt happen update update section simply calling update function lives inside mixin inside another component top level component state passed prop wondering setting state mixin problem wondering going want ajax request fired twitter url changed things see current file", "num": "1388", "d": "4/2014"}, {"title": "function props state", "body": "comes discussion several people around animation feel like important enough warrant issue already insist pure function taking pass compositecomponent way write time still call internally able react even user able test water would valuable future example heard also solve problems pendingstate familiar issue jordwalke sebmarkbage petehunt", "num": "1387", "d": "4/2014"}, {"title": "xss facebookgithubio xd hahaha", "body": "screen shot", "num": "1383", "d": "4/2014"}, {"title": "rfc add doc tips shouldcomponentupdate false nonmanaged nodes", "body": "seems like something bunch people would find useful personally nt aware possible solution", "num": "1382", "d": "4/2014"}, {"title": "proposal porting react mixin apis generic primitive", "body": "currently react mixins allow multiple mixins implement method multiple mixin whitelist would like decouple mixin system react therefore need way solve without whitelist idea every mixin call super allow predictable chaining mixin mixins function would essentially create new prototype chain mixin set functions stacked top order object treated prototype function treated classconstructor gets static methods prototype merged javascript var componentdidmount super end calling empty function placed mixin consolelog class b static getqueries super end calling empty function placed mixin consolelog b componentdidmount consolelog b super class c extends mixin b static getqueries super consolelog c componentdidmount super consolelog c cgetqueries b c new c componentdidmount b c issue warnings mixin function called overlapping methods missing super calls solvable confusingcomplex issues javascript class c extends mixin b state intializer overrides state initializer base class current react class system merges two also valid since nt property initializers yet based typescript syntax state b true componentdidmount forgot put super call warning since mixin logic happens class created clear mixins escape hatch work around reusability limitations system idiomatic react idiomatic react reusable code primarily implemented terms composition inheritance", "num": "1380", "d": "4/2014"}, {"title": "need way force component reload", "body": "building component allows create social widgets problem run adding google plus twitter buttons remove react node id parse using google plus twitter api makes perfect sense way ignore fact react ca nt find node id rerender whole component situation would great component live updates type info gets invariant violation ca nt update widget little code case confused componentdidupdate function fbxfbmlparse twttrwidgetsload gapiplusonego gapiplusgo gapipagego componentdidmount function twttrwidgetsload fbxfbmlparse gapiplusonego gapiplusgo gapipagego functions remove react node id trying update twitter share button anything else user types information throws error", "num": "1377", "d": "4/2014"}, {"title": "unmounting svg title tag throws exception", "body": "example jsbin clicking first time works mounts svg clicking button unmount recttitle react throws exception clue get around help much appreciated thanks advance", "num": "1376", "d": "4/2014"}, {"title": "rfc pointer events", "body": "stumbled across days ago ms seemingly pushing become standard looking solutionsimplementations seem align practically seems like great thing support even react nt provide core polyfill simply adding support events users free polyfill using library choice seems like great thing nt mind providing pr simple matter agree", "num": "1375", "d": "4/2014"}, {"title": "error using amp strings", "body": "fails unexpected token illegal think problem safe html implementation jsx reactdom var hello reactcreateclass render function return hello thispropsname reactrendercomponent documentbody", "num": "1374", "d": "4/2014"}, {"title": "implement better refs api", "body": "ref api broken several aspects refer thisrefs myname strings closure compiler advanced mode compatible nt allow notion multiple owners single instance magical dynamic strings potentially break optimizations vms needs always consistent synchronously resolved means asynchronous batching rendering introduces potential bugs currently hook get sibling refs one component refer sibling context reference works one level breaks ability wrap one encapsulation ca nt statically typed cast use languages like typescript way attach ref correct owner callback invoked child ref attached callback issued current owner think solution must ultimately kind first class ref passed around refs chained create multiowner refs efficiently creating object ref also get rid keeping track owners descriptors saving perf common idiomatic case using refs secondary goal may may important idea making resolution refs asynchronous respond batched flushreconciliation concept first class ref basically reference object nt exist yet luckily first class notion language already called promise create new ref instance promise object eventually resolve actual instance javascript class foo mydivref reactcreateref handletick thismydivrefthen mydivnode gt thissetstate width mydivnodeoffsetwidth render return since builds top promises would able get asyncawait language features allow us something like solves use cases afaik asynchronous api little difficult deal makes less weird alternative batching involved unsolved problem refs update point different instance case promise would need reresolved promises good enough ultimately need something like observable handle multiple values ca nt wait spec though maybe allow promises reset call get new value", "num": "1373", "d": "4/2014"}, {"title": "warn using dangerouslysetinnerhtml incorrectly", "body": "happened times resulting confusion let either warn maybe allow string cc syranide", "num": "1370", "d": "4/2014"}, {"title": "warning second param reactdom undefined", "body": "sometimes forget set first param lets say parameters write giving warning second param undefined first param string react component", "num": "1369", "d": "4/2014"}, {"title": "special lifecycle hooks called using", "body": "using component special lifecycle hooks called think would useful nice know transition occurs state transition owns guess special methods meant expose states make work unless use way css classes applied transition documentation states reacttransitiongroup basis animations children declaratively added removed example special lifecycle hooks called example using one would expect special hooks called seems nt", "num": "1368", "d": "4/2014"}, {"title": "show warning throw error event handler function", "body": "could simplify debugging lot easy change believe whenever passed event handler etc valid function example warn developer", "num": "1367", "d": "4/2014"}, {"title": "setprops server render", "body": "tl dr nt seem work server since mounting nt really thing server appears ca nt update properties component instance tl dr positive react way would scenario let try explain got isomorphic code handles clientside actions code course runs server well render react pages browser strategy using react mount root component update new data comes server requests socket connections etc key client gets mostly empty component updates data comes server otherhand trouble code since server never mounts component hard time updating component properties returns error requires component mounted far aware nt possible server currently passing whole render process custom render function attached react componet manually merges new data object allows isomorphic code base since manually merging objects feels dirty brittle would sane person mutate component properties prior rendering server", "num": "1361", "d": "4/2014"}, {"title": "debounce onchange", "body": "hello problem text input onchange event need debouncing user input debounce onchange handle etarget opportunity extract input value hack situation example", "num": "1360", "d": "4/2014"}, {"title": "serve react unminified docs site", "body": "sometimes helpful playground grokking react features like use live editor docs site sketch ideas see code called library huge help site react source served unminified apparent going covers", "num": "1359", "d": "4/2014"}, {"title": "css property values strings nt px appended", "body": "weird gets turned think add value actual number", "num": "1357", "d": "4/2014"}, {"title": "touchmove nt fire removed element", "body": "ontouchstart handler removes div maybe replaces another one place useful certain draggable interactions ontouchmove handler nt fire events detached element longer bubble document probably bind touchmove handler element receives touchstart instead delegating document sort related cc merbs eater", "num": "1355", "d": "4/2014"}, {"title": "setstate componentwillmount render componentdidmount causes invariant violation", "body": "situation simultaneously render multiple instances component componentwillmount check made one props passed component event may raised causes components update state like example problem seems one components render method called component yet mounted call setstate throws exception uncaught error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser try inspecting child nodes element react id", "num": "1353", "d": "4/2014"}, {"title": "allow components optout reactinputselection handling", "body": "experimenting building new text editor component atom noticed ms per keystroke spent restore selection functionality could add property input like something along lines prevent dom access code requires flame graph showing access happens bit confusing due stack depth limit chromium profiler highlighted operations question", "num": "1350", "d": "4/2014"}, {"title": "better debugging duplicatedkeys invariant violation", "body": "would great tool could pull report elements virtual dom match given key would really help tracking causes error messages like invariant violation flattenchildren encountered two children key children keys must unique", "num": "1349", "d": "4/2014"}, {"title": "syntax highlight atomio", "body": "", "num": "1348", "d": "4/2014"}, {"title": "problem using jsx", "body": "jsx included code like given following error console seemed work added line return render function", "num": "1344", "d": "4/2014"}, {"title": "add support svg enablebackground property", "body": "", "num": "1343", "d": "4/2014"}, {"title": "consider providing default key dynamic children", "body": "many times performance issue find things like would make sense something like default", "num": "1342", "d": "4/2014"}, {"title": "gives problems", "body": "throws error tag nt exist rendered dom js jsx reactdom var hello reactcreateclass render function return thispropsx null reactrendercomponent documentbody reactrendercomponent documentbody thanks matthewwithanm pointing version", "num": "1341", "d": "4/2014"}, {"title": "improve handling download attribute", "body": "currently download attribute handled normal attribute would nice could treated boolean value attribute value boolean enough make attribute since nonboolean values significant example think would better reflect attribute used flag valueproviding attribute attribute present indicates author intends hyperlink used downloading resource attribute value value used prefilled file name save prompt", "num": "1337", "d": "3/2014"}, {"title": "give key warning top level", "body": "right nt also nt composite components", "num": "1333", "d": "3/2014"}, {"title": "nt give key warning rendering static markup", "body": "huge deal bit silly since markup wo nt mounted", "num": "1331", "d": "3/2014"}, {"title": "csstransitiongroup buggy due transition events firing reliably", "body": "trying convince react replace dom nodes inplace seems supported discovered something looks like bugs put demo first node gets replaced animation progressing removed demo means additional lines created soon animation completes node usually goes away second feature leave demo running change another tab wait seconds change back tab demo running accumulated lots green items basically stuck meaning animation completed removed dom", "num": "1326", "d": "3/2014"}, {"title": "obscure domchildrenoperations error missing tbody", "body": "attached code causes error message read property parentnode undefined domchildrenoperationsprocessupdates described different reason time react tries remove table second child ca nt find since replaced tbody nt expect good fix truly fixing tbody problem giving warning filing posterity thanks marknijhof providing version test case js jsx reactdom var hello reactcreateclass render function return thispropsvalue reactrendercomponent documentbody reactrendercomponent documentbody live demo", "num": "1323", "d": "3/2014"}, {"title": "react updating style attribute firefox", "body": "ran following issue using linear gradient background image element dynamically updating gradient seem work firefox running style attribute dom node get updated works fine chromium though code snippet play around working example", "num": "1316", "d": "3/2014"}, {"title": "react developer tools breaks natural scroll mac os x", "body": "activate react developer tools breaks natural scroll source code chrome developer tools mac os x chrome react developer tools download activate react developer tools inspect page source sources use two finger track pad scrolling expecting scroll direction natural scrolls reverse direction deactivate react developer tools scrolls natural direction really annoying makes extension activated impossible normal development", "num": "1315", "d": "3/2014"}, {"title": "immutable tests fail chrome using", "body": "seems like jasmine cycle detection tacking property thus nt work properly frozen objects fails chrome cc kmeht", "num": "1314", "d": "3/2014"}, {"title": "allow children traversed even created using render", "body": "seems undefined component children defined front instead defined parent component rendering request component mounted always contain valid representation component children use case allow deep iteration child components without worry components defined children specific example would find nested components input fields set data backbone model note realize might say components set model values input fields changed need deep traversal ideally nt want actually update model data form completely filled", "num": "1312", "d": "3/2014"}, {"title": "make possible render amp replace nodes", "body": "come bunch might time", "num": "1311", "d": "3/2014"}, {"title": "trigger animations component mount needed", "body": "current animations triggered changes occured component cases need launch animation component mount add code componentdidmount function thispropstransitionimmediately var nextchildmapping thisstatechildren var key pass would launch animation", "num": "1304", "d": "3/2014"}, {"title": "make reactcreateclass warnthrow mixins contains undefined value", "body": "code could result typo mixin name attempt use mixin module mistakte would nice react warnthrow condition", "num": "1302", "d": "3/2014"}, {"title": "react tracks scroll position internally forces synchronous layout", "body": "react adds scroll listener tracks caches scroll position assume undocumented internal purpose additionally scroll listener forces synchronous layout see screenshot seems wasteful especially considering values tracked never exposed api scroll listener used removed", "num": "1300", "d": "3/2014"}, {"title": "mincer jsx integration", "body": "context franticmincerjsx plugin mincer adds jsx syntax support", "num": "1299", "d": "3/2014"}, {"title": "support svg foreignobject tag", "body": "im seeing error uncaught referenceerror foreignobject defined", "num": "1298", "d": "3/2014"}, {"title": "simulatemouseenter simulatemouseleave working", "body": "testing wanted simulate events reason firing handlers component fiddle show see simulate functions click actually triggered ones real events everything works perfectly tried debug little bit going nt get much information especially since first time diving events mechanism internals react want info try dig bit deeper think fiddle clear enough", "num": "1297", "d": "3/2014"}, {"title": "rendercomponenttostaticmarkup vs rendercomponenttostring", "body": "please give example shows difference vs", "num": "1296", "d": "3/2014"}, {"title": "optional type tag components trigger unmounts", "body": "react provides kind type tag om move beyond react react issues warnings development constructor property react component instance function introduce hack starting react order get om components unmount om components backed single react component set constructor property unique string value separate optional type tag could avoid react key satisfactory solution due likelihood collisions given user supplied key", "num": "1295", "d": "3/2014"}, {"title": "build fails jsx normal jsx task warning socket closed", "body": "h githubreact grunt running deletebuildmodules task running jsx normal jsx task warning socket closed use force continue aborted due warnings windows hint", "num": "1292", "d": "3/2014"}, {"title": "comments include lt lessthan sign within jsx always ignored", "body": "place comment includes lt lessthan sign within element jsx errors notice comment right hello expected anything within matter jsx always fully ignored effect render", "num": "1289", "d": "3/2014"}, {"title": "invariant violation setenabled asked report immediately", "body": "trying testutils things breaking node stdout codetests mocha test passing failing test tests render label error invariant violation setenabled toggle event listening worker thread likely bug framework please report immediately invariant objectmergesetenabled reactreconciletransactioneventsuppressioninitialize reactreconciletransactionmixininitializeall reactreconciletransactionmixinperform reactcomponentmixinmountcomponentintonode object objectrendernewrootcomponent objectreactmountrendercomponent objectrendercomponent objectreacttestutilsrenderintodocument context callfn testrunnablerun runnerruntest next next immediateonimmediate processimmediate immediatecallback testjs js module dependencies var react require reactaddons var require var mocha require mocha var jsdom require jsdom var utils reactaddonstestutils initialize variables var document var window initialize jsdom beforeeach function globalwindow jsdomjsdom createwindow globaldocument globalwindowdocument tests describe test tests function display window objects function globalwindowshouldexist globaldocumentshouldexist render label function var label utilsrenderintodocument reactdomlabel null hi packagejson", "num": "1287", "d": "3/2014"}, {"title": "find document jsdom react test utils", "body": "made small test setup try jsdom react running first one passes second one fails detect idea wrong testjs js module dependencies var utils require reacttestutils var require var react require react var mocha require mocha var jsdom require jsdom initialize variables var document var window initialize jsdom beforeeach function document jsdomjsdom window documentcreatewindow tests describe test tests function display window objects function documentshouldexist windowshouldexist render label function var label utilsrenderintodocument packages", "num": "1286", "d": "3/2014"}, {"title": "potential addition complementary tools page reactbacon", "body": "made little library mixin right integrates baconjs react components consideration include complimentary tools page", "num": "1281", "d": "3/2014"}, {"title": "jsx fails resolve deprecated use q instead error", "body": "getting error run jsx happening anybody else something wrong", "num": "1278", "d": "3/2014"}, {"title": "made possible server render without reactrelated markup", "body": "mean", "num": "1277", "d": "3/2014"}, {"title": "reactcsstransitiongroup broken android", "body": "reactcsstransitiongroup nt work properly least android narrowed code finding properties test element object registering handlers despite fact android fires events end transition nt properly detected investigation see safer way detection android seem recall seeing something similar", "num": "1275", "d": "3/2014"}, {"title": "clonewithprops nt transfer key prop", "body": "reason understand shares code method transfer needed using expect prop transferred currently var react require reactaddons var reactcreateclass render function var key key var reactaddonsclonewithprops var assert require assert assertok key assertok undefined", "num": "1274", "d": "3/2014"}, {"title": "wishlist ability disable synthetic event system", "body": "would huge problems caused optionally disabling synthetic event system like option order get responsiveness underpowered machines", "num": "1269", "d": "3/2014"}, {"title": "ca nt pass props object", "body": "pretty annoying see editing compiled version var props href thispropsanchorhref classname titleclass key thispropsdataattributesitems name data key props name thispropsdataattributesitems key see loop create new attributes compiling jsx nt see possible way", "num": "1266", "d": "3/2014"}, {"title": "error invariant violation reactmount two valid unequal nodes", "body": "tl dr fix load polymerjs first probably related rendered inside unwrapped polymer element child node following error thrown would imagine radio buttons etc would also throw sure actual bug limitation react shadowdompolymer error message exactly helpful determining wrote simple jsbin demonstrates problem", "num": "1263", "d": "3/2014"}, {"title": "context propagate across reactrendercomponent", "body": "really want work", "num": "1260", "d": "3/2014"}, {"title": "stop data aria start using dataset", "body": "dom already exposes transformation hyphenated camelcase mdn john doe var el documentqueryselector user elid user eldatasetid eldatasetuser johndoe eldatasetdateofbirth eldatasetdateofbirth set dob somedataattr eldataset false eldatasetsomedataattr mydata somedataattr eldataset true start supporting camelcase allow couple things easier reasoning data attributes easier merging easier potentially faster updates modify want reverse dom eg becomes best knowledge nt corresponding api make work way think makes sense", "num": "1259", "d": "3/2014"}, {"title": "throw error null falsy values passed event listeners", "body": "null values event listeners fail silently falsy values event listeners fail silently", "num": "1255", "d": "3/2014"}, {"title": "react nt bind wheel touch events document", "body": "react binds touchmove touchstart touchend touchcancel wheel handlers document user tries scroll browser needs execute event handlers ensure eventpreventdefault called means scrolling stall javascript executing chrome fastpath checks whether coordinate touch event happens touch listeners listeners chrome allow scroll happen even main thread blocked javascript bind listeners events directly node requires event handler dispatch event standard react top level event system bubblecapture like everything else visible event plugins", "num": "1254", "d": "3/2014"}, {"title": "iframe contents cause invariant violation", "body": "using server rendering putting seems invariably cause invariant violation ca nt find image related identical cases browser nt aware inner elements however case browsers support iframes actually mutating dom replacing contents document specified attribute", "num": "1253", "d": "3/2014"}, {"title": "noscript contents cause invariant violation", "body": "using server rendering putting seems invariably cause invariant violation ca nt find image believe js enabled browser noscript content looks like cdata worked around using actually set contents html string however ca nt nest components approach", "num": "1252", "d": "3/2014"}, {"title": "stop documentcreateelement tests", "body": "ton places nt exciting task gets exposed lots tests help understanding react core better cc kmeht", "num": "1250", "d": "3/2014"}, {"title": "nt consider forceupdates unmounting error", "body": "came across issue reactbackbone opinion issue react though possible work around implementing imho react let say backbone model event source listen changes changes tend come together adds collections instance nt want rerender know probable new change arrive take naive code add debounce throttle see background unmount component course unbind event listeners however easy way remove throttlled operations still air debounce comes end time triggers throttled forceupdate wonder react would consider forceupdate unmount exceptionerror think warning might warranted nt default behaviour throwing away call perfectly fine otherwise demanding users components either wrap forceupdate safeforceupdate checks ismounted bound events must unbound synchronous would guess nt always possible indeed everyone agrees would willing make pr sounds like something everyone might agree interested backgroundopinions", "num": "1247", "d": "3/2014"}, {"title": "ismounted correct parents componentwillmount", "body": "throws", "num": "1245", "d": "3/2014"}, {"title": "thinking react link goes codefacebookcom", "body": "go click thinking react feel sad", "num": "1238", "d": "3/2014"}, {"title": "whitespace kills svg text", "body": "see note spaces around bar entry make rendered svg text span svg", "num": "1236", "d": "3/2014"}, {"title": "switching dangerouslysetinnerhtml children", "body": "tripped strange error one state component uses html specify children rendering markdown another state uses child components interactive content inner html reduced testcase", "num": "1232", "d": "3/2014"}, {"title": "emacs react", "body": "hi would accept add link webmodeel page webmodeel emacs major mode editing web templates screenshot", "num": "1230", "d": "3/2014"}, {"title": "event handlers different component trees batch together", "body": "right reactupdatesbatchedupdates called reacteventemittermixinjs probably higher reacttopleveleventcallbackjs nested roots updates queued batch", "num": "1227", "d": "3/2014"}, {"title": "add errorstack errors thrown", "body": "hard debug problems happens react nt know problem low information", "num": "1220", "d": "3/2014"}, {"title": "rendercomponenttostring render", "body": "rendercomponent render input field rendercomponenttostring error uncaught typeerror read property firstchild undefined versions react jsxtransformer", "num": "1218", "d": "3/2014"}, {"title": "jsx comments work", "body": "transformed note trailing results syntax error problem seems comma insertion related functions eg see irc discussion findings relevant parts irc discussion", "num": "1216", "d": "3/2014"}, {"title": "add support future custom elements", "body": "would really cool allow view custom elements", "num": "1214", "d": "3/2014"}, {"title": "update lifecycle methods docs specify execution environments methods", "body": "lifecycle method documentation clear methods run run server", "num": "1213", "d": "3/2014"}, {"title": "packaging issue", "body": "installed using npm following tried require react get object contains function named seems incorrect missing something thanks", "num": "1212", "d": "3/2014"}, {"title": "ismounted usage rendercomponent", "body": "usage ismounted reactrendercomponent results invalid access methods one often used outside component guard access methods really antipattern like described understand comes methods ismounted case", "num": "1205", "d": "3/2014"}, {"title": "proptypesoneoftype return chainable validator object", "body": "example reactproptypesoneoftype reactproptypesobject reactproptypesstring isrequired lt undefined", "num": "1202", "d": "3/2014"}, {"title": "transitiongroup trigger componentwillenter first render", "body": "see first circle stays gray method never called sure bug intentional maybe reason components nt perform transitions mounted case surprising", "num": "1199", "d": "2/2014"}, {"title": "add missing onanimationstartonanimationend event handlers", "body": "react currently nt handle aforementioned events patch works webkit work needs done make work browsers support standard css tags", "num": "1196", "d": "2/2014"}, {"title": "renderintodocument working", "body": "hi guys jasmine backbone fault javascript describe cnotice function lol function consolelog notice present consolelog return constructor error invariant violation addcomponentasrefto reactowner refs usually means trying add ref component nt owner created inside another component render method try rendering component inside new toplevel component hold ref code problem javascript describe cnotice function var notice null beforeeach function notice reactcreateclass want import notice component external file thanks", "num": "1191", "d": "2/2014"}, {"title": "inconsistent calling setstate callback", "body": "passing callback unclear whether callback called synchronously asynchronously specifically seems callback executed synchronously react decides effect state changes unclear whether react effect state changes asynchronously synchronously makes hard reason callback called seems consistency even react effects state changes synchronously callback shoved event loop called asynchronously sake consistent api example case shows example callback passed setstate gets called synchronously state change effected synchronously look console numbers start getting logged clicked ok alert box example case shows example callback executed asynchronously state change effected asynchronously see comments fiddle", "num": "1187", "d": "2/2014"}, {"title": "reacttestutilssimulateclick work jsdom", "body": "testing react application nodejs mocha jsdom reacttestutilssimulateclick affect component sample app reproduce problem test", "num": "1185", "d": "2/2014"}, {"title": "special case arrays dom properties", "body": "often code uses heavy handed often times want add class style based option currently want looks something like bad sometimes well longer classnames multiply large number situation adds lot duplicate work developers want make better us talked different ideas want combination explicit much magic one idea magical prop could used pass surface looks great need bake knowledge certain props composite components string guaranteed component using prop way used dom settled least surprising line special casing react dom properties right booleans get handled specially planning ability special case arrays allows us would need individual properties apply handling every property example would basically need flatten join space style would need flatten merge objects diverge slightly current behavior stringifying allmost properties", "num": "1179", "d": "2/2014"}, {"title": "inputs slower update tags", "body": "compare one swapped input span notice second one twice fast update maybe optimize reactdominput bring line", "num": "1178", "d": "2/2014"}, {"title": "html characters parsed", "body": "hi possible react compiler turns html characters like inside react code literal characters compiled causing problems opened browser way fix", "num": "1177", "d": "2/2014"}, {"title": "jsx html entities without surrounding text produce bad js", "body": "html entities work interspersed plain text ex becomes space middle genuine nbsp often nonbreaking space used style background element without collapsing work react currently becomes parse", "num": "1176", "d": "2/2014"}, {"title": "react support svg opacity attributes", "body": "none svg attributes seem work", "num": "1171", "d": "2/2014"}, {"title": "mobilesafariclickeventplugin requires touch events initialized", "body": "event trigger node cursor pointer style example", "num": "1169", "d": "2/2014"}, {"title": "jsxtransformer error", "body": "jsxtransformerjs included script html produces error arrfoo function firefox jsx file transformed offline javascript produces error error invariant violation registercomponent target container dom element line line points back line contains arrfoo", "num": "1168", "d": "2/2014"}, {"title": "react escaping causing markupchecksum match", "body": "noticed lately app throwing following warning load running code debugger found difference generated markup inpage lot lines like following inbrowser generated markup includes prerendered page something misconfigured bug", "num": "1165", "d": "2/2014"}, {"title": "reactcomponentisvalidcomponent returns true component classes", "body": "last two assertions new test nt pass ducktyping check added sebmarkbage quite sure mind every object whose component class valid right js identify valid components correctly function var component reactcreateclass render function return expect reactcomponentisvalidcomponent toequal true expect reactcomponentisvalidcomponent toequal true expect reactcomponentisvalidcomponent null toequal false expect reactcomponentisvalidcomponent true toequal false expect reactcomponentisvalidcomponent toequal false expect reactcomponentisvalidcomponent string toequal false expect reactcomponentisvalidcomponent reactdomdiv toequal false fail expect reactcomponentisvalidcomponent component toequal false fail", "num": "1164", "d": "2/2014"}, {"title": "docs componentdidupdate etc says", "body": "componentspecs says several places prior dom node passed last argument using still access dom node calling thisgetdomnode pretty sure change made", "num": "1163", "d": "2/2014"}, {"title": "working jsx", "body": "react docs say valid html attributes accepted jsx let please make exception working ps found supposed way via value really convenient generate please let honor basic promises", "num": "1162", "d": "2/2014"}, {"title": "provide way handle browserautocompleted form values controlled components", "body": "controlled component form names user saved browser common usernamepassword fields browser sometimes render page values fields without firing onchange events user submits form component state reflect showing user experimenting appears data load tested logging thisrefsmyinputgetdomnode value", "num": "1159", "d": "2/2014"}, {"title": "download react devtools already installed", "body": "getting console already installed google chrome latest using stable included browserify shimmed aliased react react see use react tab chrome devtools", "num": "1158", "d": "2/2014"}, {"title": "remove todomvc examples", "body": "related todomvcs updated pass todomvc tests sync back wondering simpler put readme examples docs site point react todos todomvc repo", "num": "1154", "d": "2/2014"}, {"title": "extract html mutation setinnerhtml module consistent behavior", "body": "see", "num": "1153", "d": "2/2014"}, {"title": "trigger change events value input changed programmatically", "body": "bind event input using change value input programmatically change event fired example changing input result triggering done manually like", "num": "1152", "d": "2/2014"}, {"title": "reactrendercomponenttostring wo nt render nested image tag", "body": "see fiddle img tag nested one level fails render uncaught typeerror read property firstchild undefined self closing paragraph fine reproduce issue current master img tag special case way work around issue", "num": "1149", "d": "2/2014"}, {"title": "obscure domchildrenoperations error multiple updates", "body": "throws js jsx reactdom var x reactcreateclass getinitialstate function return render function thisstates return else thisstates return else return go function thissetstate thissetstate thissetstate thissetstate var reactcreateclass render function return var z reactcreateclass render function return componentwillupdate function xgo var xnode documentgetelementbyid x var ynode documentgetelementbyid var x reactrendercomponent xnode reactrendercomponent ynode reactrendercomponent ynode maybe simplified simplest repro could make thanks fforw sending repro case", "num": "1147", "d": "2/2014"}, {"title": "jsx tool weird things providesmodule", "body": "ca nt reproduce making files public instead publicjs repro making autofocusmixinjs", "num": "1145", "d": "2/2014"}, {"title": "polygon missing transform reactdom", "body": "blames", "num": "1144", "d": "2/2014"}, {"title": "getinitialstate called component lifecycle", "body": "reproduce simple code looks like post whole code wrong look pictures first one right panel state null second already populated", "num": "1142", "d": "2/2014"}, {"title": "svg changing classname nt work", "body": "still nt work workaround refs", "num": "1139", "d": "2/2014"}, {"title": "mixed callback mixins", "body": "think mixed callback mixins called moment applying mixin component component spec argument var sometrickerymixin mixin function spec redefine render dangerous things besides overriding callbacks used want implement custom policy methods wrap method callbefore callafter downside would make things little less straightforward mixin user perspective", "num": "1138", "d": "2/2014"}, {"title": "unique component identifier", "body": "reactasync reactmultiplayer need components unique identifiers case reactasync maintain mapping component state make serialisable send wire map components keys ca nt used case reactmultiplayer unique url per component instance currently libraries use added public api something", "num": "1137", "d": "2/2014"}, {"title": "remove usage docs examples", "body": "whitespace fix remove soon", "num": "1136", "d": "2/2014"}, {"title": "convert camelcasing data properties hyphens", "body": "background properties specialcased allow works naturally jsx looks great however breaks directly using reactdom api particularly transpilers instance coffeescript div reactdom div datafoo bar silently ignored hyphen required attributes picked custom property regex hypens allowed literal object property names requires ugly extra set quotes proposal camelcased custom properties convert every uppercase character hyphen followed character downcased wo nt conflict builtin properties since would ignored anyway nt introduce regressions makes custom properties behave like standard ones also reverse transformation jquery makes data attributes seems quite natural", "num": "1134", "d": "2/2014"}, {"title": "reactrendercomponenttostring executionenvironmentcanusedom", "body": "using test generated output forms library sharing set qunit tests firefox chrome nodejs using qqunit function always thrown errors used browser tests still worked seemed call callback throwing error custom assertion function using trying browser test suites complaining function synchronous error thrown get hold generated html run nodejs tests bombing navigator check chrome becuase qqunit fakes global using jsdom patch check navigator undefined get results running browser edited nodemodules version add process check tests run nodejs complains assertions boolean html attributes longer part generated markup biggie edited version test browsers using following errors thrown call errors html differences getting running nodejs tl dr react always using equivalent executing stops throwing errors", "num": "1129", "d": "2/2014"}, {"title": "add support schemaorg attributes itemscope itemtype itemprop", "body": "", "num": "1126", "d": "2/2014"}, {"title": "unable set audio tag attributes", "body": "limitation api tags see maybe react work around like normalize tags etc would like able something like pseudocode react pick attribute change take care invoking javascript interface attributes etc", "num": "1124", "d": "2/2014"}, {"title": "reactbootstrap builds move reactjs org", "body": "hi like separate builds source time move org looks like good place like repos like move source later date sad losing stars thanks", "num": "1123", "d": "2/2014"}, {"title": "document expose reactperf", "body": "think said wanted", "num": "1121", "d": "2/2014"}, {"title": "warning code shows min build", "body": "see search either change warning implementation warn strip build step b change callers check cpojer", "num": "1120", "d": "2/2014"}, {"title": "reacteventemitter error upgrade react", "body": "upgraded previously working app running app throws following error chrome nt get detailed stack trace though sorry app previously working without errors react also upgraded reacttouchlib dependency created fork reacttouchlib repo update react dependency case existing dependency react causing issue", "num": "1119", "d": "2/2014"}, {"title": "inaccurate warning value props set without onchange", "body": "create input component set without providing handler react log console provided prop form field without handler render readonly field field mutable use otherwise set either nt entirely accurate however example app rely event bubbling set single form component thereby saving sanity preventing add every single field lot app working", "num": "1118", "d": "2/2014"}, {"title": "support anchor tag attributes", "body": "react currently support anchor tag attributes know current status adoption attributes know chrome supports pretty sure firefox supports well could really care less thought mention completeness see also", "num": "1115", "d": "2/2014"}, {"title": "reacttools npm package broken", "body": "returns object method undefined", "num": "1114", "d": "2/2014"}, {"title": "strange cursor jump", "body": "situation nt modify value onchange working like charm modify value cursor jumping end prevent behaviour without control state cursor position update", "num": "1113", "d": "2/2014"}, {"title": "csstransitiongroup working safari", "body": "changed replaced reactaddonstransitiongroup reactaddonscsstransitiongroup transistions leave leaveactive longer work safari mac os x understand safari regarded bit old eg github react meant support browser transistions work fine safari chrome", "num": "1111", "d": "2/2014"}, {"title": "docs componentdidupdate get called initial render", "body": "documentation states lifecycle method nt get called initial render whereas opposite true rightly due opportunity capture dom state occasions think needs updating", "num": "1109", "d": "2/2014"}, {"title": "browserify r react takes almost seconds", "body": "react react think envify switched recast submitted patch envify uses jstransform instead recast brings us back delivers advantages recast version preserves code formatting think blocker", "num": "1108", "d": "2/2014"}, {"title": "changing node type breaks invariant", "body": "example var failingcomponent reactcreateclass getinitialstate function return selecting false handleaddclick function e thissetstate selecting true render function thisstateselecting cause invariant violation return reactdominput null else return reactdomdiv onclick thishandleaddclick press reactrendercomponent failingcomponent documentgetelementbyid example one tries click div error raised invariant violation reactmount two valid unequal nodes break pair instead tag well maybe tags well nt checked nt break tag others works flawlessly react nt work master", "num": "1107", "d": "2/2014"}, {"title": "handletoplevel throw removing event target", "body": "throws click text", "num": "1105", "d": "2/2014"}, {"title": "reactchildrenonlychild throws text child", "body": "text child string fails would make sense accept string frankly confused api", "num": "1104", "d": "2/2014"}, {"title": "document clonewithprops", "body": "", "num": "1103", "d": "2/2014"}, {"title": "consider backporting change", "body": "would help people using reactrails version node shipping rails buildpack laughably ancient", "num": "1101", "d": "2/2014"}, {"title": "bring descriptor warning", "body": "warning point great change end point right gist documentation documentation update fbme url launch", "num": "1098", "d": "2/2014"}, {"title": "make sure whitespace codemod correct", "body": "see syranide comment", "num": "1093", "d": "2/2014"}, {"title": "make consoletable work firefox perf", "body": "need petehunt cc joshduck going block nt think people using perf stuff fix asap", "num": "1091", "d": "2/2014"}, {"title": "sync vendored modules", "body": "", "num": "1090", "d": "2/2014"}, {"title": "tutorial revamp", "body": "would like include routing model objects integration jquery plugin sortable related", "num": "1089", "d": "2/2014"}, {"title": "error invalid operand object expected gt", "body": "hi getting following error click dom node nt mounted yet least think happening occurs clicking element multiple times transitions fixed issue updating getselection function selecteventpluginjs flipping test seems work wanted check adverse impact", "num": "1083", "d": "2/2014"}, {"title": "rendering strings newlines inconsistent rererender", "body": "rerender sometimes use innertext causes inconsistencies rendering whitespace see demo make sure nt happen", "num": "1080", "d": "2/2014"}, {"title": "componentdidmount run server render", "body": "fails might fixed nt tried related swannodetteom", "num": "1079", "d": "2/2014"}, {"title": "monkeypatch mathrandom new date datenow render dev", "body": "talking adam wolff today rxjs ton common bugs functions gon na bad time use react methods monkeypatched warn could prevent bugs jordwalke seemed like idea", "num": "1077", "d": "2/2014"}, {"title": "fix", "body": "since nt call gets hella confused", "num": "1074", "d": "2/2014"}, {"title": "fix transitions example use csstransitiongroup", "body": "let remember merging", "num": "1071", "d": "2/2014"}, {"title": "map undefined json object passed", "body": "reactjs library using underscorejs right see map function nt work json object data passed using map consists json schema excerpt would like use built map function rely external library wrong", "num": "1068", "d": "2/2014"}, {"title": "expose csstransitiongroup reactaddons", "body": "", "num": "1064", "d": "2/2014"}, {"title": "support lowercase vendor prefixes stylenames", "body": "tldr let allow stylenames recommend javascript keys start capital letter vendor prefixes presumably hyphenation trivial start single leading hyphen forces user put vendorspecific key nt even valid produces css nt really work probably need rework build awareness vendorspecific prefixes core react style building comes", "num": "1063", "d": "2/2014"}, {"title": "react ignores form attributes", "body": "passing react ignores enctype nt parse", "num": "1062", "d": "2/2014"}, {"title": "use merge withcontext means prototype values nt copied", "body": "written context class planned use turns implemented using copies properties understand desired places reason could nt merge properties clear example troublesome code", "num": "1061", "d": "2/2014"}, {"title": "reactemptycomponent nullcomponent", "body": "people varying hacks allow component render nothing add stopgap standard solution support components returning propose something like title maybe aka probably render one thing people another thing ideally something nt break flow", "num": "1058", "d": "2/2014"}, {"title": "add support iframe attributes seamless sandbox srcdoc", "body": "", "num": "1057", "d": "2/2014"}, {"title": "write docs statics", "body": "since descriptor warning references statics probably document releasing", "num": "1056", "d": "2/2014"}, {"title": "jstransform longer works", "body": "jsfransform sourcemap uses nt support shimsshams nt either", "num": "1053", "d": "2/2014"}, {"title": "react incorrectly identifies component root presence textnodes container", "body": "quoting andreypopp react incorrectly identifies component root presence textnodes container removed whitespaces tags template everything ok fixed react though see commit fix", "num": "1050", "d": "2/2014"}, {"title": "jsxcompilerhtml nt show livecompiled switcher", "body": "chenglou", "num": "1049", "d": "2/2014"}, {"title": "allow disable guard feature", "body": "see", "num": "1047", "d": "2/2014"}, {"title": "unmounting react node", "body": "trying unmount reactjs node handleclick function returns fired click element unmount rootnode tried well selector works unmounting documentation states like would use tests turns works elementsselectors somehow works selector element generated reactjs plain html returns soon try select different generated reactjs returns wo nt work either though essentially return thing also nt work simple way select node via without resort jquery selectors know somewhere", "num": "1044", "d": "2/2014"}, {"title": "error removing without", "body": "got template like got error debug session found happened parent node removed element child node table solution wrap think many people nt wright tag", "num": "1043", "d": "2/2014"}, {"title": "allow html conditional comments doctype", "body": "hacking fully server client compatible app using react one obstactle running seems react nt like exclamation marks jsxstyle code example pretty standard boilerplate html think getting stuck conditional comments example would prefer keep code html style render server without making major changes needs inside react class open trying hack together may take stab sometime coming week", "num": "1035", "d": "2/2014"}, {"title": "android simple form fails", "body": "created gist illustrating getting output adb console", "num": "1031", "d": "2/2014"}, {"title": "tags nt supported", "body": "tl dr nt work background make tags work one needs something along lines js function var header footer nav article section menu var lt documentcreateelement well create css rule running code behave sanely elements manipulating document nodes however nodes nt attached document decides sad work specifically detach nodes document whenever set reactcomponentbrowserenvironmentjs jquery gets around creating elements document fragment inserting document probably something similar", "num": "1030", "d": "2/2014"}, {"title": "behavior differs chrome manually removing component dom", "body": "recently came across following js jsx reactdom var countdownview reactcreateclass componentdidmount function thistimeout setinterval thisforceupdatebind function rerender documentbodyinnerhtml reactrendercomponent documentgetelementbyid container rerender live demo note manually removing component element dom using instead clicking timestamp thereafter cause js error findcomponentroot every second chrome firefox errors thrown addition would nice could give useful message instead clear completely render get somewhathelpful warning reactmount root element removed original container", "num": "1029", "d": "2/2014"}, {"title": "error message passing string instead function handler could clear", "body": "accidentally wrote code react responded technically correct somewhat vague error message undefinedhandlechange string function clear", "num": "1028", "d": "2/2014"}, {"title": "sending state current component parameter another external method possible", "body": "", "num": "1025", "d": "2/2014"}, {"title": "update latest esprima jstransform", "body": "need pick latest changes fix parse errors", "num": "1024", "d": "2/2014"}, {"title": "remove warnings old react module", "body": "", "num": "1023", "d": "2/2014"}, {"title": "todo list application react home page working", "body": "sure best place report application todo example react homepage seems bug adding new item fact adds two one created empty jsfiddle works fine nt know whether conflict something else page setup details", "num": "1020", "d": "2/2014"}, {"title": "error raised disabling input element focus", "body": "sure qualifies bug feature request let decide steps reproduce load url jsfiddle nt play well host open developer tools click submit button call handler sets disabled property submit button notice error console worked around application calling documentbodyfocus disabling button active focus would nice react input component could detect focus remove disabling", "num": "1015", "d": "2/2014"}, {"title": "shouldcomponentreceiveprops something", "body": "talked spicyj chat back agreed something like whether component simulate would sometimes great means resolving confusion two components type completely different data would normally considered say zpao briefly mentioned one could wrap component provide really quite hack two components would intricately bound methods put outer outer possibly reading state inner also quite tedious background opinion solution reconciling reordered children synonymous identity component could index array objects thus replaced array component would update rather remount identical even though also something decided handled component opposed parent speaking zpao seemed agree could nt see much use believe definite usecases like array primarily thirdparty integration reusable components alternatives could simulated using mixin simply invokes full chain methods component dom inputs would incorrectly remain unless also assign identity root node component could also still dirty feel issue addressed properly react minor change believe although intersects significantly refactoring may advisable naming probably shitty name feel like remain true meaning thus form really rather kill", "num": "1014", "d": "2/2014"}, {"title": "update docs supported properties", "body": "let hold sure cut release least going add couple entirely possible add", "num": "1008", "d": "2/2014"}, {"title": "react release object owner", "body": "trying jsonstringify object previously used react however react adds property object mount circular structure ca nt stringified longer want component rendered way release object remove less hacky property go away somehow unmount react component", "num": "1004", "d": "1/2014"}, {"title": "get digits worth issues", "body": "really try hit milestone", "num": "1000", "d": "1/2014"}, {"title": "able specify types using reactproptypesoneof", "body": "see nt work see implementation unfortunate ca nt set prop bonafide number get course calls turns array numbers object number gets cast string used key store value", "num": "999", "d": "1/2014"}, {"title": "gives parse error", "body": "parse error unexpected token gt workaround applies gt lt", "num": "998", "d": "1/2014"}, {"title": "invariant violation probably means dom unexpectedly mutated eg browser", "body": "getting whole bunch errors starting finishing changing widgetssettingsloginjs line problem goes completely away problem crossbrowser steps reproduce checkout cd lostdappsrc python simplehttpserver maybe nt even need work directly opening indexhtml browser see error console change everything perfect", "num": "997", "d": "1/2014"}, {"title": "ignore whitespace container element reusing markup", "body": "moment whitespace around prerendered component inside container html wo nt reused uses return instead case example html wo nt reused html want send pull request changes look first instead", "num": "996", "d": "1/2014"}, {"title": "displayname set jsx multiple assignments", "body": "code like get generated code code like set", "num": "990", "d": "1/2014"}, {"title": "support form novalidate attribute", "body": "using attribute component gets stripped could add whitelisted attributes info attribute", "num": "988", "d": "1/2014"}, {"title": "problem jsx", "body": "ran small problem output jsx compiler uses reserved words become problem json objects example becomes fix problem put quotes around keyword", "num": "987", "d": "1/2014"}, {"title": "jsx parse error", "body": "saw jsx reactdom var hellomessage reactcreateclass render function return reactrendercomponent mountnode causes parse error removing k fixes", "num": "986", "d": "1/2014"}, {"title": "add setstatedeep", "body": "know people want", "num": "984", "d": "1/2014"}, {"title": "ensure setstate callback reactmountready always enqueues", "body": "setting state callback transaction must reconcile callbacks transaction completed effectively batching end add unit tests make sure works correctly", "num": "983", "d": "1/2014"}, {"title": "reactq bad proptype error logged render reactq", "body": "edit short summary javascript componentdidmount function var self using code react q child component uses raise error pass string object actually seems exception raised point setstate think q ignores perhaps better log error point hard find child component nt want render got error maybe react bug maybe react something help developpers loose time situation nt guard supposed log error least non minified dev version react previous content problem discussed petehunt irc today finally find strange behavior components check opensourced one wrapper handle io operation figured many cases io operation promise ends error child component updated see render method parentwrapper component called seems nt trigger anything child component error console finally found related bad prop type setting child component cases error passed parent component object string tried change object passed child last version works fine first version nt work kind expected pass string child requires object problem nt got error lost half day trying figure problem see error set state q promise error handler see may related using q promises react actually use following code parent got expected result error jumperrorstringpersoncontactonprofileobject", "num": "978", "d": "1/2014"}, {"title": "jsx transformation tool incorrectly process path parameters windows machines", "body": "moment following function js function absolutepath workingdir pathtojoin pathtojoin workingdir pathnormalize workingdir pathtojoin pathnormalize pathtojoin commonerjs nt procees absolute path arguments since expects unix style", "num": "977", "d": "1/2014"}, {"title": "make docs site responsive", "body": "first second good tools like dash display documentation smaller window", "num": "976", "d": "1/2014"}, {"title": "transaction methodinvocationtime includes initialize time close time", "body": "seems weirdly asymmetric intended", "num": "974", "d": "1/2014"}, {"title": "jsxtransformer used rjs optimizer ca nt load sourcemapgenerator", "body": "tricky issue best explain using jsxrequirejsplugin build react app using amd using custom branch react custom builds based master recently everything working fine since unable create optimized builds using plugin first assumed issue plugin seems offending line changed function js function transformreact source return transform visitorsreact source sourcemap true exportstransform transformreact change nt forced things worked fine change longer possible build amd environment line errors js running requirejs dist requirejs task tracing dependencies jslibrequirejsrequire error typeerror undefined function objectarrayset eval eval eval objectsourcemapsourcemapconsumer eval usersthomasboytvenmodevopsvenmowebviewsbasenodemodulesgruntcontribrequirejsnodemodulesrequire eval eval transform eval objecttransformreact transform eval usersthomasboytvenmodevopsvenmowebviewsbasenodemodulesgruntcontribrequirejsnodemodulesrequirejs jsxloadonload eval lt anonymous objecttextfinishload eval best guess arrayset module nt correctly loaded although included built file nt know enough browserify debug hoping someone else take look find going meantime suppose update branch undo change set", "num": "972", "d": "1/2014"}, {"title": "better docs integrating jquery et al", "body": "apparently docs nt clear need section docs talks integrate third party plugins detail stress difference mounting updating", "num": "971", "d": "1/2014"}, {"title": "clarify lifecycle rendercomponent vs rendercomponenttostring", "body": "discussed irc lifecycle functions misleading using namely called least documented lifecycle docs page also discussion changing method names note clearly need hooks issue name former conveys component mount fact wo nt one possibility add another alwaysrun phase mounting phase run rendered string dom eg prepare initialize lifecycle would easily explained follows prepare compoent mount component rendering dom render component first time happy contribute pr either docs method names decision reached", "num": "968", "d": "1/2014"}, {"title": "disable weird codemirror indentation behavior", "body": "since codemirror nt understand jsx properly editors website behave strangely indentation sometime like create fullblown jsx mode think disable smart indentation behavior think want turn", "num": "966", "d": "1/2014"}, {"title": "compatible version found esprima", "body": "yields following empty repository npm err notarget compatible version found esprima substackesprima iskeyword npm err notarget valid install targets npm err notarget", "num": "965", "d": "1/2014"}, {"title": "boolean element attributes disabled checked etc jsx", "body": "conditionally putting attribute elements boolean variable falsey attribute wo nt output true output following works browsers spec could get line spec setting element requires ternary operation instead simple boolean ideally current bit jsx top issue would output html assuming set true generally known boolean attribute gets assigned variable set example jsx output attribute per spec", "num": "961", "d": "1/2014"}, {"title": "jsx watch crash", "body": "run jsx watch src build compiles jsx files create lockpid file build directory next jsx file modification jsx process crashes lockpid present jsx wo nt compile jsx files even ran manually use osx maverick jsx", "num": "957", "d": "1/2014"}, {"title": "batching external events", "body": "react batches component updates become dirty eventcallback events also batched however exposed use external events ajaxreplies nonreact dom events events seems natural extend see two obvious solutions export settimeout function reactbatchedupdates function bind settimeout reactbatchedupdatesbind null function bind export callback factory thoughts guessing belongs", "num": "956", "d": "1/2014"}, {"title": "cursor jumps end controlled input", "body": "input element controlled model cursor jump end line every change makes impossible edit text end input quick demo noted using external model using view state maybe something wrong usage suggested fix maybe input overridden unless value differs otherwise cursor position manually preserved also see entry documents ability grab preserve cursor position", "num": "955", "d": "1/2014"}, {"title": "rendercomponenttostring events leaks unless component unmounted", "body": "repeated calls rendercomponenttostring evented components ie onclick thishandleclick effectively leak memory call unmountcomponent rendered components lest event listening closures remain nongarbage collected long lived processes repeated render calls notice adding componentunmountcomponent would fix would break tests render react root document nodes invariant violation var link reactcreateclass leak function event render function return function log str consolelog str var root reactrendercomponenttostring root log rootunmountcomponent rendercomponenttostring api bound async sample future proof", "num": "954", "d": "1/2014"}, {"title": "docs schema component lifecycle", "body": "hello guys would awesome lifecycle doc page simple schema outline order methods", "num": "951", "d": "1/2014"}, {"title": "stabilized public api", "body": "one things holding us back right nt stable public api really like cut instagram npm version react unfortunately nt include addons need issue like propose following changes consistent iterable gets wrapped new object basically thin wrapper around means people actually introspect without assuming array nested object something nt think memory utilization big problem today think change would ok especially implemented lazily know dnolen wants something like plug lazy child data structure think important solve another option thinking putting begs question adding well think api would become confusing think function helpful hard use externally right adding public api makes sense anyone think potential overuse public apis think centralize injection points react module make public reason need check repo configure custom react rename npm module many addons need stuff like foreseeable future let embrace rename noncore projects nt depend put addon npm module everything add new npm package export injected new public apis use package builds put cache front good citizens way people build without us provide million builds config tool", "num": "946", "d": "1/2014"}, {"title": "unit testing react backbone without phantomjs", "body": "closely related entirely curious one go around testing browserified backbone react apps appears react nt play well phantomjs looking alternatives jsdom next list looking suggestions properly handle issue arises using loading app html template actually testing dom ca nt things load packages global scope ideas theorems suggestions approach unit testing without phantomjs", "num": "945", "d": "1/2014"}, {"title": "jsx sugar object props", "body": "hopefully get jsx namespacing soon accessing components inside objects technically one thing jsx vanilla js using object props jsx beautiful love would much rather whatever syntax prefer clear specifically talking supporting object additional properties still sugar feature jsx capable enough everything js still looking familiar readable js counterpart mentioned could take upon implement relatively simple change", "num": "944", "d": "1/2014"}, {"title": "replacing mountindex etc something less fragile", "body": "jordwalke talked briefly back recall correctly working bit right information progress eta done iframefix pr gotten lot familiar backside might perhaps take stab otherwise", "num": "942", "d": "1/2014"}, {"title": "better error message returning two elements", "body": "since quite new react tried render function return something like safari got message error parse error line unexpected identifier took quite found second div element problem possible error message mentioned second element unexpected identifier confusing", "num": "935", "d": "1/2014"}, {"title": "warn using hyphenated style values", "body": "happen support hyphenated keys style object initial render attempt hyphenate camelcased keys styles never updated subsequent renders never attempt unhyphenate warn see hyphenated style", "num": "932", "d": "1/2014"}, {"title": "investigate whether style setting optimized", "body": "see profile setvalueforstyles takes time", "num": "929", "d": "1/2014"}, {"title": "nt run browser perf testing noncode changes", "body": "things like nt run full suite would great could figure make happen cc balpert subtlegradient", "num": "927", "d": "1/2014"}, {"title": "textcontent vs innertext", "body": "fix merged reverted svg text changed chrome example issue internal tests relying behavior wo nt work firefox fixed case innertext seems return visible text little experimentation shows may invent formatting stacked divs headings may affect markup testing example", "num": "923", "d": "1/2014"}, {"title": "cryptic error xjs tag name empty typo", "body": "hello really bug could better clearer error message jsx compilation fails took hour find problem code error message nt really help found forgot add would easier find error mentioned problem attribute", "num": "917", "d": "1/2014"}, {"title": "latest build cause front page todo error", "body": "cloned clean copy react built docs front page todo example behaves weirdly todo created todo followed empty one probably submit triggered twice", "num": "916", "d": "1/2014"}, {"title": "something comment section bottom docs", "body": "comment sections exist rather people come irc questions often neglected bottom doc page", "num": "915", "d": "1/2014"}, {"title": "jsx gives incorrect error component missing tag closing", "body": "way much time found getting jsx error like error parse error line unexpected token pointing line last line file error actually caused component created without closing slash tag recreated creating file foojs contents run jsx file", "num": "911", "d": "1/2014"}, {"title": "mobile browser support docs", "body": "currently mentioned legacy browser experience docs warn suggest shimming ios android versions might quite many mobile mobile users lumias pointertouch events etc wo nt work yet example missing safari old ipads etc usually include even old mobile browsers", "num": "909", "d": "1/2014"}, {"title": "allowfullpagerender option working", "body": "trying mount element onto code trying run browser using browserify javascript jsx reactdom use strict var react require react reactallowfullpagerender true var app require documentaddeventlistener domcontentloaded function reactrendercomponent document fiddle result option nt seem working getting error getting option set", "num": "908", "d": "1/2014"}, {"title": "add public api reactupdatesbatchedupdates", "body": "ember similar emberrun perhaps something mirror also helpers like emberrunlater replacement settimeout better batching", "num": "906", "d": "1/2014"}, {"title": "make uncontrolled inputs user friendly", "body": "simple enough bit verbose nothing wrong also supported least meaning uncontrolled fun work use top becomes even worse seizes useful nice arrays react longer work considering little actual code perhaps idea consider etc helpers inputs would make reasonable common usecases lot less lowlevel work cost bytes", "num": "905", "d": "1/2014"}, {"title": "strange npm install behavior", "body": "react version fails reacttools version works react version complains incompatible esprima version", "num": "904", "d": "1/2014"}, {"title": "fix tutorial exact js translation example code", "body": "someone confused might well fix tutorial precise", "num": "903", "d": "1/2014"}, {"title": "able checkin js microsoft tfs", "body": "please consider renaming file js possible checkin file microsoft team foundation server thanks max", "num": "900", "d": "1/2014"}, {"title": "outdated uncontrolled components documentation", "body": "page uncontrolled components likewise supports defaultchecked supports defaultselected likewise supports defaultchecked supports defaultvalue", "num": "899", "d": "1/2014"}, {"title": "jsx support jsbin", "body": "nt strictly react issue would nice add jsx support jsbin small amount code coffeescript support nt hard make pr jsx", "num": "898", "d": "1/2014"}, {"title": "jsx whitespace properties lost", "body": "looks like current position moving incorrectly jeffmo syranide know something getting fixed whitespace pr separate problem becomes", "num": "896", "d": "1/2014"}, {"title": "release react", "body": "horizon things want make sure nt get forgotten x updated esprimajstransform", "num": "894", "d": "1/2014"}, {"title": "use node node instead defining constants", "body": "think safe cross browser point make sure nt ever running code path server side nt think worry js anodenodetype nodeelementnode instead var elementnodetype anodenodetype elementnodetype", "num": "893", "d": "1/2014"}, {"title": "consider renaming reactjs reactdebugjs", "body": "seen issues logging messages addition changing message however ends revived think might want make clear nt simply minified version build actually improved debugging sure would mean new reactjs unminified prod build thoughts", "num": "890", "d": "1/2014"}, {"title": "feature test startup instead", "body": "could instance simplified code even many tests done startup effect immeasureable comparison even manage create elements second seems like could simplify code slightly like since still use safe use environments right use strict var executionenvironment require executionenvironment gets key used access text content dom node executionenvironmentcanusedom moduleexports innertext documentcreateelement div innertext textcontent", "num": "886", "d": "1/2014"}, {"title": "problem returning", "body": "right accepted return mixin also defines one two returns merge throws error trying merge object correct behavior cpojer", "num": "883", "d": "1/2014"}, {"title": "ship", "body": "things fixed safe put mostly related wish better tool commits consider think let collect commitsprs want take", "num": "882", "d": "1/2014"}, {"title": "transferpropsto shall", "body": "let make issue hopefully get progress issue day imaginary component thin wrapper using defines custom event however may soon real dom property react breaks component property still transfered current implementation really called something like applies special transforms certain dom attributes would also benefit able exclude properties transfer properties component consumes seems basically categorize dom properties three categories css events supported misc everything else etc perhaps ca nt really formulate usecases right seems like would often want css events css even everything else component takes care personally feel like would interesting react exported helpers transfer strategies could easily properties like works like perhaps nt useful practice though guess events could also benefit transfer strategy component could listen also allowing parent listen", "num": "875", "d": "1/2014"}, {"title": "pass component argument reactrendercomponent callback", "body": "callback method pass rendered component callback useful want call component method completely mounted like", "num": "872", "d": "1/2014"}, {"title": "ghpages docs switch jsx js", "body": "would possible button website examples compiles switches jsx js example happy using straight js likely adopt one new thing experiment two probably others boat", "num": "869", "d": "1/2014"}, {"title": "make cssproperty closurecompiler advanced compatible", "body": "looking recently tickled spidey senses closure compatibility thought module would need style object keys quotes dump keys still jordwalke piranha either know module currently problem still misunderstanding needed closure advanced mode", "num": "867", "d": "1/2014"}, {"title": "proptypes weak confusing undocumented", "body": "clear right", "num": "863", "d": "1/2014"}, {"title": "reactrendercomponenttostring failing case component children function", "body": "javascript var hello reactcreateclass componentdidmount function render function return thispropschildren reactrendercomponenttostring hello null function return reactdomdiv null hello function consolelog results", "num": "860", "d": "1/2014"}, {"title": "iframe reinitialise moving within group components", "body": "moving component iframe within group components reinitialises iframe iframe reinitialises moving moving upward seems work fine example", "num": "858", "d": "1/2014"}, {"title": "run tests built files exist src", "body": "right run tests find includes tests still sitting around previous builds nt currently exist cc subtlegradient spicyj", "num": "856", "d": "1/2014"}, {"title": "empty element handled correctly dangerouslysetinnerhtml", "body": "react version become dom normal text red following example", "num": "854", "d": "1/2014"}, {"title": "transition problem code", "body": "may right place try code leave transition always applied last word even click remove word may try believe problem introduced copied code react page", "num": "853", "d": "1/2014"}, {"title": "benchmark clean mountimage strings", "body": "currently cleaning strings mountimage component gets mounted memory could freed act freeing memory could expensive worth needs proper benchmarks workaround", "num": "851", "d": "1/2014"}, {"title": "support multiple child insertion points", "body": "briefly spoke petehunt tracking issue times multiple insertion points would useful old web components spec looking attribute sure current plans pete said could done passing children props feels like hack riffing old spec idea something vaguely like html select thispropschildren title thispropschildren string css selector matching elements removed avoid duplicate insertion", "num": "848", "d": "1/2014"}, {"title": "transitiongroup leave animation nt get nonactive style", "body": "think come across bug transitiongroup basically causes properties leave styles ignored fiddle demonstrating problem see leave animation nt use correct origin transition latest chrome ff properties moved alwaysmatching selector bluebox works fine guess would happen active leave class added tick leave", "num": "847", "d": "1/2014"}, {"title": "expose reactcompositecomponentbase via reactinternals", "body": "objects created functions returned constructor nt exposed endusers adding would enable check anyone needs use case creating version creationixdombuilder uses functions instead need detect objects left asis react deal", "num": "843", "d": "1/2014"}, {"title": "add reactproptypesany", "body": "allow value passed prop valid proptype would allow enforce something passed whatever may also supports documenting possible props component even prop may anything explicitly listed useful documentation", "num": "842", "d": "1/2014"}, {"title": "link jsx depth component specs lifecycle page wrong", "body": "link jsx depth displayname section component specs lifecycle page points url correct correct url", "num": "841", "d": "1/2014"}, {"title": "allow rendering document fragment", "body": "shadow roots nodetype documentfragmentnode trying render one react throws error explicit check allow rendering elementnodetype docnodetype particular reason document fragments excluded", "num": "840", "d": "1/2014"}, {"title": "warning", "body": "using standard way set value component yet react uses another convention add warning value set tell developer put dev example", "num": "839", "d": "1/2014"}, {"title": "htmljsx fix caseinsensitive attributes style names", "body": "solution known attributes like maxlength camelcased maxlength whatever defaultdompropertyconfig might good idea throw warningerror unknown properties nt get discarded without knowing styles lowercased processing example transpiles transpiles generates", "num": "838", "d": "1/2014"}, {"title": "detect vendor prefixes css numeric value detection", "body": "add support need support vendor prefixes well right hard code list properties check object see allow numeric value unchanged need support checking vendor prefixed values think change lookups still hardcode values include possible prefixes instead add method checks object falls back stripping prefix think find prefix checking think call method", "num": "837", "d": "1/2014"}, {"title": "support flex css property better", "body": "firs unitless seen hack value specified make pass check skip adding px actually shorthand property support expansion right properties", "num": "836", "d": "1/2014"}, {"title": "running single specsuite webdriver tests", "body": "jasmine select single specs run using url parameter like note compares beginning string spec file path important later substring nt work debugging remotely browsers would help whole test suite takes quite time run lot logging go perhaps one could forward spec param testindexhtml even better allow substrings forwarding param grunt similarly debug conditionally checking param missing use default specfilter param filter manually returning prevent skipped specs logged posted back server one filter around example cc subtlegradient", "num": "835", "d": "1/2014"}, {"title": "make possible rendercomponenttostring without extra attributes", "body": "wanted talked generating static sites reactpage come let make possible accept options generate need cascade html generation", "num": "834", "d": "1/2014"}, {"title": "change binjsx default file extension jsx", "body": "currently binjsx defaults looking files contain jsx content compile whilst possible override using think since jsx content valid javascript using extension default nt ideal could change look files instead another advantage generated files live directory source simplifies generation source maps files well path trivially relative generated example given running would result", "num": "832", "d": "1/2014"}, {"title": "add warning making controlled components without onchange handler", "body": "", "num": "825", "d": "1/2014"}, {"title": "closure compiler advanced mode externs", "body": "este already integrated react closurecentric framework externs react steida already created made missing exports might good add mentions docs could also possible make script automatically generate externs react", "num": "824", "d": "1/2014"}, {"title": "better error message invalid argument setstate", "body": "passing function properties simply wrong thing yields rather cryptic especially since message says caller fault", "num": "820", "d": "1/2014"}, {"title": "use reactjsorg domain site", "body": "currently use site redirects nt use reactjsorg site instead means example would instead think looks professional githubio domain github handles redirects old urls new ones see details", "num": "817", "d": "1/2014"}, {"title": "fails parse", "body": "js jsx reactdom var hello reactcreateclass render function return reactrendercomponent documentbody replace parse error happens going", "num": "816", "d": "1/2014"}, {"title": "wishlist integrated stateful routing", "body": "idea please let know good routes singlepage app basically represent state props depending perspective noone state better react makes think react awesome route management taken stab making singlepage app react using backbonerouter routing nt terrible nt amazing either router event handlers called setstate translating routeparams state adhoc ideally could onetoone mapping gt page personarchive params person joan date new date back could call would right thing abstract urls away developers never care read props state route render appropriately super offbase better way stateconscious routing would love put together proof concept idea sounds appealing", "num": "815", "d": "1/2014"}, {"title": "server rendering slower npm react", "body": "ran benchmarks server modifying use jsdom results surprising browserified faster npm version even performance ranking test run time lt lt lt suspect regular js object perhaps getter thus carries penalty test everywhere also minified version might still perform best least time ago used function source length including comments heuristic function complexity compilation time thus affecting chances optimization cases effect might negligible", "num": "812", "d": "1/2014"}, {"title": "onscrolldetail undefined time", "body": "got synthetic plnkr basically illustrates event onscroll handler always undefined value detail property chrome version fedora case nt work browser get idea something meaningful doc wrong please correct", "num": "810", "d": "1/2014"}, {"title": "changing text element content svg nt work properly", "body": "jsfiddle demonstrates clicking click button update svg element content add letters instead nothing however state confirmed changing since elements page updating properly note put text attribute element attribute update something element content", "num": "807", "d": "1/2014"}, {"title": "include indexhtml tutorial starter kit", "body": "might make sense include files maybe static json hat tip locks idea", "num": "800", "d": "1/2014"}, {"title": "onmouseover onmouseout events element work", "body": "example nt tested svg elements may", "num": "798", "d": "1/2014"}, {"title": "make reactmarkupchecksumcanreusemarkup injectable save bytes", "body": "original description petehunt right even nt using server rendering paying price bytes wire instead make injectable", "num": "796", "d": "1/2014"}, {"title": "document displayname", "body": "could nt find reference fact jsx transform attaches component spec would nice document somewhere importantly using jsx means debugging messages littered found using hyper", "num": "793", "d": "1/2014"}, {"title": "link react devtools official docs", "body": "nt know right place link maybe getting started tutorial tooling integration", "num": "791", "d": "1/2014"}, {"title": "related target probably wrong nested container hierarchies", "body": "made events properly fire container elements events relatedtarget still pointing leaf node believe need parallel calls target relatedtarget thread various extractevents functions", "num": "790", "d": "1/2014"}, {"title": "enterleave event targets probably wrong rendering iframe", "body": "cases set enterleaveeventplugin probably want", "num": "788", "d": "1/2014"}, {"title": "onmouseenter targetrelatedtarget incorrect", "body": "seems like properties synthetic mouseenter event reversed target element entered familiar enough code know supposed work seems like wrapped native event mouseout event properties never swapped account fact reduced test case", "num": "785", "d": "1/2014"}, {"title": "example using react", "body": "sure right place ask examples using react render visualization created seems like react virtual dom could really speed animations transitions used visualizations like force directed graph draws svg long react manipulate svg like dom work right still react newb looking suggestions get started", "num": "782", "d": "1/2014"}, {"title": "memory leak unmounting component containing user components", "body": "unmounting components like javascript id someuserdefinedcomponent render function return memory leak happens reactmountgetid node puts dom nodes back nodecache right purged cache fix leak need readonly getid happing unmounting example component label component gets purged nodecache reactdominput component going unmount calls method contains thisgetdomnode iterates children form element calling getid puts elements back cache first purged put back cache causing memory leak playing react day sure way correctly fix issue", "num": "781", "d": "1/2014"}, {"title": "dev vs env production", "body": "reason two coexist beside fact latter seems introduced recently", "num": "770", "d": "12/2013"}, {"title": "findcomponentroot warning misleading logged transaction close", "body": "findcomponentroot throws exception transaction close specifically reactmountreadynotifyall body transaction threw exception logs error using consoleerror immediately like error throws silenced transactionperform favor earlier error thrown wrapped method findcomponentroot error logged first misleading", "num": "767", "d": "12/2013"}, {"title": "source map support jsx binary", "body": "would nice", "num": "766", "d": "12/2013"}, {"title": "anyway making error messages descriptive", "body": "coding react also experimenting coffeescript combined borbarded console errors becomes difficult really get core descriptive error reporting planned future regards ps happy new year", "num": "762", "d": "12/2013"}, {"title": "csstransitiongroupchild transition stops child updates class", "body": "", "num": "761", "d": "12/2013"}, {"title": "typescript support jsx", "body": "would great jsx recognized typescript constructs", "num": "759", "d": "12/2013"}, {"title": "api accessing correctly", "body": "check comment also feel saving array allocation x times causes bit much inconvenience think either return array time vjeux suggested irc expose api getting children correctly returning array treat one item way way treat multiple items exposing api flatten children one single level return", "num": "751", "d": "12/2013"}, {"title": "feature request add nested object support linkedstatemixinlinkstate", "body": "first attempt using nested object tried noticed updating see implementation way enhance support nested objects without using eval issue see one solution stackoverflow another solution would something like", "num": "744", "d": "12/2013"}, {"title": "html jsx separate tool", "body": "instead htmljsxlibjs buried inside docs folder could extracted separate tool htmltojsx used jsdom separate tool bundled package like reacttools", "num": "740", "d": "12/2013"}, {"title": "htmljsx demo broken latest trunk", "body": "htmljsxhtml demo nt rerender live editor use older build react demo work", "num": "738", "d": "12/2013"}, {"title": "ondrag event objects property", "body": "drag events include property react drag events nt shimming legacy browsers would difficult something look object", "num": "727", "d": "12/2013"}, {"title": "compiler compiles", "body": "precompiling assets using produces code like problem version using nt variable attached variable temporary fix using loaded code runs needs fixed upstream unless missing something version mismatch", "num": "726", "d": "12/2013"}, {"title": "transitiongroup error updating transitionenter transitionleave", "body": "hi created little demo transitionenter transitionleave updated react throws error invoking", "num": "724", "d": "12/2013"}, {"title": "camelcased data attributes nt warn", "body": "right camelcasing attributes warns dev", "num": "720", "d": "12/2013"}, {"title": "csstransitiongroupchild generate markup enter class already applied", "body": "hello playing react transition noticed enter classe added element inserted dom thought active class applied component mounted dom small demo using componentwillupdate make sure class applied directly remove use transition mechanism complex layout sometime see page flashing screen transition starts", "num": "719", "d": "12/2013"}, {"title": "rfc make key default value ref", "body": "make default value specified plus prefix avoid conflicts perhaps seems like would reconciliation win could used prevent behavior ever needed practical difference make replaced recreate element instead reusing actually seems like another win behavior would really want would happen ca nt think scenario would nt actually want behavior mentioned briefly vjeux seemed reasonable least", "num": "712", "d": "12/2013"}, {"title": "animations addon staggering animation", "body": "starting work react project implementing directional staggering animation basically scroll downwards catch list elements loading see fade top bottom vice versa scrolling upwards moment altered code development version reactwithaddonsjs transitions work way obviously nice incorporate feature animation addon proper interface happy put work making happen nice idea interface would ideal jsx might wrong using coffeescript nt use transitionstagger set whether stagger transition transitionstaggerdirectional set make stagger occur upwards downwards based elements come new elements ordered earlier current existing elements upwards stagger otherwise downward stagger transitionstaggerdelay nganimate pulling transitionanimate delay variable getcomputedstyle would js override ever something suitable anyway something definitely using project hopefully case bringing addon", "num": "709", "d": "12/2013"}, {"title": "change event bubbling nt work controlled components ie", "body": "fiddle nt work properly reported mailing list irc darthapo", "num": "708", "d": "12/2013"}, {"title": "test case iframe rendering", "body": "react theoretically supports mounting iframes well tested specifically need tests around event handling maybe bug fixes", "num": "707", "d": "12/2013"}, {"title": "onkeypress chrome", "body": "inside input field nt tiggered chrome backspace possibly keys know nt react bug rather browser inconsistency might normalized", "num": "706", "d": "12/2013"}, {"title": "enter key captured onchangeoninput", "body": "nt know silly miss something pressing enter trigger onchangeoninput text inputs", "num": "697", "d": "12/2013"}, {"title": "invalid operand object expected selecteventpluginjs", "body": "use button trigger event deletes element containing button everything works expected however event item list similar elements clicking buttons element quick succession triggers error function error using debugging tools able discover situation argument null ca nt work problem react dom representation confirm problem make multiple clicks within hundred milliseconds taking time nt trigger error website getting error try adding items removing clicking x submit pull request extends condition ensure node object nt know enough overall architecture know else blocks currently handle case another needed", "num": "694", "d": "12/2013"}, {"title": "leading wo nt compile jsx", "body": "get error trying load simple component seems due fact text body div adding real text causes issue go away jsx reactdom var testcomponent reactcreateclass render function return reactrendercomponent documentgetelementbyid content", "num": "693", "d": "12/2013"}, {"title": "jsx conditionals requires lot workarounds lot time", "body": "one good example conditionals currently solved ternary actually works surprisingly well however returned another story academic textbook example works great condition null condition amp amp looks pretty good works great disaster order return tags need return array also requires separate commas good bye beautiful jsx condition null want textnode instead actually rewrite jsxstyle code pure javascript instead perhaps even worse condition name name null let also complete version textnode surrounded tags whitespace rules fly window longer looks anything like jsx condition name name null nested ifs looks like let go ugly despite simple really condition condition name name null hello name null barely even understandable code without conditionals would look like name name hello name opinion something clearly wrong adding conditionals never require working arrays rewriting inline text use javascript string literals instead general require massacre code problem multiple tags easy part problem simply currently return one tag resort arrays intuitively relatively easy fix jsx simply automatically wrapping arrays simple intuitive good output conditionals may big deal weird syntax ifstatement different nested braces replaced parenthesis already expression back braces inside tag text expressions last big issue transition js jsxhtml adding root tag transition directly jsxtext jsxexpressions without wrapped tag without rewritten plain javascript necessary conditionals currently implemented expressions solutions new conditional syntax seems like root problem conditionals implemented jsx expressions also causes problem rewrite jsx textexpressions adding conditionals unless wrapped tags piggyback jsx expressions everything nonparented jsx textexpressions would solved really issue nesting jsx expressions another solution allow jsxexpressions nested jsx textexpressions inside conditionals still problem could reasonably solved backtick strings name name think better ways one use structure code missing something realize perhaps approaching perspective oldstyle templates standing things seem make quite cumbersome complex situations lot situations one change surrounding code simply one added tag one removed tag moved conditional ps discussion chat agree probably oldschool template habits however returning multiple tags biting ass lot everything content inside conditionals could wrapped divsspans make play nice seems weird add markup able write reasonable jsx", "num": "690", "d": "12/2013"}, {"title": "react addons nt working using browserifynpm", "body": "works even inspecting console reveals object", "num": "685", "d": "12/2013"}, {"title": "include minified build npm module", "body": "minifying takes forever would nice able type done underscore example", "num": "683", "d": "12/2013"}, {"title": "new starter kit", "body": "think could much easier starter kit think pretty good apps modular components browserify prebuild step", "num": "681", "d": "12/2013"}, {"title": "replace addons npm", "body": "break following separate npm modules ditch addons build could use wzrdin deliver reacttransitiongroup classset reactlink tapeventplugin respondereventplugin reactstatesetters reacttestutils", "num": "680", "d": "12/2013"}, {"title": "tutorials docs section", "body": "think need tutorials section getting started current tutorial thinking react blog post using server rendering performance optimization walkthrough write well need two unless someone else wants", "num": "679", "d": "12/2013"}, {"title": "homepage staggered scrolling cursor code block", "body": "os x google chrome version cursor code block gestural scroll causes choppy movement", "num": "678", "d": "12/2013"}, {"title": "third party components section also try establish standard", "body": "hi learning reading documentation react realized awesome even docs page think improved order social communitydriven main idea build section like one yeoman yeomaniocommunitygeneratorshtml one gruntjs see party components created top react framework establishing standard authoring public react components user follow standard example publishing component bower adding prefixed namespace example creating tree component register bower order make findable indexable section page thoughts regards", "num": "676", "d": "12/2013"}, {"title": "specify default selected options", "body": "js jsx reactdom var multipleselect reactcreateclass render function return b c reactrendercomponent documentbody expect option b c selected default", "num": "671", "d": "12/2013"}, {"title": "reacttransitionablechild gets confused removed transitions complete", "body": "reacttransitionablechild sets listeners detect animationstransitions complete knows remove transition classes dom elements leave transition listeners get confused one element transitionable child tree performs animationtransition example say desired effect outer div fade first followed inner div possible two css transitions appropriate durations delays react gets confused element removed middle inner transition fact think removing element outer transition finishes also confuse react generally listening bubbled transition events violates encapsulation cases", "num": "669", "d": "12/2013"}, {"title": "jsx compiler page broken react", "body": "clone master build docs go live updating broken using codemirror liveeditorjs change html desugaredcode works expected guessing something codemirror component page works fine live site running react possible dev environment broken somehow followed steps readme file", "num": "666", "d": "12/2013"}, {"title": "document getchildcontext contexttypes", "body": "came across code could nt find docs would expected find docs component api page code mentions reactcompositecomponentjs reactcompositecomponentjs reactcompositecomponenttestjs", "num": "665", "d": "12/2013"}, {"title": "improve error reporting", "body": "love invariant everywhere sometimes errors report nt immediately understandable example mixin defines default prop also defined component get lovely error took figure cause jsfiddle another run consolewarn happened passed undefined function prop", "num": "663", "d": "12/2013"}, {"title": "eventcurrenttarget document instead currenttarget", "body": "see jsfiddle illustrates problem reason event handler attached document pass eventcurrenttarget instead properly finding right one", "num": "659", "d": "12/2013"}, {"title": "currenttarget synthetic events wrong", "body": "seems like able fill cc vjeux swannodette", "num": "658", "d": "12/2013"}, {"title": "add support jam package manager", "body": "", "num": "656", "d": "12/2013"}, {"title": "missing attribute", "body": "facebook open graph integration uses nonstandard attribute however currently stripped suggested plan action add nonstandard list", "num": "655", "d": "12/2013"}, {"title": "better support", "body": "bit hard use right going start interpolating bound whenever use workaround wrap inside interpolated string going output html encoded version javascript going throw parsing exception order workaround two issues best way found use dangerouslysetinnerhtml use backtick order multiline strings probably make easier quite pain use right", "num": "654", "d": "12/2013"}, {"title": "reactanimationgroup failing readd componentsreverse animations", "body": "please see following click toggle make listitem fade view doubleclickspamclick toggle button make item fadeout view click toggle try make component come back view see item nt come back check html see listitem still class name exampleleave exampleleaveactive suspect react reverse animation elegantly case component readded render function leave transition", "num": "649", "d": "12/2013"}, {"title": "end", "body": "js jsx reactdom var hellomessage reactcreateclass render function var toli function name return return thispropsnamesmap toli reactrendercomponent documentbody hover see console logs currently using workaround replacing sure whether considered react bug user responsibility make sure wo nt cause trouble", "num": "647", "d": "12/2013"}, {"title": "missing reactdom", "body": "", "num": "645", "d": "12/2013"}, {"title": "release react", "body": "right working jeffbski graciously allowed us take package npm however currently versioned order work reasonable way going jump allows users current package continue working long reasonable specs packagejson wo nt break package issue warning pointing new package use react function typical use jeffbski package leave npm well cut typically cut latest stable commit master however nt feel like master stable enough right cut release support going go farther back couple options suggested take rebrand pull couple commits small bugfixes easy way pick commit recent base cherrypick changes lot good fixes would make bit painful probably best result consumers nothing change except probably use package directly instead affect future releases right nt screwing around version numbers gives us chance try something new us currently follow typical pattern every release stable result sit things usable master generally usable checkpoints latest would great move towards timebased release schedule sure makes sense us point still changing apis pretty frequently nt good pattern backing features like move towards pattern nodejs uses linux kernel used use even minor releases stable odd development would publish releases like would stable ones make sure nt installed plain eg would nt installed unless could publish unstable releases regular schedule per week publish stable release ready take advantage tagging feature npm use semver prerelease versioning eg regardless immediately important thinking let collect thoughts get list commits need cherrypick figure exact plan", "num": "639", "d": "12/2013"}, {"title": "handle phantomjs crashes better", "body": "", "num": "638", "d": "12/2013"}, {"title": "webdriver fatal error element condition nt satisfied", "body": "sure means tests flakey", "num": "634", "d": "12/2013"}, {"title": "error error response status", "body": "running webdriverjasmine webdriverjasmine task task source usersaylottprojectsfacebookreactgruntfilejs verifying property exists config ok file files desiredcapabilities browsername iphone version platform os x build tunnelidentifier awesome tunnel driving web session starting webdriver test watch results post session sessionidurl url request started get server get testindexhtml ms iphone cpu iphone os like mac os x khtml like gecko get testindexhtml get bytes request started get request started get server get vendorjasminejasminesupportjs ms iphone cpu iphone os like mac os x khtml like gecko get vendorjasminejasminesupportjs request started get request started get server get vendorjasminejasminejs ms iphone cpu iphone os like mac os x khtml like gecko get vendorjasminejasminejs get bytes server get nodemodulesjasminetapreportersrctapreporterjs ms iphone cpu iphone os like mac os x khtml like gecko get nodemodulesjasminetapreportersrctapreporterjs get bytes server get vendorjasminejsreporterjasminejsreporterjs ms iphone cpu iphone os like mac os x khtml like gecko get vendorjasminejsreporterjasminejsreporterjs get bytes get bytes request started get request started get server get vendorjasminejasminehtmljs ms iphone cpu iphone os like mac os x khtml like gecko get vendorjasminejasminehtmljs server get testlibreporttestresultsbrowserjs ms iphone cpu iphone os like mac os x khtml like gecko get testlibreporttestresultsbrowserjs get bytes get bytes request started get server get buildreacttestjs ms iphone cpu iphone os like mac os x khtml like gecko get buildreacttestjs get bytes request started get server get buildreactjs ms iphone cpu iphone os like mac os x khtml like gecko get buildreactjs get bytes request started get server get testlibjasmineexecutejs ms iphone cpu iphone os like mac os x khtml like gecko get testlibjasmineexecutejs get bytes request started get server get testthefilestotestgeneratedjs ms iphone cpu iphone os like mac os x khtml like gecko get testthefilestotestgeneratedjs get bytes request started get server get vendorjasminejasminecss ms iphone cpu iphone os like mac os x khtml like gecko get vendorjasminejasminecss get bytes request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonslinktestslinkedstatemixintest linkedstatemixin create reactlink state post bytes request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitiongrouptest reacttransitiongroup warn time transitionend post bytes request started post request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitiongrouptest reacttransitiongroup keep sets dom nodes around server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitiongrouptest reacttransitiongroup undefined child fail silently post bytes post bytes request started post request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionkeysettest reacttransitionkeyset support getkeyset server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionkeysettest reacttransitionkeyset support getchildmapping post bytes post bytes waitforjscondition deprecated use waitfor jscondition asserter instead post session sessionidexecute script var args arrayprototypeslicecall arguments nvar code args fargs args nnvar wrap function n return eval code n nnreturn wrapapply fargs n args typeof windowjasmine undefined request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionkeysettest reacttransitionkeyset support mergekeysets adding keys post bytes request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionkeysettest reacttransitionkeyset support mergekeysets removing keys post bytes request started post request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionkeysettest reacttransitionkeyset support mergekeysets adding removing server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionkeysettest reacttransitionkeyset reconcile overlapping insertions deletions post bytes post bytes request started post request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionkeysettest reacttransitionkeyset support mergekeysets undefined input server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionablechildtest reacttransitionablechild keep dom node around post bytes post bytes request started post request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionablechildtest reacttransitionablechild manage enter css classes correctly server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok addonstransitionstestsreacttransitionablechildtest reacttransitionablechild manage leave css classes correctly post bytes post bytes request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok coretestsreactbindtest autobinding holds reference instance post bytes request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok coretestsreactcomponenttest reactcomponent throw invalid render targets post bytes request started post request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok coretestsreactcomponenttest reactcomponent throw supplying ref outside render method server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok coretestsreactcomponenttest reactcomponent support refs owned components post bytes post bytes request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok coretestsreactcomponenttest reactcomponent correctly determine component mounted post bytes post session sessionidexecute script var args arrayprototypeslicecall arguments nvar code args fargs args nnvar wrap function n return eval code n nnreturn wrapapply fargs n args typeof windowjasminegetjsreport undefined request started post request started post server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok coretestsreactcomponenttest reactcomponent know complicated mount depth server post reporttestresults ms iphone cpu iphone os like mac os x khtml like gecko ok coretestsreactbindtest autobinding works mixins post bytes post bytes error error response status post session sessionidexecute script return documentdocumentelementinnertext documentdocumentelementtextcontent args closing browser window keep open pass webdriverkeepopen flag grunt delete session sessionid ending web drivage fatal error error response status error error response status webdrivernewerror requestcallback requestselfcallback requesteventemitteremit request requesteventemitteremit incomingmessage incomingmessageeventemitteremit trying kill tunnel", "num": "633", "d": "12/2013"}, {"title": "immutableobject tolerate arrays deeper levels prevent mutation fails safari", "body": "ok utilstestsimmutableobjecttest immutableobject tolerate arrays deeper levels prevent mutation dev", "num": "632", "d": "12/2013"}, {"title": "onscroll nt work", "body": "example jsfiddle broken", "num": "631", "d": "12/2013"}, {"title": "jsx nt process files spaces names", "body": "eg processed furthermore warning message given empty array processed filed", "num": "622", "d": "11/2013"}, {"title": "could build changed files", "body": "commoner internally need makelike behavior build tasks finally grunt plugin build newer files could evaluate want shave sub seconds testing cycle needs experimenting handle file renames deletions etc", "num": "619", "d": "11/2013"}, {"title": "jsx tool return zero error", "body": "using jsx tool automated build system want check errors compiling jsx files instead returning nonzero error code jsx command writes everything stderr exits zero error code even worse stderr used build successfull well forcing parse stderr output check error", "num": "615", "d": "11/2013"}, {"title": "always clone components mounting", "body": "solve many problems developers retaining references coincidentally authoritative backing component instance inability reuse constant components top file var wrongpw entered wrong password later react component currently supported could supported clone components mounting render function return thisloggedin wrongpw subtle reinitialization issues occur previous example components reset time createddestroyed however since hijack provided instances provided outside props actually retained across internal state changes solution clone components mounting inside container original design react actually clone elements cleaner avoids pitfalls conservation memory changed mounting process clone instead hijack originally provided instances average browser performance profiles changed since makes sense reevaluate decision importantly cloning though consume memory short term allows us make many optimizations make memory usage application level much lean ability use constant component expressions critical parts aplication go long way memory usage also cpureconcile time imagine ability utilities like would allow us reuse memory every time render invoked every node could also anotated never reconcile never change importantly cleaner design means jsx function calls write truly descriptions components actual components truly declarative programming program according guidelines effectively allows many optimizations nt possible apart cloning make sure benchmark potential solutions issue make sure know getting", "num": "614", "d": "11/2013"}, {"title": "use classes create react components", "body": "let use classes create react component classes accumulated custom concepts nt lend using classes still use conjunction react components classes separation performed enhancers top completely pure classes class typeahead extends reactcomponent render enhancers reactcomponent reactcomponentautobindmethods typeahead reactcomponentvalidateproptypes typeahead reactcomponentapplymixins mixinone mixintwo moduleexports typeahead reactcomponentreactcompositecomponentreactcompositecomponentreactcomponentreactcomponentreactcomponentbasereactcreateclassnewcomponentwillmountcomponentwillreceivepropsreactcompositecomponent attempt intelligently merge results okay factor helper utilities supply code mod automatically updates code uses mixins huge undertaking anyone takes shot please lock api related questions run ideas jeffmo sebmarkbage understand direction happy chat feasibility potential changes react core practical ways get started might require tiny changes jsx transformer sure jeffmo could get done help minutes quite easy", "num": "613", "d": "11/2013"}, {"title": "error ie caused trailing comma object", "body": "maybe best way dev react using ie anyway use browser jsxtransform ie got error expected identifier string number turns jsxtransformerjs trailing comma body following code causes issue ie big deal good fix", "num": "612", "d": "11/2013"}, {"title": "better error display docs live editor", "body": "currently preview shows empty div editor content fails eval opposition oneline change display error message extra transition background red warning downside editing preview often throws nt think much trouble thus transition red preview nt constantly flashes red code edited", "num": "611", "d": "11/2013"}, {"title": "fails", "body": "nt support", "num": "608", "d": "11/2013"}, {"title": "crashes ios safari", "body": "", "num": "606", "d": "11/2013"}, {"title": "reacteventemitter accept argument", "body": "accepts listeners added except ones registered register", "num": "605", "d": "11/2013"}, {"title": "remove jquery tutorial", "body": "may controversial browsing stackoverflow believe way many people load jquery really nt need let add nt think loading jquery tutorial ajax request let instead dummy object returns static list could simply replaced implement ajax loading old post thought using static data let replace standard xmlhttprequest code say something like simple code ajax request alternatively could use favourite framework like jquery mootools yui instead jquery loaded tutorial may make people think jquery necessary use react", "num": "603", "d": "11/2013"}, {"title": "avoid deoptimization accessing undefined properties andor initializing null properties", "body": "fun ran benchmarks serverside using example shows optimized deoptimized hundreds times depending benchmark iterations obviously due accessing undefined leaf nodes type string number quick fix check first also avoids cascading deopts elsewhere thousands undefined accesses seen running accessing undefined properties perhaps common deopt reason among adding new properties without initialising null something earlier perhaps fixed speedmemory performance optimized functions use less intermediate variables less gc burden suppose example accessed undefined could either initialized null somewhere one could prevent undefined access using instead similarly property accessed undefined nt really looked output could reveal optimization possibilities", "num": "600", "d": "11/2013"}, {"title": "honor instance identity key prop root component", "body": "key prop component changes render passes react expected unmount previous instance mount new one reconciliation however said component root ie whose dom parent mount point component instance used jsfiddle demonstrates stateful component changing key unmounted root", "num": "590", "d": "11/2013"}, {"title": "better reactcsstransitiongroup docs", "body": "given confusion seems like docs nt quite good enough right component new item added reacttransitiongroup get exampleenter css class exampleenteractive css class added next tick convention based transitionname prop", "num": "587", "d": "11/2013"}, {"title": "add docs context", "body": "", "num": "580", "d": "11/2013"}, {"title": "add onclickoutside event", "body": "add clickoutside event similar jquery plugin useful sugar components like dropdowns modals need closehide click side container", "num": "579", "d": "11/2013"}, {"title": "fix travis run tests properly", "body": "pull request fixes tests master travis nt think tests broken old one crucially looks think due old version jstransform maybe hit error machine fixed presumably travis workspace already clean though since starts git get travis back feet would nice figure make report failures like properly instead counting pass", "num": "574", "d": "11/2013"}, {"title": "documentation document usage", "body": "leifdenby came irc could nt get working nt clear use rather need make doc clearer jsfiddle gives examples controlled controller linkstate uncontrolled", "num": "571", "d": "11/2013"}, {"title": "rendercomponent without jsx clone props object passed avoid pollution", "body": "issue manifests using vanillajs notjsx making call issue pass object object mutated props try use object render different component props first component pollute props second component example code var hello reactcreateclass getdefaultprops function return randomnumber mathrandom render function return thispropsname thispropsrandomnumber var configdata foo bar configdataname reactrendercomponent hello configdata documentgetelementbyid configdataname reactrendercomponent hello configdata documentgetelementbyid first component get carried second component configdata mutated example code asked reactjs irc response", "num": "570", "d": "11/2013"}, {"title": "transitiongroup regressions", "body": "encountered problems upgrading react looks like regressions related transitions addon test cases", "num": "568", "d": "11/2013"}, {"title": "offline transform error run jsx watch src build", "body": "windows c jsx watch src build throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit c cd src c jsx watch src build throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit c", "num": "567", "d": "11/2013"}, {"title": "warn clashing keys proceed render", "body": "hit couple bugs prod keys supposed distinct nt causes react throw errors render nothing would nice react could instead warn render components anyway perhaps adding suffix make keys unique render one components id seem preferable completely dying though maybe fault properly js error reporting figured", "num": "566", "d": "11/2013"}, {"title": "make possible run single test", "body": "like talked cc benjamn", "num": "563", "d": "11/2013"}, {"title": "jsx enable lazy subtree execution", "body": "html certain tags stop parser parsing children eg possible something similar jsx eg jsx would compiled instead immediately executing children like", "num": "561", "d": "11/2013"}, {"title": "add reacttestutils reacttools mainjs document", "body": "", "num": "560", "d": "11/2013"}, {"title": "stop passing parameter lifecycle functions", "body": "think would better used", "num": "559", "d": "11/2013"}, {"title": "inconvenient owner assignment prevents updating component", "body": "take look component second time click show popover react throws invariant violation replaceprops called component owner antipattern since props get reactively updated rendered instead change owner method pass correct value props component created happens second time line executed calls old component throws popoverdemo component despite popoverdemo creates component nt actually mount concluded wrong thing check instead property set child component upon mounting probably conversely root component", "num": "557", "d": "11/2013"}, {"title": "reactproptypescomponent would nice", "body": "reactproptypescomponent would nice wrote instead", "num": "556", "d": "11/2013"}, {"title": "input typerange onchange fire changing value using keyboard arrow keys", "body": "", "num": "554", "d": "11/2013"}, {"title": "button beside editor switch jsx js", "body": "think neat way solving instead deciding snippet written js jsx put jsx compiler bigger use could button beside live editor label toggles two applies tips also general", "num": "552", "d": "11/2013"}, {"title": "waitforjscondition deprecated use waitfor jscondition asserter instead", "body": "", "num": "551", "d": "11/2013"}, {"title": "jekyll serve w gives invalid byte sequence usascii", "body": "trying run jekyll work docs ca nt get boot utf characters blog post jekyll ruby probably like tried setting lang variables already luck yet", "num": "548", "d": "11/2013"}, {"title": "android gingerbread fail immutableobject tolerate arrays deeper levels prevent mutation", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject tolerate arrays deeper levels prevent mutation dev linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject tolerate arrays deeper levels prevent mutation prod linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception", "num": "546", "d": "11/2013"}, {"title": "android gingerbread fail immutableobject", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent shallow field addition strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent shallow field mutation strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent deep field addition strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception linux u android enus buildgingerbread khtml like gecko mobile ok immutableobject prevent deep field mutation strict linux u android enus buildgingerbread khtml like gecko mobile expected function throw exception", "num": "545", "d": "11/2013"}, {"title": "android gingerbread fail reactdomselect allow switching multiple", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok reactdomselect allow switching multiple expected false true", "num": "544", "d": "11/2013"}, {"title": "android gingerbread fail mutatehtmlnodewithmarkup mutate document html", "body": "linux u android enus buildgingerbread khtml like gecko mobile ok mutatehtmlnodewithmarkup mutate document html typeerror read property innerhtml null", "num": "543", "d": "11/2013"}, {"title": "document bind element usecase lists", "body": "see javascript handleclick function color e thispropsaddcolor color render function var items thispropscolorsforeach function color return bind return items", "num": "542", "d": "11/2013"}, {"title": "make output less noisy", "body": "json format great sauce great running tests manually console", "num": "541", "d": "11/2013"}, {"title": "code coverage reactcomponent", "body": "lines currently covered tests", "num": "540", "d": "11/2013"}, {"title": "warning eventreturnvalue deprecated", "body": "used following place getting warning chrome version may notice issue reported kindly update code avoid warning thanks", "num": "538", "d": "11/2013"}, {"title": "fail immutableobject expected function throw exception", "body": "nt looked going yet capturing errors right", "num": "534", "d": "11/2013"}, {"title": "fail dompropertyoperations setvalueforproperty set values attributes necessary", "body": "", "num": "533", "d": "11/2013"}, {"title": "getelementsbyclassname nt exist", "body": "", "num": "532", "d": "11/2013"}, {"title": "provide valuelink value onchange event want use value onchange probably nt want use valuelink", "body": "shows console running tests", "num": "531", "d": "11/2013"}, {"title": "also", "body": "", "num": "530", "d": "11/2013"}, {"title": "throws typeerror read property namedtypes undefined", "body": "var namedtypes typesnamedtypes typeerror read property namedtypes undefined object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs error var namedtypes typesnamedtypes typeerror read property namedtypes undefined object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs warning task jsx test failed use force continue error task jsx test failed task nullontimeout timerlistontimeout ontimeout", "num": "528", "d": "11/2013"}, {"title": "newest chrome get warning", "body": "new today started seeing eventreturnvalue deprecated please use standard eventpreventdefault instead", "num": "527", "d": "11/2013"}, {"title": "links clickable", "body": "david walsh excellent blog post khan academy looks like css issue", "num": "523", "d": "11/2013"}, {"title": "reactaddonstransitiongroup throw children", "body": "consider example var foo thisstatebar foo foo false undefined reactaddonstransitiongroup throw", "num": "521", "d": "11/2013"}, {"title": "reactdominput support reactlink ie", "body": "reactdominput support reactlink expected typeerror unable get property undefined null reference", "num": "519", "d": "11/2013"}, {"title": "reactdominput set value submit buttons unnecessarily fails ie", "body": "reactdominput set value submit buttons unnecessarily expected true false", "num": "518", "d": "11/2013"}, {"title": "reactdominput properly control value number fails ie", "body": "expected giraffe", "num": "517", "d": "11/2013"}, {"title": "ie breaking tests", "body": "instance types throw invalid instances expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance", "num": "516", "d": "11/2013"}, {"title": "error invalid target element operation", "body": "rendering react components document able get root component id document node error invalid target element operation rendering react components document able unmount component document node error invalid target element operation rendering react components document able switch root constructors via state error invalid target element operation rendering react components document able switch root constructors error invalid target element operation rendering react components document able mount document error invalid target element operation", "num": "515", "d": "11/2013"}, {"title": "fix failing tests", "body": "logs may order compatible msie windows nt ok instance types throw invalid instances compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document able unmount component document node compatible msie windows nt ok rendering react components document able get root component id document node compatible msie windows nt ok rendering react components document able switch root constructors via state compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document able switch root constructors compatible msie windows nt error invalid target element operation compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document able mount document compatible msie windows nt error invalid target element operation compatible msie windows nt ok rendering react components document throw full document render compatible msie windows nt expected function throw exception threw invalid target element operation compatible msie windows nt error invalid target element operation compatible msie windows nt error invalid target element operation compatible msie windows nt ok mutatehtmlnodewithmarkup mutate document html compatible msie windows nt expected giraffe compatible msie windows nt ok reactdominput set value submit buttons unnecessarily compatible msie windows nt ok reactdominput support reactlink compatible msie windows nt expected compatible msie windows nt typeerror unable get value property object null undefined compatible msie windows nt ok reactdomtextarea properly control value number compatible msie windows nt expected giraffe compatible msie windows nt expected compatible msie windows nt ok reactdomtextarea support reactlink compatible msie windows nt typeerror unable get value property object null undefined compatible msie windows nt expected function throw exception compatible msie windows nt ok immutableobject prevent shallow field mutation strict compatible msie windows nt ok immutableobject prevent deep field mutation strict compatible msie windows nt ok immutableobject prevent shallow field addition strict compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw exception compatible msie windows nt ok immutableobject tolerate arrays deeper levels prevent mutation dev compatible msie windows nt expected function throw exception compatible msie windows nt ok immutableobject tolerate arrays deeper levels prevent mutation prod compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance compatible msie windows nt ok mutatehtmlnodewithmarkup change attributes compatible msie windows nt ok reactdominput properly control value number compatible msie windows nt expected true false compatible msie windows nt expected function throw exception compatible msie windows nt expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance compatible msie windows nt expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance compatible msie windows nt ok immutableobject prevent deep field addition strict compatible msie windows nt expected function throw exception", "num": "514", "d": "11/2013"}, {"title": "undefined", "body": "", "num": "513", "d": "11/2013"}, {"title": "android test runner fails even though tests pass", "body": "looks like android selenium server buggy getting confused thing", "num": "512", "d": "11/2013"}, {"title": "test failure", "body": "windows nt like gecko ok instance types throw invalid instances windows nt like gecko expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance windows nt like gecko expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance windows nt like gecko ok rendering react components document able get root component id document node windows nt like gecko ok instance types throw valid values windows nt like gecko expected function throw invariant violation invalid prop supplied expected instance threw invariant violation invalid prop supplied expected instance", "num": "511", "d": "11/2013"}, {"title": "download links hard copy chrome", "body": "looks like css weirdness", "num": "509", "d": "11/2013"}, {"title": "reactminjs found document", "body": "", "num": "504", "d": "11/2013"}, {"title": "reactminjs", "body": "", "num": "503", "d": "11/2013"}, {"title": "support pointer events specification", "body": "approach touch events hammerjs checks switches", "num": "499", "d": "11/2013"}, {"title": "examples visible react site without cloning running server", "body": "", "num": "498", "d": "11/2013"}, {"title": "tests run release builds browsers", "body": "", "num": "497", "d": "11/2013"}, {"title": "compiled", "body": "throws syntax error sure code transformation clearly happening", "num": "496", "d": "11/2013"}, {"title": "move tooling jsx depth", "body": "let leave link jsxindepth new location also make link sublime package wrapped looks like link", "num": "490", "d": "11/2013"}, {"title": "frontpage stateful component example could easily retain selection", "body": "currently selecting portion seconds elapsed text stateful component example possible update ticks usual template renderers would impressive string concatenation inside single div replaced comma explicit span elements number would change also would extra span number even selection changing number would retained retention selection could also noted frontpage example preserving copypaste quite major win traditional templating solutions pages become ever lively", "num": "485", "d": "11/2013"}, {"title": "add docs multiple components page communicate parent child", "body": "ie explain pass callbacks", "num": "478", "d": "11/2013"}, {"title": "reactlink nt support checked selected", "body": "using reactlink checkboxes dropdowns state bound value checked selected instead", "num": "475", "d": "11/2013"}, {"title": "gives button text", "body": "pretty sure fixed replacing check make sure", "num": "473", "d": "11/2013"}, {"title": "exception raised pass number props", "body": "two numbers passed props exception raised", "num": "468", "d": "11/2013"}, {"title": "possible memory leak replacing many elements", "body": "memory usage inspected via chromium memory timeline grows hundreds mbs clicking switch button many times tested locally react something browser gc handle properly optimized version fix causes text selections change hover example retain text selections updating components get native feel sorry two issues one", "num": "467", "d": "11/2013"}, {"title": "document addon", "body": "claiming submit pr soon", "num": "461", "d": "10/2013"}, {"title": "run tests", "body": "", "num": "456", "d": "10/2013"}, {"title": "testing apps built react", "body": "looking pointers test applications built react could nt find anything think would really helpful page docs explaining test apps built react documenting best practices found tests repository looks like unit tests core library applicable testing custom components etc questions supposed test model react components supposed use acceptance tests automated something like selenium nice way unit test react components pointers would greatly appreciated", "num": "455", "d": "10/2013"}, {"title": "reactrenderdocumenttest crashes ios safari", "body": "", "num": "454", "d": "10/2013"}, {"title": "make controlled component option", "body": "currently advantage think using uncontrolled components lightweight syntax reactlink made wonder nt better way currently proposal keep controlled controlled sugar realize bit magic considering currently need explain reason deviating dom provide addon another build benefits uncontrolled components might seem bit backward anyway feel pros outweigh cons new format still two options similar controlleduncontrolled benefits controlled component", "num": "452", "d": "10/2013"}, {"title": "update top level api docs completeness", "body": "running x x x x x x x x x x deprecated mentioned x x", "num": "449", "d": "10/2013"}, {"title": "docs nav header behaviour different screen sizes", "body": "large screen sizes nav fixed smaller ones obviously intentional fine except noticed recent implementation page anchors nav bigger screens hide anchor", "num": "447", "d": "10/2013"}, {"title": "make jsx transformer string quoting configurable", "body": "hello guys first great project tweaked linter plugin sublinter use react tools transform jsx code linting small issue though code generated use double quote strings thus enforcing single quote string produce error enforce single string transformer jsx reactdom var react require react moduleexports reactrendercomponent foo documentgetelementbyid example generates null foo instead desired null foo js jsx reactdom var react require react moduleexports reactrendercomponent null foo documentgetelementbyid example", "num": "445", "d": "10/2013"}, {"title": "synthetic enterleave events type", "body": "enterleaveeventplugin nt explicitly set event type synthetic events inherit type native event probably best set type events dispatching thanks marclar reporting irc", "num": "444", "d": "10/2013"}, {"title": "react throws rendering html tags inside windows app", "body": "using react javascriptbased windows app html tags cause error thrown mounting example audio tag shown causes following error javascript runtime error unable add dynamic content script attempted inject dynamic content elements previously modified dynamically might unsafe example using innerhtml property add script malformed html generate exception use tostatichtml method filter dynamic content explicitly create elements attributes method createelement information see hugely pressing issue probably offer way using windowtostatichtml available", "num": "441", "d": "10/2013"}, {"title": "ship", "body": "unless comes really quickly since likely change master nontrivial breaking ways soon going use track prs commits merged x x x x x x explicitly taking changes behavior default prop usage", "num": "439", "d": "10/2013"}, {"title": "reactlink nt work input type range", "body": "ca nt provide fiddle since nt support yet get error uncaught invalidstateerror attempt made use object longer usable works fine types inputs", "num": "437", "d": "10/2013"}, {"title": "components able listen tap events", "body": "question use touch events react answer use commonjs git clone edit reactdefaultinjectionjs include tapeventplugin npm install grunt add reactinitializetouchevents true code right place sucks instead think either put tapeventplugin addons create reactmobile build default", "num": "436", "d": "10/2013"}, {"title": "document selection composition events reference page", "body": "nt right", "num": "432", "d": "10/2013"}, {"title": "mixins nt available custom proptype validations", "body": "writing custom validation function would like able access mixins shared validation behavior given following mixin goal would could following var hello reactcreateclass mixins mymixin fails instance possible autobind proptype functions jsfiddle code slightly modified reference also tried following surprised failed context var hello reactcreateclass mixins mymixin", "num": "431", "d": "10/2013"}, {"title": "allow namespacing refs", "body": "great one could namespace references backing instances returned render silly example javascript var editor reactcreateclass componentdidmount function thisrefshasownproperty syntax var lang thisrefssyntax var editor thisrefssyntax lang editorprettify colorize render function return", "num": "430", "d": "10/2013"}, {"title": "use right document iframe selection events", "body": "use directly bunch might right thing event occurring right split", "num": "427", "d": "10/2013"}, {"title": "jade", "body": "dom code written jade easy way use jade react", "num": "424", "d": "10/2013"}, {"title": "dynamically creating svg", "body": "svg nodes created properly created dynamically even add wrappers others later lazily checks necessity wrapping decides wrap browsers let create tag instead ideas change facilitate", "num": "421", "d": "10/2013"}, {"title": "remove passing lifecycle methods", "body": "referring think remove passed two reasons unnecessarily touching dom makes separation react dom harder something seen discussed inconsistent lifecycle methods since adding due reason way stay consistent remove two methods makes adding new arguments harder future", "num": "416", "d": "10/2013"}, {"title": "perhaps warn writing bad proptypes spec", "body": "instead end silently ignoring prop type ends undefined maybe could warn undefined use fancy magic newer browsers warn accessing unknown properties", "num": "415", "d": "10/2013"}, {"title": "document dangerouslysetinnerhtml guides reference", "body": "", "num": "413", "d": "10/2013"}, {"title": "add link warning doc pages", "body": "relevant irc log", "num": "408", "d": "10/2013"}, {"title": "make site work", "body": "simple making sure include polyfills document", "num": "406", "d": "10/2013"}, {"title": "rename module", "body": "simple easy first task someone tackle could help get know parts code base thoughts alternative names", "num": "405", "d": "10/2013"}, {"title": "get rid sanitize dependency docs", "body": "osx nt ship ruby would nt big deal would rather make everybody jump hoops able contribute documentation see contributing right even using sanitize nokogiri dependency requires ruby think probably something could done projects fix feel free take path dependency introduced", "num": "401", "d": "10/2013"}, {"title": "multiple owners refs", "body": "component rendering free return whatever wants given props including children one thing may want mutate input component instance including attaching ref best practices wrt modifying component instances passed either via props children fiddle seems reasonable want owners content although original ownercreator full control output rendering ideally would expect react support ability access component via refs seems like multiple ownersrefs reasonable solution", "num": "399", "d": "10/2013"}, {"title": "refs nt rendered confusing errors", "body": "talking paulshen ref behavior see ref component rendered dom ref never gets attached owner would expect would return valid unmounted react component would throw unmounted component", "num": "398", "d": "10/2013"}, {"title": "getinitialstate returning something weird followed setstate world worst error message", "body": "see return string call get amazing error message", "num": "397", "d": "10/2013"}, {"title": "jsx esprima transform report correct line number windows line endings", "body": "file windows line endings line numbers traceback incorrect", "num": "395", "d": "10/2013"}, {"title": "jsx tool report file syntax error occurs", "body": "similar issue impossible determine file syntax error since filename reported console", "num": "394", "d": "10/2013"}, {"title": "jsxtransformerjs nt report filename syntax error traceback", "body": "makes basically unusable nontrivial project people nt using production still fix bug newbies people using hackathons", "num": "393", "d": "10/2013"}, {"title": "jsx tool logspew bash windows", "body": "works windows run bash works logspew", "num": "392", "d": "10/2013"}, {"title": "jsx tool work windows cmdexe", "body": "running arguments windows shell reacttools node get throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit", "num": "391", "d": "10/2013"}, {"title": "svg children nt update", "body": "jonase reported issue irc updates x attributes inside nt move rect around repro master click anywhere screen move rect doesnt cc sebmarkbage", "num": "390", "d": "10/2013"}, {"title": "syntheticevents attributes null svg events", "body": "jonase reported issue irc broken master repro click square expand event see fields including nativeevent null", "num": "389", "d": "10/2013"}, {"title": "error message returning null render hard understand", "body": "says reactcompositecomponentrender valid reactcomponent must returned nt obvious people means especially result nullundefined perhaps could better message", "num": "388", "d": "10/2013"}, {"title": "ca nt reload component using variable use state", "body": "check fiddle line real puzzler suggests select message content color go red change color fine hit change color state controlled ca nt select message porp controlled assumption reload entire component new properties tried removing mention thisstatecolor using thispropscolor things work expected change color select message however obviously toggle color using link also try setting content state select function resulted errors maybe someone bit experience knows work around would like hear feel like intuitive work thats filed issue", "num": "385", "d": "9/2013"}, {"title": "error message using refs outside render difficult understand", "body": "something reactowner refs intuitive", "num": "383", "d": "9/2013"}, {"title": "listen events demand instead first mount", "body": "convos chrome team indicated listening mousewheel kills optimizations agh create mapping synthetic event set real events listen attach listeners need initial diff nt even need worry removing listeners think periodic gc listeners rather last listener removed since could lead thrashing", "num": "381", "d": "9/2013"}, {"title": "listen events mount point top level", "body": "event occurs page regardless dom subtree managed react goes react event subsystem would great instead listened mount point child documents eg iframes instead top page", "num": "380", "d": "9/2013"}, {"title": "", "body": "really like plugin open source allows us implement function also function always describe structure point time api allows describe modal layers point time means open close layers function like function react assigning yungsters mastered reactlayers stuff fb stack petehunt also great experience using building layers integration react whoever timeneed", "num": "379", "d": "9/2013"}, {"title": "dangerouslysetinnerhtml nt properly reconcile", "body": "sbezboro reported following issue irc master repro case render render render div innerhtml empty instead nt really know going jordwalke petehunt guys look", "num": "377", "d": "9/2013"}, {"title": "fix direct uses document global", "body": "introduced couple uses need fix nt actually available though need careful using directly well breaks server rendering", "num": "373", "d": "9/2013"}, {"title": "documentation createclass rendercomponent vague add links", "body": "great work new documentation small remarks component api page mentions createclass rendercomponent please make reactcreateclass reactrendercomponent mentioning code please make clickable go right location documentation eg reactcreateclass go toplevelapihtml reactcreateclass", "num": "371", "d": "9/2013"}, {"title": "reactwithaddonsjs", "body": "let package separate build includes anything else would displace current reacttranstiongroupjs build", "num": "369", "d": "9/2013"}, {"title": "reset button docs live editor", "body": "", "num": "368", "d": "9/2013"}, {"title": "windows line ending jsx error message bad", "body": "using file windows line ending crlf following messages happen chrome firefox detect crlf ending throw real exception warning instead evaling nontransformed file", "num": "366", "d": "9/2013"}, {"title": "support onselect", "body": "seems currently supported would nice properly support browsers would prefer differentiate standard supporting elements input textarea see also", "num": "365", "d": "9/2013"}, {"title": "use mutationobserver instead mutation events", "body": "currently listen think make onchange work contenteditable apparently expensive look replacing mutation observer obviously api different observers get batched may build abstractions make work think relatively easy synthetic events nt looked", "num": "358", "d": "9/2013"}, {"title": "error checking binding event missing handler", "body": "javascript libraries building uis provide sort feedback thrown error notification trying bind event missing handler however react merely nothing example javascript var testnode reactcreateclass handleclick function consolelog never get called error occur render function return reactrendercomponent documentbody since nt camelcased work obviously however errors generated would love see binding mechanism explain handler nonexistent", "num": "354", "d": "9/2013"}, {"title": "error messages unclosed xml tags misleading", "body": "example app error online tag closed correctly compiling jsx compiler gives error line syntactically correct however frustrating newer developers able resolve", "num": "353", "d": "9/2013"}, {"title": "doccostyle documentation", "body": "cleans lots categorization nits made docs cleaner thanks old sections reduced sentences thinking taking occasion fully comment examples processed docco potentially replace dangling documentation sentences fresh fullyfeatured examples walkthrough explaining various points current docs one example raised irc components state machines seeing whole event explanation dedicated section sentences reduced comments said examples maybe even better docco display live editor sidebyside whatever ui works user see example code play reading comments beside still complete ref api nearby time ensures examples well separated chunks imagine front page examples comments docs idea really demo kinds things could saying way nonbrainer even without docco processing part even design new examples replacecomplement old ones expose react general ideas rather demoing small snippets components eliminate another chunk documentation examples live repo doc page goal thinking able tell people react examples api docs extra explanation needed end day nt much documentation left outside examples api docs flaws approach mainly narrative top bottom code think react nature alleviate really show example thinking starting existing comment ex prove hey details nt fit example comments cookbook still realize ambitious seems appealing enough suggested really believe good example eliminate lots explanations approach taken repos seem work well far", "num": "352", "d": "9/2013"}, {"title": "nowrap nt work table cell", "body": "creating horizontal scrolling webpage using table nowrap hack calculating width screen every time seems react ignore nowrap work around", "num": "348", "d": "9/2013"}, {"title": "classname vs class", "body": "jquerybootstrap example see would class btn equivalent classname btn one preferred", "num": "346", "d": "9/2013"}, {"title": "example todo list unable edit", "body": "fix line add onchange thishandlekey", "num": "345", "d": "9/2013"}, {"title": "support onmouseover", "body": "someone trouble irc edit changed subject document support documentation issue already", "num": "340", "d": "9/2013"}, {"title": "fails wholedocument rendering", "body": "see issue reported causes reactpage fail", "num": "337", "d": "9/2013"}, {"title": "jsx transform nt always preserve line numbers", "body": "transforming jsx gives looks like lost line break admit breaking weird since compiles nice line numbers preserved lint errors etc correspond easily", "num": "335", "d": "9/2013"}, {"title": "create sourcemaps build", "body": "browserify sort allows puts inline file far ideal consider working browserify team make possible build map outside bundle something else might able extract sourcemap might stop using browserify", "num": "334", "d": "9/2013"}, {"title": "jsx executable wrong version", "body": "outputs commoner version probably make version", "num": "329", "d": "9/2013"}, {"title": "create noncrappy standalone build reacttransitiongroup", "body": "want people able use relatively easily actually easy figure may fun things checked makes something pretty terrible packages copy react", "num": "327", "d": "9/2013"}, {"title": "finalize real public api", "body": "order number things need able access modules currently consider internal main need comes components plugins need usual example accesses nt currently want package option build standlone package without substantial changes hacks probably wo nt work everywhere ca nt without also packaging need public api make work less awkwardly soon wanted make sure filed", "num": "326", "d": "9/2013"}, {"title": "send npm package builds site well", "body": "browser packages requests npm package well", "num": "319", "d": "9/2013"}, {"title": "add stack overflow support page", "body": "already tag everything pretty dead could undiscoverable follow", "num": "317", "d": "9/2013"}, {"title": "fail run jsx compiler windows vista business", "body": "installed reacttools npm tried run jsx gives following error c usersmyusernameappdataroamingnpmnodemodulesreacttoolsbin gt node jsx throw er unhandled error event error spawn enoent errnoexception processchildprocesshandleonexit possible fix", "num": "316", "d": "9/2013"}, {"title": "inputs uneditable value attribute present", "body": "see element rendered value attribute already presentset input seems uneditable thought might something handlechange sure hopefully misusing jsx thanks", "num": "315", "d": "9/2013"}, {"title": "react cookbooks", "body": "case obvious watching ember lot lately pretty jealous docs efforts getting beyond started working cookbooks think awesome idea want steal could really help cut time spend answering questions would also awesome resource", "num": "313", "d": "9/2013"}, {"title": "newlyinserted svg elements render component update", "body": "components try render svg elements etc must inserted parent get rendered browser assume function uses new svg elements created way browser wo nt render standalone one quick fix add svg elements wrap tag extract may appropriateelegant solution realize svgs nt react focus thought point anyway case thanks great work far", "num": "311", "d": "9/2013"}, {"title": "label property", "body": "react nt seem support property labels search nt turn anything github repo", "num": "310", "d": "9/2013"}, {"title": "classlist wanted", "body": "adding property included components synchronised would nice think look much cleaner nt think", "num": "309", "d": "9/2013"}, {"title": "existence throws error invoking", "body": "scenario trying use react dynamically replace tag app content addition need use callback handle custom event binding problem soon callback added react throws following errors jsfiddle conclusion content still renders error bit unnerving simply removing callback prevents errors thrown brand new possible trying make react something meant handle either way think mere existence empty callback throwing errors fwiw scenarios involve injecting content rather replacing existing domnode seem work fine without callback", "num": "308", "d": "9/2013"}, {"title": "react broken safari", "body": "throws appears becomes undefined occurs apps react going websites shows preserved safari problem reproduce logging instagramcom page fails render react documentation examples instagram fails different line problem undefined", "num": "303", "d": "8/2013"}, {"title": "standardize prop dom attribute process", "body": "right inconsistencies requires cognitive load exception nt think ever reason allow sort type prop dom otherwise put false dom put object object still want special case indicate empty value otherwise ensure call object could custom person object want nt terriblely hard fix want make sure test change thoroughly breaking change specific cases mostly forms also need communicate clearly tangentially inconsistent way types work children example nt child false text need something children due fact use objects arrays special indicators mapping", "num": "302", "d": "8/2013"}, {"title": "remove reactautobind real", "body": "deprecated make sure remove", "num": "301", "d": "8/2013"}, {"title": "select receiving click event correctly", "body": "behavior chrome nothing safari works upon menu dismissal therefore item selection since triggers dismissal although reason triggered fade animation rather immediately firefox works clicking select clicking option menu dismissal mobile safari works clicking select option opera oh man works clicking option menu dismissal latter focus drop lost regained ie triggers every click menu upon openingdismissing dropdown way browser inconsistency react fault", "num": "300", "d": "8/2013"}, {"title": "react", "body": "correctness release biggest changes fixes controlled forms spicyj amp chenglou working also dom props missing cherrypicking following update prs commits land property allow fix behavior property tag properties fix textarea number fix controlled radio button behavior", "num": "299", "d": "8/2013"}, {"title": "dom attribute supported", "body": "react page use hack support tag", "num": "292", "d": "8/2013"}, {"title": "inpage anchor navigation documentation", "body": "", "num": "290", "d": "8/2013"}, {"title": "declarative api installing global dom event handlers", "body": "reminded one thing sometimes wanted install handler window keyboard shortcuts right since react listening already would nice way intercept events addition receiving normalized synthetic events generally useful", "num": "285", "d": "8/2013"}, {"title": "imperative api installing dom event handlers", "body": "currently react allows installing event handler dom events declarative fashion via component attributes time component instantiation think nice allows automatically uninstall handlers case component disposal implementing lowlevel machinery think would useful allow handlers installed component instantiation arbitrary moments would allow installing event handler mixin corresponding uninstall event handler callback example currently use jquery trapping clicks anchors invoking pushstate api instead letting browser reload page componentdidmount function thisgetdomnode clickreactroute function e epreventdefault invoke pushstate api componentwillunmount function thisgetdomnode clickreactroute problem able use goodies provided react event plugins want instead handle click events react event system install handler callback extract functionality mixin something like handleclick function e check event target anchor invoke pushstate api componentdidmount function thisaddeventlistener eventtypesonclick thishandleclick componentwillunmount function thisremoveeventlistener eventtypesonclick thishandleclick though maybe names verbose examples include handling focusblur arrow key clicks control focus inside component", "num": "284", "d": "8/2013"}, {"title": "make onchange work contenteditable", "body": "apparently nt would pretty awesome already listen nt think terrible tangentially would great stop using mutation events switch observers let though unless dovetails really nicely interested spicyj", "num": "278", "d": "8/2013"}, {"title": "safari error", "body": "getting following running react app safari probs chrome firefox typeerror undefined function evaluating regexpprototypetestbind dataaria az azd admittedly old mac old safari possible using outdated version webkit something react amazing thank", "num": "273", "d": "8/2013"}, {"title": "generate docs using jsdoc something", "body": "tried consistent documenting react core using markdown style comments jsdoc style annotations would easy create utility autogenerates documentation pages core ideally would rely nodejsnpm java using good first bug label rename label good first contribution", "num": "272", "d": "8/2013"}, {"title": "react support content security policy", "body": "react currently incompatible sites enable content security policy uncaught evalerror refused evaluate string javascript unsafeeval allowed source script following content security policy directive defaultsrc self quick testing appears one place react currently preforming evaluation string oneoff easy enough fix single pull request gladly submit however uneasy deploying react cspenabled site without bit integration testing understanding whether csp incompatibility issues even qualify bugs official stance reactcontentsecuritypolicy", "num": "271", "d": "8/2013"}, {"title": "bind null work autobound methods partial application", "body": "currently complains context nt equal seems like okay", "num": "266", "d": "8/2013"}, {"title": "thisforceupdate etc nt autobound", "body": "someone get confused sure make significant performance impact", "num": "265", "d": "8/2013"}, {"title": "rowspan attribute appear dom", "body": "set dom component output first pr", "num": "264", "d": "8/2013"}, {"title": "data aria accept capital letters", "body": "jsfiddle first third child divs wo nt render attributes nt attributes using camelcase seems consistent anecdotal actually attempted use dataformid first trying dataformid find bug", "num": "260", "d": "8/2013"}, {"title": "inconsistent form input behavior diff rendering", "body": "jsfiddle removing second row works removing first one leaves us wrong input field value checkbox state assigning key form works think behavior without using key least predictable textarea select fiddle try select first row option remove selected row state carries onto next select edit fiddle died sorry", "num": "259", "d": "8/2013"}, {"title": "defaultvalue number shown text fieldarea", "body": "text field input wo nt show anything numbers course inconsistent also value behavior show applies textarea", "num": "257", "d": "8/2013"}, {"title": "confused keys dynamic arrays requirement", "body": "see warning add keys typically id associated model subsequently update state key seems like component passed even though data model changed confusion make sense try package simple example seems like similar things trying helper function returns array jsx components put render return stmt seems like examples work nt need specify explicit keys loving speed btw migrating little hobby project ember react things literally night day terms performance awesome work", "num": "256", "d": "8/2013"}, {"title": "consider warning using wrong case html attribute", "body": "like current behavior opaque sort confusing people", "num": "255", "d": "8/2013"}, {"title": "old jsfiddle links docs", "body": "point jsfiddles using old version react", "num": "253", "d": "8/2013"}, {"title": "select working", "body": "works expected", "num": "250", "d": "8/2013"}, {"title": "confusing results using controlled form component onkeyup", "body": "coworker says making controlled component works onchange big gotcha thought would work onkeyup sure much help least make docs clearer", "num": "248", "d": "8/2013"}, {"title": "support autocapitalize", "body": "came nonstandard useful least ios", "num": "247", "d": "8/2013"}, {"title": "link cdnjs docs", "body": "nt need call majorly worth noting people want", "num": "244", "d": "7/2013"}, {"title": "radio buttons working correctly", "body": "expected behavior would stay checked b clicked case jsfiddle similarly modified version works every subsequent click b first time helps setting timeout around works except gives flash click b less ideal", "num": "242", "d": "7/2013"}, {"title": "computed properties", "body": "one thing wanted couple times react computed properties something vaguely like ember computed properties fullname function var firstname thisget firstname var lastname thisget lastname property firstname lastname app one case would useful one prop string gets parsed elaborate object displayed currently parsing componentwillmount componentwillreceiveprops setting state works pretty well perhaps nicer way provide", "num": "240", "d": "7/2013"}, {"title": "snippet nt compile pretty jsx", "body": "currently jsx transforms indentation fails pass jshint indentation temporary solution put bad line gets worse prefer style putting new line becomes fails two additional tests comma style disabled bad line breaking sure disabled", "num": "239", "d": "7/2013"}, {"title": "attaching onclick handler causes unexpected highlighting mobile safari", "body": "yungsters recent commit makes onclick work mobile safari attaching empty handler touchstart however causes subtly different behavior dom events without react consider jsx html image tapped onclick handler attached image browser draws light gray touch highlight image highlighted compare html html entire div highlighted clicking", "num": "238", "d": "7/2013"}, {"title": "use esprimafb npm sync transforms", "body": "npm github dependency tends create installation failures nt seem happen github dependencies npm esprima", "num": "235", "d": "7/2013"}, {"title": "batching disturbs natural order execution", "body": "discovered upgrading todomvc code calls parent sets state triggering parent turn trickles child input field gets focused worked well without batching put last lines inside function pass call callback else render actually done makes useless appears new way stuff putting case solution without involving callbacks although think solution would enter contradiction nature batching prefer batching ok new way render writing apis slightly awkward", "num": "234", "d": "7/2013"}, {"title": "reactrails", "body": "guys starting holidays next week also need one projects discussing zpao one issue discussions basically idea take emberrails code use expose reactjs jsxtransformerjs assets second thing would register sprockets engine transform jsx could steal bit code using execjs run jsxtransformer already tested works ok good thing patch merged allow jsx transformation using nonnode nonbrowser js environment one hurry would start making gem restructure repo bit move gem files gems dir make necessary proper reactrails gem ready initial version time next week pr follow", "num": "231", "d": "7/2013"}, {"title": "docblock parsing fails rn", "body": "told", "num": "229", "d": "7/2013"}, {"title": "animating changes list components", "body": "useful able animate appearance disappearance elements list components add react make easy maybe something like type argument props see also may useful comparison", "num": "227", "d": "7/2013"}, {"title": "animating addingremoving single component", "body": "useful able animate appearance disappearance particular component possible animate entrances without much trouble hand using componentdidmount exits harder since elements disappear immediately componentwillunmount nt give animation time finish add react make easy see also", "num": "226", "d": "7/2013"}, {"title": "set siblings state", "body": "set state siblings suppose list item b c clicked setstate selected true wan na make siblings b c setstate selected false possible", "num": "222", "d": "7/2013"}, {"title": "tag name jsxtransformer namespaced", "body": "jsx version component field object fails error parse error line xjs tag name empty throwerror parsexjsidentifier parsexjsattribute parsexjsopeningelement parsexjselement parseprimaryexpression nvm node version manager like rvm node find github hope rtfm case even supported currently would nice feature imho familiar code come pr unfortunately", "num": "221", "d": "7/2013"}, {"title": "swap todo example one todomvc", "body": "currently example todomvc horribly broken already featurecomplete version todomvc suggest take", "num": "219", "d": "7/2013"}, {"title": "lifecycle methods broken", "body": "looks like batching broke couple lifecycle methods get passed access also however set calling methods comparison done apparently need tests", "num": "215", "d": "7/2013"}, {"title": "reactcompositecomponentmountcomponent needs tryfinally", "body": "probably always set compositelifecyclestate null else react gets confused exceptions thrown render mountcomponent etc", "num": "208", "d": "7/2013"}, {"title": "issues upcoming doc", "body": "seems busy day like drop notes seen next documentation like said would nice mention cssing key integration within existingnew examples dom differences include css camelcasing link toward form section new part dom differences currently reference section obvious enough imo selfclosing tags always ok react even elements would nt normally selfclose although might dom differences since applies every react component probably mentioned elsewhere eg obvious possible actually mentioned unless missed also valid inside goes", "num": "198", "d": "7/2013"}, {"title": "add invariant make sure pass node componentdidmount", "body": "", "num": "192", "d": "7/2013"}, {"title": "firefox div contenteditable triggers typeerror setting property getter", "body": "steps reproduce open open firefox console start typing yellow div see increasing number errors", "num": "191", "d": "7/2013"}, {"title": "oncontextmenu event", "body": "event nt exist yet", "num": "189", "d": "7/2013"}, {"title": "allow html attribute names reactdom jsx", "body": "ease starting existing mock html great feature jsx however cases html attribute exactly dom property name one caught raise error colspan attribute silently ignored property name must used instead somewhat related though jsx user happy name normalization happen transform time cutting pasting html use case important reactdom reverse mapping property name attribute name defaultdompropertyconfigjs", "num": "185", "d": "7/2013"}, {"title": "add support touchaction attribute polymer pointerevents", "body": "needs nonstandard touchaction attribute work btw nt know react nt render anything user needs custom attributes work oftb control freaks option reactdoesnotallowunknownattributtes true", "num": "184", "d": "7/2013"}, {"title": "parsing error html entity nested jsx", "body": "html entity following causes current master react jsfiddle", "num": "183", "d": "7/2013"}, {"title": "children array allow use numbers booleans", "body": "especially numbers usefull primitive types tostring ified", "num": "182", "d": "7/2013"}, {"title": "allow stringified aliases classname htmlfor", "body": "use properties quotes jsx rewrite", "num": "181", "d": "7/2013"}, {"title": "autoassigned keys conflict userspecified ones", "body": "render hello world react throws duplicatekey error second span world assigned key index div children presumably best simply avoid specifying keys would nice react could use separate namespaces different key types least provide slightly informative error message", "num": "180", "d": "7/2013"}, {"title": "maybe make sure work trigger events", "body": "came irc last night somebody working trouble testing react using test event handler amp state change use synthetic events claim best effort matching real dom events problem case code using checkbox either nt handling change event one cases jquery events nt good enough using worked might fixed nt chance test nt work works", "num": "179", "d": "7/2013"}, {"title": "setstate others parameters format", "body": "currently accidentally using throws unhelpful error would nice either throw better error accept format goes etc", "num": "175", "d": "7/2013"}, {"title": "pass rootnode componentwillunmount", "body": "like others", "num": "174", "d": "7/2013"}, {"title": "better event docs", "body": "coming would good talk events handled different patterns use pretty good job saying attach listeners top level use delegation obviously clear enough cleanup may also want mention use normal event listeners really wanted", "num": "171", "d": "7/2013"}, {"title": "foo instead verbose null foo", "body": "reactdom methods createdaliased react component instance could use beautiful concise coffeescript syntax", "num": "170", "d": "7/2013"}, {"title": "parent onclick squashed child onclick", "body": "child render parent render case apparently squash unless calls inside body way trigger parent click event kind sucks time child uses similar event needs conditional check parent also employing also somewhat related better attach event like done waiting best practices", "num": "169", "d": "7/2013"}, {"title": "fix tests using phantomjs", "body": "error phantomjs binary executable latest version phantomjs package", "num": "166", "d": "7/2013"}, {"title": "changelog repo", "body": "pretty standard open source project know github changelog support new releases feature information nt become artifact repo add somewhere also remove information downloads page valuable get noisy moving forward", "num": "165", "d": "7/2013"}, {"title": "add contributors", "body": "probably file maybe add everybody think supposed read file exists fine", "num": "164", "d": "7/2013"}, {"title": "document forms changes best practices", "body": "need", "num": "163", "d": "7/2013"}, {"title": "rename onchange onsomethingnotinthespecalready", "body": "talked breaking expectations event already exists think options best", "num": "162", "d": "7/2013"}, {"title": "animations unmounting general", "body": "context pull request fixing bootstrap modal example animation works nt obvious reason let say three divs side side middle one closes shrinking animation disappears one right moves left take place currently takes bit circumventing make work kills nice structure semantic react aiming end kind defeats purpose diff rendering technique wondering clean way maybe even new api make work well", "num": "161", "d": "7/2013"}, {"title": "bad npm package fatal error find module buildmodulesreact", "body": "installing reacttools via reactify coming directly still missing folder wrong failing build", "num": "159", "d": "7/2013"}, {"title": "support lt module key value gt", "body": "right jsx supports desugaring value interpolation would also really like support interpolation arbitrary props would allow us get rid thistransferpropsto really unfortunate api mind", "num": "158", "d": "7/2013"}, {"title": "enable mocking required modules tests", "body": "recurrent source disagreement test results within facebook given facebook consistent strategy mocking modules currently test implemented phantomjs test harness opensource repository sake experiment right way would hard decided play fire discarded assumption automocking entirely preference simply fixing tests failed lack mocking fortunately many test failures sort partly due another mitigating factor run test suite information somewhat isolated test unit nevertheless think much better job emulating mocking behavior fb codebase discussion plans cc zpao jeffmo jordwalke petehunt", "num": "155", "d": "7/2013"}, {"title": "fix failing test", "body": "name test bot would autogenerated task telling tests failing petehunt", "num": "154", "d": "7/2013"}, {"title": "figure make global available", "body": "using increasingly right used checking like nt think points actually work using browserified version react", "num": "152", "d": "7/2013"}, {"title": "missing autofocus dompropertyjs standard properties enumeration", "body": "sure bug feature", "num": "149", "d": "7/2013"}, {"title": "export createdomcomponentclass", "body": "irc today someone missing tag reactdom export createdomcomponent escape hatch", "num": "146", "d": "7/2013"}, {"title": "document mouseenter mouseleave event handling page", "body": "", "num": "142", "d": "7/2013"}, {"title": "allow custom nonstandard attributes", "body": "various frameworks uses custom attributes react could allow extend default data aria prefixes something like", "num": "140", "d": "6/2013"}, {"title": "tests running", "body": "shows spec expect skip fail running tests locally spec expect skip fail looked back past days see happening strictly new problem idea benjamn", "num": "138", "d": "6/2013"}, {"title": "address emfile many open files errors clean runs", "body": "cc jeffmo", "num": "137", "d": "6/2013"}, {"title": "onclick broken ios", "body": "ios safari really nt want clicking anything tag known issue way fix putting empty onclick attribute nodes wish emit click events yep presumably emit click ios ensuring click event actually reachable ios device stack overflow link points also issue elements associated elements order behave clickable label must also include empty onclick attribute", "num": "134", "d": "6/2013"}, {"title": "consider allowing unmounting", "body": "let people invoke seems harmless currently throw theory cleared unmounting backward compatibility reasons aside get better clearing asynchronous callbacks unmount seriously consider clearing unmounting", "num": "133", "d": "6/2013"}, {"title": "jsx overwrites modules without relativize", "body": "encountered issue demoing airbnb today steps repro create dir create regular js module containing contains run build js files alongside jsx common use case tool observe reactjs gets overwritten file throws exception manifests time pass something x js require react js files get overwritten confusing think really need turn magic tool unless relativize provided includes debranching relativizing module names sort thing jsx desugaring happen", "num": "131", "d": "6/2013"}, {"title": "reactnativecomponent throw invalid property names", "body": "dompropertyoperationssetvalueforproperty complain invalid properties coworker confused silently ignored", "num": "130", "d": "6/2013"}, {"title": "maybe interpolate within jsx attributes", "body": "would cool useful compiled similar though looks like fighting uphill battle", "num": "129", "d": "6/2013"}, {"title": "write docs reactprops", "body": "", "num": "127", "d": "6/2013"}, {"title": "id selection", "body": "search nt find related issue go apparently react today still hijacks dom element id nt gotten chance try yet rendering bit unpractical css wondering rather using attribute like datareactuid performancecompatibility issue motivation behind using id internally target elements instead attribute sure still possible use classes bit think one less quirky gotcha like would make react much appealing", "num": "125", "d": "6/2013"}, {"title": "pending state updates may confusing", "body": "incremented new state stored finishes refactoring never increment twice probably confusing maybe nt bug fix behavior instead updating thisstate immediately still updating ui later right ca nt think situations thisstate sync ui problem vjeux suggested open issue probably easiest fix updating though", "num": "122", "d": "6/2013"}, {"title": "getting jsx syntax play nicely jslint", "body": "playing around library trying use jsx syntax wondering guys get play nicely jslintjshint jslint obviously like jsx syntax expected identifier instead saw lt javascript syntax error get around jshintrc file", "num": "121", "d": "6/2013"}, {"title": "remove content property", "body": "currently paths child content supporting paths makes code complicated needs really single child content using make sure single text child thought nt look like anymore", "num": "119", "d": "6/2013"}, {"title": "adding incrementally setstate gives approximate numbers", "body": "sure whether intended problem javascript fiddled around example facebookgithubioreact tried code var timer reactcreateclass getinitialstate function return secondselapsed tick reactautobind function thissetstate secondselapsed thisstatesecondselapsed componentdidmount function setinterval thistick render function return reactdomdiv seconds elapsed thisstatesecondselapsed reactrendercomponent timer mountnode result comes intended point adding give numbers hope explains well hieu", "num": "118", "d": "6/2013"}, {"title": "parens inside causes syntax error passed jsxtransformer", "body": "happens jsxtransformer something like gets transformed testdemo case think might related issue", "num": "116", "d": "6/2013"}, {"title": "stop requiring docblock jsx transformer", "body": "pretty annoying noise let stop requiring probably keep simple want make jsx generic standalone might need bit carefully", "num": "114", "d": "6/2013"}, {"title": "commoner grep providesmodule turns vim swap files", "body": "getting errors grunt maybe also causing confusion mine sure right thing perhaps filter file extension hiddenness vim swap filenames start", "num": "111", "d": "6/2013"}, {"title": "come convention forcing binjsx rebuilds without manually clearing modulecache", "body": "cc petehunt zpao", "num": "104", "d": "6/2013"}, {"title": "react throw nested tags", "body": "browsers special things selfclosing tags like react warn throw detects nested reactdomp", "num": "101", "d": "6/2013"}, {"title": "reactrendercomponent tries update components without checking constructor type", "body": "see jsfiddle reported looks like nt checking constructor type figure unmount rather receive new props may fixed master already nt checked yungsters jordow take look add test", "num": "100", "d": "6/2013"}, {"title": "react browserify module issues", "body": "hello using react combining browserify goal able use node modules react using workflow write jsx logic include require installed node modules use reacttools compile jsx js browserify said js would include node modules however compiled jsx reacttools changes something like creates stub file much breaks importing modules seems happens part compiling workflow workaround", "num": "98", "d": "6/2013"}, {"title": "scoped css", "body": "way react renders dom really interesting wondering plan include functionality sets style rendered content without css name pollution something like following initialize style beginning changing key something unique say rendered class name course concern css rule might reach anymore since class name nt actually exists see huge benefit believe worth thinking find solution", "num": "94", "d": "6/2013"}, {"title": "mocking working eventpluginregistry", "body": "since tests injecting plugins name multiple times fail nt happening since", "num": "90", "d": "6/2013"}, {"title": "add demo using coffee files implement react component", "body": "cc petehunt", "num": "83", "d": "6/2013"}, {"title": "support comments jsx", "body": "work comment nt fix actually need happen wanted get file remember call changelog", "num": "82", "d": "6/2013"}, {"title": "binjsx relativize required module ids unless relativize passed", "body": "inspired reduce number assumptions imposed considerably still use grunt tasks poison pick cc petehunt zpao", "num": "80", "d": "6/2013"}, {"title": "grunt test hangs", "body": "nt know going tried cleaning project grunt test hangs without output cpu fan starts spinning probably thinking something hard", "num": "79", "d": "6/2013"}, {"title": "preserve line numbers grunt test", "body": "line numbers reported according package output original file line number", "num": "78", "d": "6/2013"}, {"title": "ordering componentdidmount events", "body": "currently mounting two nested components componentdidmount fires outer element inner one ca nt remember frustrated earlier week expect inner component mounted completely outer component componentdidmount method runs rely children fully mounted agreedisagree", "num": "76", "d": "6/2013"}, {"title": "allow namespacing component names jsx", "body": "", "num": "74", "d": "6/2013"}, {"title": "jsx offline transform exits error code change ubuntu", "body": "basically title says install reacttools using jsx w correctly detect existing files transform upon write watched file jsx exit error code commoner tests pass exact steps followed ubuntu install nodejs via manual instructions ubuntumint install reacttools sudo npm install g reacttools create file helloworldjs described getting started tutorial new terminal jsx w edit helloworldjs add comment notice jsx exited echo prints akrieger vb www ls js helloworldjs akrieger vb www ls htmljs akrieger vb www jsx w js htmljs helloworld akrieger vb www echo akrieger vb www ls htmljs akrieger vb www", "num": "71", "d": "6/2013"}, {"title": "automatically bind scope user provided methods", "body": "common case let make default nt need wrap methods", "num": "70", "d": "6/2013"}, {"title": "jsx whitespace coalescing work like regular html", "body": "currently two escaped entities outputted space removed code expected output hello world actual output helloworld without space hello world var hello reactcreateclass render function return thispropsgreeting thispropsname reactrendercomponent documentbody link discussion google groups", "num": "65", "d": "6/2013"}, {"title": "jsx page gives linked react blog post", "body": "following url found linked", "num": "64", "d": "6/2013"}, {"title": "jsx able watch subdirs", "body": "trying run jsx build subdir seems exit error message publicjs exist however run directly public works without hitch", "num": "60", "d": "6/2013"}, {"title": "name jsx already taken use xjs instead", "body": "jsx file extension extendscript files since least extendscript supports amount syntax compatible facebookjsx syntax since least may jsx faster safer easier javascript", "num": "50", "d": "6/2013"}, {"title": "work compiletojs languages like coffeescript", "body": "jsx nice using compiletojs language change transpiler connect jsx compiler chance adding alternative dom syntax jsx break every compiletojs language something style would nice addition would nice support", "num": "47", "d": "6/2013"}, {"title": "uncaught syntaxerror unexpected token lt", "body": "even basic tutorial code unable get past error thrown error trace uncaught syntaxerror unexpected token lt exportsrun execute runscripts full source running chrome issue also appears firefox", "num": "40", "d": "6/2013"}, {"title": "required", "body": "normalizedeventlistener uses objectcreate unavailable nt added edit longer added common questions doc react site nt say also required sure docs problem good way avoid objectcreate side note little bit pain test since neither website examples include", "num": "39", "d": "6/2013"}, {"title": "docs nt even mention reconciliation", "body": "go site nothing talks synthetic events mock dom reconciliation etc think documenting would huge impact", "num": "37", "d": "6/2013"}, {"title": "react requirejs", "body": "learning library tips getting play nice requrejs looks like needs shim ca nt figure exactly thanks", "num": "28", "d": "5/2013"}, {"title": "make valid npm release", "body": "please make requireable npm release already fixed new version npm needed developed source transform jsx browserify reactify nt work properly", "num": "26", "d": "5/2013"}, {"title": "fix docs rake updateversion command strip trailing spaces", "body": "looks like mostly problem ruby yaml vs yaml one strips trailing space leaves also issue reordering least nt rewrite configyml version", "num": "24", "d": "5/2013"}, {"title": "small update bower command", "body": "could preferable use installation automatically saved", "num": "21", "d": "5/2013"}, {"title": "must adding comments jsx", "body": "must added following comments another way jsx reactdom", "num": "16", "d": "5/2013"}, {"title": "write tests reacttools module", "body": "least broken require", "num": "12", "d": "5/2013"}, {"title": "ca nt require reacttools module", "body": "trying programatically invoke jsx transformer using version npm registry running something like throws error comment lines requireuse module loads fine transformer runs correctly", "num": "10", "d": "5/2013"}]